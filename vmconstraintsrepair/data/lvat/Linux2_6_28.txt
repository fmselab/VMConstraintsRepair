(ARCH || (((atrue && (atrue && ARCH)) => a64BIT) && (a64BIT => (atrue && (atrue && ARCH)))))
(false || (((true && (true && !a64BIT)) => X86_32) && (X86_32 => (true && (true && !a64BIT)))))
(false || (((true && (true && a64BIT)) => X86_64) && (X86_64 => (true && (true && a64BIT)))))
(false || (((true && true) => X86) && (X86 => (true && true))))
(false || ((((true && X86_32) || ((true && !X86_32) && X86_64)) => ARCH_DEFCONFIG) && (ARCH_DEFCONFIG => ((true && X86_32) || ((true && !X86_32) && X86_64)))))
(false || (((true && true) => GENERIC_TIME) && (GENERIC_TIME => (true && true))))
(false || (((true && true) => GENERIC_CMOS_UPDATE) && (GENERIC_CMOS_UPDATE => (true && true))))
(false || (((true && true) => CLOCKSOURCE_WATCHDOG) && (CLOCKSOURCE_WATCHDOG => (true && true))))
(false || (((true && true) => GENERIC_CLOCKEVENTS) && (GENERIC_CLOCKEVENTS => (true && true))))
(false || (((true && (X86_64 || (X86_32 && X86_LOCAL_APIC))) => GENERIC_CLOCKEVENTS_BROADCAST) && (GENERIC_CLOCKEVENTS_BROADCAST => (true && (X86_64 || (X86_32 && X86_LOCAL_APIC))))))
(false || (((true && true) => LOCKDEP_SUPPORT) && (LOCKDEP_SUPPORT => (true && true))))
(false || (((true && true) => STACKTRACE_SUPPORT) && (STACKTRACE_SUPPORT => (true && true))))
(false || (((true && true) => HAVE_LATENCYTOP_SUPPORT) && (HAVE_LATENCYTOP_SUPPORT => (true && true))))
(false || (((true && true) => FAST_CMPXCHG_LOCAL) && (FAST_CMPXCHG_LOCAL => (true && true))))
(false || (((true && true) => MMU) && (MMU => (true && true))))
(false || (((true && true) => ZONE_DMA) && (ZONE_DMA => (true && true))))
(false || ((false => SBUS) && (SBUS => false)))
(false || (((true && true) => GENERIC_ISA_DMA) && (GENERIC_ISA_DMA => (true && true))))
(false || (((true && true) => GENERIC_IOMAP) && (GENERIC_IOMAP => (true && true))))
(false || (((true && BUG) => GENERIC_BUG) && (GENERIC_BUG => (true && BUG))))
(false || (((true && true) => GENERIC_HWEIGHT) && (GENERIC_HWEIGHT => (true && true))))
(false || ((((MCU_MPC8349EMITX && (I2C && PPC_83xx)) || (GPIOLIB && (ARCH_WANT_OPTIONAL_GPIOLIB || ARCH_REQUIRE_GPIOLIB))) => GENERIC_GPIO) && (GENERIC_GPIO => ((MCU_MPC8349EMITX && (I2C && PPC_83xx)) || (GPIOLIB && (ARCH_WANT_OPTIONAL_GPIOLIB || ARCH_REQUIRE_GPIOLIB))))))
(false || (((true && true) => ARCH_MAY_HAVE_PC_FDC) && (ARCH_MAY_HAVE_PC_FDC => (true && true))))
(false || (((true && (true && !X86_XADD)) => RWSEM_GENERIC_SPINLOCK) && (RWSEM_GENERIC_SPINLOCK => (true && (true && !X86_XADD)))))
(false || (((true && (true && X86_XADD)) => RWSEM_XCHGADD_ALGORITHM) && (RWSEM_XCHGADD_ALGORITHM => (true && (true && X86_XADD)))))
(false || (((true && true) => ARCH_HAS_CPU_IDLE_WAIT) && (ARCH_HAS_CPU_IDLE_WAIT => (true && true))))
(false || (((true && true) => GENERIC_CALIBRATE_DELAY) && (GENERIC_CALIBRATE_DELAY => (true && true))))
(false || (((true && (true && X86_64)) => GENERIC_TIME_VSYSCALL) && (GENERIC_TIME_VSYSCALL => (true && (true && X86_64)))))
(false || (((true && true) => ARCH_HAS_CPU_RELAX) && (ARCH_HAS_CPU_RELAX => (true && true))))
(false || (((true && true) => ARCH_HAS_DEFAULT_IDLE) && (ARCH_HAS_DEFAULT_IDLE => (true && true))))
(false || (((true && true) => ARCH_HAS_CACHE_LINE_SIZE) && (ARCH_HAS_CACHE_LINE_SIZE => (true && true))))
(false || (((true && (true && (X86_64_SMP || (X86_SMP && !X86_VOYAGER)))) => HAVE_SETUP_PER_CPU_AREA) && (HAVE_SETUP_PER_CPU_AREA => (true && (true && (X86_64_SMP || (X86_SMP && !X86_VOYAGER)))))))
(false || (((true && (true && X86_64_SMP)) => HAVE_CPUMASK_OF_CPU_MAP) && (HAVE_CPUMASK_OF_CPU_MAP => (true && (true && X86_64_SMP)))))
(false || (((true && (!SMP || !X86_VOYAGER)) => ARCH_HIBERNATION_POSSIBLE) && (ARCH_HIBERNATION_POSSIBLE => (true && (!SMP || !X86_VOYAGER)))))
(false || (((true && !X86_VOYAGER) => ARCH_SUSPEND_POSSIBLE) && (ARCH_SUSPEND_POSSIBLE => (true && !X86_VOYAGER))))
(false || (((true && (true && X86_64)) => ZONE_DMA32) && (ZONE_DMA32 => (true && (true && X86_64)))))
(false || (((true && true) => ARCH_POPULATES_NODE_MAP) && (ARCH_POPULATES_NODE_MAP => (true && true))))
(false || (((true && (true && X86_64)) => AUDIT_ARCH) && (AUDIT_ARCH => (true && (true && X86_64)))))
(false || (((true && true) => ARCH_SUPPORTS_OPTIMIZED_INLINING) && (ARCH_SUPPORTS_OPTIMIZED_INLINING => (true && true))))
(false || (((true && true) => GENERIC_HARDIRQS) && (GENERIC_HARDIRQS => (true && true))))
(false || (((true && true) => GENERIC_IRQ_PROBE) && (GENERIC_IRQ_PROBE => (true && true))))
(false || (((true && (GENERIC_HARDIRQS && SMP)) => GENERIC_PENDING_IRQ) && (GENERIC_PENDING_IRQ => (true && (GENERIC_HARDIRQS && SMP)))))
(false || (((true && (SMP && ((X86_32 && !X86_VOYAGER) || X86_64))) => X86_SMP) && (X86_SMP => (true && (SMP && ((X86_32 && !X86_VOYAGER) || X86_64))))))
(false || (((true && SMP) => USE_GENERIC_SMP_HELPERS) && (USE_GENERIC_SMP_HELPERS => (true && SMP))))
(false || (((true && (X86_32 && SMP)) => X86_32_SMP) && (X86_32_SMP => (true && (X86_32 && SMP)))))
(false || (((true && (X86_64 && SMP)) => X86_64_SMP) && (X86_64_SMP => (true && (X86_64 && SMP)))))
(false || (((true && (SMP && ((X86_32 && !X86_VOYAGER) || X86_64))) => X86_HT) && (X86_HT => (true && (SMP && ((X86_32 && !X86_VOYAGER) || X86_64))))))
(false || (((true && !X86_VOYAGER) => X86_BIOS_REBOOT) && (X86_BIOS_REBOOT => (true && !X86_VOYAGER))))
(false || (((true && (X86_SMP || ((X86_VOYAGER && SMP) || (a64BIT && ACPI_SLEEP)))) => X86_TRAMPOLINE) && (X86_TRAMPOLINE => (true && (X86_SMP || ((X86_VOYAGER && SMP) || (a64BIT && ACPI_SLEEP)))))))
(false || (((true && (true && X86_32)) => KTIME_SCALAR) && (KTIME_SCALAR => (true && (true && X86_32)))))
(false || (((true && true) => ARCH) && (ARCH => (true && true))))
(false || (((true && true) => KERNELVERSION) && (KERNELVERSION => (true && true))))
(false || ((((((xtrue || x2) || x2) || x2) || x2) => DEFCONFIG_LIST) && (DEFCONFIG_LIST => ((((xtrue || x2) || x2) || x2) || x2))))
(xtrue <=> (true && !UML))
(x2 <=> ((true && !UML) && !UML))
(x2 <=> (((true && !UML) && !UML) && !UML))
(x2 <=> ((((true && !UML) && !UML) && !UML) && !UML))
(x2 <=> (((((true && !UML) && !UML) && !UML) && !UML) && !UML))
(true || ((false => EXPERIMENTAL) && (EXPERIMENTAL => false)))
(false || ((false => BROKEN) && (BROKEN => false)))
(false || (((true && (BROKEN || !SMP)) => BROKEN_ON_SMP) && (BROKEN_ON_SMP => (true && (BROKEN || !SMP)))))
(false || (((true && (SMP || PREEMPT)) => LOCK_KERNEL) && (LOCK_KERNEL => (true && (SMP || PREEMPT)))))
(false || ((((true && !UML) || ((true && !UML) && UML)) => INIT_ENV_ARG_LIMIT) && (INIT_ENV_ARG_LIMIT => ((true && !UML) || ((true && !UML) && UML)))))
(true || ((false => LOCALVERSION) && (LOCALVERSION => false)))
(true || (((true && true) => LOCALVERSION_AUTO) && (LOCALVERSION_AUTO => (true && true))))
((MMU && BLOCK) || (((true && (MMU && BLOCK)) => SWAP) && (SWAP => (true && (MMU && BLOCK)))))
(true || ((false => SYSVIPC) && (SYSVIPC => false)))
(false || (((true && (SYSVIPC && SYSCTL)) => SYSVIPC_SYSCTL) && (SYSVIPC_SYSCTL => (true && (SYSVIPC && SYSCTL)))))
((NET && EXPERIMENTAL) || ((false => POSIX_MQUEUE) && (POSIX_MQUEUE => false)))
(true || ((false => BSD_PROCESS_ACCT) && (BSD_PROCESS_ACCT => false)))
(BSD_PROCESS_ACCT || ((false => BSD_PROCESS_ACCT_V3) && (BSD_PROCESS_ACCT_V3 => false)))
(NET || ((false => TASKSTATS) && (TASKSTATS => false)))
(TASKSTATS || ((false => TASK_DELAY_ACCT) && (TASK_DELAY_ACCT => false)))
(TASKSTATS || ((false => TASK_XACCT) && (TASK_XACCT => false)))
(TASK_XACCT || ((false => TASK_IO_ACCOUNTING) && (TASK_IO_ACCOUNTING => false)))
(NET || ((false => AUDIT) && (AUDIT => false)))
((AUDIT && (X86 || (PPC || (PPC64 || (S39false || (IA64 || (UML || (SPARC64 || SUPERH)))))))) || (((true && (AUDIT && ((X86 || (PPC || (PPC64 || (S39false || (IA64 || (UML || (SPARC64 || SUPERH))))))) && SECURITY_SELINUX))) => AUDITSYSCALL) && (AUDITSYSCALL => (true && (AUDIT && ((X86 || (PPC || (PPC64 || (S39false || (IA64 || (UML || (SPARC64 || SUPERH))))))) && SECURITY_SELINUX))))))
(false || (((true && (AUDITSYSCALL && INOTIFY)) => AUDIT_TREE) && (AUDIT_TREE => (true && (AUDITSYSCALL && INOTIFY)))))
(true || ((false => IKCONFIG) && (IKCONFIG => false)))
((IKCONFIG && PROC_FS) || ((false => IKCONFIG_PROC) && (IKCONFIG_PROC => false)))
(true || (((true && true) => LOG_BUF_SHIFT) && (LOG_BUF_SHIFT => (true && true))))
(true || ((false => CGROUPS) && (CGROUPS => false)))
(CGROUPS || ((false => CGROUP_DEBUG) && (CGROUP_DEBUG => false)))
(CGROUPS || ((false => CGROUP_NS) && (CGROUP_NS => false)))
(CGROUPS || ((false => CGROUP_FREEZER) && (CGROUP_FREEZER => false)))
((CGROUPS && EXPERIMENTAL) || ((false => CGROUP_DEVICE) && (CGROUP_DEVICE => false)))
((SMP && CGROUPS) || ((false => CPUSETS) && (CPUSETS => false)))
(false || (((X86 && true) => HAVE_UNSTABLE_SCHED_CLOCK) && (HAVE_UNSTABLE_SCHED_CLOCK => (X86 && true))))
(EXPERIMENTAL || ((false => GROUP_SCHED) && (GROUP_SCHED => false)))
(GROUP_SCHED || (((true && (GROUP_SCHED && GROUP_SCHED)) => FAIR_GROUP_SCHED) && (FAIR_GROUP_SCHED => (true && (GROUP_SCHED && GROUP_SCHED)))))
((EXPERIMENTAL && GROUP_SCHED) || ((false => RT_GROUP_SCHED) && (RT_GROUP_SCHED => false)))
(true || ((false => USER_SCHED) && (USER_SCHED => false)))
((true && CGROUPS) || ((false => CGROUP_SCHED) && (CGROUP_SCHED => false)))
(CGROUPS || ((false => CGROUP_CPUACCT) && (CGROUP_CPUACCT => false)))
(CGROUPS || ((false => RESOURCE_COUNTERS) && (RESOURCE_COUNTERS => false)))
(false || (((CGROUP_MEM_RES_CTLR && (CGROUPS && RESOURCE_COUNTERS)) => MM_OWNER) && (MM_OWNER => (CGROUP_MEM_RES_CTLR && (CGROUPS && RESOURCE_COUNTERS)))))
((CGROUPS && RESOURCE_COUNTERS) || ((false => CGROUP_MEM_RES_CTLR) && (CGROUP_MEM_RES_CTLR => false)))
(false || (((SYSFS_DEPRECATED_V2 && SYSFS) => SYSFS_DEPRECATED) && (SYSFS_DEPRECATED => (SYSFS_DEPRECATED_V2 && SYSFS))))
(SYSFS || (((true && SYSFS) => SYSFS_DEPRECATED_V2) && (SYSFS_DEPRECATED_V2 => (true && SYSFS))))
(CPUSETS || (((true && CPUSETS) => PROC_PID_CPUSET) && (PROC_PID_CPUSET => (true && CPUSETS))))
(true || ((((KVM_TRACE && (VIRTUALIZATION && (KVM && (MARKERS && SYSFS)))) || (BLK_DEV_IO_TRACE && (BLOCK && SYSFS))) => RELAY) && (RELAY => ((KVM_TRACE && (VIRTUALIZATION && (KVM && (MARKERS && SYSFS)))) || (BLK_DEV_IO_TRACE && (BLOCK && SYSFS))))))
(EMBEDDED || (((true && (true && !EMBEDDED)) => NAMESPACES) && (NAMESPACES => (true && (true && !EMBEDDED)))))
(NAMESPACES || ((false => UTS_NS) && (UTS_NS => false)))
((NAMESPACES && SYSVIPC) || ((false => IPC_NS) && (IPC_NS => false)))
((NAMESPACES && EXPERIMENTAL) || ((false => USER_NS) && (USER_NS => false)))
((NAMESPACES && EXPERIMENTAL) || ((false => PID_NS) && (PID_NS => false)))
((BROKEN || !FRV) || ((false => BLK_DEV_INITRD) && (BLK_DEV_INITRD => false)))
(BLK_DEV_INITRD || ((false => INITRAMFS_SOURCE) && (INITRAMFS_SOURCE => false)))
((BLK_DEV_INITRD && !INITRAMFS_SOURCE) || (((true && (BLK_DEV_INITRD && !INITRAMFS_SOURCE)) => INITRAMFS_ROOT_UID) && (INITRAMFS_ROOT_UID => (true && (BLK_DEV_INITRD && !INITRAMFS_SOURCE)))))
((BLK_DEV_INITRD && !INITRAMFS_SOURCE) || (((true && (BLK_DEV_INITRD && !INITRAMFS_SOURCE)) => INITRAMFS_ROOT_GID) && (INITRAMFS_ROOT_GID => (true && (BLK_DEV_INITRD && !INITRAMFS_SOURCE)))))
(true || (((true && true) => CC_OPTIMIZE_FOR_SIZE) && (CC_OPTIMIZE_FOR_SIZE => (true && true))))
(false || ((((SYSCTL_SYSCALL && true) || (PROC_SYSCTL && PROC_FS)) => SYSCTL) && (SYSCTL => ((SYSCTL_SYSCALL && true) || (PROC_SYSCTL && PROC_FS)))))
(true || ((false => EMBEDDED) && (EMBEDDED => false)))
(((ARM || (BLACKFIN || (CRIS || (FRV || (H83falsefalse || (X86_32 || (M68K || ((S39false && !a64BIT) || (SUPERH || (SPARC32 || ((SPARC64 && COMPAT) || (UML || (X86_64 && IA32_EMULATION))))))))))))) && EMBEDDED) || (((true && (ARM || (BLACKFIN || (CRIS || (FRV || (H83falsefalse || (X86_32 || (M68K || ((S39false && !a64BIT) || (SUPERH || (SPARC32 || ((SPARC64 && COMPAT) || (UML || (X86_64 && IA32_EMULATION)))))))))))))) => UIDtrue6) && (UIDtrue6 => (true && (ARM || (BLACKFIN || (CRIS || (FRV || (H83falsefalse || (X86_32 || (M68K || ((S39false && !a64BIT) || (SUPERH || (SPARC32 || ((SPARC64 && COMPAT) || (UML || (X86_64 && IA32_EMULATION)))))))))))))))))
(EMBEDDED || (((true && true) => SYSCTL_SYSCALL) && (SYSCTL_SYSCALL => (true && true))))
(EMBEDDED || (((((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) || (LOCKDEP && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (true && true)) => KALLSYMS) && (KALLSYMS => (((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) || (LOCKDEP && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (true && true)))))
((DEBUG_KERNEL && KALLSYMS) || ((((((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) || (LOCKDEP && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (UBIFS_FS_DEBUG && UBIFS_FS)) || (MTD_UBI_DEBUG && (MTD && (SYSFS && MTD_UBI)))) => KALLSYMS_ALL) && (KALLSYMS_ALL => ((((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) || (LOCKDEP && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (UBIFS_FS_DEBUG && UBIFS_FS)) || (MTD_UBI_DEBUG && (MTD && (SYSFS && MTD_UBI)))))))
(KALLSYMS || ((false => KALLSYMS_EXTRA_PASS) && (KALLSYMS_EXTRA_PASS => false)))
(EMBEDDED || (((true && true) => HOTPLUG) && (HOTPLUG => (true && true))))
(EMBEDDED || (((true && true) => PRINTK) && (PRINTK => (true && true))))
(EMBEDDED || (((true && true) => BUG) && (BUG => (true && true))))
(EMBEDDED || (((true && true) => ELF_CORE) && (ELF_CORE => (true && true))))
(((ALPHA || (X86 || (MIPS || (PPC_PREP || (PPC_CHRP || PPC_PSERIES))))) && EMBEDDED) || (((true && (ALPHA || (X86 || (MIPS || (PPC_PREP || (PPC_CHRP || PPC_PSERIES)))))) => PCSPKR_PLATFORM) && (PCSPKR_PLATFORM => (true && (ALPHA || (X86 || (MIPS || (PPC_PREP || (PPC_CHRP || PPC_PSERIES)))))))))
(true || (((true && true) => COMPAT_BRK) && (COMPAT_BRK => (true && true))))
(EMBEDDED || (((true && true) => BASE_FULL) && (BASE_FULL => (true && true))))
(EMBEDDED || (((true && true) => FUTEX) && (FUTEX => (true && true))))
(false || ((((((x3 || x4) || x5) || x6) || x7) => ANON_INODES) && (ANON_INODES => ((((x3 || x4) || x5) || x6) || x7))))
(x3 <=> (EVENTFD && true))
(x4 <=> (EPOLL && true))
(x5 <=> (SIGNALFD && true))
(x6 <=> (TIMERFD && true))
(x7 <=> (KVM && (VIRTUALIZATION && (HAVE_KVM && PCI))))
(EMBEDDED || (((true && true) => EPOLL) && (EPOLL => (true && true))))
(EMBEDDED || (((true && true) => SIGNALFD) && (SIGNALFD => (true && true))))
(EMBEDDED || (((true && true) => TIMERFD) && (TIMERFD => (true && true))))
(EMBEDDED || (((true && true) => EVENTFD) && (EVENTFD => (true && true))))
((MMU && EMBEDDED) || (((true && MMU) => SHMEM) && (SHMEM => (true && MMU))))
(EMBEDDED || (((true && true) => AIO) && (AIO => (true && true))))
(EMBEDDED || (((true && true) => VM_EVENT_COUNTERS) && (VM_EVENT_COUNTERS => (true && true))))
((PCI && EMBEDDED) || (((true && PCI) => PCI_QUIRKS) && (PCI_QUIRKS => (true && PCI))))
((SLUB && (SYSFS && EMBEDDED)) || (((true && (SLUB && SYSFS)) => SLUB_DEBUG) && (SLUB_DEBUG => (true && (SLUB && SYSFS)))))
(true || ((false => SLAB) && (SLAB => false)))
(true || ((false => SLUB) && (SLUB => false)))
((true && EMBEDDED) || ((false => SLOB) && (SLOB => false)))
(true || ((false => PROFILING) && (PROFILING => false)))
(false || (((TRACING && true) => TRACEPOINTS) && (TRACEPOINTS => (TRACING && true))))
(true || (((CONTEXT_SWITCH_TRACER && DEBUG_KERNEL) => MARKERS) && (MARKERS => (CONTEXT_SWITCH_TRACER && DEBUG_KERNEL))))
((PROFILING && HAVE_OPROFILE) || ((false => OPROFILE) && (OPROFILE => false)))
((OPROFILE && (SMP && X86)) || ((false => OPROFILE_IBS) && (OPROFILE_IBS => false)))
(false || (((X86 && true) => HAVE_OPROFILE) && (HAVE_OPROFILE => (X86 && true))))
((KALLSYMS && (MODULES && HAVE_KPROBES)) || ((false => KPROBES) && (KPROBES => false)))
(false || (((X86 && true) => HAVE_EFFICIENT_UNALIGNED_ACCESS) && (HAVE_EFFICIENT_UNALIGNED_ACCESS => (X86 && true))))
(false || ((false => HAVE_SYSCALL_WRAPPERS) && (HAVE_SYSCALL_WRAPPERS => false)))
(false || (((true && (KPROBES && HAVE_KRETPROBES)) => KRETPROBES) && (KRETPROBES => (true && (KPROBES && HAVE_KRETPROBES)))))
(false || (((X86 && true) => HAVE_IOREMAP_PROT) && (HAVE_IOREMAP_PROT => (X86 && true))))
(false || (((X86 && true) => HAVE_KPROBES) && (HAVE_KPROBES => (X86 && true))))
(false || (((X86 && true) => HAVE_KRETPROBES) && (HAVE_KRETPROBES => (X86 && true))))
(false || (((X86 && true) => HAVE_ARCH_TRACEHOOK) && (HAVE_ARCH_TRACEHOOK => (X86 && true))))
(false || ((false => HAVE_DMA_ATTRS) && (HAVE_DMA_ATTRS => false)))
(false || (((true && SMP) => USE_GENERIC_SMP_HELPERS) && (USE_GENERIC_SMP_HELPERS => (true && SMP))))
(false || ((false => HAVE_CLK) && (HAVE_CLK => false)))
(false || (((X86 && X86_32) => HAVE_GENERIC_DMA_COHERENT) && (HAVE_GENERIC_DMA_COHERENT => (X86 && X86_32))))
(false || (((true && (PROC_FS && (SLAB || SLUB_DEBUG))) => SLABINFO) && (SLABINFO => (true && (PROC_FS && (SLAB || SLUB_DEBUG))))))
(false || (((FUTEX && true) => RT_MUTEXES) && (RT_MUTEXES => (FUTEX && true))))
(false || (((true && (true && !SHMEM)) => TINY_SHMEM) && (TINY_SHMEM => (true && (true && !SHMEM)))))
(false || ((((true && BASE_FULL) || ((true && !BASE_FULL) && !BASE_FULL)) => BASE_SMALL) && (BASE_SMALL => ((true && BASE_FULL) || ((true && !BASE_FULL) && !BASE_FULL)))))
(true || ((false => MODULES) && (MODULES => false)))
(MODULES || ((false => MODULE_FORCE_LOAD) && (MODULE_FORCE_LOAD => false)))
(MODULES || ((false => MODULE_UNLOAD) && (MODULE_UNLOAD => false)))
((MODULES && (MODULE_UNLOAD && EXPERIMENTAL)) || ((false => MODULE_FORCE_UNLOAD) && (MODULE_FORCE_UNLOAD => false)))
(MODULES || ((false => MODVERSIONS) && (MODVERSIONS => false)))
(MODULES || ((false => MODULE_SRCVERSION_ALL) && (MODULE_SRCVERSION_ALL => false)))
(false || (((true && MODULES) => KMOD) && (KMOD => (true && MODULES))))
(false || (((true && ((SMP && MODULE_UNLOAD) || HOTPLUG_CPU)) => STOP_MACHINE) && (STOP_MACHINE => (true && ((SMP && MODULE_UNLOAD) || HOTPLUG_CPU)))))
(EMBEDDED || (((true && true) => BLOCK) && (BLOCK => (true && true))))
((BLOCK && !a64BIT) || ((false => LBD) && (LBD => false)))
((BLOCK && SYSFS) || ((false => BLK_DEV_IO_TRACE) && (BLK_DEV_IO_TRACE => false)))
((BLOCK && !a64BIT) || ((false => LSF) && (LSF => false)))
((BLOCK && EXPERIMENTAL) || ((false => BLK_DEV_BSG) && (BLK_DEV_BSG => false)))
(BLOCK || ((false => BLK_DEV_INTEGRITY) && (BLK_DEV_INTEGRITY => false)))
(false || (((true && (BLOCK && COMPAT)) => BLOCK_COMPAT) && (BLOCK_COMPAT => (true && (BLOCK && COMPAT)))))
(false || (((true && BLOCK) => IOSCHED_NOOP) && (IOSCHED_NOOP => (true && BLOCK))))
(BLOCK || (((true && BLOCK) => IOSCHED_AS) && (IOSCHED_AS => (true && BLOCK))))
(BLOCK || ((((DASD && (BLK_DEV && (CCW && BLOCK))) || (true && BLOCK)) => IOSCHED_DEADLINE) && (IOSCHED_DEADLINE => ((DASD && (BLK_DEV && (CCW && BLOCK))) || (true && BLOCK)))))
(BLOCK || (((true && BLOCK) => IOSCHED_CFQ) && (IOSCHED_CFQ => (true && BLOCK))))
((true && IOSCHED_AS) || ((false => DEFAULT_AS) && (DEFAULT_AS => false)))
((true && IOSCHED_DEADLINE) || ((false => DEFAULT_DEADLINE) && (DEFAULT_DEADLINE => false)))
((true && IOSCHED_CFQ) || ((false => DEFAULT_CFQ) && (DEFAULT_CFQ => false)))
(true || ((false => DEFAULT_NOOP) && (DEFAULT_NOOP => false)))
(false || ((((((true && (BLOCK && DEFAULT_AS)) || ((true && !(BLOCK && DEFAULT_AS)) && (BLOCK && DEFAULT_DEADLINE))) || (((true && !(BLOCK && DEFAULT_DEADLINE)) && !(BLOCK && DEFAULT_AS)) && (BLOCK && DEFAULT_CFQ))) || ((((true && !(BLOCK && DEFAULT_CFQ)) && !(BLOCK && DEFAULT_DEADLINE)) && !(BLOCK && DEFAULT_AS)) && (BLOCK && DEFAULT_NOOP))) => DEFAULT_IOSCHED) && (DEFAULT_IOSCHED => ((((true && (BLOCK && DEFAULT_AS)) || ((true && !(BLOCK && DEFAULT_AS)) && (BLOCK && DEFAULT_DEADLINE))) || (((true && !(BLOCK && DEFAULT_DEADLINE)) && !(BLOCK && DEFAULT_AS)) && (BLOCK && DEFAULT_CFQ))) || ((((true && !(BLOCK && DEFAULT_CFQ)) && !(BLOCK && DEFAULT_DEADLINE)) && !(BLOCK && DEFAULT_AS)) && (BLOCK && DEFAULT_NOOP))))))
(false || (((KVM && (VIRTUALIZATION && (HAVE_KVM && PCI))) => PREEMPT_NOTIFIERS) && (PREEMPT_NOTIFIERS => (KVM && (VIRTUALIZATION && (HAVE_KVM && PCI))))))
(false || (((true && (true && !PREEMPT_RCU)) => CLASSIC_RCU) && (CLASSIC_RCU => (true && (true && !PREEMPT_RCU)))))
(false || (((true && (true && (PM_SLEEP || CGROUP_FREEZER))) => FREEZER) && (FREEZER => (true && (true && (PM_SLEEP || CGROUP_FREEZER))))))
(false || ((((NO_HZ && (GENERIC_TIME && GENERIC_CLOCKEVENTS)) || (HIGH_RES_TIMERS && (GENERIC_TIME && GENERIC_CLOCKEVENTS))) => TICK_ONESHOT) && (TICK_ONESHOT => ((NO_HZ && (GENERIC_TIME && GENERIC_CLOCKEVENTS)) || (HIGH_RES_TIMERS && (GENERIC_TIME && GENERIC_CLOCKEVENTS))))))
((GENERIC_TIME && GENERIC_CLOCKEVENTS) || ((false => NO_HZ) && (NO_HZ => false)))
((GENERIC_TIME && GENERIC_CLOCKEVENTS) || ((false => HIGH_RES_TIMERS) && (HIGH_RES_TIMERS => false)))
(false || (((true && (GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR)) => GENERIC_CLOCKEVENTS_BUILD) && (GENERIC_CLOCKEVENTS_BUILD => (true && (GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR)))))
(true || ((false => SMP) && (SMP => false)))
(false || (((true && X86_VOYAGER) => X86_HAS_BOOT_CPU_ID) && (X86_HAS_BOOT_CPU_ID => (true && X86_VOYAGER))))
(false || (((true && (X86_MPPARSE || X86_VOYAGER)) => X86_FIND_SMP_CONFIG) && (X86_FIND_SMP_CONFIG => (true && (X86_MPPARSE || X86_VOYAGER)))))
((ACPI && X86_LOCAL_APIC) || ((((true && (ACPI && X86_LOCAL_APIC)) || (true && (!ACPI && X86_LOCAL_APIC))) => X86_MPPARSE) && (X86_MPPARSE => ((true && (ACPI && X86_LOCAL_APIC)) || (true && (!ACPI && X86_LOCAL_APIC))))))
((ACPI && X86_LOCAL_APIC) || ((((true && (ACPI && X86_LOCAL_APIC)) || (true && (!ACPI && X86_LOCAL_APIC))) => X86_MPPARSE) && (X86_MPPARSE => ((true && (ACPI && X86_LOCAL_APIC)) || (true && (!ACPI && X86_LOCAL_APIC))))))
(true || ((false => X86_PC) && (X86_PC => false)))
((true && X86_32) || ((false => X86_ELAN) && (X86_ELAN => false)))
((true && (X86_32 && ((SMP || BROKEN) && !PCI))) || ((false => X86_VOYAGER) && (X86_VOYAGER => false)))
((true && X86_32) || ((false => X86_GENERICARCH) && (X86_GENERICARCH => false)))
((true && (X86_GENERICARCH && (SMP && (X86_32 && (PCI && X86_MPPARSE))))) || ((false => X86_NUMAQ) && (X86_NUMAQ => false)))
((true && (X86_GENERICARCH && (X86_32 && SMP))) || ((false => X86_SUMMIT) && (X86_SUMMIT => false)))
((true && (X86_GENERICARCH && (X86_32 && SMP))) || ((false => X86_ES7falsefalsefalse) && (X86_ES7falsefalsefalse => false)))
((true && (X86_GENERICARCH && (X86_32 && SMP))) || ((false => X86_BIGSMP) && (X86_BIGSMP => false)))
((true && (X86_64 && PCI)) || ((false => X86_VSMP) && (X86_VSMP => false)))
((X86_32 && (PCI && (!X86_VOYAGER && (X86_MPPARSE && PCI_GODIRECT)))) || ((false => X86_VISWS) && (X86_VISWS => false)))
(X86_32 || ((false => X86_RDC32trueX) && (X86_RDC32trueX => false)))
(X86_32 || (((true && X86_32) => SCHED_NO_NO_OMIT_FRAME_POINTER) && (SCHED_NO_NO_OMIT_FRAME_POINTER => (true && X86_32))))
(true || ((false => PARAVIRT_GUEST) && (PARAVIRT_GUEST => false)))
((PARAVIRT_GUEST && ((X86_64 || (X86_32 && (X86_PAE && (!X86_VISWS && !X86_VOYAGER)))) && (X86_CMPXCHG && X86_TSC))) || ((false => XEN) && (XEN => false)))
((PARAVIRT_GUEST && XEN) || ((((true && (PARAVIRT_GUEST && (XEN && X86_32))) || ((true && !(PARAVIRT_GUEST && (XEN && X86_32))) && (PARAVIRT_GUEST && (XEN && X86_64)))) => XEN_MAX_DOMAIN_MEMORY) && (XEN_MAX_DOMAIN_MEMORY => ((true && (PARAVIRT_GUEST && (XEN && X86_32))) || ((true && !(PARAVIRT_GUEST && (XEN && X86_32))) && (PARAVIRT_GUEST && (XEN && X86_64)))))))
(false || (((true && (PARAVIRT_GUEST && (XEN && PM))) => XEN_SAVE_RESTORE) && (XEN_SAVE_RESTORE => (true && (PARAVIRT_GUEST && (XEN && PM))))))
((PARAVIRT_GUEST && (XEN && DEBUG_FS)) || ((false => XEN_DEBUG_FS) && (XEN_DEBUG_FS => false)))
((PARAVIRT_GUEST && (X86_32 && !X86_VOYAGER)) || ((false => VMI) && (VMI => false)))
((PARAVIRT_GUEST && !X86_VOYAGER) || ((false => KVM_CLOCK) && (KVM_CLOCK => false)))
((PARAVIRT_GUEST && !X86_VOYAGER) || ((false => KVM_GUEST) && (KVM_GUEST => false)))
((PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER))) || ((false => LGUEST_GUEST) && (LGUEST_GUEST => false)))
((PARAVIRT_GUEST && !X86_VOYAGER) || (((((((x8 || x9) || xtruefalse) || xtruetrue) || xtrue2) || xtrue3) => PARAVIRT) && (PARAVIRT => (((((x8 || x9) || xtruefalse) || xtruetrue) || xtrue2) || xtrue3))))
(x8 <=> (KVM_CLOCK && (PARAVIRT_GUEST && !X86_VOYAGER)))
(x9 <=> (LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER)))))
(xtruefalse <=> (VMI && (PARAVIRT_GUEST && (X86_32 && !X86_VOYAGER))))
(xtruetrue <=> (KVM_GUEST && (PARAVIRT_GUEST && !X86_VOYAGER)))
(xtrue2 <=> (XEN && (PARAVIRT_GUEST && ((X86_64 || (X86_32 && (X86_PAE && (!X86_VISWS && !X86_VOYAGER)))) && (X86_CMPXCHG && X86_TSC)))))
(xtrue3 <=> (X86_VSMP && (true && (X86_64 && PCI))))
(false || ((((KVM_CLOCK && (PARAVIRT_GUEST && !X86_VOYAGER)) || (XEN && (PARAVIRT_GUEST && ((X86_64 || (X86_32 && (X86_PAE && (!X86_VISWS && !X86_VOYAGER)))) && (X86_CMPXCHG && X86_TSC))))) => PARAVIRT_CLOCK) && (PARAVIRT_CLOCK => ((KVM_CLOCK && (PARAVIRT_GUEST && !X86_VOYAGER)) || (XEN && (PARAVIRT_GUEST && ((X86_64 || (X86_32 && (X86_PAE && (!X86_VISWS && !X86_VOYAGER)))) && (X86_CMPXCHG && X86_TSC))))))))
((PARAVIRT && DEBUG_KERNEL) || ((false => PARAVIRT_DEBUG) && (PARAVIRT_DEBUG => false)))
(true || ((false => MEMTEST) && (MEMTEST => false)))
(false || (((true && (X86_32 && (NUMA && X86_GENERICARCH))) => X86_SUMMIT_NUMA) && (X86_SUMMIT_NUMA => (true && (X86_32 && (NUMA && X86_GENERICARCH))))))
(false || (((true && X86_GENERICARCH) => X86_CYCLONE_TIMER) && (X86_CYCLONE_TIMER => (true && X86_GENERICARCH))))
(false || (((true && (SMP && (X86_ES7falsefalsefalse && MPENTIUMIII))) => ES7falsefalsefalse_CLUSTERED_APIC) && (ES7falsefalsefalse_CLUSTERED_APIC => (true && (SMP && (X86_ES7falsefalsefalse && MPENTIUMIII))))))
((true && (X86_32 && !UML)) || ((false => M386) && (M386 => false)))
((true && X86_32) || (((X86_RDC32trueX && X86_32) => M486) && (M486 => (X86_RDC32trueX && X86_32))))
((true && X86_32) || ((false => M586) && (M586 => false)))
((true && X86_32) || ((false => M586TSC) && (M586TSC => false)))
((true && X86_32) || ((false => M586MMX) && (M586MMX => false)))
((true && X86_32) || ((false => M686) && (M686 => false)))
((true && X86_32) || ((false => MPENTIUMII) && (MPENTIUMII => false)))
((true && X86_32) || ((false => MPENTIUMIII) && (MPENTIUMIII => false)))
((true && X86_32) || ((false => MPENTIUMM) && (MPENTIUMM => false)))
((true && X86_32) || ((false => MPENTIUM4) && (MPENTIUM4 => false)))
((true && X86_32) || ((false => MK6) && (MK6 => false)))
((true && X86_32) || ((false => MK7) && (MK7 => false)))
(true || ((false => MK8) && (MK8 => false)))
((true && X86_32) || ((false => MCRUSOE) && (MCRUSOE => false)))
((true && X86_32) || ((false => MEFFICEON) && (MEFFICEON => false)))
((true && X86_32) || ((false => MWINCHIPC6) && (MWINCHIPC6 => false)))
((true && X86_32) || ((false => MWINCHIP3D) && (MWINCHIP3D => false)))
((true && X86_32) || ((false => MGEODEGXtrue) && (MGEODEGXtrue => false)))
((true && X86_32) || ((false => MGEODE_LX) && (MGEODE_LX => false)))
((true && X86_32) || ((false => MCYRIXIII) && (MCYRIXIII => false)))
((true && X86_32) || ((false => MVIAC3_2) && (MVIAC3_2 => false)))
((true && X86_32) || ((false => MVIAC7) && (MVIAC7 => false)))
((true && X86_64) || ((false => MPSC) && (MPSC => false)))
(true || ((false => MCORE2) && (MCORE2 => false)))
((true && X86_64) || ((false => GENERIC_CPU) && (GENERIC_CPU => false)))
((!X86_ELAN && X86_32) || ((false => X86_GENERIC) && (X86_GENERIC => false)))
(false || (((true && true) => X86_CPU) && (X86_CPU => (true && true))))
(false || ((((true && (X86_64 && (GENERIC_CPU || MPSC))) || ((true && !(X86_64 && (GENERIC_CPU || MPSC))) && (X86_64 && (MK8 || MCORE2)))) => X86_Ltrue_CACHE_BYTES) && (X86_Ltrue_CACHE_BYTES => ((true && (X86_64 && (GENERIC_CPU || MPSC))) || ((true && !(X86_64 && (GENERIC_CPU || MPSC))) && (X86_64 && (MK8 || MCORE2)))))))
(false || ((((true && (X86_64 && X86_VSMP)) || ((true && !(X86_64 && X86_VSMP)) && ((X86_64 && !X86_VSMP) && X86_Ltrue_CACHE_BYTES))) => X86_INTERNODE_CACHE_BYTES) && (X86_INTERNODE_CACHE_BYTES => ((true && (X86_64 && X86_VSMP)) || ((true && !(X86_64 && X86_VSMP)) && ((X86_64 && !X86_VSMP) && X86_Ltrue_CACHE_BYTES))))))
(false || (((true && (true && (X86_64 || (X86_32 && !M386)))) => X86_CMPXCHG) && (X86_CMPXCHG => (true && (true && (X86_64 || (X86_32 && !M386)))))))
(false || (((((xtrue4 || xtrue5) || xtrue6) || xtrue7) => X86_Ltrue_CACHE_SHIFT) && (X86_Ltrue_CACHE_SHIFT => (((xtrue4 || xtrue5) || xtrue6) || xtrue7))))
(xtrue4 <=> (true && (MPENTIUM4 || (X86_GENERIC || (GENERIC_CPU || MPSC)))))
(xtrue5 <=> ((true && !(MPENTIUM4 || (X86_GENERIC || (GENERIC_CPU || MPSC)))) && (X86_ELAN || (M486 || (M386 || MGEODEGXtrue)))))
(xtrue6 <=> (((true && !(X86_ELAN || (M486 || (M386 || MGEODEGXtrue)))) && !(MPENTIUM4 || (X86_GENERIC || (GENERIC_CPU || MPSC)))) && (MWINCHIP3D || (MWINCHIPC6 || (MCRUSOE || (MEFFICEON || (MCYRIXIII || (MK6 || (MPENTIUMIII || (MPENTIUMII || (M686 || (M586MMX || (M586TSC || (M586 || (MVIAC3_2 || MGEODE_LX)))))))))))))))
(xtrue7 <=> ((((true && !(MWINCHIP3D || (MWINCHIPC6 || (MCRUSOE || (MEFFICEON || (MCYRIXIII || (MK6 || (MPENTIUMIII || (MPENTIUMII || (M686 || (M586MMX || (M586TSC || (M586 || (MVIAC3_2 || MGEODE_LX)))))))))))))) && !(X86_ELAN || (M486 || (M386 || MGEODEGXtrue)))) && !(MPENTIUM4 || (X86_GENERIC || (GENERIC_CPU || MPSC)))) && (MK7 || (MK8 || (MPENTIUMM || (MCORE2 || MVIAC7))))))
(false || (((true && (X86_32 && !M386)) => X86_XADD) && (X86_XADD => (true && (X86_32 && !M386)))))
((M686 || (M586MMX || (M586TSC || (M586 || (M486 || (M386 || MGEODEGXtrue)))))) || ((false => X86_PPRO_FENCE) && (X86_PPRO_FENCE => false)))
(false || (((true && (M586MMX || (M586TSC || (M586 || (M486 || M386))))) => X86_FfalsefalseF_BUG) && (X86_FfalsefalseF_BUG => (true && (M586MMX || (M586TSC || (M586 || (M486 || M386))))))))
(false || (((true && !M386) => X86_WP_WORKS_OK) && (X86_WP_WORKS_OK => (true && !M386))))
(false || (((true && (X86_32 && !M386)) => X86_INVLPG) && (X86_INVLPG => (true && (X86_32 && !M386)))))
(false || (((true && (X86_32 && !M386)) => X86_BSWAP) && (X86_BSWAP => (true && (X86_32 && !M386)))))
(false || (((true && (X86_32 && !M386)) => X86_POPAD_OK) && (X86_POPAD_OK => (true && (X86_32 && !M386)))))
(false || (((true && (MWINCHIP3D || (MWINCHIPC6 || (MCYRIXIII || (X86_ELAN || (MK6 || (M586MMX || (M586TSC || (M586 || (M486 || (MVIAC3_2 || MGEODEGXtrue))))))))))) => X86_ALIGNMENT_true6) && (X86_ALIGNMENT_true6 => (true && (MWINCHIP3D || (MWINCHIPC6 || (MCYRIXIII || (X86_ELAN || (MK6 || (M586MMX || (M586TSC || (M586 || (M486 || (MVIAC3_2 || MGEODEGXtrue))))))))))))))
(false || (((true && (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M586MMX || (X86_GENERIC || (MK8 || (MK7 || (MEFFICEON || MCORE2)))))))))) => X86_INTEL_USERCOPY) && (X86_INTEL_USERCOPY => (true && (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M586MMX || (X86_GENERIC || (MK8 || (MK7 || (MEFFICEON || MCORE2)))))))))))))
(false || (((true && (MWINCHIP3D || (MWINCHIPC6 || (MCYRIXIII || (MK7 || (MK6 || (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M686 || (MK8 || (MVIAC3_2 || (MEFFICEON || (MGEODE_LX || MCORE2))))))))))))))) => X86_USE_PPRO_CHECKSUM) && (X86_USE_PPRO_CHECKSUM => (true && (MWINCHIP3D || (MWINCHIPC6 || (MCYRIXIII || (MK7 || (MK6 || (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M686 || (MK8 || (MVIAC3_2 || (MEFFICEON || (MGEODE_LX || MCORE2))))))))))))))))))
(false || (((true && ((MCYRIXIII || (MK7 || MGEODE_LX)) && !UML)) => X86_USE_3DNOW) && (X86_USE_3DNOW => (true && ((MCYRIXIII || (MK7 || MGEODE_LX)) && !UML)))))
(false || (((true && ((MWINCHIP3D || MWINCHIPC6) && MTRR)) => X86_OOSTORE) && (X86_OOSTORE => (true && ((MWINCHIP3D || MWINCHIPC6) && MTRR)))))
(false || (((true && (X86_64 && (MCORE2 || (MPENTIUM4 || MPSC)))) => X86_P6_NOP) && (X86_P6_NOP => (true && (X86_64 && (MCORE2 || (MPENTIUM4 || MPSC)))))))
(false || (((true && (((MWINCHIP3D || (MCRUSOE || (MEFFICEON || (MCYRIXIII || (MK7 || (MK6 || (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M686 || (M586MMX || (M586TSC || (MK8 || (MVIAC3_2 || (MVIAC7 || (MGEODEGXtrue || (MGEODE_LX || MCORE2)))))))))))))))))) && !X86_NUMAQ) || X86_64)) => X86_TSC) && (X86_TSC => (true && (((MWINCHIP3D || (MCRUSOE || (MEFFICEON || (MCYRIXIII || (MK7 || (MK6 || (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M686 || (M586MMX || (M586TSC || (MK8 || (MVIAC3_2 || (MVIAC7 || (MGEODEGXtrue || (MGEODE_LX || MCORE2)))))))))))))))))) && !X86_NUMAQ) || X86_64)))))
(false || (((true && (X86_PAE || X86_64)) => X86_CMPXCHG64) && (X86_CMPXCHG64 => (true && (X86_PAE || X86_64)))))
(false || (((true && (MK8 || (MK7 || (MCORE2 || (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M686 || (MVIAC3_2 || (MVIAC7 || (MCRUSOE || (MEFFICEON || X86_64))))))))))))) => X86_CMOV) && (X86_CMOV => (true && (MK8 || (MK7 || (MCORE2 || (MPENTIUM4 || (MPENTIUMM || (MPENTIUMIII || (MPENTIUMII || (M686 || (MVIAC3_2 || (MVIAC7 || (MCRUSOE || (MEFFICEON || X86_64))))))))))))))))
(false || ((((((true && X86_64) || ((true && !X86_64) && (X86_32 && X86_P6_NOP))) || (((true && !(X86_32 && X86_P6_NOP)) && !X86_64) && (X86_32 && (X86_XADD || (X86_CMPXCHG || (X86_BSWAP || X86_WP_WORKS_OK)))))) || ((((true && !(X86_32 && (X86_XADD || (X86_CMPXCHG || (X86_BSWAP || X86_WP_WORKS_OK))))) && !(X86_32 && X86_P6_NOP)) && !X86_64) && true)) => X86_MINIMUM_CPU_FAMILY) && (X86_MINIMUM_CPU_FAMILY => ((((true && X86_64) || ((true && !X86_64) && (X86_32 && X86_P6_NOP))) || (((true && !(X86_32 && X86_P6_NOP)) && !X86_64) && (X86_32 && (X86_XADD || (X86_CMPXCHG || (X86_BSWAP || X86_WP_WORKS_OK)))))) || ((((true && !(X86_32 && (X86_XADD || (X86_CMPXCHG || (X86_BSWAP || X86_WP_WORKS_OK))))) && !(X86_32 && X86_P6_NOP)) && !X86_64) && true)))))
(false || (((true && (!MK6 && (!MWINCHIPC6 && (!MWINCHIP3D && (!MCYRIXIII && (!M586MMX && (!M586TSC && (!M586 && (!M486 && !M386))))))))) => X86_DEBUGCTLMSR) && (X86_DEBUGCTLMSR => (true && (!MK6 && (!MWINCHIPC6 && (!MWINCHIP3D && (!MCYRIXIII && (!M586MMX && (!M586TSC && (!M586 && (!M486 && !M386))))))))))))
(EMBEDDED || ((false => PROCESSOR_SELECT) && (PROCESSOR_SELECT => false)))
(PROCESSOR_SELECT || (((true && true) => CPU_SUP_INTEL) && (CPU_SUP_INTEL => (true && true))))
((!a64BIT && PROCESSOR_SELECT) || (((true && !a64BIT) => CPU_SUP_CYRIX_32) && (CPU_SUP_CYRIX_32 => (true && !a64BIT))))
(PROCESSOR_SELECT || (((true && true) => CPU_SUP_AMD) && (CPU_SUP_AMD => (true && true))))
((!a64BIT && PROCESSOR_SELECT) || (((true && !a64BIT) => CPU_SUP_CENTAUR_32) && (CPU_SUP_CENTAUR_32 => (true && !a64BIT))))
((a64BIT && PROCESSOR_SELECT) || (((true && a64BIT) => CPU_SUP_CENTAUR_64) && (CPU_SUP_CENTAUR_64 => (true && a64BIT))))
((!a64BIT && PROCESSOR_SELECT) || (((true && !a64BIT) => CPU_SUP_TRANSMETA_32) && (CPU_SUP_TRANSMETA_32 => (true && !a64BIT))))
((!a64BIT && PROCESSOR_SELECT) || (((true && !a64BIT) => CPU_SUP_UMC_32) && (CPU_SUP_UMC_32 => (true && !a64BIT))))
(false || (((true && (X86_DEBUGCTLMSR && X86_PTRACE_BTS)) => X86_DS) && (X86_DS => (true && (X86_DEBUGCTLMSR && X86_PTRACE_BTS)))))
((X86_DEBUGCTLMSR && BROKEN) || (((true && (X86_DEBUGCTLMSR && BROKEN)) => X86_PTRACE_BTS) && (X86_PTRACE_BTS => (true && (X86_DEBUGCTLMSR && BROKEN)))))
(X86_32 || (((true && (true && X86_64)) => HPET_TIMER) && (HPET_TIMER => (true && (true && X86_64)))))
(false || (((true && (HPET_TIMER && (RTC || RTC_DRV_CMOS))) => HPET_EMULATE_RTC) && (HPET_EMULATE_RTC => (true && (HPET_TIMER && (RTC || RTC_DRV_CMOS))))))
(EMBEDDED || (((true && true) => DMI) && (DMI => (true && true))))
((X86_64 && (PCI && EMBEDDED)) || (((true && (X86_64 && PCI)) => GART_IOMMU) && (GART_IOMMU => (true && (X86_64 && PCI)))))
((X86_64 && (PCI && EXPERIMENTAL)) || ((false => CALGARY_IOMMU) && (CALGARY_IOMMU => false)))
(CALGARY_IOMMU || (((true && CALGARY_IOMMU) => CALGARY_IOMMU_ENABLED_BY_DEFAULT) && (CALGARY_IOMMU_ENABLED_BY_DEFAULT => (true && CALGARY_IOMMU))))
((X86_64 && (PCI && ACPI)) || ((false => AMD_IOMMU) && (AMD_IOMMU => false)))
(false || ((((((GART_IOMMU && (X86_64 && PCI)) || (CALGARY_IOMMU && (X86_64 && (PCI && EXPERIMENTAL)))) || (AMD_IOMMU && (X86_64 && (PCI && ACPI)))) || (true && X86_64)) => SWIOTLB) && (SWIOTLB => ((((GART_IOMMU && (X86_64 && PCI)) || (CALGARY_IOMMU && (X86_64 && (PCI && EXPERIMENTAL)))) || (AMD_IOMMU && (X86_64 && (PCI && ACPI)))) || (true && X86_64)))))
(false || (((true && (true && (CALGARY_IOMMU || (GART_IOMMU || (SWIOTLB || AMD_IOMMU))))) => IOMMU_HELPER) && (IOMMU_HELPER => (true && (true && (CALGARY_IOMMU || (GART_IOMMU || (SWIOTLB || AMD_IOMMU))))))))
((X86_64 && (SMP && BROKEN)) || ((false => MAXSMP) && (MAXSMP => false)))
((SMP && !MAXSMP) || (((((true && (SMP && MAXSMP)) || ((true && !(SMP && MAXSMP)) && (SMP && (X86_NUMAQ || (X86_SUMMIT || (X86_BIGSMP || X86_ES7falsefalsefalse)))))) || (((true && !(SMP && (X86_NUMAQ || (X86_SUMMIT || (X86_BIGSMP || X86_ES7falsefalsefalse))))) && !(SMP && MAXSMP)) && SMP)) => NR_CPUS) && (NR_CPUS => (((true && (SMP && MAXSMP)) || ((true && !(SMP && MAXSMP)) && (SMP && (X86_NUMAQ || (X86_SUMMIT || (X86_BIGSMP || X86_ES7falsefalsefalse)))))) || (((true && !(SMP && (X86_NUMAQ || (X86_SUMMIT || (X86_BIGSMP || X86_ES7falsefalsefalse))))) && !(SMP && MAXSMP)) && SMP)))))
(X86_HT || ((false => SCHED_SMT) && (SCHED_SMT => false)))
(X86_HT || (((true && X86_HT) => SCHED_MC) && (SCHED_MC => (true && X86_HT))))
(true || ((false => PREEMPT_NONE) && (PREEMPT_NONE => false)))
(true || ((false => PREEMPT_VOLUNTARY) && (PREEMPT_VOLUNTARY => false)))
(true || ((false => PREEMPT) && (PREEMPT => false)))
(PREEMPT || ((false => PREEMPT_RCU) && (PREEMPT_RCU => false)))
(PREEMPT_RCU || (((true && PREEMPT_RCU) => RCU_TRACE) && (RCU_TRACE => (true && PREEMPT_RCU))))
((X86_32 && (!SMP && (!X86_VOYAGER && !X86_GENERICARCH))) || ((false => X86_UP_APIC) && (X86_UP_APIC => false)))
(X86_UP_APIC || ((false => X86_UP_IOAPIC) && (X86_UP_IOAPIC => false)))
(false || (((true && (X86_64 || (X86_32 && (X86_UP_APIC || ((SMP && !X86_VOYAGER) || X86_GENERICARCH))))) => X86_LOCAL_APIC) && (X86_LOCAL_APIC => (true && (X86_64 || (X86_32 && (X86_UP_APIC || ((SMP && !X86_VOYAGER) || X86_GENERICARCH))))))))
(false || (((true && (X86_64 || (X86_32 && (X86_UP_IOAPIC || ((SMP && !X86_VOYAGER) || X86_GENERICARCH))))) => X86_IO_APIC) && (X86_IO_APIC => (true && (X86_64 || (X86_32 && (X86_UP_IOAPIC || ((SMP && !X86_VOYAGER) || X86_GENERICARCH))))))))
(false || (((true && (X86_32 && X86_VISWS)) => X86_VISWS_APIC) && (X86_VISWS_APIC => (true && (X86_32 && X86_VISWS)))))
(!X86_VOYAGER || ((false => X86_MCE) && (X86_MCE => false)))
((X86_64 && (X86_MCE && X86_LOCAL_APIC)) || (((true && (X86_64 && (X86_MCE && X86_LOCAL_APIC))) => X86_MCE_INTEL) && (X86_MCE_INTEL => (true && (X86_64 && (X86_MCE && X86_LOCAL_APIC))))))
((X86_64 && (X86_MCE && X86_LOCAL_APIC)) || (((true && (X86_64 && (X86_MCE && X86_LOCAL_APIC))) => X86_MCE_AMD) && (X86_MCE_AMD => (true && (X86_64 && (X86_MCE && X86_LOCAL_APIC))))))
((X86_32 && X86_MCE) || ((false => X86_MCE_NONFATAL) && (X86_MCE_NONFATAL => false)))
((X86_32 && (X86_MCE && (X86_UP_APIC || SMP))) || ((false => X86_MCE_P4THERMAL) && (X86_MCE_P4THERMAL => false)))
((X86_32 && EMBEDDED) || (((true && X86_32) => VM86) && (VM86 => (true && X86_32))))
(X86_32 || ((false => TOSHIBA) && (TOSHIBA => false)))
(true || ((false => I8K) && (I8K => false)))
(X86_32 || (((X86_RDC32trueX && X86_32) => X86_REBOOTFIXUPS) && (X86_REBOOTFIXUPS => (X86_RDC32trueX && X86_32))))
(true || ((false => MICROCODE) && (MICROCODE => false)))
(MICROCODE || (((true && (MICROCODE && MICROCODE)) => MICROCODE_INTEL) && (MICROCODE_INTEL => (true && (MICROCODE && MICROCODE)))))
(MICROCODE || ((false => MICROCODE_AMD) && (MICROCODE_AMD => false)))
(false || (((true && MICROCODE) => MICROCODE_OLD_INTERFACE) && (MICROCODE_OLD_INTERFACE => (true && MICROCODE))))
(true || ((false => X86_MSR) && (X86_MSR => false)))
(true || ((false => X86_CPUID) && (X86_CPUID => false)))
((true && !X86_NUMAQ) || ((false => NOHIGHMEM) && (NOHIGHMEM => false)))
((true && !X86_NUMAQ) || ((false => HIGHMEM4G) && (HIGHMEM4G => false)))
((true && (!M386 && !M486)) || ((false => HIGHMEM64G) && (HIGHMEM64G => false)))
(true || ((false => VMSPLIT_3G) && (VMSPLIT_3G => false)))
((true && !X86_PAE) || ((false => VMSPLIT_3G_OPT) && (VMSPLIT_3G_OPT => false)))
(true || ((false => VMSPLIT_2G) && (VMSPLIT_2G => false)))
((true && !X86_PAE) || ((false => VMSPLIT_2G_OPT) && (VMSPLIT_2G_OPT => false)))
(true || ((false => VMSPLIT_trueG) && (VMSPLIT_trueG => false)))
(false || ((((((xtrue8 || xtrue9) || x2false) || x2true) || x22) => PAGE_OFFSET) && (PAGE_OFFSET => ((((xtrue8 || xtrue9) || x2false) || x2true) || x22))))
(xtrue8 <=> (true && (X86_32 && VMSPLIT_3G_OPT)))
(xtrue9 <=> ((true && !(X86_32 && VMSPLIT_3G_OPT)) && (X86_32 && VMSPLIT_2G)))
(x2false <=> (((true && !(X86_32 && VMSPLIT_2G)) && !(X86_32 && VMSPLIT_3G_OPT)) && (X86_32 && VMSPLIT_2G_OPT)))
(x2true <=> ((((true && !(X86_32 && VMSPLIT_2G_OPT)) && !(X86_32 && VMSPLIT_2G)) && !(X86_32 && VMSPLIT_3G_OPT)) && (X86_32 && VMSPLIT_trueG)))
(x22 <=> (((((true && !(X86_32 && VMSPLIT_trueG)) && !(X86_32 && VMSPLIT_2G_OPT)) && !(X86_32 && VMSPLIT_2G)) && !(X86_32 && VMSPLIT_3G_OPT)) && X86_32))
(false || (((true && (X86_32 && (HIGHMEM64G || HIGHMEM4G))) => HIGHMEM) && (HIGHMEM => (true && (X86_32 && (HIGHMEM64G || HIGHMEM4G))))))
((X86_32 && !HIGHMEM4G) || (((HIGHMEM64G && (true && (!M386 && !M486))) => X86_PAE) && (X86_PAE => (HIGHMEM64G && (true && (!M386 && !M486))))))
(false || (((true && (true && (X86_64 || X86_PAE))) => ARCH_PHYS_ADDR_T_64BIT) && (ARCH_PHYS_ADDR_T_64BIT => (true && (true && (X86_64 || X86_PAE))))))
((SMP && (X86_64 || (X86_32 && (HIGHMEM64G && ((X86_NUMAQ || (X86_BIGSMP || (X86_SUMMIT && ACPI))) && EXPERIMENTAL))))) || ((((X86_NUMAQ && (true && (X86_GENERICARCH && (SMP && (X86_32 && (PCI && X86_MPPARSE)))))) || (((true && !(SMP && ((X86_64 || (X86_32 && (HIGHMEM64G && ((X86_NUMAQ || (X86_BIGSMP || (X86_SUMMIT && ACPI))) && EXPERIMENTAL)))) && X86_PC))) && !true) && (SMP && ((X86_64 || (X86_32 && (HIGHMEM64G && ((X86_NUMAQ || (X86_BIGSMP || (X86_SUMMIT && ACPI))) && EXPERIMENTAL)))) && (X86_NUMAQ || (X86_SUMMIT || X86_BIGSMP)))))) => NUMA) && (NUMA => ((X86_NUMAQ && (true && (X86_GENERICARCH && (SMP && (X86_32 && (PCI && X86_MPPARSE)))))) || (((true && !(SMP && ((X86_64 || (X86_32 && (HIGHMEM64G && ((X86_NUMAQ || (X86_BIGSMP || (X86_SUMMIT && ACPI))) && EXPERIMENTAL)))) && X86_PC))) && !true) && (SMP && ((X86_64 || (X86_32 && (HIGHMEM64G && ((X86_NUMAQ || (X86_BIGSMP || (X86_SUMMIT && ACPI))) && EXPERIMENTAL)))) && (X86_NUMAQ || (X86_SUMMIT || X86_BIGSMP)))))))))
((X86_64 && (NUMA && PCI)) || (((true && (X86_64 && (NUMA && PCI))) => K8_NUMA) && (K8_NUMA => (true && (X86_64 && (NUMA && PCI))))))
((X86_64 && (NUMA && (ACPI && PCI))) || (((true && (X86_64 && (NUMA && (ACPI && PCI)))) => X86_64_ACPI_NUMA) && (X86_64_ACPI_NUMA => (true && (X86_64 && (NUMA && (ACPI && PCI)))))))
(false || (((true && X86_64_ACPI_NUMA) => NODES_SPAN_OTHER_NODES) && (NODES_SPAN_OTHER_NODES => (true && X86_64_ACPI_NUMA))))
((X86_64 && NUMA) || ((false => NUMA_EMU) && (NUMA_EMU => false)))
((NEED_MULTIPLE_NODES && !MAXSMP) || ((((((true && (NEED_MULTIPLE_NODES && MAXSMP)) || ((true && !(NEED_MULTIPLE_NODES && MAXSMP)) && (NEED_MULTIPLE_NODES && X86_64))) || (((true && !(NEED_MULTIPLE_NODES && X86_64)) && !(NEED_MULTIPLE_NODES && MAXSMP)) && (NEED_MULTIPLE_NODES && X86_NUMAQ))) || ((((true && !(NEED_MULTIPLE_NODES && X86_NUMAQ)) && !(NEED_MULTIPLE_NODES && X86_64)) && !(NEED_MULTIPLE_NODES && MAXSMP)) && NEED_MULTIPLE_NODES)) => NODES_SHIFT) && (NODES_SHIFT => ((((true && (NEED_MULTIPLE_NODES && MAXSMP)) || ((true && !(NEED_MULTIPLE_NODES && MAXSMP)) && (NEED_MULTIPLE_NODES && X86_64))) || (((true && !(NEED_MULTIPLE_NODES && X86_64)) && !(NEED_MULTIPLE_NODES && MAXSMP)) && (NEED_MULTIPLE_NODES && X86_NUMAQ))) || ((((true && !(NEED_MULTIPLE_NODES && X86_NUMAQ)) && !(NEED_MULTIPLE_NODES && X86_64)) && !(NEED_MULTIPLE_NODES && MAXSMP)) && NEED_MULTIPLE_NODES)))))
(false || (((true && (X86_32 && NUMA)) => HAVE_ARCH_BOOTMEM_NODE) && (HAVE_ARCH_BOOTMEM_NODE => (true && (X86_32 && NUMA)))))
(false || (((true && (X86_32 && DISCONTIGMEM)) => ARCH_HAVE_MEMORY_PRESENT) && (ARCH_HAVE_MEMORY_PRESENT => (true && (X86_32 && DISCONTIGMEM)))))
(false || (((true && (X86_32 && (DISCONTIGMEM || SPARSEMEM))) => NEED_NODE_MEMMAP_SIZE) && (NEED_NODE_MEMMAP_SIZE => (true && (X86_32 && (DISCONTIGMEM || SPARSEMEM))))))
(false || (((true && (X86_32 && NUMA)) => HAVE_ARCH_ALLOC_REMAP) && (HAVE_ARCH_ALLOC_REMAP => (true && (X86_32 && NUMA)))))
(false || (((true && (X86_32 && (ARCH_SELECT_MEMORY_MODEL && !NUMA))) => ARCH_FLATMEM_ENABLE) && (ARCH_FLATMEM_ENABLE => (true && (X86_32 && (ARCH_SELECT_MEMORY_MODEL && !NUMA))))))
(false || (((true && (NUMA && X86_32)) => ARCH_DISCONTIGMEM_ENABLE) && (ARCH_DISCONTIGMEM_ENABLE => (true && (NUMA && X86_32)))))
(false || (((true && (NUMA && X86_32)) => ARCH_DISCONTIGMEM_DEFAULT) && (ARCH_DISCONTIGMEM_DEFAULT => (true && (NUMA && X86_32)))))
(false || (((true && X86_64) => ARCH_SPARSEMEM_DEFAULT) && (ARCH_SPARSEMEM_DEFAULT => (true && X86_64))))
(false || (((true && (X86_64 || (NUMA || ((EXPERIMENTAL && X86_PC) || X86_GENERICARCH)))) => ARCH_SPARSEMEM_ENABLE) && (ARCH_SPARSEMEM_ENABLE => (true && (X86_64 || (NUMA || ((EXPERIMENTAL && X86_PC) || X86_GENERICARCH)))))))
(false || (((true && ARCH_SPARSEMEM_ENABLE) => ARCH_SELECT_MEMORY_MODEL) && (ARCH_SELECT_MEMORY_MODEL => (true && ARCH_SPARSEMEM_ENABLE))))
(false || (((true && (MEMORY_HOTPLUG && X86_64)) => ARCH_MEMORY_PROBE) && (ARCH_MEMORY_PROBE => (true && (MEMORY_HOTPLUG && X86_64)))))
(false || (((true && (EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL)) => SELECT_MEMORY_MODEL) && (SELECT_MEMORY_MODEL => (true && (EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL)))))
((true && ((!ARCH_DISCONTIGMEM_ENABLE && !ARCH_SPARSEMEM_ENABLE) || ARCH_FLATMEM_ENABLE)) || ((false => FLATMEM_MANUAL) && (FLATMEM_MANUAL => false)))
((true && ARCH_DISCONTIGMEM_ENABLE) || ((false => DISCONTIGMEM_MANUAL) && (DISCONTIGMEM_MANUAL => false)))
((true && ARCH_SPARSEMEM_ENABLE) || ((false => SPARSEMEM_MANUAL) && (SPARSEMEM_MANUAL => false)))
(false || (((true && ((!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE) || DISCONTIGMEM_MANUAL)) => DISCONTIGMEM) && (DISCONTIGMEM => (true && ((!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE) || DISCONTIGMEM_MANUAL)))))
(false || (((true && SPARSEMEM_MANUAL) => SPARSEMEM) && (SPARSEMEM => (true && SPARSEMEM_MANUAL))))
(false || (((true && ((!DISCONTIGMEM && !SPARSEMEM) || FLATMEM_MANUAL)) => FLATMEM) && (FLATMEM => (true && ((!DISCONTIGMEM && !SPARSEMEM) || FLATMEM_MANUAL)))))
(false || (((true && !SPARSEMEM) => FLAT_NODE_MEM_MAP) && (FLAT_NODE_MEM_MAP => (true && !SPARSEMEM))))
(false || (((true && (DISCONTIGMEM || NUMA)) => NEED_MULTIPLE_NODES) && (NEED_MULTIPLE_NODES => (true && (DISCONTIGMEM || NUMA)))))
(false || (((true && (ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM)) => HAVE_MEMORY_PRESENT) && (HAVE_MEMORY_PRESENT => (true && (ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM)))))
(false || (((ARCH_SPARSEMEM_ENABLE && ((X86_64 || (NUMA || ((EXPERIMENTAL && X86_PC) || X86_GENERICARCH))) && X86_32)) => SPARSEMEM_STATIC) && (SPARSEMEM_STATIC => (ARCH_SPARSEMEM_ENABLE && ((X86_64 || (NUMA || ((EXPERIMENTAL && X86_PC) || X86_GENERICARCH))) && X86_32)))))
(false || (((true && (SPARSEMEM && !SPARSEMEM_STATIC)) => SPARSEMEM_EXTREME) && (SPARSEMEM_EXTREME => (true && (SPARSEMEM && !SPARSEMEM_STATIC)))))
(false || (((ARCH_SPARSEMEM_ENABLE && ((X86_64 || (NUMA || ((EXPERIMENTAL && X86_PC) || X86_GENERICARCH))) && X86_64)) => SPARSEMEM_VMEMMAP_ENABLE) && (SPARSEMEM_VMEMMAP_ENABLE => (ARCH_SPARSEMEM_ENABLE && ((X86_64 || (NUMA || ((EXPERIMENTAL && X86_PC) || X86_GENERICARCH))) && X86_64)))))
((SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE) || (((true && (SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE)) => SPARSEMEM_VMEMMAP) && (SPARSEMEM_VMEMMAP => (true && (SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE)))))
(((SPARSEMEM || X86_64_ACPI_NUMA) && (HOTPLUG && (!HIBERNATION && (ARCH_ENABLE_MEMORY_HOTPLUG && (IA64 || (X86 || (PPC64 || (SUPERH || S39false)))))))) || ((false => MEMORY_HOTPLUG) && (MEMORY_HOTPLUG => false)))
(false || (((true && (SPARSEMEM && MEMORY_HOTPLUG)) => MEMORY_HOTPLUG_SPARSE) && (MEMORY_HOTPLUG_SPARSE => (true && (SPARSEMEM && MEMORY_HOTPLUG)))))
((MEMORY_HOTPLUG && (ARCH_ENABLE_MEMORY_HOTREMOVE && MIGRATION)) || ((false => MEMORY_HOTREMOVE) && (MEMORY_HOTREMOVE => false)))
(false || (((true && (a64BIT || (SPARSEMEM_VMEMMAP || (!NUMA || !SPARSEMEM)))) => PAGEFLAGS_EXTENDED) && (PAGEFLAGS_EXTENDED => (true && (a64BIT || (SPARSEMEM_VMEMMAP || (!NUMA || !SPARSEMEM)))))))
(false || (((((true && (ARM && !CPU_CACHE_VIPT)) || (true && (PARISC && !PA2false))) || (((true && !(ARM && !CPU_CACHE_VIPT)) && !(PARISC && !PA2false)) && true)) => SPLIT_PTLOCK_CPUS) && (SPLIT_PTLOCK_CPUS => (((true && (ARM && !CPU_CACHE_VIPT)) || (true && (PARISC && !PA2false))) || (((true && !(ARM && !CPU_CACHE_VIPT)) && !(PARISC && !PA2false)) && true)))))
((NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE) || (((true && (NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE)) => MIGRATION) && (MIGRATION => (true && (NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE)))))
((!a64BIT && EXPERIMENTAL) || (((true && (true && a64BIT)) => RESOURCES_64BIT) && (RESOURCES_64BIT => (true && (true && a64BIT)))))
(false || (((true && (true && (a64BIT || ARCH_PHYS_ADDR_T_64BIT))) => PHYS_ADDR_T_64BIT) && (PHYS_ADDR_T_64BIT => (true && (true && (a64BIT || ARCH_PHYS_ADDR_T_64BIT))))))
(false || ((((true && !ZONE_DMA) || ((true && !ZONE_DMA) && true)) => ZONE_DMA_FLAG) && (ZONE_DMA_FLAG => ((true && !ZONE_DMA) || ((true && !ZONE_DMA) && true)))))
(false || (((true && (BLOCK && (MMU && (ZONE_DMA || HIGHMEM)))) => BOUNCE) && (BOUNCE => (true && (BLOCK && (MMU && (ZONE_DMA || HIGHMEM)))))))
(false || ((((true && (QUICKLIST && (SUPERH || AVR32))) || ((true && !(QUICKLIST && (SUPERH || AVR32))) && QUICKLIST)) => NR_QUICK) && (NR_QUICK => ((true && (QUICKLIST && (SUPERH || AVR32))) || ((true && !(QUICKLIST && (SUPERH || AVR32))) && QUICKLIST)))))
(false || (((true && !ARCH_NO_VIRT_TO_BUS) => VIRT_TO_BUS) && (VIRT_TO_BUS => (true && !ARCH_NO_VIRT_TO_BUS))))
(MMU || (((true && MMU) => UNEVICTABLE_LRU) && (UNEVICTABLE_LRU => (true && MMU))))
(false || ((((KVM && (VIRTUALIZATION && (HAVE_KVM && PCI))) || (SGI_GRU && (MISC_DEVICES && ((X86_64 || (IA64_SGI_UV || IA64_GENERIC)) && SMP)))) => MMU_NOTIFIER) && (MMU_NOTIFIER => ((KVM && (VIRTUALIZATION && (HAVE_KVM && PCI))) || (SGI_GRU && (MISC_DEVICES && ((X86_64 || (IA64_SGI_UV || IA64_GENERIC)) && SMP)))))))
((X86_32 && (HIGHMEM4G || HIGHMEM64G)) || ((false => HIGHPTE) && (HIGHPTE => false)))
(true || ((false => X86_CHECK_BIOS_CORRUPTION) && (X86_CHECK_BIOS_CORRUPTION => false)))
(X86_CHECK_BIOS_CORRUPTION || (((true && X86_CHECK_BIOS_CORRUPTION) => X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK) && (X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK => (true && X86_CHECK_BIOS_CORRUPTION))))
(true || (((true && true) => X86_RESERVE_LOW_64K) && (X86_RESERVE_LOW_64K => (true && true))))
(X86_32 || ((false => MATH_EMULATION) && (MATH_EMULATION => false)))
(true || ((false => MTRR) && (MTRR => false)))
(MTRR || (((true && MTRR) => MTRR_SANITIZER) && (MTRR_SANITIZER => (true && MTRR))))
(MTRR_SANITIZER || (((true && MTRR_SANITIZER) => MTRR_SANITIZER_ENABLE_DEFAULT) && (MTRR_SANITIZER_ENABLE_DEFAULT => (true && MTRR_SANITIZER))))
(MTRR_SANITIZER || (((true && MTRR_SANITIZER) => MTRR_SANITIZER_SPARE_REG_NR_DEFAULT) && (MTRR_SANITIZER_SPARE_REG_NR_DEFAULT => (true && MTRR_SANITIZER))))
(MTRR || ((false => X86_PAT) && (X86_PAT => false)))
(ACPI || ((false => EFI) && (EFI => false)))
(true || (((true && true) => SECCOMP) && (SECCOMP => (true && true))))
((X86_64 && (EXPERIMENTAL && BROKEN)) || ((false => CC_STACKPROTECTOR) && (CC_STACKPROTECTOR => false)))
(CC_STACKPROTECTOR || ((false => CC_STACKPROTECTOR_ALL) && (CC_STACKPROTECTOR_ALL => false)))
(true || ((false => HZ_truefalsefalse) && (HZ_truefalsefalse => false)))
(true || ((false => HZ_25false) && (HZ_25false => false)))
(true || ((false => HZ_3falsefalse) && (HZ_3falsefalse => false)))
(true || ((false => HZ_truefalsefalsefalse) && (HZ_truefalsefalsefalse => false)))
(false || ((((((true && HZ_truefalsefalse) || ((true && !HZ_truefalsefalse) && HZ_25false)) || (((true && !HZ_25false) && !HZ_truefalsefalse) && HZ_3falsefalse)) || ((((true && !HZ_3falsefalse) && !HZ_25false) && !HZ_truefalsefalse) && HZ_truefalsefalsefalse)) => HZ) && (HZ => ((((true && HZ_truefalsefalse) || ((true && !HZ_truefalsefalse) && HZ_25false)) || (((true && !HZ_25false) && !HZ_truefalsefalse) && HZ_3falsefalse)) || ((((true && !HZ_3falsefalse) && !HZ_25false) && !HZ_truefalsefalse) && HZ_truefalsefalsefalse)))))
(false || (((true && (true && (HIGH_RES_TIMERS && (!SMP || USE_GENERIC_SMP_HELPERS)))) => SCHED_HRTICK) && (SCHED_HRTICK => (true && (true && (HIGH_RES_TIMERS && (!SMP || USE_GENERIC_SMP_HELPERS)))))))
(X86_BIOS_REBOOT || ((false => KEXEC) && (KEXEC => false)))
((X86_64 || (X86_32 && HIGHMEM)) || ((false => CRASH_DUMP) && (CRASH_DUMP => false)))
((EXPERIMENTAL && (KEXEC && (HIBERNATION && X86_32))) || ((false => KEXEC_JUMP) && (KEXEC_JUMP => false)))
((EMBEDDED || CRASH_DUMP) || (((((true && X86_NUMAQ) || ((true && !X86_NUMAQ) && X86_64)) || (((true && !X86_64) && !X86_NUMAQ) && true)) => PHYSICAL_START) && (PHYSICAL_START => (((true && X86_NUMAQ) || ((true && !X86_NUMAQ) && X86_64)) || (((true && !X86_64) && !X86_NUMAQ) && true)))))
(EXPERIMENTAL || ((false => RELOCATABLE) && (RELOCATABLE => false)))
(X86_32 || ((((true && X86_32) || ((true && !X86_32) && X86_64)) => PHYSICAL_ALIGN) && (PHYSICAL_ALIGN => ((true && X86_32) || ((true && !X86_32) && X86_64)))))
((SMP && (HOTPLUG && !X86_VOYAGER)) || (((PM_SLEEP_SMP && (!X86_VOYAGER && (SMP && ((ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP)))) => HOTPLUG_CPU) && (HOTPLUG_CPU => (PM_SLEEP_SMP && (!X86_VOYAGER && (SMP && ((ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP)))))))
((X86_32 || IA32_EMULATION) || (((true && (X86_32 || IA32_EMULATION)) => COMPAT_VDSO) && (COMPAT_VDSO => (true && (X86_32 || IA32_EMULATION)))))
(true || ((false => CMDLINE_BOOL) && (CMDLINE_BOOL => false)))
(CMDLINE_BOOL || ((false => CMDLINE) && (CMDLINE => false)))
(CMDLINE_BOOL || ((false => CMDLINE_OVERRIDE) && (CMDLINE_OVERRIDE => false)))
(false || (((true && (X86_64 || (X86_32 && HIGHMEM))) => ARCH_ENABLE_MEMORY_HOTPLUG) && (ARCH_ENABLE_MEMORY_HOTPLUG => (true && (X86_64 || (X86_32 && HIGHMEM))))))
(false || (((true && (NUMA && X86_64)) => HAVE_ARCH_EARLY_PFN_TO_NID) && (HAVE_ARCH_EARLY_PFN_TO_NID => (true && (NUMA && X86_64)))))
(false || (((true && (!X86_VOYAGER && (X86_64 && HIBERNATION))) => ARCH_HIBERNATION_HEADER) && (ARCH_HIBERNATION_HEADER => (true && (!X86_VOYAGER && (X86_64 && HIBERNATION))))))
((!X86_VOYAGER && !IA64_HP_SIM) || ((false => PM) && (PM => false)))
((!X86_VOYAGER && PM) || ((false => PM_DEBUG) && (PM_DEBUG => false)))
((!X86_VOYAGER && PM_DEBUG) || ((false => PM_VERBOSE) && (PM_VERBOSE => false)))
(false || (((true && (!X86_VOYAGER && (PM_DEBUG && (PM_SLEEP && EXPERIMENTAL)))) => CAN_PM_TRACE) && (CAN_PM_TRACE => (true && (!X86_VOYAGER && (PM_DEBUG && (PM_SLEEP && EXPERIMENTAL)))))))
(false || (((PM_TRACE_RTC && (!X86_VOYAGER && (CAN_PM_TRACE && X86))) => PM_TRACE) && (PM_TRACE => (PM_TRACE_RTC && (!X86_VOYAGER && (CAN_PM_TRACE && X86))))))
((!X86_VOYAGER && (CAN_PM_TRACE && X86)) || ((false => PM_TRACE_RTC) && (PM_TRACE_RTC => false)))
(false || (((true && (!X86_VOYAGER && (SMP && ((ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP)))) => PM_SLEEP_SMP) && (PM_SLEEP_SMP => (true && (!X86_VOYAGER && (SMP && ((ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP)))))))
(false || (((true && (!X86_VOYAGER && (SUSPEND || (HIBERNATION || XEN_SAVE_RESTORE)))) => PM_SLEEP) && (PM_SLEEP => (true && (!X86_VOYAGER && (SUSPEND || (HIBERNATION || XEN_SAVE_RESTORE)))))))
((!X86_VOYAGER && (PM && ARCH_SUSPEND_POSSIBLE)) || (((true && (!X86_VOYAGER && (PM && ARCH_SUSPEND_POSSIBLE))) => SUSPEND) && (SUSPEND => (true && (!X86_VOYAGER && (PM && ARCH_SUSPEND_POSSIBLE))))))
((!X86_VOYAGER && (SUSPEND && (PM_DEBUG && RTC_CLASS))) || ((false => PM_TEST_SUSPEND) && (PM_TEST_SUSPEND => false)))
((!X86_VOYAGER && (SUSPEND && (ARCH_WANTS_FREEZER_CONTROL || BROKEN))) || (((true && (!X86_VOYAGER && SUSPEND)) => SUSPEND_FREEZER) && (SUSPEND_FREEZER => (true && (!X86_VOYAGER && SUSPEND)))))
((!X86_VOYAGER && (PM && (SWAP && ARCH_HIBERNATION_POSSIBLE))) || ((false => HIBERNATION) && (HIBERNATION => false)))
((!X86_VOYAGER && HIBERNATION) || ((false => PM_STD_PARTITION) && (PM_STD_PARTITION => false)))
((!X86_VOYAGER && (PM && SYS_SUPPORTS_APM_EMULATION)) || (((PMAC_APM_EMU && (MACINTOSH_DRIVERS && (ADB_PMU && (PM && PPC32)))) => APM_EMULATION) && (APM_EMULATION => (PMAC_APM_EMU && (MACINTOSH_DRIVERS && (ADB_PMU && (PM && PPC32)))))))
((!X86_VOYAGER && (!IA64_HP_SIM && ((IA64 || X86) && (PCI && PM)))) || (((true && (!X86_VOYAGER && (!IA64_HP_SIM && ((IA64 || X86) && (PCI && PM))))) => ACPI) && (ACPI => (true && (!X86_VOYAGER && (!IA64_HP_SIM && ((IA64 || X86) && (PCI && PM))))))))
(false || (((true && (!X86_VOYAGER && (ACPI && (SUSPEND || HIBERNATION)))) => ACPI_SLEEP) && (ACPI_SLEEP => (true && (!X86_VOYAGER && (ACPI && (SUSPEND || HIBERNATION)))))))
((!X86_VOYAGER && (ACPI && PROC_FS)) || ((false => ACPI_PROCFS) && (ACPI_PROCFS => false)))
((!X86_VOYAGER && (ACPI && PROC_FS)) || (((true && (!X86_VOYAGER && (ACPI && PROC_FS))) => ACPI_PROCFS_POWER) && (ACPI_PROCFS_POWER => (true && (!X86_VOYAGER && (ACPI && PROC_FS))))))
((!X86_VOYAGER && ACPI) || (((true && (!X86_VOYAGER && ACPI)) => ACPI_SYSFS_POWER) && (ACPI_SYSFS_POWER => (true && (!X86_VOYAGER && ACPI)))))
((!X86_VOYAGER && (ACPI && PROC_FS)) || (((true && (!X86_VOYAGER && (ACPI && PROC_FS))) => ACPI_PROC_EVENT) && (ACPI_PROC_EVENT => (true && (!X86_VOYAGER && (ACPI && PROC_FS))))))
((!X86_VOYAGER && (ACPI && X86)) || (((true && (!X86_VOYAGER && (ACPI && X86))) => ACPI_AC) && (ACPI_AC => (true && (!X86_VOYAGER && (ACPI && X86))))))
((!X86_VOYAGER && (ACPI && X86)) || (((true && (!X86_VOYAGER && (ACPI && X86))) => ACPI_BATTERY) && (ACPI_BATTERY => (true && (!X86_VOYAGER && (ACPI && X86))))))
((!X86_VOYAGER && (ACPI && INPUT)) || (((true && (!X86_VOYAGER && (ACPI && INPUT))) => ACPI_BUTTON) && (ACPI_BUTTON => (true && (!X86_VOYAGER && (ACPI && INPUT))))))
((!X86_VOYAGER && (ACPI && (X86 && (BACKLIGHT_CLASS_DEVICE && (VIDEO_OUTPUT_CONTROL && INPUT))))) || ((false => ACPI_VIDEO) && (ACPI_VIDEO => false)))
((!X86_VOYAGER && ACPI) || (((true && (!X86_VOYAGER && ACPI)) => ACPI_FAN) && (ACPI_FAN => (true && (!X86_VOYAGER && ACPI)))))
((!X86_VOYAGER && (ACPI && EXPERIMENTAL)) || (((ATA_ACPI && (ATA && (ACPI && PCI))) => ACPI_DOCK) && (ACPI_DOCK => (ATA_ACPI && (ATA && (ACPI && PCI))))))
((!X86_VOYAGER && ACPI) || (((true && (!X86_VOYAGER && ACPI)) => ACPI_PROCESSOR) && (ACPI_PROCESSOR => (true && (!X86_VOYAGER && ACPI)))))
(false || (((true && (!X86_VOYAGER && (ACPI && (ACPI_PROCESSOR && HOTPLUG_CPU)))) => ACPI_HOTPLUG_CPU) && (ACPI_HOTPLUG_CPU => (true && (!X86_VOYAGER && (ACPI && (ACPI_PROCESSOR && HOTPLUG_CPU)))))))
((!X86_VOYAGER && (ACPI && ACPI_PROCESSOR)) || (((true && (!X86_VOYAGER && (ACPI && ACPI_PROCESSOR))) => ACPI_THERMAL) && (ACPI_THERMAL => (true && (!X86_VOYAGER && (ACPI && ACPI_PROCESSOR))))))
((!X86_VOYAGER && (ACPI && (NUMA && (X86 || IA64)))) || ((((X86_64_ACPI_NUMA && (X86_64 && (NUMA && (ACPI && PCI)))) || (true && (!X86_VOYAGER && (ACPI && (NUMA && ((X86 || IA64) && (IA64_GENERIC || IA64_SGI_SN2))))))) => ACPI_NUMA) && (ACPI_NUMA => ((X86_64_ACPI_NUMA && (X86_64 && (NUMA && (ACPI && PCI)))) || (true && (!X86_VOYAGER && (ACPI && (NUMA && ((X86 || IA64) && (IA64_GENERIC || IA64_SGI_SN2))))))))))
((!X86_VOYAGER && (ACPI && (X86 && EXPERIMENTAL))) || ((((ACER_WMI && (MISC_DEVICES && (X86 && (EXPERIMENTAL && (ACPI && (LEDS_CLASS && (NEW_LEDS && (BACKLIGHT_CLASS_DEVICE && (SERIO_I8false42 && RFKILL))))))))) || (TCtruetruefalsefalse_WMI && (MISC_DEVICES && (X86 && (!X86_64 && (EXPERIMENTAL && ACPI)))))) => ACPI_WMI) && (ACPI_WMI => ((ACER_WMI && (MISC_DEVICES && (X86 && (EXPERIMENTAL && (ACPI && (LEDS_CLASS && (NEW_LEDS && (BACKLIGHT_CLASS_DEVICE && (SERIO_I8false42 && RFKILL))))))))) || (TCtruetruefalsefalse_WMI && (MISC_DEVICES && (X86 && (!X86_64 && (EXPERIMENTAL && ACPI)))))))))
((!X86_VOYAGER && (ACPI && X86)) || ((false => ACPI_ASUS) && (ACPI_ASUS => false)))
((!X86_VOYAGER && (ACPI && (X86 && INPUT))) || ((false => ACPI_TOSHIBA) && (ACPI_TOSHIBA => false)))
((!X86_VOYAGER && (ACPI && !STANDALONE)) || ((false => ACPI_CUSTOM_DSDT_FILE) && (ACPI_CUSTOM_DSDT_FILE => false)))
(false || (((true && ((!X86_VOYAGER && ACPI) && !ACPI_CUSTOM_DSDT_FILE)) => ACPI_CUSTOM_DSDT) && (ACPI_CUSTOM_DSDT => (true && ((!X86_VOYAGER && ACPI) && !ACPI_CUSTOM_DSDT_FILE)))))
((!X86_VOYAGER && (ACPI && X86_32)) || (((true && (!X86_VOYAGER && ACPI)) => ACPI_BLACKLIST_YEAR) && (ACPI_BLACKLIST_YEAR => (true && (!X86_VOYAGER && ACPI)))))
((!X86_VOYAGER && ACPI) || ((false => ACPI_DEBUG) && (ACPI_DEBUG => false)))
((!X86_VOYAGER && (ACPI && ACPI_DEBUG)) || ((false => ACPI_DEBUG_FUNC_TRACE) && (ACPI_DEBUG_FUNC_TRACE => false)))
((!X86_VOYAGER && ACPI) || ((false => ACPI_PCI_SLOT) && (ACPI_PCI_SLOT => false)))
(false || (((true && (!X86_VOYAGER && ACPI)) => ACPI_SYSTEM) && (ACPI_SYSTEM => (true && (!X86_VOYAGER && ACPI)))))
((!X86_VOYAGER && (ACPI && (X86 && EMBEDDED))) || (((true && (!X86_VOYAGER && (ACPI && X86))) => X86_PM_TIMER) && (X86_PM_TIMER => (true && (!X86_VOYAGER && (ACPI && X86))))))
((!X86_VOYAGER && (ACPI && EXPERIMENTAL)) || ((((ACPI_HOTPLUG_CPU && (!X86_VOYAGER && (ACPI && (ACPI_PROCESSOR && HOTPLUG_CPU)))) || (true && ((!X86_VOYAGER && (ACPI && EXPERIMENTAL)) && (ACPI_HOTPLUG_MEMORY || (ACPI_HOTPLUG_CPU || ACPI_HOTPLUG_IO))))) => ACPI_CONTAINER) && (ACPI_CONTAINER => ((ACPI_HOTPLUG_CPU && (!X86_VOYAGER && (ACPI && (ACPI_PROCESSOR && HOTPLUG_CPU)))) || (true && ((!X86_VOYAGER && (ACPI && EXPERIMENTAL)) && (ACPI_HOTPLUG_MEMORY || (ACPI_HOTPLUG_CPU || ACPI_HOTPLUG_IO))))))))
((!X86_VOYAGER && (ACPI && MEMORY_HOTPLUG)) || ((false => ACPI_HOTPLUG_MEMORY) && (ACPI_HOTPLUG_MEMORY => false)))
((!X86_VOYAGER && (ACPI && X86)) || ((false => ACPI_SBS) && (ACPI_SBS => false)))
(false || (((true && (!X86_VOYAGER && (APM || APM_MODULE))) => X86_APM_BOOT) && (X86_APM_BOOT => (true && (!X86_VOYAGER && (APM || APM_MODULE))))))
((!X86_VOYAGER && (X86_32 && PM_SLEEP)) || ((false => APM) && (APM => false)))
((!X86_VOYAGER && APM) || ((false => APM_IGNORE_USER_SUSPEND) && (APM_IGNORE_USER_SUSPEND => false)))
((!X86_VOYAGER && APM) || ((false => APM_DO_ENABLE) && (APM_DO_ENABLE => false)))
((!X86_VOYAGER && APM) || ((false => APM_CPU_IDLE) && (APM_CPU_IDLE => false)))
((!X86_VOYAGER && APM) || ((false => APM_DISPLAY_BLANK) && (APM_DISPLAY_BLANK => false)))
((!X86_VOYAGER && APM) || ((false => APM_ALLOW_INTS) && (APM_ALLOW_INTS => false)))
((!X86_VOYAGER && APM) || ((false => APM_REAL_MODE_POWER_OFF) && (APM_REAL_MODE_POWER_OFF => false)))
(!X86_VOYAGER || ((false => CPU_FREQ) && (CPU_FREQ => false)))
(false || (((((((((((((((x23 || x24) || x25) || x26) || x27) || x28) || x29) || x3false) || x3true) || x32) || x33) || x34) || x35) || x36) => CPU_FREQ_TABLE) && (CPU_FREQ_TABLE => (((((((((((((x23 || x24) || x25) || x26) || x27) || x28) || x29) || x3false) || x3true) || x32) || x33) || x34) || x35) || x36))))
(x23 <=> (X86_SPEEDSTEP_SMI && (!X86_VOYAGER && (CPU_FREQ && (X86_32 && EXPERIMENTAL)))))
(x24 <=> (CPU_FREQ_STAT && (!X86_VOYAGER && CPU_FREQ)))
(x25 <=> (X86_SPEEDSTEP_CENTRINO && (!X86_VOYAGER && (CPU_FREQ && (X86_32 || (X86_64 && ACPI_PROCESSOR))))))
(x26 <=> (X86_POWERNOW_K7 && (!X86_VOYAGER && (CPU_FREQ && X86_32))))
(x27 <=> (SC52false_CPUFREQ && (!X86_VOYAGER && (CPU_FREQ && X86_ELAN))))
(x28 <=> (X86_SPEEDSTEP_ICH && (!X86_VOYAGER && (CPU_FREQ && X86_32))))
(x29 <=> (X86_P4_CLOCKMOD && (!X86_VOYAGER && CPU_FREQ)))
(x3false <=> (CPU_FREQ_GOV_ONDEMAND && (!X86_VOYAGER && CPU_FREQ)))
(x3true <=> (X86_LONGHAUL && (!X86_VOYAGER && (CPU_FREQ && (X86_32 && ACPI_PROCESSOR)))))
(x32 <=> (ELAN_CPUFREQ && (!X86_VOYAGER && (CPU_FREQ && X86_ELAN))))
(x33 <=> (X86_POWERNOW_K8 && (!X86_VOYAGER && CPU_FREQ)))
(x34 <=> (X86_ACPI_CPUFREQ && (!X86_VOYAGER && (CPU_FREQ && ACPI_PROCESSOR))))
(x35 <=> (X86_POWERNOW_K6 && (!X86_VOYAGER && (CPU_FREQ && X86_32))))
(x36 <=> (X86_E_POWERSAVER && (!X86_VOYAGER && (CPU_FREQ && X86_32))))
((!X86_VOYAGER && CPU_FREQ) || ((false => CPU_FREQ_DEBUG) && (CPU_FREQ_DEBUG => false)))
((!X86_VOYAGER && CPU_FREQ) || (((true && (!X86_VOYAGER && CPU_FREQ)) => CPU_FREQ_STAT) && (CPU_FREQ_STAT => (true && (!X86_VOYAGER && CPU_FREQ)))))
((!X86_VOYAGER && (CPU_FREQ && CPU_FREQ_STAT)) || ((false => CPU_FREQ_STAT_DETAILS) && (CPU_FREQ_STAT_DETAILS => false)))
(true || ((false => CPU_FREQ_DEFAULT_GOV_PERFORMANCE) && (CPU_FREQ_DEFAULT_GOV_PERFORMANCE => false)))
((true && EMBEDDED) || ((false => CPU_FREQ_DEFAULT_GOV_POWERSAVE) && (CPU_FREQ_DEFAULT_GOV_POWERSAVE => false)))
(true || ((false => CPU_FREQ_DEFAULT_GOV_USERSPACE) && (CPU_FREQ_DEFAULT_GOV_USERSPACE => false)))
(true || ((false => CPU_FREQ_DEFAULT_GOV_ONDEMAND) && (CPU_FREQ_DEFAULT_GOV_ONDEMAND => false)))
(true || ((false => CPU_FREQ_DEFAULT_GOV_CONSERVATIVE) && (CPU_FREQ_DEFAULT_GOV_CONSERVATIVE => false)))
((!X86_VOYAGER && CPU_FREQ) || (((((CPU_FREQ_DEFAULT_GOV_CONSERVATIVE && true) || (CPU_FREQ_DEFAULT_GOV_PERFORMANCE && true)) || (CPU_FREQ_DEFAULT_GOV_ONDEMAND && true)) => CPU_FREQ_GOV_PERFORMANCE) && (CPU_FREQ_GOV_PERFORMANCE => (((CPU_FREQ_DEFAULT_GOV_CONSERVATIVE && true) || (CPU_FREQ_DEFAULT_GOV_PERFORMANCE && true)) || (CPU_FREQ_DEFAULT_GOV_ONDEMAND && true)))))
((!X86_VOYAGER && CPU_FREQ) || (((CPU_FREQ_DEFAULT_GOV_POWERSAVE && (true && EMBEDDED)) => CPU_FREQ_GOV_POWERSAVE) && (CPU_FREQ_GOV_POWERSAVE => (CPU_FREQ_DEFAULT_GOV_POWERSAVE && (true && EMBEDDED)))))
((!X86_VOYAGER && CPU_FREQ) || (((CPU_FREQ_DEFAULT_GOV_USERSPACE && true) => CPU_FREQ_GOV_USERSPACE) && (CPU_FREQ_GOV_USERSPACE => (CPU_FREQ_DEFAULT_GOV_USERSPACE && true))))
((!X86_VOYAGER && CPU_FREQ) || (((CPU_FREQ_DEFAULT_GOV_ONDEMAND && true) => CPU_FREQ_GOV_ONDEMAND) && (CPU_FREQ_GOV_ONDEMAND => (CPU_FREQ_DEFAULT_GOV_ONDEMAND && true))))
((!X86_VOYAGER && CPU_FREQ) || (((CPU_FREQ_DEFAULT_GOV_CONSERVATIVE && true) => CPU_FREQ_GOV_CONSERVATIVE) && (CPU_FREQ_GOV_CONSERVATIVE => (CPU_FREQ_DEFAULT_GOV_CONSERVATIVE && true))))
((!X86_VOYAGER && (CPU_FREQ && ACPI_PROCESSOR)) || ((false => X86_ACPI_CPUFREQ) && (X86_ACPI_CPUFREQ => false)))
((!X86_VOYAGER && (CPU_FREQ && X86_ELAN)) || ((false => ELAN_CPUFREQ) && (ELAN_CPUFREQ => false)))
((!X86_VOYAGER && (CPU_FREQ && X86_ELAN)) || ((false => SC52false_CPUFREQ) && (SC52false_CPUFREQ => false)))
((!X86_VOYAGER && (CPU_FREQ && X86_32)) || ((false => X86_POWERNOW_K6) && (X86_POWERNOW_K6 => false)))
((!X86_VOYAGER && (CPU_FREQ && X86_32)) || ((false => X86_POWERNOW_K7) && (X86_POWERNOW_K7 => false)))
(false || (((true && (!X86_VOYAGER && (CPU_FREQ && (X86_POWERNOW_K7 && (ACPI_PROCESSOR && ((true || true) && X86_32)))))) => X86_POWERNOW_K7_ACPI) && (X86_POWERNOW_K7_ACPI => (true && (!X86_VOYAGER && (CPU_FREQ && (X86_POWERNOW_K7 && (ACPI_PROCESSOR && ((true || true) && X86_32)))))))))
((!X86_VOYAGER && CPU_FREQ) || ((false => X86_POWERNOW_K8) && (X86_POWERNOW_K8 => false)))
((!X86_VOYAGER && (CPU_FREQ && (ACPI && (X86_POWERNOW_K8 && (ACPI_PROCESSOR && ((true || true) && X86_32)))))) || (((true && (!X86_VOYAGER && (CPU_FREQ && (ACPI && (X86_POWERNOW_K8 && (ACPI_PROCESSOR && (true || true))))))) => X86_POWERNOW_K8_ACPI) && (X86_POWERNOW_K8_ACPI => (true && (!X86_VOYAGER && (CPU_FREQ && (ACPI && (X86_POWERNOW_K8 && (ACPI_PROCESSOR && (true || true))))))))))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 && PCI))) || ((false => X86_GX_SUSPMOD) && (X86_GX_SUSPMOD => false)))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 || (X86_64 && ACPI_PROCESSOR)))) || ((false => X86_SPEEDSTEP_CENTRINO) && (X86_SPEEDSTEP_CENTRINO => false)))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 && X86_SPEEDSTEP_CENTRINO))) || ((((X86_SPEEDSTEP_CENTRINO && (!X86_VOYAGER && (CPU_FREQ && ((X86_32 || (X86_64 && ACPI_PROCESSOR)) && X86_32)))) || (true && (!X86_VOYAGER && (CPU_FREQ && (X86_32 && X86_SPEEDSTEP_CENTRINO))))) => X86_SPEEDSTEP_CENTRINO_TABLE) && (X86_SPEEDSTEP_CENTRINO_TABLE => ((X86_SPEEDSTEP_CENTRINO && (!X86_VOYAGER && (CPU_FREQ && ((X86_32 || (X86_64 && ACPI_PROCESSOR)) && X86_32)))) || (true && (!X86_VOYAGER && (CPU_FREQ && (X86_32 && X86_SPEEDSTEP_CENTRINO))))))))
((!X86_VOYAGER && (CPU_FREQ && X86_32)) || ((false => X86_SPEEDSTEP_ICH) && (X86_SPEEDSTEP_ICH => false)))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 && EXPERIMENTAL))) || ((false => X86_SPEEDSTEP_SMI) && (X86_SPEEDSTEP_SMI => false)))
((!X86_VOYAGER && CPU_FREQ) || ((false => X86_P4_CLOCKMOD) && (X86_P4_CLOCKMOD => false)))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 && EXPERIMENTAL))) || ((false => X86_CPUFREQ_NFORCE2) && (X86_CPUFREQ_NFORCE2 => false)))
((!X86_VOYAGER && (CPU_FREQ && X86_32)) || ((false => X86_LONGRUN) && (X86_LONGRUN => false)))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 && ACPI_PROCESSOR))) || ((false => X86_LONGHAUL) && (X86_LONGHAUL => false)))
((!X86_VOYAGER && (CPU_FREQ && X86_32)) || ((false => X86_E_POWERSAVER) && (X86_E_POWERSAVER => false)))
((!X86_VOYAGER && (CPU_FREQ && (PROC_FS && (X86_ACPI_CPUFREQ || (X86_POWERNOW_K7_ACPI || X86_POWERNOW_K8_ACPI))))) || ((false => X86_ACPI_CPUFREQ_PROC_INTF) && (X86_ACPI_CPUFREQ_PROC_INTF => false)))
(false || (((true && ((!X86_VOYAGER && CPU_FREQ) && (X86_SPEEDSTEP_ICH || (X86_SPEEDSTEP_SMI || X86_P4_CLOCKMOD)))) => X86_SPEEDSTEP_LIB) && (X86_SPEEDSTEP_LIB => (true && ((!X86_VOYAGER && CPU_FREQ) && (X86_SPEEDSTEP_ICH || (X86_SPEEDSTEP_SMI || X86_P4_CLOCKMOD)))))))
((!X86_VOYAGER && (CPU_FREQ && (X86_32 && (X86_SPEEDSTEP_SMI || X86_SPEEDSTEP_ICH)))) || ((false => X86_SPEEDSTEP_RELAXED_CAP_CHECK) && (X86_SPEEDSTEP_RELAXED_CAP_CHECK => false)))
(!X86_VOYAGER || (((true && (!X86_VOYAGER && ACPI)) => CPU_IDLE) && (CPU_IDLE => (true && (!X86_VOYAGER && ACPI)))))
(false || (((true && (!X86_VOYAGER && CPU_IDLE)) => CPU_IDLE_GOV_LADDER) && (CPU_IDLE_GOV_LADDER => (true && (!X86_VOYAGER && CPU_IDLE)))))
(false || (((true && (!X86_VOYAGER && (CPU_IDLE && NO_HZ))) => CPU_IDLE_GOV_MENU) && (CPU_IDLE_GOV_MENU => (true && (!X86_VOYAGER && (CPU_IDLE && NO_HZ))))))
(false || (((I73falsefalse_IDLE && (!X86_VOYAGER && (X86_64 && EXPERIMENTAL))) => I73falsefalse_IDLE_IOAT_CHANNEL) && (I73falsefalse_IDLE_IOAT_CHANNEL => (I73falsefalse_IDLE && (!X86_VOYAGER && (X86_64 && EXPERIMENTAL))))))
((!X86_VOYAGER && (X86_64 && EXPERIMENTAL)) || ((false => I73falsefalse_IDLE) && (I73falsefalse_IDLE => false)))
(true || (((true && true) => PCI) && (PCI => (true && true))))
(true || ((false => PCI_GOBIOS) && (PCI_GOBIOS => false)))
(true || ((false => PCI_GOMMCONFIG) && (PCI_GOMMCONFIG => false)))
(true || ((false => PCI_GODIRECT) && (PCI_GODIRECT => false)))
((true && OLPC) || ((false => PCI_GOOLPC) && (PCI_GOOLPC => false)))
(true || ((false => PCI_GOANY) && (PCI_GOANY => false)))
(false || (((true && (X86_32 && (PCI && (PCI_GOBIOS || PCI_GOANY)))) => PCI_BIOS) && (PCI_BIOS => (true && (X86_32 && (PCI && (PCI_GOBIOS || PCI_GOANY)))))))
(false || (((true && (PCI && (X86_64 || (PCI_GODIRECT || (PCI_GOANY || PCI_GOOLPC))))) => PCI_DIRECT) && (PCI_DIRECT => (true && (PCI && (X86_64 || (PCI_GODIRECT || (PCI_GOANY || PCI_GOOLPC))))))))
((X86_64 && (PCI && ACPI)) || (((true && (X86_32 && (PCI && (ACPI && (PCI_GOMMCONFIG || PCI_GOANY))))) => PCI_MMCONFIG) && (PCI_MMCONFIG => (true && (X86_32 && (PCI && (ACPI && (PCI_GOMMCONFIG || PCI_GOANY))))))))
(false || (((true && (PCI && (OLPC && (PCI_GOOLPC || PCI_GOANY)))) => PCI_OLPC) && (PCI_OLPC => (true && (PCI && (OLPC && (PCI_GOOLPC || PCI_GOANY)))))))
(false || (((true && PCI) => PCI_DOMAINS) && (PCI_DOMAINS => (true && PCI))))
((X86_64 && (PCI && ACPI)) || (((true && (X86_32 && (PCI && (ACPI && (PCI_GOMMCONFIG || PCI_GOANY))))) => PCI_MMCONFIG) && (PCI_MMCONFIG => (true && (X86_32 && (PCI && (ACPI && (PCI_GOMMCONFIG || PCI_GOANY))))))))
((X86_64 && (PCI_MSI && (ACPI && EXPERIMENTAL))) || ((false => DMAR) && (DMAR => false)))
(DMAR || (((true && DMAR) => DMAR_GFX_WA) && (DMAR_GFX_WA => (true && DMAR))))
(false || (((true && DMAR) => DMAR_FLOPPY_WA) && (DMAR_FLOPPY_WA => (true && DMAR))))
((X86_64 && (X86_IO_APIC && (PCI_MSI && (ACPI && EXPERIMENTAL)))) || ((false => INTR_REMAP) && (INTR_REMAP => false)))
(PCI || ((false => PCIEPORTBUS) && (PCIEPORTBUS => false)))
((HOTPLUG_PCI && PCIEPORTBUS) || ((false => HOTPLUG_PCI_PCIE) && (HOTPLUG_PCI_PCIE => false)))
(PCIEPORTBUS || (((true && PCIEPORTBUS) => PCIEAER) && (PCIEAER => (true && PCIEPORTBUS))))
((PCI && (EXPERIMENTAL && PCIEPORTBUS)) || ((false => PCIEASPM) && (PCIEASPM => false)))
(PCIEASPM || ((false => PCIEASPM_DEBUG) && (PCIEASPM_DEBUG => false)))
(false || (((PCI && (X86_LOCAL_APIC && X86_IO_APIC)) => ARCH_SUPPORTS_MSI) && (ARCH_SUPPORTS_MSI => (PCI && (X86_LOCAL_APIC && X86_IO_APIC)))))
((PCI && ARCH_SUPPORTS_MSI) || (((AMD_IOMMU && (X86_64 && (PCI && ACPI))) => PCI_MSI) && (PCI_MSI => (AMD_IOMMU && (X86_64 && (PCI && ACPI))))))
(PCI || (((true && PCI) => PCI_LEGACY) && (PCI_LEGACY => (true && PCI))))
((PCI && DEBUG_KERNEL) || ((false => PCI_DEBUG) && (PCI_DEBUG => false)))
((PCI && (X86_LOCAL_APIC && X86_IO_APIC)) || (((true && (PCI && (X86_LOCAL_APIC && X86_IO_APIC))) => HT_IRQ) && (HT_IRQ => (true && (PCI && (X86_LOCAL_APIC && X86_IO_APIC))))))
(false || (((true && true) => ISA_DMA_API) && (ISA_DMA_API => (true && true))))
((X86_32 && !X86_VOYAGER) || ((false => ISA) && (ISA => false)))
((X86_32 && ISA) || ((false => EISA) && (EISA => false)))
((X86_32 && (X86_PC && EISA)) || ((false => EISA_VLB_PRIMING) && (EISA_VLB_PRIMING => false)))
((X86_32 && (!PARISC && (PCI && EISA))) || (((true && (X86_32 && (!PARISC && (PCI && EISA)))) => EISA_PCI_EISA) && (EISA_PCI_EISA => (true && (X86_32 && (!PARISC && (PCI && EISA)))))))
((X86_32 && (EISA && (ALPHA || X86_PC))) || (((true && (X86_32 && (EISA && (ALPHA || X86_PC)))) => EISA_VIRTUAL_ROOT) && (EISA_VIRTUAL_ROOT => (true && (X86_32 && (EISA && (ALPHA || X86_PC)))))))
((X86_32 && EISA) || (((true && (X86_32 && EISA)) => EISA_NAMES) && (EISA_NAMES => (true && (X86_32 && EISA)))))
((X86_32 && !X86_VOYAGER) || (((true && (X86_32 && X86_VOYAGER)) => MCA) && (MCA => (true && (X86_32 && X86_VOYAGER)))))
((X86_32 && MCA) || ((false => MCA_LEGACY) && (MCA_LEGACY => false)))
((X86_32 && (MCA_LEGACY && PROC_FS)) || ((false => MCA_PROC_FS) && (MCA_PROC_FS => false)))
((X86_32 && !X86_VOYAGER) || ((false => SCx2falsefalse) && (SCx2falsefalse => false)))
((X86_32 && (SCx2falsefalse && GENERIC_TIME)) || (((true && (X86_32 && (SCx2falsefalse && GENERIC_TIME))) => SCx2falsefalseHR_TIMER) && (SCx2falsefalseHR_TIMER => (true && (X86_32 && (SCx2falsefalse && GENERIC_TIME))))))
((X86_32 && (MGEODE_LX && (GENERIC_TIME && GENERIC_CLOCKEVENTS))) || (((true && (X86_32 && (MGEODE_LX && (GENERIC_TIME && GENERIC_CLOCKEVENTS)))) => GEODE_MFGPT_TIMER) && (GEODE_MFGPT_TIMER => (true && (X86_32 && (MGEODE_LX && (GENERIC_TIME && GENERIC_CLOCKEVENTS)))))))
(X86_32 || ((false => OLPC) && (OLPC => false)))
(false || (((true && (AGP_AMD64 || (X86_64 && (GART_IOMMU || (PCI && NUMA))))) => K8_NB) && (K8_NB => (true && (AGP_AMD64 || (X86_64 && (GART_IOMMU || (PCI && NUMA))))))))
(HOTPLUG || ((false => PCCARD) && (PCCARD => false)))
(PCCARD || ((false => PCMCIA_DEBUG) && (PCMCIA_DEBUG => false)))
(PCCARD || (((true && PCCARD) => PCMCIA) && (PCMCIA => (true && PCCARD))))
((PCCARD && (PCMCIA && EXPERIMENTAL)) || (((true && (PCCARD && (PCMCIA && EXPERIMENTAL))) => PCMCIA_LOAD_CIS) && (PCMCIA_LOAD_CIS => (true && (PCCARD && (PCMCIA && EXPERIMENTAL))))))
((PCCARD && PCMCIA) || (((true && (PCCARD && PCMCIA)) => PCMCIA_IOCTL) && (PCMCIA_IOCTL => (true && (PCCARD && PCMCIA)))))
((PCCARD && PCI) || ((((YENTA && (PCCARD && (PCI && !EMBEDDED))) || (true && (PCCARD && PCI))) => CARDBUS) && (CARDBUS => ((YENTA && (PCCARD && (PCI && !EMBEDDED))) || (true && (PCCARD && PCI))))))
((PCCARD && PCI) || ((false => YENTA) && (YENTA => false)))
((PCCARD && (YENTA && EMBEDDED)) || (((true && (PCCARD && YENTA)) => YENTA_O2) && (YENTA_O2 => (true && (PCCARD && YENTA)))))
((PCCARD && (YENTA && EMBEDDED)) || (((true && (PCCARD && YENTA)) => YENTA_RICOH) && (YENTA_RICOH => (true && (PCCARD && YENTA)))))
((PCCARD && (YENTA && EMBEDDED)) || (((true && (PCCARD && YENTA)) => YENTA_TI) && (YENTA_TI => (true && (PCCARD && YENTA)))))
((PCCARD && (YENTA_TI && (CARDBUS && EMBEDDED))) || (((true && (PCCARD && (YENTA_TI && CARDBUS))) => YENTA_ENE_TUNE) && (YENTA_ENE_TUNE => (true && (PCCARD && (YENTA_TI && CARDBUS))))))
((PCCARD && (YENTA && EMBEDDED)) || (((true && (PCCARD && YENTA)) => YENTA_TOSHIBA) && (YENTA_TOSHIBA => (true && (PCCARD && YENTA)))))
((PCCARD && (PCMCIA && PCI)) || ((false => PD6729) && (PD6729 => false)))
((PCCARD && (PCMCIA && PCI)) || ((false => I82false92) && (I82false92 => false)))
((PCCARD && (PCMCIA && ISA)) || ((false => I82365) && (I82365 => false)))
((PCCARD && (PCMCIA && ISA)) || ((false => TCIC) && (TCIC => false)))
((PCCARD && (PCMCIA && (PPC && 8xx))) || ((false => PCMCIA_M8XX) && (PCMCIA_M8XX => false)))
((PCCARD && (SOC_AUtrueXfalsefalse && PCMCIA)) || ((false => PCMCIA_AUtrueXfalsefalse) && (PCMCIA_AUtrueXfalsefalse => false)))
((PCCARD && (ARM && (ARCH_SAtruetruefalsefalse && PCMCIA))) || ((false => PCMCIA_SAtruetruefalsefalse) && (PCMCIA_SAtruetruefalsefalse => false)))
((PCCARD && (ARM && (ARCH_SAtruetruefalsefalse && (SAtruetruetruetrue && PCMCIA)))) || ((false => PCMCIA_SAtruetruetruetrue) && (PCMCIA_SAtruetruetruetrue => false)))
((PCCARD && (ARM && (ARCH_PXA && (PCMCIA && (ARCH_LUBBOCK || (MACH_MAINSTONE || (PXA_SHARPSL || (MACH_ARMCORE || (ARCH_PXA_PALM || (TRIZEPS_PCMCIA || ARCH_VIPER)))))))))) || ((false => PCMCIA_PXA2XX) && (PCMCIA_PXA2XX => false)))
(false || (((true && (PCCARD && (ISA && (!ARCH_SAtruetruefalsefalse && (!ARCH_CLPS7truetrueX && !PARISC))))) => PCMCIA_PROBE) && (PCMCIA_PROBE => (true && (PCCARD && (ISA && (!ARCH_SAtruetruefalsefalse && (!ARCH_CLPS7truetrueX && !PARISC))))))))
((PCCARD && (M32R && (CHIP_M327falsefalse && PCMCIA))) || ((false => M32R_PCC) && (M32R_PCC => false)))
((PCCARD && (M32R && (PLAT_USRV || (PLAT_M327falsefalseUT || (PLAT_MAPPI2 || (PLAT_MAPPI3 || PLAT_OPSPUT)))))) || ((false => M32R_CFC) && (M32R_CFC => false)))
((PCCARD && M32R_CFC) || (((true && (PCCARD && (M32R_CFC && (PLAT_USRV || (PLAT_M327falsefalseUT || (PLAT_MAPPI2 || (PLAT_MAPPI3 || PLAT_OPSPUT))))))) => M32R_CFC_NUM) && (M32R_CFC_NUM => (true && (PCCARD && (M32R_CFC && (PLAT_USRV || (PLAT_M327falsefalseUT || (PLAT_MAPPI2 || (PLAT_MAPPI3 || PLAT_OPSPUT))))))))))
((PCCARD && (CPU_VR4trueXX && (ISA && PCMCIA))) || ((false => PCMCIA_VRC4true7true) && (PCMCIA_VRC4true7true => false)))
((PCCARD && (CPU_VR4trueXX && (PCI && PCMCIA))) || ((false => PCMCIA_VRC4true73) && (PCMCIA_VRC4true73 => false)))
((PCCARD && (PCMCIA && ARCH_OMAPtrue6XX)) || ((false => OMAP_CF) && (OMAP_CF => false)))
((PCCARD && (PCMCIA && BLACKFIN)) || ((false => BFIN_CFPCMCIA) && (BFIN_CFPCMCIA => false)))
((PCCARD && (PCMCIA && ARCH_AT9trueRM92falsefalse)) || ((false => AT9true_CF) && (AT9true_CF => false)))
((PCCARD && (PCMCIA && PPC_PASEMI)) || ((false => ELECTRA_CF) && (ELECTRA_CF => false)))
(false || (((((((((x37 || x38) || x39) || x4false) || x4true) || x42) || x43) || x44) => PCCARD_NONSTATIC) && (PCCARD_NONSTATIC => (((((((x37 || x38) || x39) || x4false) || x4true) || x42) || x43) || x44))))
(x37 <=> (M32R_PCC && (PCCARD && (M32R && (CHIP_M327falsefalse && PCMCIA)))))
(x38 <=> (M32R_CFC && (PCCARD && (M32R && (PLAT_USRV || (PLAT_M327falsefalseUT || (PLAT_MAPPI2 || (PLAT_MAPPI3 || PLAT_OPSPUT))))))))
(x39 <=> (PD6729 && (PCCARD && (PCMCIA && PCI))))
(x4false <=> (TCIC && (PCCARD && (PCMCIA && ISA))))
(x4true <=> (YENTA && (PCCARD && PCI)))
(x42 <=> (I82365 && (PCCARD && (PCMCIA && ISA))))
(x43 <=> (I82false92 && (PCCARD && (PCMCIA && PCI))))
(x44 <=> (PCMCIA_M8XX && (PCCARD && (PCMCIA && (PPC && 8xx)))))
(false || (((PCMCIA_M8XX && (PCCARD && (PCMCIA && (PPC && 8xx)))) => PCCARD_IODYN) && (PCCARD_IODYN => (PCMCIA_M8XX && (PCCARD && (PCMCIA && (PPC && 8xx)))))))
((PCI && HOTPLUG) || ((false => HOTPLUG_PCI) && (HOTPLUG_PCI => false)))
(HOTPLUG_PCI || ((false => HOTPLUG_PCI_FAKE) && (HOTPLUG_PCI_FAKE => false)))
((HOTPLUG_PCI && (X86 && (PCI_BIOS && PCI_LEGACY))) || ((false => HOTPLUG_PCI_COMPAQ) && (HOTPLUG_PCI_COMPAQ => false)))
((HOTPLUG_PCI && HOTPLUG_PCI_COMPAQ) || ((false => HOTPLUG_PCI_COMPAQ_NVRAM) && (HOTPLUG_PCI_COMPAQ_NVRAM => false)))
((HOTPLUG_PCI && (X86_IO_APIC && (X86 && PCI_BIOS))) || ((false => HOTPLUG_PCI_IBM) && (HOTPLUG_PCI_IBM => false)))
((HOTPLUG_PCI && ((!ACPI_DOCK && ACPI) || ACPI_DOCK)) || ((false => HOTPLUG_PCI_ACPI) && (HOTPLUG_PCI_ACPI => false)))
((HOTPLUG_PCI && HOTPLUG_PCI_ACPI) || ((false => HOTPLUG_PCI_ACPI_IBM) && (HOTPLUG_PCI_ACPI_IBM => false)))
(HOTPLUG_PCI || ((false => HOTPLUG_PCI_CPCI) && (HOTPLUG_PCI_CPCI => false)))
((HOTPLUG_PCI && (HOTPLUG_PCI_CPCI && X86)) || ((false => HOTPLUG_PCI_CPCI_ZT555false) && (HOTPLUG_PCI_CPCI_ZT555false => false)))
((HOTPLUG_PCI && (HOTPLUG_PCI_CPCI && X86)) || ((false => HOTPLUG_PCI_CPCI_GENERIC) && (HOTPLUG_PCI_CPCI_GENERIC => false)))
(HOTPLUG_PCI || ((false => HOTPLUG_PCI_SHPC) && (HOTPLUG_PCI_SHPC => false)))
((HOTPLUG_PCI && (PPC_PSERIES && (PPC64 && !HOTPLUG_PCI_FAKE))) || ((false => HOTPLUG_PCI_RPA) && (HOTPLUG_PCI_RPA => false)))
((HOTPLUG_PCI && HOTPLUG_PCI_RPA) || ((false => HOTPLUG_PCI_RPA_DLPAR) && (HOTPLUG_PCI_RPA_DLPAR => false)))
((HOTPLUG_PCI && (IA64_SGI_SN2 || IA64_GENERIC)) || ((false => HOTPLUG_PCI_SGI) && (HOTPLUG_PCI_SGI => false)))
((MMU && (BROKEN || !FRV)) || (((true && (MMU && (BROKEN || !FRV))) => BINFMT_ELF) && (BINFMT_ELF => (true && (MMU && (BROKEN || !FRV))))))
(false || (((IA32_EMULATION && X86_64) => COMPAT_BINFMT_ELF) && (COMPAT_BINFMT_ELF => (IA32_EMULATION && X86_64))))
((FRV || (BLACKFIN || (SUPERH32 && !MMU))) || (((true && (FRV || (BLACKFIN || (SUPERH32 && !MMU)))) => BINFMT_ELF_FDPIC) && (BINFMT_ELF_FDPIC => (true && (FRV || (BLACKFIN || (SUPERH32 && !MMU)))))))
(BINFMT_ELF || ((false => CORE_DUMP_DEFAULT_ELF_HEADERS) && (CORE_DUMP_DEFAULT_ELF_HEADERS => false)))
((!MMU && (!FRV || BROKEN)) || ((false => BINFMT_FLAT) && (BINFMT_FLAT => false)))
(BINFMT_FLAT || ((false => BINFMT_ZFLAT) && (BINFMT_ZFLAT => false)))
(BINFMT_FLAT || ((false => BINFMT_SHARED_FLAT) && (BINFMT_SHARED_FLAT => false)))
(false || (((X86 && X86_32) => HAVE_AOUT) && (HAVE_AOUT => (X86 && X86_32))))
(HAVE_AOUT || ((false => BINFMT_AOUT) && (BINFMT_AOUT => false)))
((ALPHA && BINFMT_AOUT) || ((false => OSF4_COMPAT) && (OSF4_COMPAT => false)))
(ALPHA || ((false => BINFMT_EM86) && (BINFMT_EM86 => false)))
((PARISC && HPUX) || ((false => BINFMT_SOM) && (BINFMT_SOM => false)))
(true || ((false => BINFMT_MISC) && (BINFMT_MISC => false)))
(X86_64 || ((false => IA32_EMULATION) && (IA32_EMULATION => false)))
(IA32_EMULATION || ((false => IA32_AOUT) && (IA32_AOUT => false)))
(false || (((true && IA32_EMULATION) => COMPAT) && (COMPAT => (true && IA32_EMULATION))))
(false || (((true && (X86_64 && COMPAT)) => COMPAT_FOR_U64_ALIGNMENT) && (COMPAT_FOR_U64_ALIGNMENT => (true && (X86_64 && COMPAT)))))
(false || (((true && (COMPAT && SYSVIPC)) => SYSVIPC_COMPAT) && (SYSVIPC_COMPAT => (true && (COMPAT && SYSVIPC)))))
(false || (((true && X86_32) => HAVE_ATOMIC_IOMAP) && (HAVE_ATOMIC_IOMAP => (true && X86_32))))
(true || (((((ACPI_TOSHIBA && (!X86_VOYAGER && (ACPI && (X86 && INPUT)))) || (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI)))) || (SCSI_NETLINK && true)) => NET) && (NET => (((ACPI_TOSHIBA && (!X86_VOYAGER && (ACPI && (X86 && INPUT)))) || (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI)))) || (SCSI_NETLINK && true)))))
((NET && (EXPERIMENTAL && (!SYSFS && NAMESPACES))) || ((false => NET_NS) && (NET_NS => false)))
(NET || ((false => PACKET) && (PACKET => false)))
((NET && PACKET) || ((false => PACKET_MMAP) && (PACKET_MMAP => false)))
(NET || ((false => UNIX) && (UNIX => false)))
(false || (((((((((((((((x45 || x46) || x47) || x48) || x49) || x5false) || x5true) || x52) || x53) || x54) || x55) || x56) || x57) || x58) => XFRM) && (XFRM => (((((((((((((x45 || x46) || x47) || x48) || x49) || x5false) || x5true) || x52) || x53) || x54) || x55) || x56) || x57) || x58))))
(x45 <=> (INET_XFRM_MODE_BEET && (NET && INET)))
(x46 <=> (INET6_XFRM_MODE_TRANSPORT && (NET && (INET && IPV6))))
(x47 <=> (XFRM_IPCOMP && NET))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(x49 <=> (IPV6_MIP6 && (NET && (INET && (IPV6 && EXPERIMENTAL)))))
(x5false <=> (INET6_XFRM_MODE_TUNNEL && (NET && (INET && IPV6))))
(x5true <=> (INET6_AH && (NET && (INET && IPV6))))
(x52 <=> (INET6_XFRM_MODE_BEET && (NET && (INET && IPV6))))
(x53 <=> (INET_XFRM_MODE_TRANSPORT && (NET && INET)))
(x54 <=> (INET_XFRM_MODE_TUNNEL && (NET && INET)))
(x55 <=> (INET6_XFRM_MODE_ROUTEOPTIMIZATION && (NET && (INET && (IPV6 && EXPERIMENTAL)))))
(x56 <=> (NET_KEY && NET))
(x57 <=> (INET_AH && (NET && INET)))
(x58 <=> (INET_ESP && (NET && INET)))
((NET && (INET && XFRM)) || ((false => XFRM_USER) && (XFRM_USER => false)))
((NET && (XFRM && EXPERIMENTAL)) || ((false => XFRM_SUB_POLICY) && (XFRM_SUB_POLICY => false)))
((NET && (XFRM && EXPERIMENTAL)) || (((NET_KEY_MIGRATE && (NET && (NET_KEY && EXPERIMENTAL))) => XFRM_MIGRATE) && (XFRM_MIGRATE => (NET_KEY_MIGRATE && (NET && (NET_KEY && EXPERIMENTAL))))))
((NET && (INET && (XFRM && (PROC_FS && EXPERIMENTAL)))) || ((false => XFRM_STATISTICS) && (XFRM_STATISTICS => false)))
(false || ((((INET_IPCOMP && (NET && INET)) || (INET6_IPCOMP && (NET && (INET && IPV6)))) => XFRM_IPCOMP) && (XFRM_IPCOMP => ((INET_IPCOMP && (NET && INET)) || (INET6_IPCOMP && (NET && (INET && IPV6)))))))
(NET || ((false => NET_KEY) && (NET_KEY => false)))
((NET && (NET_KEY && EXPERIMENTAL)) || ((false => NET_KEY_MIGRATE) && (NET_KEY_MIGRATE => false)))
((NET && S39false) || ((false => IUCV) && (IUCV => false)))
((NET && IUCV) || ((false => AFIUCV) && (AFIUCV => false)))
(NET || ((false => INET) && (INET => false)))
((NET && INET) || ((false => IP_MULTICAST) && (IP_MULTICAST => false)))
((NET && INET) || ((false => IP_ADVANCED_ROUTER) && (IP_ADVANCED_ROUTER => false)))
(true || ((false => ASK_IP_FIB_HASH) && (ASK_IP_FIB_HASH => false)))
(true || ((false => IP_FIB_TRIE) && (IP_FIB_TRIE => false)))
(false || (((true && ((NET && INET) && (ASK_IP_FIB_HASH || !IP_ADVANCED_ROUTER))) => IP_FIB_HASH) && (IP_FIB_HASH => (true && ((NET && INET) && (ASK_IP_FIB_HASH || !IP_ADVANCED_ROUTER))))))
((NET && (INET && IP_FIB_TRIE)) || ((false => IP_FIB_TRIE_STATS) && (IP_FIB_TRIE_STATS => false)))
((NET && (INET && IP_ADVANCED_ROUTER)) || ((false => IP_MULTIPLE_TABLES) && (IP_MULTIPLE_TABLES => false)))
((NET && (INET && IP_ADVANCED_ROUTER)) || ((false => IP_ROUTE_MULTIPATH) && (IP_ROUTE_MULTIPATH => false)))
((NET && (INET && IP_ADVANCED_ROUTER)) || ((false => IP_ROUTE_VERBOSE) && (IP_ROUTE_VERBOSE => false)))
((NET && INET) || ((false => IP_PNP) && (IP_PNP => false)))
((NET && (INET && IP_PNP)) || ((false => IP_PNP_DHCP) && (IP_PNP_DHCP => false)))
((NET && (INET && IP_PNP)) || ((false => IP_PNP_BOOTP) && (IP_PNP_BOOTP => false)))
((NET && (INET && IP_PNP)) || ((false => IP_PNP_RARP) && (IP_PNP_RARP => false)))
((NET && INET) || ((false => NET_IPIP) && (NET_IPIP => false)))
((NET && INET) || ((false => NET_IPGRE) && (NET_IPGRE => false)))
((NET && (INET && (IP_MULTICAST && NET_IPGRE))) || ((false => NET_IPGRE_BROADCAST) && (NET_IPGRE_BROADCAST => false)))
((NET && (INET && IP_MULTICAST)) || ((false => IP_MROUTE) && (IP_MROUTE => false)))
((NET && (INET && IP_MROUTE)) || ((false => IP_PIMSM_Vtrue) && (IP_PIMSM_Vtrue => false)))
((NET && (INET && IP_MROUTE)) || ((false => IP_PIMSM_V2) && (IP_PIMSM_V2 => false)))
((NET && (INET && EXPERIMENTAL)) || ((false => ARPD) && (ARPD => false)))
((NET && INET) || ((false => SYN_COOKIES) && (SYN_COOKIES => false)))
((NET && INET) || ((false => INET_AH) && (INET_AH => false)))
((NET && INET) || ((false => INET_ESP) && (INET_ESP => false)))
((NET && INET) || ((false => INET_IPCOMP) && (INET_IPCOMP => false)))
(false || (((INET_IPCOMP && (NET && INET)) => INET_XFRM_TUNNEL) && (INET_XFRM_TUNNEL => (INET_IPCOMP && (NET && INET)))))
(false || (((((INET_XFRM_TUNNEL && (NET && INET)) || (NET_IPIP && (NET && INET))) || (IPV6_SIT && (NET && (INET && IPV6)))) => INET_TUNNEL) && (INET_TUNNEL => (((INET_XFRM_TUNNEL && (NET && INET)) || (NET_IPIP && (NET && INET))) || (IPV6_SIT && (NET && (INET && IPV6)))))))
((NET && INET) || (((true && (NET && INET)) => INET_XFRM_MODE_TRANSPORT) && (INET_XFRM_MODE_TRANSPORT => (true && (NET && INET)))))
((NET && INET) || (((true && (NET && INET)) => INET_XFRM_MODE_TUNNEL) && (INET_XFRM_MODE_TUNNEL => (true && (NET && INET)))))
((NET && INET) || (((true && (NET && INET)) => INET_XFRM_MODE_BEET) && (INET_XFRM_MODE_BEET => (true && (NET && INET)))))
((NET && INET) || ((((((((((((x59 || x6false) || x6true) || x62) || x63) || x64) || x65) || x66) || x67) || x68) || x69) => INET_LRO) && (INET_LRO => ((((((((((x59 || x6false) || x6true) || x62) || x63) || x64) || x65) || x66) || x67) || x68) || x69))))
(x59 <=> (IXGBE && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x6false <=> (ENIC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x6true <=> (MYRItruefalseGE && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x62 <=> (SFC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x63 <=> (INFINIBAND_NES && (PCI && (INET && INFINIBAND))))
(x64 <=> (MLX4_EN && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x65 <=> (IGB_LRO && (NETDEVICES && (NETDEV_truefalsefalsefalse && (IGB && INET)))))
(x66 <=> (CHELSIO_T3 && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x67 <=> (INFINIBAND_IPOIB && (INFINIBAND && (NETDEVICES && (INET && (IPV6 || !IPV6))))))
(x68 <=> (EHEA && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (IBMEBUS && (INET && SPARSEMEM))))))
(x69 <=> (PASEMI_MAC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PPC_PASEMI && PCI)))))
((NET && INET) || (((true && (NET && INET)) => INET_DIAG) && (INET_DIAG => (true && (NET && INET)))))
(false || (((true && ((NET && (INET && INET_DIAG)) && INET_DIAG)) => INET_TCP_DIAG) && (INET_TCP_DIAG => (true && ((NET && (INET && INET_DIAG)) && INET_DIAG)))))
((NET && INET) || ((false => TCP_CONG_ADVANCED) && (TCP_CONG_ADVANCED => false)))
((NET && (INET && TCP_CONG_ADVANCED)) || (((true && (NET && (INET && TCP_CONG_ADVANCED))) => TCP_CONG_BIC) && (TCP_CONG_BIC => (true && (NET && (INET && TCP_CONG_ADVANCED))))))
((NET && (INET && TCP_CONG_ADVANCED)) || ((((true && (NET && (INET && TCP_CONG_ADVANCED))) || (true && (NET && (INET && !TCP_CONG_ADVANCED)))) => TCP_CONG_CUBIC) && (TCP_CONG_CUBIC => ((true && (NET && (INET && TCP_CONG_ADVANCED))) || (true && (NET && (INET && !TCP_CONG_ADVANCED)))))))
((NET && (INET && TCP_CONG_ADVANCED)) || (((true && (NET && (INET && TCP_CONG_ADVANCED))) => TCP_CONG_WESTWOOD) && (TCP_CONG_WESTWOOD => (true && (NET && (INET && TCP_CONG_ADVANCED))))))
((NET && (INET && TCP_CONG_ADVANCED)) || (((true && (NET && (INET && TCP_CONG_ADVANCED))) => TCP_CONG_HTCP) && (TCP_CONG_HTCP => (true && (NET && (INET && TCP_CONG_ADVANCED))))))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_HSTCP) && (TCP_CONG_HSTCP => false)))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_HYBLA) && (TCP_CONG_HYBLA => false)))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || (((TCP_CONG_YEAH && (NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL)))) => TCP_CONG_VEGAS) && (TCP_CONG_VEGAS => (TCP_CONG_YEAH && (NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL)))))))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_SCALABLE) && (TCP_CONG_SCALABLE => false)))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_LP) && (TCP_CONG_LP => false)))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_VENO) && (TCP_CONG_VENO => false)))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_YEAH) && (TCP_CONG_YEAH => false)))
((NET && (INET && (TCP_CONG_ADVANCED && EXPERIMENTAL))) || ((false => TCP_CONG_ILLINOIS) && (TCP_CONG_ILLINOIS => false)))
((true && TCP_CONG_BIC) || ((false => DEFAULT_BIC) && (DEFAULT_BIC => false)))
((true && TCP_CONG_CUBIC) || ((false => DEFAULT_CUBIC) && (DEFAULT_CUBIC => false)))
((true && TCP_CONG_HTCP) || ((false => DEFAULT_HTCP) && (DEFAULT_HTCP => false)))
((true && TCP_CONG_VEGAS) || ((false => DEFAULT_VEGAS) && (DEFAULT_VEGAS => false)))
((true && TCP_CONG_WESTWOOD) || ((false => DEFAULT_WESTWOOD) && (DEFAULT_WESTWOOD => false)))
(true || ((false => DEFAULT_RENO) && (DEFAULT_RENO => false)))
((NET && (INET && TCP_CONG_ADVANCED)) || ((((true && (NET && (INET && TCP_CONG_ADVANCED))) || (true && (NET && (INET && !TCP_CONG_ADVANCED)))) => TCP_CONG_CUBIC) && (TCP_CONG_CUBIC => ((true && (NET && (INET && TCP_CONG_ADVANCED))) || (true && (NET && (INET && !TCP_CONG_ADVANCED)))))))
(false || ((((((((x7false || x7true) || x72) || x73) || x74) || x75) || x76) => DEFAULT_TCP_CONG) && (DEFAULT_TCP_CONG => ((((((x7false || x7true) || x72) || x73) || x74) || x75) || x76))))
(x7false <=> (true && (NET && (INET && DEFAULT_BIC))))
(x7true <=> ((true && !(NET && (INET && DEFAULT_BIC))) && (NET && (INET && DEFAULT_CUBIC))))
(x72 <=> ((true && !(NET && (INET && DEFAULT_BIC))) && (NET && INET)))
(x73 <=> ((((true && !(NET && (INET && DEFAULT_CUBIC))) && !(NET && INET)) && !(NET && (INET && DEFAULT_BIC))) && (NET && (INET && DEFAULT_HTCP))))
(x74 <=> (((((true && !(NET && (INET && DEFAULT_HTCP))) && !(NET && (INET && DEFAULT_CUBIC))) && !(NET && INET)) && !(NET && (INET && DEFAULT_BIC))) && (NET && (INET && DEFAULT_VEGAS))))
(x75 <=> ((((((true && !(NET && (INET && DEFAULT_VEGAS))) && !(NET && (INET && DEFAULT_HTCP))) && !(NET && (INET && DEFAULT_CUBIC))) && !(NET && INET)) && !(NET && (INET && DEFAULT_BIC))) && (NET && (INET && DEFAULT_WESTWOOD))))
(x76 <=> (((((((true && !(NET && (INET && DEFAULT_WESTWOOD))) && !(NET && (INET && DEFAULT_VEGAS))) && !(NET && (INET && DEFAULT_HTCP))) && !(NET && (INET && DEFAULT_CUBIC))) && !(NET && INET)) && !(NET && (INET && DEFAULT_BIC))) && (NET && (INET && DEFAULT_RENO))))
((NET && (INET && EXPERIMENTAL)) || ((false => TCP_MD5SIG) && (TCP_MD5SIG => false)))
((NET && INET) || (((true && (NET && INET)) => IPV6) && (IPV6 => (true && (NET && INET)))))
((NET && (INET && IPV6)) || ((false => IPV6_PRIVACY) && (IPV6_PRIVACY => false)))
((NET && (INET && IPV6)) || ((false => IPV6_ROUTER_PREF) && (IPV6_ROUTER_PREF => false)))
((NET && (INET && (IPV6 && (IPV6_ROUTER_PREF && EXPERIMENTAL)))) || ((false => IPV6_ROUTE_INFO) && (IPV6_ROUTE_INFO => false)))
((NET && (INET && (IPV6 && EXPERIMENTAL))) || ((false => IPV6_OPTIMISTIC_DAD) && (IPV6_OPTIMISTIC_DAD => false)))
((NET && (INET && IPV6)) || ((false => INET6_AH) && (INET6_AH => false)))
((NET && (INET && IPV6)) || ((false => INET6_ESP) && (INET6_ESP => false)))
((NET && (INET && IPV6)) || ((false => INET6_IPCOMP) && (INET6_IPCOMP => false)))
((NET && (INET && (IPV6 && EXPERIMENTAL))) || ((false => IPV6_MIP6) && (IPV6_MIP6 => false)))
(false || (((INET6_IPCOMP && (NET && (INET && IPV6))) => INET6_XFRM_TUNNEL) && (INET6_XFRM_TUNNEL => (INET6_IPCOMP && (NET && (INET && IPV6))))))
(false || ((((IPV6_TUNNEL && (NET && (INET && IPV6))) || (INET6_XFRM_TUNNEL && (NET && (INET && IPV6)))) => INET6_TUNNEL) && (INET6_TUNNEL => ((IPV6_TUNNEL && (NET && (INET && IPV6))) || (INET6_XFRM_TUNNEL && (NET && (INET && IPV6)))))))
((NET && (INET && IPV6)) || (((true && ((NET && (INET && IPV6)) && IPV6)) => INET6_XFRM_MODE_TRANSPORT) && (INET6_XFRM_MODE_TRANSPORT => (true && ((NET && (INET && IPV6)) && IPV6)))))
((NET && (INET && IPV6)) || (((true && ((NET && (INET && IPV6)) && IPV6)) => INET6_XFRM_MODE_TUNNEL) && (INET6_XFRM_MODE_TUNNEL => (true && ((NET && (INET && IPV6)) && IPV6)))))
((NET && (INET && IPV6)) || (((true && ((NET && (INET && IPV6)) && IPV6)) => INET6_XFRM_MODE_BEET) && (INET6_XFRM_MODE_BEET => (true && ((NET && (INET && IPV6)) && IPV6)))))
((NET && (INET && (IPV6 && EXPERIMENTAL))) || ((false => INET6_XFRM_MODE_ROUTEOPTIMIZATION) && (INET6_XFRM_MODE_ROUTEOPTIMIZATION => false)))
((NET && (INET && IPV6)) || (((true && (NET && (INET && IPV6))) => IPV6_SIT) && (IPV6_SIT => (true && (NET && (INET && IPV6))))))
(false || (((IPV6_SIT && (NET && (INET && IPV6))) => IPV6_NDISC_NODETYPE) && (IPV6_NDISC_NODETYPE => (IPV6_SIT && (NET && (INET && IPV6))))))
((NET && (INET && IPV6)) || ((false => IPV6_TUNNEL) && (IPV6_TUNNEL => false)))
((NET && (INET && (IPV6 && EXPERIMENTAL))) || ((false => IPV6_MULTIPLE_TABLES) && (IPV6_MULTIPLE_TABLES => false)))
((NET && (INET && (IPV6 && IPV6_MULTIPLE_TABLES))) || ((false => IPV6_SUBTREES) && (IPV6_SUBTREES => false)))
((NET && (INET && (IPV6 && EXPERIMENTAL))) || ((false => IPV6_MROUTE) && (IPV6_MROUTE => false)))
((NET && (INET && (IPV6 && IPV6_MROUTE))) || ((false => IPV6_PIMSM_V2) && (IPV6_PIMSM_V2 => false)))
((NET && (INET && SECURITY)) || ((false => NETLABEL) && (NETLABEL => false)))
(NET || (((SECURITY_SELINUX && (SECURITY_NETWORK && (AUDIT && (NET && INET)))) => NETWORK_SECMARK) && (NETWORK_SECMARK => (SECURITY_SELINUX && (SECURITY_NETWORK && (AUDIT && (NET && INET)))))))
(NET || ((false => NETFILTER) && (NETFILTER => false)))
((NET && NETFILTER) || ((false => NETFILTER_DEBUG) && (NETFILTER_DEBUG => false)))
((NET && NETFILTER) || (((true && (NET && NETFILTER)) => NETFILTER_ADVANCED) && (NETFILTER_ADVANCED => (true && (NET && NETFILTER)))))
((NET && (BRIDGE && (NETFILTER && (INET && NETFILTER_ADVANCED)))) || (((true && (NET && (BRIDGE && (NETFILTER && (INET && NETFILTER_ADVANCED))))) => BRIDGE_NETFILTER) && (BRIDGE_NETFILTER => (true && (NET && (BRIDGE && (NETFILTER && (INET && NETFILTER_ADVANCED))))))))
(false || (((((NETFILTER_NETLINK_LOG && (NET && (INET && NETFILTER))) || (NF_CT_NETLINK && (NET && (INET && (NETFILTER && NF_CONNTRACK))))) || (NETFILTER_NETLINK_QUEUE && (NET && (INET && (NETFILTER && NETFILTER_ADVANCED))))) => NETFILTER_NETLINK) && (NETFILTER_NETLINK => (((NETFILTER_NETLINK_LOG && (NET && (INET && NETFILTER))) || (NF_CT_NETLINK && (NET && (INET && (NETFILTER && NF_CONNTRACK))))) || (NETFILTER_NETLINK_QUEUE && (NET && (INET && (NETFILTER && NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && NETFILTER_ADVANCED))) || ((false => NETFILTER_NETLINK_QUEUE) && (NETFILTER_NETLINK_QUEUE => false)))
((NET && (INET && NETFILTER)) || (((true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))) => NETFILTER_NETLINK_LOG) && (NETFILTER_NETLINK_LOG => (true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))))))
((NET && (INET && NETFILTER)) || (((true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))) => NF_CONNTRACK) && (NF_CONNTRACK => (true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || (((NETFILTER_XT_MATCH_CONNBYTES && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) => NF_CT_ACCT) && (NF_CT_ACCT => (NETFILTER_XT_MATCH_CONNBYTES && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || (((((NETFILTER_XT_MATCH_CONNMARK && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || (NETFILTER_XT_TARGET_CONNMARK && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))))) || (IP_NF_TARGET_CLUSTERIP && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_MANGLE && (EXPERIMENTAL && (NF_CONNTRACK_IPV4 && NETFILTER_ADVANCED))))))))) => NF_CONNTRACK_MARK) && (NF_CONNTRACK_MARK => (((NETFILTER_XT_MATCH_CONNMARK && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || (NETFILTER_XT_TARGET_CONNMARK && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))))) || (IP_NF_TARGET_CLUSTERIP && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_MANGLE && (EXPERIMENTAL && (NF_CONNTRACK_IPV4 && NETFILTER_ADVANCED))))))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETWORK_SECMARK)))) || (((true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && (NETWORK_SECMARK && !NETFILTER_ADVANCED)))))) => NF_CONNTRACK_SECMARK) && (NF_CONNTRACK_SECMARK => (true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && (NETWORK_SECMARK && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || ((false => NF_CONNTRACK_EVENTS) && (NF_CONNTRACK_EVENTS => false)))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) || (((true && ((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) && IP_DCCP)) => NF_CT_PROTO_DCCP) && (NF_CT_PROTO_DCCP => (true && ((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) && IP_DCCP)))))
(false || (((NF_CONNTRACK_PPTP && (NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED))))) => NF_CT_PROTO_GRE) && (NF_CT_PROTO_GRE => (NF_CONNTRACK_PPTP && (NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) || (((true && ((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) && IP_SCTP)) => NF_CT_PROTO_SCTP) && (NF_CT_PROTO_SCTP => (true && ((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) && IP_SCTP)))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || ((false => NF_CT_PROTO_UDPLITE) && (NF_CT_PROTO_UDPLITE => false)))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || ((false => NF_CONNTRACK_AMANDA) && (NF_CONNTRACK_AMANDA => false)))
((NET && (INET && (NETFILTER && NF_CONNTRACK))) || (((true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))) => NF_CONNTRACK_FTP) && (NF_CONNTRACK_FTP => (true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && ((IPV6 || !IPV6) && NETFILTER_ADVANCED))))) || ((false => NF_CONNTRACK_H323) && (NF_CONNTRACK_H323 => false)))
((NET && (INET && (NETFILTER && NF_CONNTRACK))) || (((true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))) => NF_CONNTRACK_IRC) && (NF_CONNTRACK_IRC => (true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || ((false => NF_CONNTRACK_NETBIOS_NS) && (NF_CONNTRACK_NETBIOS_NS => false)))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || ((false => NF_CONNTRACK_PPTP) && (NF_CONNTRACK_PPTP => false)))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && NETFILTER_ADVANCED))))) || ((false => NF_CONNTRACK_SANE) && (NF_CONNTRACK_SANE => false)))
((NET && (INET && (NETFILTER && NF_CONNTRACK))) || (((true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))) => NF_CONNTRACK_SIP) && (NF_CONNTRACK_SIP => (true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))) || ((false => NF_CONNTRACK_TFTP) && (NF_CONNTRACK_TFTP => false)))
((NET && (INET && (NETFILTER && NF_CONNTRACK))) || (((true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))) => NF_CT_NETLINK) && (NF_CT_NETLINK => (true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NF_CONNTRACK && (EXPERIMENTAL && (IP_NF_MANGLE && NETFILTER_ADVANCED)))))) || ((false => NETFILTER_TPROXY) && (NETFILTER_TPROXY => false)))
((NET && (INET && NETFILTER)) || ((((((x77 || x78) || x79) || x8false) || x8true) => NETFILTER_XTABLES) && (NETFILTER_XTABLES => ((((x77 || x78) || x79) || x8false) || x8true))))
(x77 <=> (IP_NF_ARPTABLES && (NET && (INET && (NETFILTER && NETFILTER_ADVANCED)))))
(x78 <=> (IP6_NF_IPTABLES && (NET && (NETFILTER && (INET && IPV6)))))
(x79 <=> (IP_NF_IPTABLES && (NET && (INET && NETFILTER))))
(x8false <=> (BRIDGE_NF_EBTABLES && (NET && (NETFILTER && (BRIDGE && BRIDGE_NETFILTER)))))
(x8true <=> (true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_TARGET_CLASSIFY) && (NETFILTER_XT_TARGET_CLASSIFY => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_TARGET_CONNMARK) && (NETFILTER_XT_TARGET_CONNMARK => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NF_CONNTRACK_SECMARK))))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && (NF_CONNTRACK_SECMARK && !NETFILTER_ADVANCED))))))) => NETFILTER_XT_TARGET_CONNSECMARK) && (NETFILTER_XT_TARGET_CONNSECMARK => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && (NF_CONNTRACK_SECMARK && !NETFILTER_ADVANCED))))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && ((IP_NF_MANGLE || IP6_NF_MANGLE) && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_TARGET_DSCP) && (NETFILTER_XT_TARGET_DSCP => false)))
((NET && (INET && (NETFILTER && NETFILTER_XTABLES))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && !NETFILTER_ADVANCED))))) => NETFILTER_XT_TARGET_MARK) && (NETFILTER_XT_TARGET_MARK => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && NETFILTER_XTABLES))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && !NETFILTER_ADVANCED))))) => NETFILTER_XT_TARGET_NFLOG) && (NETFILTER_XT_TARGET_NFLOG => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_TARGET_NFQUEUE) && (NETFILTER_XT_TARGET_NFQUEUE => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && ((IP_NF_RAW || IP6_NF_RAW) && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || ((false => NETFILTER_XT_TARGET_NOTRACK) && (NETFILTER_XT_TARGET_NOTRACK => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || (((NETFILTER_XT_MATCH_RATEEST && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) => NETFILTER_XT_TARGET_RATEEST) && (NETFILTER_XT_TARGET_RATEEST => (NETFILTER_XT_MATCH_RATEEST && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (EXPERIMENTAL && (NETFILTER_TPROXY && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))))) || ((false => NETFILTER_XT_TARGET_TPROXY) && (NETFILTER_XT_TARGET_TPROXY => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && ((IP_NF_RAW || IP6_NF_RAW) && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_TARGET_TRACE) && (NETFILTER_XT_TARGET_TRACE => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETWORK_SECMARK)))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NETWORK_SECMARK && !NETFILTER_ADVANCED)))))) => NETFILTER_XT_TARGET_SECMARK) && (NETFILTER_XT_TARGET_SECMARK => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NETWORK_SECMARK && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (IPV6 || !IPV6))))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && ((IPV6 || !IPV6) && !NETFILTER_ADVANCED)))))) => NETFILTER_XT_TARGET_TCPMSS) && (NETFILTER_XT_TARGET_TCPMSS => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && ((IPV6 || !IPV6) && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (EXPERIMENTAL && ((IP_NF_MANGLE || IP6_NF_MANGLE) && NETFILTER_ADVANCED)))))) || ((false => NETFILTER_XT_TARGET_TCPOPTSTRIP) && (NETFILTER_XT_TARGET_TCPOPTSTRIP => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_COMMENT) && (NETFILTER_XT_MATCH_COMMENT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_MATCH_CONNBYTES) && (NETFILTER_XT_MATCH_CONNBYTES => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_MATCH_CONNLIMIT) && (NETFILTER_XT_MATCH_CONNLIMIT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_MATCH_CONNMARK) && (NETFILTER_XT_MATCH_CONNMARK => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NF_CONNTRACK)))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && !NETFILTER_ADVANCED)))))) => NETFILTER_XT_MATCH_CONNTRACK) && (NETFILTER_XT_MATCH_CONNTRACK => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || (((true && ((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) && IP_DCCP)) => NETFILTER_XT_MATCH_DCCP) && (NETFILTER_XT_MATCH_DCCP => (true && ((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) && IP_DCCP)))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_DSCP) && (NETFILTER_XT_MATCH_DSCP => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_ESP) && (NETFILTER_XT_MATCH_ESP => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && ((IP6_NF_IPTABLES || !IP6_NF_IPTABLES) && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_MATCH_HASHLIMIT) && (NETFILTER_XT_MATCH_HASHLIMIT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && NETFILTER_ADVANCED))))) || ((false => NETFILTER_XT_MATCH_HELPER) && (NETFILTER_XT_MATCH_HELPER => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_IPRANGE) && (NETFILTER_XT_MATCH_IPRANGE => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_LENGTH) && (NETFILTER_XT_MATCH_LENGTH => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_LIMIT) && (NETFILTER_XT_MATCH_LIMIT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_MAC) && (NETFILTER_XT_MATCH_MAC => false)))
((NET && (INET && (NETFILTER && NETFILTER_XTABLES))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && !NETFILTER_ADVANCED))))) => NETFILTER_XT_MATCH_MARK) && (NETFILTER_XT_MATCH_MARK => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_MULTIPORT) && (NETFILTER_XT_MATCH_MULTIPORT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_OWNER) && (NETFILTER_XT_MATCH_OWNER => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && XFRM)))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (XFRM && !NETFILTER_ADVANCED)))))) => NETFILTER_XT_MATCH_POLICY) && (NETFILTER_XT_MATCH_POLICY => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (XFRM && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (BRIDGE && (BRIDGE_NETFILTER && NETFILTER_ADVANCED)))))) || ((false => NETFILTER_XT_MATCH_PHYSDEV) && (NETFILTER_XT_MATCH_PHYSDEV => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_PKTTYPE) && (NETFILTER_XT_MATCH_PKTTYPE => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_QUOTA) && (NETFILTER_XT_MATCH_QUOTA => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_RATEEST) && (NETFILTER_XT_MATCH_RATEEST => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_REALM) && (NETFILTER_XT_MATCH_REALM => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_RECENT) && (NETFILTER_XT_MATCH_RECENT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NETFILTER_XT_MATCH_RECENT && PROC_FS))))) || ((false => NETFILTER_XT_MATCH_RECENT_PROC_COMPAT) && (NETFILTER_XT_MATCH_RECENT_PROC_COMPAT => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (EXPERIMENTAL && NETFILTER_ADVANCED))))) || (((true && ((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (EXPERIMENTAL && NETFILTER_ADVANCED))))) && IP_SCTP)) => NETFILTER_XT_MATCH_SCTP) && (NETFILTER_XT_MATCH_SCTP => (true && ((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (EXPERIMENTAL && NETFILTER_ADVANCED))))) && IP_SCTP)))))
((NET && (INET && (NETFILTER && (EXPERIMENTAL && (NETFILTER_TPROXY && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))))) || ((false => NETFILTER_XT_MATCH_SOCKET) && (NETFILTER_XT_MATCH_SOCKET => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NF_CONNTRACK)))) || (((true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && !NETFILTER_ADVANCED)))))) => NETFILTER_XT_MATCH_STATE) && (NETFILTER_XT_MATCH_STATE => (true && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && (NF_CONNTRACK && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_STATISTIC) && (NETFILTER_XT_MATCH_STATISTIC => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_STRING) && (NETFILTER_XT_MATCH_STRING => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_TCPMSS) && (NETFILTER_XT_MATCH_TCPMSS => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_TIME) && (NETFILTER_XT_MATCH_TIME => false)))
((NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))) || ((false => NETFILTER_XT_MATCH_U32) && (NETFILTER_XT_MATCH_U32 => false)))
((NET && (INET && NETFILTER)) || ((false => IP_VS) && (IP_VS => false)))
((NET && (NETFILTER && (IP_VS && (EXPERIMENTAL && (IPV6 || IP_VS))))) || ((false => IP_VS_IPV6) && (IP_VS_IPV6 => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_DEBUG) && (IP_VS_DEBUG => false)))
((NET && (NETFILTER && IP_VS)) || (((true && (NET && (NETFILTER && IP_VS))) => IP_VS_TAB_BITS) && (IP_VS_TAB_BITS => (true && (NET && (NETFILTER && IP_VS))))))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_PROTO_TCP) && (IP_VS_PROTO_TCP => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_PROTO_UDP) && (IP_VS_PROTO_UDP => false)))
(false || ((((IP_VS_PROTO_ESP && (NET && (NETFILTER && IP_VS))) || (IP_VS_PROTO_AH && (NET && (NETFILTER && IP_VS)))) => IP_VS_PROTO_AH_ESP) && (IP_VS_PROTO_AH_ESP => ((IP_VS_PROTO_ESP && (NET && (NETFILTER && IP_VS))) || (IP_VS_PROTO_AH && (NET && (NETFILTER && IP_VS)))))))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_PROTO_ESP) && (IP_VS_PROTO_ESP => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_PROTO_AH) && (IP_VS_PROTO_AH => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_RR) && (IP_VS_RR => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_WRR) && (IP_VS_WRR => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_LC) && (IP_VS_LC => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_WLC) && (IP_VS_WLC => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_LBLC) && (IP_VS_LBLC => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_LBLCR) && (IP_VS_LBLCR => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_DH) && (IP_VS_DH => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_SH) && (IP_VS_SH => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_SED) && (IP_VS_SED => false)))
((NET && (NETFILTER && IP_VS)) || ((false => IP_VS_NQ) && (IP_VS_NQ => false)))
((NET && (NETFILTER && (IP_VS && IP_VS_PROTO_TCP))) || ((false => IP_VS_FTP) && (IP_VS_FTP => false)))
(false || (((((NETFILTER_XT_MATCH_SOCKET && (NET && (INET && (NETFILTER && (EXPERIMENTAL && (NETFILTER_TPROXY && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))))) || (NF_CONNTRACK_IPV4 && (NET && (INET && (NETFILTER && NF_CONNTRACK))))) || (NETFILTER_XT_TARGET_TPROXY && (NET && (INET && (NETFILTER && (EXPERIMENTAL && (NETFILTER_TPROXY && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))))))) => NF_DEFRAG_IPV4) && (NF_DEFRAG_IPV4 => (((NETFILTER_XT_MATCH_SOCKET && (NET && (INET && (NETFILTER && (EXPERIMENTAL && (NETFILTER_TPROXY && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))))) || (NF_CONNTRACK_IPV4 && (NET && (INET && (NETFILTER && NF_CONNTRACK))))) || (NETFILTER_XT_TARGET_TPROXY && (NET && (INET && (NETFILTER && (EXPERIMENTAL && (NETFILTER_TPROXY && (NETFILTER_XTABLES && NETFILTER_ADVANCED)))))))))))
((NET && (INET && (NETFILTER && NF_CONNTRACK))) || (((true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))) => NF_CONNTRACK_IPV4) && (NF_CONNTRACK_IPV4 => (true && (NET && (INET && (NETFILTER && (NF_CONNTRACK && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && NF_CONNTRACK_IPV4))) || (((true && (NET && (INET && (NETFILTER && NF_CONNTRACK_IPV4)))) => NF_CONNTRACK_PROC_COMPAT) && (NF_CONNTRACK_PROC_COMPAT => (true && (NET && (INET && (NETFILTER && NF_CONNTRACK_IPV4)))))))
((NET && (INET && (NETFILTER && NETFILTER_ADVANCED))) || ((false => IP_NF_QUEUE) && (IP_NF_QUEUE => false)))
((NET && (INET && NETFILTER)) || (((true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))) => IP_NF_IPTABLES) && (IP_NF_IPTABLES => (true && (NET && (INET && (NETFILTER && !NETFILTER_ADVANCED)))))))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NETFILTER_ADVANCED)))) || ((false => IP_NF_MATCH_ADDRTYPE) && (IP_NF_MATCH_ADDRTYPE => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NETFILTER_ADVANCED)))) || ((false => IP_NF_MATCH_AH) && (IP_NF_MATCH_AH => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NETFILTER_ADVANCED)))) || ((false => IP_NF_MATCH_ECN) && (IP_NF_MATCH_ECN => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NETFILTER_ADVANCED)))) || ((false => IP_NF_MATCH_TTL) && (IP_NF_MATCH_TTL => false)))
((NET && (INET && (NETFILTER && IP_NF_IPTABLES))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))) => IP_NF_FILTER) && (IP_NF_FILTER => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && IP_NF_FILTER)))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_FILTER && !NETFILTER_ADVANCED)))))) => IP_NF_TARGET_REJECT) && (IP_NF_TARGET_REJECT => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_FILTER && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && IP_NF_IPTABLES))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))) => IP_NF_TARGET_LOG) && (IP_NF_TARGET_LOG => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && IP_NF_IPTABLES))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))) => IP_NF_TARGET_ULOG) && (IP_NF_TARGET_ULOG => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NF_CONNTRACK_IPV4)))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK_IPV4 && !NETFILTER_ADVANCED)))))) => NF_NAT) && (NF_NAT => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK_IPV4 && !NETFILTER_ADVANCED)))))))))
(false || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NF_NAT))))) => NF_NAT_NEEDED) && (NF_NAT_NEEDED => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NF_NAT))))))))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NF_NAT)))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && !NETFILTER_ADVANCED)))))) => IP_NF_TARGET_MASQUERADE) && (IP_NF_TARGET_MASQUERADE => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NETFILTER_ADVANCED))))) || ((false => IP_NF_TARGET_NETMAP) && (IP_NF_TARGET_NETMAP => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NETFILTER_ADVANCED))))) || ((false => IP_NF_TARGET_REDIRECT) && (IP_NF_TARGET_REDIRECT => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NETFILTER_ADVANCED))))) || ((false => NF_NAT_SNMP_BASIC) && (NF_NAT_SNMP_BASIC => false)))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_DCCP))))) && (NF_NAT && NF_CT_PROTO_DCCP))) => NF_NAT_PROTO_DCCP) && (NF_NAT_PROTO_DCCP => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_DCCP))))) && (NF_NAT && NF_CT_PROTO_DCCP))))))
(false || (((NF_NAT_PPTP && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT)))))) => NF_NAT_PROTO_GRE) && (NF_NAT_PROTO_GRE => (NF_NAT_PPTP && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT)))))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_UDPLITE))))) && (NF_NAT && NF_CT_PROTO_UDPLITE))) => NF_NAT_PROTO_UDPLITE) && (NF_NAT_PROTO_UDPLITE => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_UDPLITE))))) && (NF_NAT && NF_CT_PROTO_UDPLITE))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_SCTP))))) && (NF_NAT && NF_CT_PROTO_SCTP))) => NF_NAT_PROTO_SCTP) && (NF_NAT_PROTO_SCTP => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_SCTP))))) && (NF_NAT && NF_CT_PROTO_SCTP))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_FTP))) => NF_NAT_FTP) && (NF_NAT_FTP => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_FTP))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_IRC))) => NF_NAT_IRC) && (NF_NAT_IRC => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_IRC))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_TFTP))) => NF_NAT_TFTP) && (NF_NAT_TFTP => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_TFTP))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_AMANDA))) => NF_NAT_AMANDA) && (NF_NAT_AMANDA => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_AMANDA))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_PPTP))) => NF_NAT_PPTP) && (NF_NAT_PPTP => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_PPTP))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_H323))) => NF_NAT_H323) && (NF_NAT_H323 => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_H323))))))
(false || (((true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_SIP))) => NF_NAT_SIP) && (NF_NAT_SIP => (true && ((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_CONNTRACK && NF_NAT))))) && (NF_NAT && NF_CONNTRACK_SIP))))))
((NET && (INET && (NETFILTER && IP_NF_IPTABLES))) || (((true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))) => IP_NF_MANGLE) && (IP_NF_MANGLE => (true && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && !NETFILTER_ADVANCED))))))))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_MANGLE && (EXPERIMENTAL && (NF_CONNTRACK_IPV4 && NETFILTER_ADVANCED))))))) || ((false => IP_NF_TARGET_CLUSTERIP) && (IP_NF_TARGET_CLUSTERIP => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_MANGLE && NETFILTER_ADVANCED))))) || ((false => IP_NF_TARGET_ECN) && (IP_NF_TARGET_ECN => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (IP_NF_MANGLE && NETFILTER_ADVANCED))))) || ((false => IP_NF_TARGET_TTL) && (IP_NF_TARGET_TTL => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && NETFILTER_ADVANCED)))) || ((false => IP_NF_RAW) && (IP_NF_RAW => false)))
((NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (SECURITY && NETFILTER_ADVANCED))))) || ((false => IP_NF_SECURITY) && (IP_NF_SECURITY => false)))
((NET && (INET && (NETFILTER && NETFILTER_ADVANCED))) || ((false => IP_NF_ARPTABLES) && (IP_NF_ARPTABLES => false)))
((NET && (INET && (NETFILTER && IP_NF_ARPTABLES))) || ((false => IP_NF_ARPFILTER) && (IP_NF_ARPFILTER => false)))
((NET && (INET && (NETFILTER && IP_NF_ARPTABLES))) || ((false => IP_NF_ARP_MANGLE) && (IP_NF_ARP_MANGLE => false)))
((NET && (NETFILTER && (INET && (IPV6 && NF_CONNTRACK)))) || (((true && (NET && (NETFILTER && (INET && (IPV6 && (NF_CONNTRACK && !NETFILTER_ADVANCED)))))) => NF_CONNTRACK_IPV6) && (NF_CONNTRACK_IPV6 => (true && (NET && (NETFILTER && (INET && (IPV6 && (NF_CONNTRACK && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (IPV6 && (NETFILTER && NETFILTER_ADVANCED)))) || ((false => IP6_NF_QUEUE) && (IP6_NF_QUEUE => false)))
((NET && (NETFILTER && (INET && IPV6))) || (((true && (NET && (NETFILTER && (INET && (IPV6 && !NETFILTER_ADVANCED))))) => IP6_NF_IPTABLES) && (IP6_NF_IPTABLES => (true && (NET && (NETFILTER && (INET && (IPV6 && !NETFILTER_ADVANCED))))))))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_AH) && (IP6_NF_MATCH_AH => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_EUI64) && (IP6_NF_MATCH_EUI64 => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_FRAG) && (IP6_NF_MATCH_FRAG => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_OPTS) && (IP6_NF_MATCH_OPTS => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_HL) && (IP6_NF_MATCH_HL => false)))
((NET && (INET && (IPV6 && (NETFILTER && IP6_NF_IPTABLES)))) || (((true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))) => IP6_NF_MATCH_IPV6HEADER) && (IP6_NF_MATCH_IPV6HEADER => (true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_MH) && (IP6_NF_MATCH_MH => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_MATCH_RT) && (IP6_NF_MATCH_RT => false)))
((NET && (INET && (IPV6 && (NETFILTER && IP6_NF_IPTABLES)))) || (((true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))) => IP6_NF_TARGET_LOG) && (IP6_NF_TARGET_LOG => (true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (IPV6 && (NETFILTER && IP6_NF_IPTABLES)))) || (((true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))) => IP6_NF_FILTER) && (IP6_NF_FILTER => (true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && IP6_NF_FILTER))))) || (((true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && (IP6_NF_FILTER && !NETFILTER_ADVANCED))))))) => IP6_NF_TARGET_REJECT) && (IP6_NF_TARGET_REJECT => (true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && (IP6_NF_FILTER && !NETFILTER_ADVANCED))))))))))
((NET && (INET && (IPV6 && (NETFILTER && IP6_NF_IPTABLES)))) || (((true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))) => IP6_NF_MANGLE) && (IP6_NF_MANGLE => (true && (NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && !NETFILTER_ADVANCED)))))))))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && (IP6_NF_MANGLE && NETFILTER_ADVANCED)))))) || ((false => IP6_NF_TARGET_HL) && (IP6_NF_TARGET_HL => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && NETFILTER_ADVANCED))))) || ((false => IP6_NF_RAW) && (IP6_NF_RAW => false)))
((NET && (INET && (IPV6 && (NETFILTER && (IP6_NF_IPTABLES && (SECURITY && NETFILTER_ADVANCED)))))) || ((false => IP6_NF_SECURITY) && (IP6_NF_SECURITY => false)))
((NET && (DECNET && (NETFILTER && (EXPERIMENTAL && NETFILTER_ADVANCED)))) || ((false => DECNET_NF_GRABULATOR) && (DECNET_NF_GRABULATOR => false)))
((NET && (NETFILTER && (BRIDGE && BRIDGE_NETFILTER))) || ((false => BRIDGE_NF_EBTABLES) && (BRIDGE_NF_EBTABLES => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_BROUTE) && (BRIDGE_EBT_BROUTE => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_T_FILTER) && (BRIDGE_EBT_T_FILTER => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_T_NAT) && (BRIDGE_EBT_T_NAT => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_8false2_3) && (BRIDGE_EBT_8false2_3 => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_AMONG) && (BRIDGE_EBT_AMONG => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_ARP) && (BRIDGE_EBT_ARP => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_IP) && (BRIDGE_EBT_IP => false)))
((NET && (NETFILTER && (BRIDGE_NF_EBTABLES && IPV6))) || ((false => BRIDGE_EBT_IP6) && (BRIDGE_EBT_IP6 => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_LIMIT) && (BRIDGE_EBT_LIMIT => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_MARK) && (BRIDGE_EBT_MARK => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_PKTTYPE) && (BRIDGE_EBT_PKTTYPE => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_STP) && (BRIDGE_EBT_STP => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_VLAN) && (BRIDGE_EBT_VLAN => false)))
((NET && (NETFILTER && (BRIDGE_NF_EBTABLES && INET))) || ((false => BRIDGE_EBT_ARPREPLY) && (BRIDGE_EBT_ARPREPLY => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_DNAT) && (BRIDGE_EBT_DNAT => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_MARK_T) && (BRIDGE_EBT_MARK_T => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_REDIRECT) && (BRIDGE_EBT_REDIRECT => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_SNAT) && (BRIDGE_EBT_SNAT => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_LOG) && (BRIDGE_EBT_LOG => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_ULOG) && (BRIDGE_EBT_ULOG => false)))
((NET && (NETFILTER && BRIDGE_NF_EBTABLES)) || ((false => BRIDGE_EBT_NFLOG) && (BRIDGE_EBT_NFLOG => false)))
((NET && (INET && EXPERIMENTAL)) || ((false => IP_DCCP) && (IP_DCCP => false)))
(false || ((((true && (NET && (IP_DCCP && INET_DIAG))) || ((true && !(NET && (IP_DCCP && INET_DIAG))) && (NET && (IP_DCCP && INET_DIAG)))) => INET_DCCP_DIAG) && (INET_DCCP_DIAG => ((true && (NET && (IP_DCCP && INET_DIAG))) || ((true && !(NET && (IP_DCCP && INET_DIAG))) && (NET && (IP_DCCP && INET_DIAG)))))))
(false || (((IP_DCCP_CCID2 && (NET && (IP_DCCP && EXPERIMENTAL))) => IP_DCCP_ACKVEC) && (IP_DCCP_ACKVEC => (IP_DCCP_CCID2 && (NET && (IP_DCCP && EXPERIMENTAL))))))
((NET && (IP_DCCP && EXPERIMENTAL)) || ((((IP_DCCP && (NET && (INET && EXPERIMENTAL))) || (true && ((NET && (IP_DCCP && EXPERIMENTAL)) && IP_DCCP))) => IP_DCCP_CCID2) && (IP_DCCP_CCID2 => ((IP_DCCP && (NET && (INET && EXPERIMENTAL))) || (true && ((NET && (IP_DCCP && EXPERIMENTAL)) && IP_DCCP))))))
((NET && (IP_DCCP && (EXPERIMENTAL && IP_DCCP_CCID2))) || ((false => IP_DCCP_CCID2_DEBUG) && (IP_DCCP_CCID2_DEBUG => false)))
((NET && (IP_DCCP && EXPERIMENTAL)) || (((true && ((NET && (IP_DCCP && EXPERIMENTAL)) && IP_DCCP)) => IP_DCCP_CCID3) && (IP_DCCP_CCID3 => (true && ((NET && (IP_DCCP && EXPERIMENTAL)) && IP_DCCP)))))
((NET && (IP_DCCP && (EXPERIMENTAL && IP_DCCP_CCID3))) || ((false => IP_DCCP_CCID3_DEBUG) && (IP_DCCP_CCID3_DEBUG => false)))
((NET && (IP_DCCP && (IP_DCCP_CCID3 && EXPERIMENTAL))) || (((true && (NET && (IP_DCCP && (IP_DCCP_CCID3 && EXPERIMENTAL)))) => IP_DCCP_CCID3_RTO) && (IP_DCCP_CCID3_RTO => (true && (NET && (IP_DCCP && (IP_DCCP_CCID3 && EXPERIMENTAL)))))))
(false || (((IP_DCCP_CCID3 && (NET && (IP_DCCP && EXPERIMENTAL))) => IP_DCCP_TFRC_LIB) && (IP_DCCP_TFRC_LIB => (IP_DCCP_CCID3 && (NET && (IP_DCCP && EXPERIMENTAL))))))
(false || (((true && (NET && (IP_DCCP && (EXPERIMENTAL && (IP_DCCP_TFRC_LIB && IP_DCCP_CCID3_DEBUG))))) => IP_DCCP_TFRC_DEBUG) && (IP_DCCP_TFRC_DEBUG => (true && (NET && (IP_DCCP && (EXPERIMENTAL && (IP_DCCP_TFRC_LIB && IP_DCCP_CCID3_DEBUG))))))))
((NET && (IP_DCCP && DEBUG_KERNEL)) || ((false => IP_DCCP_DEBUG) && (IP_DCCP_DEBUG => false)))
((NET && (IP_DCCP && (DEBUG_KERNEL && (PROC_FS && KPROBES)))) || ((false => NET_DCCPPROBE) && (NET_DCCPPROBE => false)))
((NET && (INET && (EXPERIMENTAL && (IPV6 || !IPV6)))) || ((((DLM && (EXPERIMENTAL && (INET && (SYSFS && (IPV6 || !IPV6))))) || (GFS2_FS_LOCKING_DLM && (BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && ((IPV6 || !IPV6) && DLM_SCTP)))))))) => IP_SCTP) && (IP_SCTP => ((DLM && (EXPERIMENTAL && (INET && (SYSFS && (IPV6 || !IPV6))))) || (GFS2_FS_LOCKING_DLM && (BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && ((IPV6 || !IPV6) && DLM_SCTP)))))))))))
((NET && IP_SCTP) || ((false => SCTP_DBG_MSG) && (SCTP_DBG_MSG => false)))
((NET && (IP_SCTP && PROC_FS)) || ((false => SCTP_DBG_OBJCNT) && (SCTP_DBG_OBJCNT => false)))
(true || ((false => SCTP_HMAC_NONE) && (SCTP_HMAC_NONE => false)))
(true || ((false => SCTP_HMAC_SHAtrue) && (SCTP_HMAC_SHAtrue => false)))
(true || ((false => SCTP_HMAC_MD5) && (SCTP_HMAC_MD5 => false)))
((NET && (INET && EXPERIMENTAL)) || ((false => TIPC) && (TIPC => false)))
((NET && TIPC) || ((false => TIPC_ADVANCED) && (TIPC_ADVANCED => false)))
((NET && (TIPC && TIPC_ADVANCED)) || (((true && (NET && (TIPC && TIPC_ADVANCED))) => TIPC_ZONES) && (TIPC_ZONES => (true && (NET && (TIPC && TIPC_ADVANCED))))))
((NET && (TIPC && TIPC_ADVANCED)) || (((true && (NET && (TIPC && TIPC_ADVANCED))) => TIPC_CLUSTERS) && (TIPC_CLUSTERS => (true && (NET && (TIPC && TIPC_ADVANCED))))))
((NET && (TIPC && TIPC_ADVANCED)) || (((true && (NET && (TIPC && TIPC_ADVANCED))) => TIPC_NODES) && (TIPC_NODES => (true && (NET && (TIPC && TIPC_ADVANCED))))))
((NET && (TIPC && TIPC_ADVANCED)) || (((true && (NET && (TIPC && TIPC_ADVANCED))) => TIPC_SLAVE_NODES) && (TIPC_SLAVE_NODES => (true && (NET && (TIPC && TIPC_ADVANCED))))))
((NET && (TIPC && TIPC_ADVANCED)) || (((true && (NET && (TIPC && TIPC_ADVANCED))) => TIPC_PORTS) && (TIPC_PORTS => (true && (NET && (TIPC && TIPC_ADVANCED))))))
((NET && (TIPC && TIPC_ADVANCED)) || (((true && (NET && (TIPC && TIPC_ADVANCED))) => TIPC_LOG) && (TIPC_LOG => (true && (NET && (TIPC && TIPC_ADVANCED))))))
((NET && TIPC) || ((false => TIPC_DEBUG) && (TIPC_DEBUG => false)))
(NET || ((false => ATM) && (ATM => false)))
((NET && (ATM && INET)) || ((false => ATM_CLIP) && (ATM_CLIP => false)))
((NET && ATM_CLIP) || ((false => ATM_CLIP_NO_ICMP) && (ATM_CLIP_NO_ICMP => false)))
((NET && ATM) || ((false => ATM_LANE) && (ATM_LANE => false)))
((NET && (ATM && (INET && !ATM_LANE))) || ((false => ATM_MPOA) && (ATM_MPOA => false)))
((NET && (ATM && INET)) || ((false => ATM_BR2684) && (ATM_BR2684 => false)))
((NET && ATM_BR2684) || ((false => ATM_BR2684_IPFILTER) && (ATM_BR2684_IPFILTER => false)))
(false || ((((GARP && NET) || (BRIDGE && NET)) => STP) && (STP => ((GARP && NET) || (BRIDGE && NET)))))
(false || (((VLAN_8false2trueQ_GVRP && (NET && VLAN_8false2trueQ)) => GARP) && (GARP => (VLAN_8false2trueQ_GVRP && (NET && VLAN_8false2trueQ)))))
(NET || ((false => BRIDGE) && (BRIDGE => false)))
((NET && (EXPERIMENTAL && !S39false)) || ((false => NET_DSA) && (NET_DSA => false)))
(false || (((NET_DSA_MV88E6true3true && (NET && NET_DSA)) => NET_DSA_TAG_DSA) && (NET_DSA_TAG_DSA => (NET_DSA_MV88E6true3true && (NET && NET_DSA)))))
(false || (((NET_DSA_MV88E6true23_6true_65 && (NET && NET_DSA)) => NET_DSA_TAG_EDSA) && (NET_DSA_TAG_EDSA => (NET_DSA_MV88E6true23_6true_65 && (NET && NET_DSA)))))
(false || (((NET_DSA_MV88E6false6false && (NET && NET_DSA)) => NET_DSA_TAG_TRAILER) && (NET_DSA_TAG_TRAILER => (NET_DSA_MV88E6false6false && (NET && NET_DSA)))))
(false || ((((NET_DSA_MV88E6true23_6true_65 && (NET && NET_DSA)) || (NET_DSA_MV88E6true3true && (NET && NET_DSA))) => NET_DSA_MV88E6XXX) && (NET_DSA_MV88E6XXX => ((NET_DSA_MV88E6true23_6true_65 && (NET && NET_DSA)) || (NET_DSA_MV88E6true3true && (NET && NET_DSA))))))
((NET && NET_DSA) || ((false => NET_DSA_MV88E6false6false) && (NET_DSA_MV88E6false6false => false)))
(false || (((NET_DSA_MV88E6true3true && (NET && NET_DSA)) => NET_DSA_MV88E6XXX_NEED_PPU) && (NET_DSA_MV88E6XXX_NEED_PPU => (NET_DSA_MV88E6true3true && (NET && NET_DSA)))))
((NET && NET_DSA) || ((false => NET_DSA_MV88E6true3true) && (NET_DSA_MV88E6true3true => false)))
((NET && NET_DSA) || ((false => NET_DSA_MV88E6true23_6true_65) && (NET_DSA_MV88E6true23_6true_65 => false)))
(NET || ((false => VLAN_8false2trueQ) && (VLAN_8false2trueQ => false)))
((NET && VLAN_8false2trueQ) || ((false => VLAN_8false2trueQ_GVRP) && (VLAN_8false2trueQ_GVRP => false)))
(NET || ((false => DECNET) && (DECNET => false)))
((NET && (DECNET && EXPERIMENTAL)) || ((false => DECNET_ROUTER) && (DECNET_ROUTER => false)))
(false || (((((((x82 || x83) || x84) || x85) || x86) || x87) => LLC) && (LLC => (((((x82 || x83) || x84) || x85) || x86) || x87))))
(x82 <=> (IPX && NET))
(x83 <=> (ATALK && NET))
(x84 <=> (TR && (NETDEVICES && (!UML && (PCI || (ISA || (MCA || CCW)))))))
(x85 <=> (STP && NET))
(x86 <=> (LLC2 && NET))
(x87 <=> (BRIDGE && NET))
(NET || ((false => LLC2) && (LLC2 => false)))
(NET || ((false => IPX) && (IPX => false)))
((NET && IPX) || ((false => IPX_INTERN) && (IPX_INTERN => false)))
(NET || ((false => ATALK) && (ATALK => false)))
((NET && ATALK) || ((false => DEV_APPLETALK) && (DEV_APPLETALK => false)))
((NET && (DEV_APPLETALK && ((ISA || EISA) && ISA_DMA_API))) || ((false => LTPC) && (LTPC => false)))
((NET && (DEV_APPLETALK && (ISA || EISA))) || ((false => COPS) && (COPS => false)))
((NET && COPS) || ((false => COPS_DAYNA) && (COPS_DAYNA => false)))
((NET && COPS) || ((false => COPS_TANGENT) && (COPS_TANGENT => false)))
((NET && (DEV_APPLETALK && ATALK)) || ((false => IPDDP) && (IPDDP => false)))
((NET && IPDDP) || ((false => IPDDP_ENCAP) && (IPDDP_ENCAP => false)))
((NET && IPDDP) || ((false => IPDDP_DECAP) && (IPDDP_DECAP => false)))
((NET && EXPERIMENTAL) || ((false => X25) && (X25 => false)))
((NET && EXPERIMENTAL) || ((false => LAPB) && (LAPB => false)))
((NET && (EXPERIMENTAL && INET)) || ((false => ECONET) && (ECONET => false)))
((NET && ECONET) || ((false => ECONET_AUNUDP) && (ECONET_AUNUDP => false)))
((NET && ECONET) || ((false => ECONET_NATIVE) && (ECONET_NATIVE => false)))
((NET && EXPERIMENTAL) || ((false => WAN_ROUTER) && (WAN_ROUTER => false)))
(NET || ((false => NET_SCHED) && (NET_SCHED => false)))
((NET && NET_SCHED) || ((false => NET_SCH_CBQ) && (NET_SCH_CBQ => false)))
((NET && NET_SCHED) || ((false => NET_SCH_HTB) && (NET_SCH_HTB => false)))
((NET && NET_SCHED) || ((false => NET_SCH_HFSC) && (NET_SCH_HFSC => false)))
((NET && (NET_SCHED && ATM)) || ((false => NET_SCH_ATM) && (NET_SCH_ATM => false)))
((NET && NET_SCHED) || ((false => NET_SCH_PRIO) && (NET_SCH_PRIO => false)))
((NET && NET_SCHED) || ((false => NET_SCH_MULTIQ) && (NET_SCH_MULTIQ => false)))
((NET && NET_SCHED) || ((false => NET_SCH_RED) && (NET_SCH_RED => false)))
((NET && NET_SCHED) || ((false => NET_SCH_SFQ) && (NET_SCH_SFQ => false)))
((NET && NET_SCHED) || ((false => NET_SCH_TEQL) && (NET_SCH_TEQL => false)))
((NET && NET_SCHED) || ((false => NET_SCH_TBF) && (NET_SCH_TBF => false)))
((NET && NET_SCHED) || ((false => NET_SCH_GRED) && (NET_SCH_GRED => false)))
((NET && NET_SCHED) || ((false => NET_SCH_DSMARK) && (NET_SCH_DSMARK => false)))
((NET && NET_SCHED) || ((false => NET_SCH_NETEM) && (NET_SCH_NETEM => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_SCH_INGRESS) && (NET_SCH_INGRESS => false)))
(false || ((((((((((x88 || x89) || x9false) || x9true) || x92) || x93) || x94) || x95) || x96) => NET_CLS) && (NET_CLS => ((((((((x88 || x89) || x9false) || x9true) || x92) || x93) || x94) || x95) || x96))))
(x88 <=> (NET_CLS_BASIC && (NET && NET_SCHED)))
(x89 <=> (NET_CLS_ROUTE4 && (NET && NET_SCHED)))
(x9false <=> (NET_CLS_RSVP6 && (NET && NET_SCHED)))
(x9true <=> (NET_CLS_FW && (NET && NET_SCHED)))
(x92 <=> (NET_EMATCH && (NET && NET_SCHED)))
(x93 <=> (NET_CLS_U32 && (NET && NET_SCHED)))
(x94 <=> (NET_CLS_TCINDEX && (NET && NET_SCHED)))
(x95 <=> (NET_CLS_FLOW && (NET && NET_SCHED)))
(x96 <=> (NET_CLS_RSVP && (NET && NET_SCHED)))
((NET && NET_SCHED) || ((false => NET_CLS_BASIC) && (NET_CLS_BASIC => false)))
((NET && NET_SCHED) || ((false => NET_CLS_TCINDEX) && (NET_CLS_TCINDEX => false)))
((NET && NET_SCHED) || ((false => NET_CLS_ROUTE4) && (NET_CLS_ROUTE4 => false)))
(false || ((((NETFILTER_XT_MATCH_REALM && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NET_CLS_ROUTE4 && (NET && NET_SCHED))) => NET_CLS_ROUTE) && (NET_CLS_ROUTE => ((NETFILTER_XT_MATCH_REALM && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NET_CLS_ROUTE4 && (NET && NET_SCHED))))))
((NET && NET_SCHED) || ((false => NET_CLS_FW) && (NET_CLS_FW => false)))
((NET && NET_SCHED) || ((false => NET_CLS_U32) && (NET_CLS_U32 => false)))
((NET && (NET_SCHED && NET_CLS_U32)) || ((false => CLS_U32_PERF) && (CLS_U32_PERF => false)))
((NET && (NET_SCHED && NET_CLS_U32)) || ((false => CLS_U32_MARK) && (CLS_U32_MARK => false)))
((NET && NET_SCHED) || ((false => NET_CLS_RSVP) && (NET_CLS_RSVP => false)))
((NET && NET_SCHED) || ((false => NET_CLS_RSVP6) && (NET_CLS_RSVP6 => false)))
((NET && NET_SCHED) || ((false => NET_CLS_FLOW) && (NET_CLS_FLOW => false)))
((NET && NET_SCHED) || ((false => NET_EMATCH) && (NET_EMATCH => false)))
((NET && (NET_SCHED && NET_EMATCH)) || (((true && (NET && (NET_SCHED && NET_EMATCH))) => NET_EMATCH_STACK) && (NET_EMATCH_STACK => (true && (NET && (NET_SCHED && NET_EMATCH))))))
((NET && (NET_SCHED && NET_EMATCH)) || ((false => NET_EMATCH_CMP) && (NET_EMATCH_CMP => false)))
((NET && (NET_SCHED && NET_EMATCH)) || ((false => NET_EMATCH_NBYTE) && (NET_EMATCH_NBYTE => false)))
((NET && (NET_SCHED && NET_EMATCH)) || ((false => NET_EMATCH_U32) && (NET_EMATCH_U32 => false)))
((NET && (NET_SCHED && NET_EMATCH)) || ((false => NET_EMATCH_META) && (NET_EMATCH_META => false)))
((NET && (NET_SCHED && NET_EMATCH)) || ((false => NET_EMATCH_TEXT) && (NET_EMATCH_TEXT => false)))
((NET && NET_SCHED) || ((false => NET_CLS_ACT) && (NET_CLS_ACT => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_POLICE) && (NET_ACT_POLICE => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_GACT) && (NET_ACT_GACT => false)))
((NET && (NET_SCHED && NET_ACT_GACT)) || ((false => GACT_PROB) && (GACT_PROB => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_MIRRED) && (NET_ACT_MIRRED => false)))
((NET && (NET_SCHED && (NET_CLS_ACT && (NETFILTER && IP_NF_IPTABLES)))) || ((false => NET_ACT_IPT) && (NET_ACT_IPT => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_NAT) && (NET_ACT_NAT => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_PEDIT) && (NET_ACT_PEDIT => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_SIMP) && (NET_ACT_SIMP => false)))
((NET && (NET_SCHED && NET_CLS_ACT)) || ((false => NET_ACT_SKBEDIT) && (NET_ACT_SKBEDIT => false)))
((NET && (NET_SCHED && (NET_CLS_U32 || NET_CLS_FW))) || ((false => NET_CLS_IND) && (NET_CLS_IND => false)))
(false || (((NET_SCHED && NET) => NET_SCH_FIFO) && (NET_SCH_FIFO => (NET_SCHED && NET))))
((NET && PROC_FS) || ((false => NET_PKTGEN) && (NET_PKTGEN => false)))
((NET && (INET && (EXPERIMENTAL && (PROC_FS && KPROBES)))) || ((false => NET_TCPPROBE) && (NET_TCPPROBE => false)))
((NET && !S39false) || ((false => HAMRADIO) && (HAMRADIO => false)))
((NET && HAMRADIO) || ((false => AX25) && (AX25 => false)))
((NET && AX25) || (((true && (NET && AX25)) => AX25_DAMA_SLAVE) && (AX25_DAMA_SLAVE => (true && (NET && AX25)))))
((NET && (AX25_DAMA_SLAVE && BROKEN)) || ((false => AX25_DAMA_MASTER) && (AX25_DAMA_MASTER => false)))
((NET && AX25) || ((false => NETROM) && (NETROM => false)))
((NET && AX25) || ((false => ROSE) && (ROSE => false)))
((NET && (HAMRADIO && AX25)) || ((false => MKISS) && (MKISS => false)))
((NET && (HAMRADIO && AX25)) || ((false => a6PACK) && (a6PACK => false)))
((NET && (HAMRADIO && AX25)) || ((false => BPQETHER) && (BPQETHER => false)))
((NET && (HAMRADIO && (ISA && (AX25 && (BROKEN_ON_SMP && ISA_DMA_API))))) || ((false => DMASCC) && (DMASCC => false)))
((NET && (HAMRADIO && (ISA && (AX25 && ISA_DMA_API)))) || ((false => SCC) && (SCC => false)))
((NET && (HAMRADIO && (AX25 && SCC))) || ((false => SCC_DELAY) && (SCC_DELAY => false)))
((NET && (HAMRADIO && (AX25 && SCC))) || ((false => SCC_TRXECHO) && (SCC_TRXECHO => false)))
((NET && (HAMRADIO && (AX25 && !S39false))) || ((false => BAYCOM_SER_FDX) && (BAYCOM_SER_FDX => false)))
((NET && (HAMRADIO && (AX25 && !S39false))) || ((false => BAYCOM_SER_HDX) && (BAYCOM_SER_HDX => false)))
((NET && (HAMRADIO && (PARPORT && AX25))) || ((false => BAYCOM_PAR) && (BAYCOM_PAR => false)))
((NET && (HAMRADIO && (PARPORT && (AX25 && !a64BIT)))) || ((false => BAYCOM_EPP) && (BAYCOM_EPP => false)))
((NET && (HAMRADIO && (AX25 && !S39false))) || ((false => YAM) && (YAM => false)))
(NET || ((false => CAN) && (CAN => false)))
((NET && CAN) || ((false => CAN_RAW) && (CAN_RAW => false)))
((NET && CAN) || ((false => CAN_BCM) && (CAN_BCM => false)))
((NET && CAN) || ((false => CAN_VCAN) && (CAN_VCAN => false)))
((NET && CAN) || ((false => CAN_DEBUG_DEVICES) && (CAN_DEBUG_DEVICES => false)))
((NET && !S39false) || ((false => IRDA) && (IRDA => false)))
((NET && IRDA) || ((false => IRLAN) && (IRLAN => false)))
((NET && (IRDA && PPP)) || ((false => IRNET) && (IRNET => false)))
((NET && IRDA) || ((false => IRCOMM) && (IRCOMM => false)))
((NET && IRDA) || ((false => IRDA_ULTRA) && (IRDA_ULTRA => false)))
((NET && IRDA) || ((false => IRDA_CACHE_LAST_LSAP) && (IRDA_CACHE_LAST_LSAP => false)))
((NET && IRDA) || ((false => IRDA_FAST_RR) && (IRDA_FAST_RR => false)))
((NET && IRDA) || ((false => IRDA_DEBUG) && (IRDA_DEBUG => false)))
((NET && IRDA) || ((false => IRTTY_SIR) && (IRTTY_SIR => false)))
((NET && (IRDA && IRTTY_SIR)) || ((false => DONGLE) && (DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && IRDA))) || ((false => ESI_DONGLE) && (ESI_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && IRDA))) || ((false => ACTISYS_DONGLE) && (ACTISYS_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && IRDA))) || ((false => TEKRAM_DONGLE) && (TEKRAM_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && IRDA))) || ((false => TOIM3232_DONGLE) && (TOIM3232_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && IRDA))) || ((false => LITELINK_DONGLE) && (LITELINK_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && (IRDA && EXPERIMENTAL)))) || ((false => MA6falsefalse_DONGLE) && (MA6falsefalse_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && (IRDA && EXPERIMENTAL)))) || ((false => GIRBIL_DONGLE) && (GIRBIL_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && (IRDA && EXPERIMENTAL)))) || ((false => MCP2true2false_DONGLE) && (MCP2true2false_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && (IRDA && EXPERIMENTAL)))) || ((false => OLD_BELKIN_DONGLE) && (OLD_BELKIN_DONGLE => false)))
((NET && (IRTTY_SIR && (DONGLE && (IRDA && EXPERIMENTAL)))) || ((false => ACT2falsefalseL_DONGLE) && (ACT2falsefalseL_DONGLE => false)))
((NET && (IRDA && (USB && EXPERIMENTAL))) || ((false => KINGSUN_DONGLE) && (KINGSUN_DONGLE => false)))
((NET && (IRTTY_SIR && (ARCH_EP72truetrue && (IRDA && EXPERIMENTAL)))) || ((false => EP72truetrue_DONGLE) && (EP72truetrue_DONGLE => false)))
((NET && (IRDA && (USB && EXPERIMENTAL))) || ((false => KSDAZZLE_DONGLE) && (KSDAZZLE_DONGLE => false)))
((NET && (IRDA && (USB && EXPERIMENTAL))) || ((false => KS959_DONGLE) && (KS959_DONGLE => false)))
((NET && (IRDA && USB)) || ((false => USB_IRDA) && (USB_IRDA => false)))
((NET && (IRDA && (USB && EXPERIMENTAL))) || ((false => SIGMATEL_FIR) && (SIGMATEL_FIR => false)))
((NET && (IRDA && ISA_DMA_API)) || ((false => NSC_FIR) && (NSC_FIR => false)))
((NET && (IRDA && ISA_DMA_API)) || ((false => WINBOND_FIR) && (WINBOND_FIR => false)))
((NET && (IRDA && (PCI && (!a64BIT && VIRT_TO_BUS)))) || ((false => TOSHIBA_FIR) && (TOSHIBA_FIR => false)))
((NET && (SOC_AUtruefalsefalsefalse && IRDA)) || ((false => AUtruefalsefalsefalse_FIR) && (AUtruefalsefalsefalse_FIR => false)))
((NET && (EXPERIMENTAL && (IRDA && ISA_DMA_API))) || ((false => SMC_IRCC_FIR) && (SMC_IRCC_FIR => false)))
((NET && (EXPERIMENTAL && (IRDA && ISA_DMA_API))) || ((false => ALI_FIR) && (ALI_FIR => false)))
((NET && (EXPERIMENTAL && (IRDA && PCI))) || ((false => VLSI_FIR) && (VLSI_FIR => false)))
((NET && (ARCH_SAtruetruefalsefalse && IRDA)) || ((false => SAtruetruefalsefalse_FIR) && (SAtruetruefalsefalse_FIR => false)))
((NET && (IRDA && ISA_DMA_API)) || ((false => VIA_FIR) && (VIA_FIR => false)))
((NET && (ARCH_PXA && IRDA)) || ((false => PXA_FICP) && (PXA_FICP => false)))
((NET && (IRDA && (USB && EXPERIMENTAL))) || ((false => MCS_FIR) && (MCS_FIR => false)))
((NET && !S39false) || ((false => BT) && (BT => false)))
((NET && BT) || ((false => BT_L2CAP) && (BT_L2CAP => false)))
((NET && BT) || ((false => BT_SCO) && (BT_SCO => false)))
((NET && (BT && BT_L2CAP)) || ((false => BT_RFCOMM) && (BT_RFCOMM => false)))
((NET && BT_RFCOMM) || ((false => BT_RFCOMM_TTY) && (BT_RFCOMM_TTY => false)))
((NET && (BT && BT_L2CAP)) || ((false => BT_BNEP) && (BT_BNEP => false)))
((NET && BT_BNEP) || ((false => BT_BNEP_MC_FILTER) && (BT_BNEP_MC_FILTER => false)))
((NET && BT_BNEP) || ((false => BT_BNEP_PROTO_FILTER) && (BT_BNEP_PROTO_FILTER => false)))
((NET && (BT && (BT_L2CAP && ISDN_CAPI))) || ((false => BT_CMTP) && (BT_CMTP => false)))
((NET && (BT && (BT_L2CAP && INPUT))) || ((false => BT_HIDP) && (BT_HIDP => false)))
((NET && (BT && (USB && !BT_HCIBTUSB))) || ((false => BT_HCIUSB) && (BT_HCIUSB => false)))
((NET && (BT && BT_HCIUSB)) || ((false => BT_HCIUSB_SCO) && (BT_HCIUSB_SCO => false)))
((NET && (BT && USB)) || ((false => BT_HCIBTUSB) && (BT_HCIBTUSB => false)))
((NET && (BT && MMC)) || ((false => BT_HCIBTSDIO) && (BT_HCIBTSDIO => false)))
((NET && BT) || ((false => BT_HCIUART) && (BT_HCIUART => false)))
((NET && (BT && BT_HCIUART)) || ((false => BT_HCIUART_H4) && (BT_HCIUART_H4 => false)))
((NET && (BT && BT_HCIUART)) || ((false => BT_HCIUART_BCSP) && (BT_HCIUART_BCSP => false)))
((NET && (BT && BT_HCIUART)) || ((false => BT_HCIUART_LL) && (BT_HCIUART_LL => false)))
((NET && (BT && USB)) || ((false => BT_HCIBCM2false3X) && (BT_HCIBCM2false3X => false)))
((NET && (BT && USB)) || ((false => BT_HCIBPAtruefalseX) && (BT_HCIBPAtruefalseX => false)))
((NET && (BT && USB)) || ((false => BT_HCIBFUSB) && (BT_HCIBFUSB => false)))
((NET && (BT && PCMCIA)) || ((false => BT_HCIDTLtrue) && (BT_HCIDTLtrue => false)))
((NET && (BT && PCMCIA)) || ((false => BT_HCIBT3C) && (BT_HCIBT3C => false)))
((NET && (BT && PCMCIA)) || ((false => BT_HCIBLUECARD) && (BT_HCIBLUECARD => false)))
((NET && (BT && PCMCIA)) || ((false => BT_HCIBTUART) && (BT_HCIBTUART => false)))
((NET && BT) || ((false => BT_HCIVHCI) && (BT_HCIVHCI => false)))
((NET && (INET && EXPERIMENTAL)) || (((AFS_FS && (NETWORK_FILESYSTEMS && (INET && EXPERIMENTAL))) => AF_RXRPC) && (AF_RXRPC => (AFS_FS && (NETWORK_FILESYSTEMS && (INET && EXPERIMENTAL))))))
((NET && AF_RXRPC) || ((false => AF_RXRPC_DEBUG) && (AF_RXRPC_DEBUG => false)))
((NET && AF_RXRPC) || ((false => RXKAD) && (RXKAD => false)))
(NET || ((false => PHONET) && (PHONET => false)))
(false || (((((IPV6_MULTIPLE_TABLES && (NET && (INET && (IPV6 && EXPERIMENTAL)))) || (DECNET_ROUTER && (NET && (DECNET && EXPERIMENTAL)))) || (IP_MULTIPLE_TABLES && (NET && (INET && IP_ADVANCED_ROUTER)))) => FIB_RULES) && (FIB_RULES => (((IPV6_MULTIPLE_TABLES && (NET && (INET && (IPV6 && EXPERIMENTAL)))) || (DECNET_ROUTER && (NET && (DECNET && EXPERIMENTAL)))) || (IP_MULTIPLE_TABLES && (NET && (INET && IP_ADVANCED_ROUTER)))))))
((NET && !S39false) || (((true && (NET && !S39false)) => WIRELESS) && (WIRELESS => (true && (NET && !S39false)))))
((NET && WIRELESS) || (((MAC8false2truetrue && (NET && WIRELESS)) => CFG8false2truetrue) && (CFG8false2truetrue => (MAC8false2truetrue && (NET && WIRELESS)))))
((NET && (WIRELESS && CFG8false2truetrue)) || (((true && (NET && (WIRELESS && CFG8false2truetrue))) => NL8false2truetrue) && (NL8false2truetrue => (true && (NET && (WIRELESS && CFG8false2truetrue))))))
((NET && WIRELESS) || (((true && (NET && WIRELESS)) => WIRELESS_OLD_REGULATORY) && (WIRELESS_OLD_REGULATORY => (true && (NET && WIRELESS)))))
((NET && WIRELESS) || (((((((((((((((((((((((x97 || x98) || x99) || xtruefalsefalse) || xtruefalsetrue) || xtruefalse2) || xtruefalse3) || xtruefalse4) || xtruefalse5) || xtruefalse6) || xtruefalse7) || xtruefalse8) || xtruefalse9) || xtruetruefalse) || xtruetruetrue) || xtruetrue2) || xtruetrue3) || xtruetrue4) || xtruetrue5) || xtruetrue6) || xtruetrue7) || xtruetrue8) => WIRELESS_EXT) && (WIRELESS_EXT => (((((((((((((((((((((x97 || x98) || x99) || xtruefalsefalse) || xtruefalsetrue) || xtruefalse2) || xtruefalse3) || xtruefalse4) || xtruefalse5) || xtruefalse6) || xtruefalse7) || xtruefalse8) || xtruefalse9) || xtruetruefalse) || xtruetruetrue) || xtruetrue2) || xtruetrue3) || xtruetrue4) || xtruetrue5) || xtruetrue6) || xtruetrue7) || xtruetrue8))))
(x97 <=> (WAVELAN && (NETDEVICES && (!S39false && (ISA && WLAN_PRE8false2truetrue)))))
(x98 <=> (IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))))
(x99 <=> (IPW22falsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue)))))
(xtruefalsefalse <=> (HERMES && (NETDEVICES && (!S39false && ((PPC_PMAC || (PCI || PCMCIA)) && WLAN_8false2truetrue)))))
(xtruefalsetrue <=> (AIRO_CS && (NETDEVICES && (!S39false && (PCMCIA && ((BROKEN || !M32R) && WLAN_8false2truetrue))))))
(xtruefalse2 <=> (HOSTAP && (NETDEVICES && (!S39false && WLAN_8false2truetrue))))
(xtruefalse3 <=> (IPW2truefalsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue)))))
(xtruefalse4 <=> (PCMCIA_NETWAVE && (NETDEVICES && (!S39false && (PCMCIA && WLAN_PRE8false2truetrue)))))
(xtruefalse5 <=> (ATMEL && (NETDEVICES && (!S39false && ((PCI || PCMCIA) && WLAN_8false2truetrue)))))
(xtruefalse6 <=> (GELIC_WIRELESS && (NETDEVICES && (NETDEV_truefalsefalsefalse && GELIC_NET))))
(xtruefalse7 <=> (AIRO && (NETDEVICES && (!S39false && (ISA_DMA_API && (WLAN_8false2truetrue && (PCI || BROKEN)))))))
(xtruefalse8 <=> (LIBERTAS && (NETDEVICES && (!S39false && WLAN_8false2truetrue))))
(xtruefalse9 <=> (PCMCIA_ATMEL && (NETDEVICES && (!S39false && (ATMEL && PCMCIA)))))
(xtruetruefalse <=> (USB_ZDtrue2falsetrue && (NETDEVICES && (!S39false && (USB && WLAN_8false2truetrue)))))
(xtruetruetrue <=> (PRISM54 && (NETDEVICES && (!S39false && (PCI && (EXPERIMENTAL && WLAN_8false2truetrue))))))
(xtruetrue2 <=> (PCMCIA_WAVELAN && (NETDEVICES && (!S39false && (PCMCIA && WLAN_PRE8false2truetrue)))))
(xtruetrue3 <=> (MAC8false2truetrue && (NET && WIRELESS)))
(xtruetrue4 <=> (PCMCIA_RAYCS && (NETDEVICES && (!S39false && (PCMCIA && WLAN_8false2truetrue)))))
(xtruetrue5 <=> (USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))))
(xtruetrue6 <=> (PCMCIA_WL35falsetrue && (NETDEVICES && (!S39false && (EXPERIMENTAL && (PCMCIA && WLAN_8false2truetrue))))))
(xtruetrue7 <=> (STRIP && (NETDEVICES && (!S39false && (INET && WLAN_PRE8false2truetrue)))))
(xtruetrue8 <=> (ARLAN && (NETDEVICES && (!S39false && (ISA && (!a64BIT && WLAN_PRE8false2truetrue))))))
((NET && (WIRELESS && (WIRELESS_EXT && SYSFS))) || (((true && (NET && (WIRELESS && (WIRELESS_EXT && SYSFS)))) => WIRELESS_EXT_SYSFS) && (WIRELESS_EXT_SYSFS => (true && (NET && (WIRELESS && (WIRELESS_EXT && SYSFS)))))))
((NET && WIRELESS) || ((false => MAC8false2truetrue) && (MAC8false2truetrue => false)))
((NET && (WIRELESS && (MAC8false2truetrue && EMBEDDED))) || (((true && (NET && (WIRELESS && MAC8false2truetrue))) => MAC8false2truetrue_RC_PID) && (MAC8false2truetrue_RC_PID => (true && (NET && (WIRELESS && MAC8false2truetrue))))))
((NET && (WIRELESS && MAC8false2truetrue)) || ((false => MAC8false2truetrue_RC_MINSTREL) && (MAC8false2truetrue_RC_MINSTREL => false)))
((true && MAC8false2truetrue_RC_PID) || ((false => MAC8false2truetrue_RC_DEFAULT_PID) && (MAC8false2truetrue_RC_DEFAULT_PID => false)))
((true && MAC8false2truetrue_RC_MINSTREL) || ((false => MAC8false2truetrue_RC_DEFAULT_MINSTREL) && (MAC8false2truetrue_RC_DEFAULT_MINSTREL => false)))
(false || ((((true && (NET && (WIRELESS && (MAC8false2truetrue && MAC8false2truetrue_RC_DEFAULT_PID)))) || ((true && !(NET && (WIRELESS && (MAC8false2truetrue && MAC8false2truetrue_RC_DEFAULT_PID)))) && (NET && (WIRELESS && (MAC8false2truetrue && MAC8false2truetrue_RC_DEFAULT_MINSTREL))))) => MAC8false2truetrue_RC_DEFAULT) && (MAC8false2truetrue_RC_DEFAULT => ((true && (NET && (WIRELESS && (MAC8false2truetrue && MAC8false2truetrue_RC_DEFAULT_PID)))) || ((true && !(NET && (WIRELESS && (MAC8false2truetrue && MAC8false2truetrue_RC_DEFAULT_PID)))) && (NET && (WIRELESS && (MAC8false2truetrue && MAC8false2truetrue_RC_DEFAULT_MINSTREL))))))))
((NET && (WIRELESS && (MAC8false2truetrue && EXPERIMENTAL))) || ((false => MAC8false2truetrue_MESH) && (MAC8false2truetrue_MESH => false)))
((NET && (WIRELESS && MAC8false2truetrue)) || ((((((ATH9K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && WLAN_8false2truetrue))))) || (IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWL3945_LEDS)))))))) || (ATH5K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))))) || (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWLWIFI_LEDS)))))))) => MAC8false2truetrue_LEDS) && (MAC8false2truetrue_LEDS => ((((ATH9K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && WLAN_8false2truetrue))))) || (IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWL3945_LEDS)))))))) || (ATH5K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))))) || (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWLWIFI_LEDS)))))))))))
((NET && (WIRELESS && (MAC8false2truetrue && DEBUG_FS))) || ((false => MAC8false2truetrue_DEBUGFS) && (MAC8false2truetrue_DEBUGFS => false)))
((NET && (WIRELESS && MAC8false2truetrue)) || ((false => MAC8false2truetrue_DEBUG_MENU) && (MAC8false2truetrue_DEBUG_MENU => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_DEBUG_PACKET_ALIGNMENT) && (MAC8false2truetrue_DEBUG_PACKET_ALIGNMENT => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_NOINLINE) && (MAC8false2truetrue_NOINLINE => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_VERBOSE_DEBUG) && (MAC8false2truetrue_VERBOSE_DEBUG => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_HT_DEBUG) && (MAC8false2truetrue_HT_DEBUG => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_TKIP_DEBUG) && (MAC8false2truetrue_TKIP_DEBUG => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_IBSS_DEBUG) && (MAC8false2truetrue_IBSS_DEBUG => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_VERBOSE_PS_DEBUG) && (MAC8false2truetrue_VERBOSE_PS_DEBUG => false)))
((NET && (WIRELESS && (MAC8false2truetrue_DEBUG_MENU && MAC8false2truetrue_MESH))) || ((false => MAC8false2truetrue_VERBOSE_MPL_DEBUG) && (MAC8false2truetrue_VERBOSE_MPL_DEBUG => false)))
((NET && (WIRELESS && (MAC8false2truetrue_DEBUG_MENU && MAC8false2truetrue_DEBUGFS))) || ((false => MAC8false2truetrue_DEBUG_COUNTERS) && (MAC8false2truetrue_DEBUG_COUNTERS => false)))
((NET && (WIRELESS && MAC8false2truetrue_DEBUG_MENU)) || ((false => MAC8false2truetrue_VERBOSE_SPECT_MGMT_DEBUG) && (MAC8false2truetrue_VERBOSE_SPECT_MGMT_DEBUG => false)))
((NET && WIRELESS) || (((((IPW22falsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue)))) || (HOSTAP && (NETDEVICES && (!S39false && WLAN_8false2truetrue)))) || (IPW2truefalsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue))))) => IEEE8false2truetrue) && (IEEE8false2truetrue => (((IPW22falsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue)))) || (HOSTAP && (NETDEVICES && (!S39false && WLAN_8false2truetrue)))) || (IPW2truefalsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue))))))))
((NET && (WIRELESS && IEEE8false2truetrue)) || ((false => IEEE8false2truetrue_DEBUG) && (IEEE8false2truetrue_DEBUG => false)))
((NET && (WIRELESS && IEEE8false2truetrue)) || (((HOSTAP && (NETDEVICES && (!S39false && WLAN_8false2truetrue))) => IEEE8false2truetrue_CRYPT_WEP) && (IEEE8false2truetrue_CRYPT_WEP => (HOSTAP && (NETDEVICES && (!S39false && WLAN_8false2truetrue))))))
((NET && (WIRELESS && IEEE8false2truetrue)) || ((false => IEEE8false2truetrue_CRYPT_CCMP) && (IEEE8false2truetrue_CRYPT_CCMP => false)))
((NET && (WIRELESS && IEEE8false2truetrue)) || ((false => IEEE8false2truetrue_CRYPT_TKIP) && (IEEE8false2truetrue_CRYPT_TKIP => false)))
(NET || ((((((ACPI_TOSHIBA && (!X86_VOYAGER && (ACPI && (X86 && INPUT)))) || (IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWL3945_RFKILL)))))))) || (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWLWIFI_RFKILL)))))))) || (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI)))) => RFKILL) && (RFKILL => ((((ACPI_TOSHIBA && (!X86_VOYAGER && (ACPI && (X86 && INPUT)))) || (IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWL3945_RFKILL)))))))) || (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWLWIFI_RFKILL)))))))) || (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI)))))))
((NET && (RFKILL && INPUT)) || ((false => RFKILL_INPUT) && (RFKILL_INPUT => false)))
(false || (((true && (NET && (RFKILL && LEDS_TRIGGERS))) => RFKILL_LEDS) && (RFKILL_LEDS => (true && (NET && (RFKILL && LEDS_TRIGGERS))))))
((NET && EXPERIMENTAL) || ((false => NET_9P) && (NET_9P => false)))
((NET && (NET_9P && (EXPERIMENTAL && VIRTIO))) || ((false => NET_9P_VIRTIO) && (NET_9P_VIRTIO => false)))
((NET && (NET_9P && (INET && (INFINIBAND && EXPERIMENTAL)))) || ((false => NET_9P_RDMA) && (NET_9P_RDMA => false)))
((NET && NET_9P) || ((false => NET_9P_DEBUG) && (NET_9P_DEBUG => false)))
(HOTPLUG || (((true && HOTPLUG) => UEVENT_HELPER_PATH) && (UEVENT_HELPER_PATH => (true && HOTPLUG))))
(EXPERIMENTAL || (((true && true) => STANDALONE) && (STANDALONE => (true && true))))
(true || (((true && true) => PREVENT_FIRMWARE_BUILD) && (PREVENT_FIRMWARE_BUILD => (true && true))))
((HOTPLUG && EMBEDDED) || ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((xtruetrue9 || xtrue2false) || xtrue2true) || x99) || xtrue22) || xtrue23) || xtrue24) || xtruefalse3) || xtrue25) || xtrue26) || xtrue27) || x66) || xtrue28) || xtrue29) || xtruefalse9) || xtrue3false) || xtruetruetrue) || xtrue3true) || xtrue32) || xtrue33) || xtrue34) || xtrue35) || xtrue36) || xtrue37) || xtrue38) || xtrue39) || xtrue4false) || xtrue4true) || xtrue42) || xtrue43) || xtrue44) || xtrue45) || xtrue46) || xtrue47) || xtrue48) || xtrue49) || xtrue5false) || xtrue5true) || xtrue52) || xtrue53) || xtrue54) || xtruefalse5) || xtruefalse8) || xtrue55) || xtruetruefalse) || xtrue56) || xtrue57) || x6true) || xtruefalsefalse) || xtrue58) || xtrue59) || xtrue6false) || xtrue6true) || xtrue62) || xtrue63) || xtrue64) || xtrue65) || xtrue66) || xtrue67) || xtrue68) || xtrue69) => FW_LOADER) && (FW_LOADER => ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((xtruetrue9 || xtrue2false) || xtrue2true) || x99) || xtrue22) || xtrue23) || xtrue24) || xtruefalse3) || xtrue25) || xtrue26) || xtrue27) || x66) || xtrue28) || xtrue29) || xtruefalse9) || xtrue3false) || xtruetruetrue) || xtrue3true) || xtrue32) || xtrue33) || xtrue34) || xtrue35) || xtrue36) || xtrue37) || xtrue38) || xtrue39) || xtrue4false) || xtrue4true) || xtrue42) || xtrue43) || xtrue44) || xtrue45) || xtrue46) || xtrue47) || xtrue48) || xtrue49) || xtrue5false) || xtrue5true) || xtrue52) || xtrue53) || xtrue54) || xtruefalse5) || xtruefalse8) || xtrue55) || xtruetruefalse) || xtrue56) || xtrue57) || x6true) || xtruefalsefalse) || xtrue58) || xtrue59) || xtrue6false) || xtrue6true) || xtrue62) || xtrue63) || xtrue64) || xtrue65) || xtrue66) || xtrue67) || xtrue68) || xtrue69))))
(xtruetrue9 <=> (SCSI_QLA_FC && (SCSI_LOWLEVEL && (PCI && SCSI))))
(xtrue2false <=> (BT_HCIBCM2false3X && (NET && (BT && USB))))
(xtrue2true <=> (SND_GINA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x99 <=> (IPW22falsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue)))))
(xtrue22 <=> (SCSI_AIC94XX && (SCSI_LOWLEVEL && (SCSI && PCI))))
(xtrue23 <=> (BT_HCIBT3C && (NET && (BT && PCMCIA))))
(xtrue24 <=> (ZDtrue2truetrueRW && (NETDEVICES && (!S39false && (USB && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(xtruefalse3 <=> (IPW2truefalsefalse && (NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue)))))
(xtrue25 <=> (SND_INDIGOIO && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue26 <=> (USB_CXACRU && (USB_SUPPORT && USB_ATM)))
(xtrue27 <=> (DELL_RBU && X86))
(x66 <=> (CHELSIO_T3 && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(xtrue28 <=> (SND_ECHO3G && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue29 <=> (MOXA_INTELLIO && (SERIAL_NONSTANDARD && (ISA || (EISA || PCI)))))
(xtruefalse9 <=> (PCMCIA_ATMEL && (NETDEVICES && (!S39false && (ATMEL && PCMCIA)))))
(xtrue3false <=> (USB_IRDA && (NET && (IRDA && USB))))
(xtruetruetrue <=> (PRISM54 && (NETDEVICES && (!S39false && (PCI && (EXPERIMENTAL && WLAN_8false2truetrue))))))
(xtrue3true <=> (SND_WAVEFRONT && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue32 <=> (SND_MONA && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue33 <=> (ISI && (SERIAL_NONSTANDARD && PCI)))
(xtrue34 <=> (USB_UEAGLEATM && (USB_SUPPORT && USB_ATM)))
(xtrue35 <=> (B43LEGACY && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA)))))))
(xtrue36 <=> (BT_HCIBFUSB && (NET && (BT && USB))))
(xtrue37 <=> (LIBERTAS_THINFIRM && (NETDEVICES && (!S39false && (WLAN_8false2truetrue && MAC8false2truetrue)))))
(xtrue38 <=> (SND_MIA && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue39 <=> (SND_SBtrue6_CSP && (SOUND && (!M68K && (SND && (SND_ISA && ((SND_SBtrue6 || SND_SBAWE) && (BROKEN || !PPC))))))))
(xtrue4false <=> (IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(xtrue4true <=> (UWB_Itrue48falseU && (UWB && UWB_HWA)))
(xtrue42 <=> (SPIDER_NET && (NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && (PPC_IBM_CELL_BLADE || PPC_CELLEB))))))
(xtrue43 <=> (TMS38falseTR && (NETDEVICES && (TR && (PCI || ((ISA && ISA_DMA_API) || MCA))))))
(xtrue44 <=> (SERIAL_ICOM && (HAS_IOMEM && (PCI && (PPC_ISERIES || PPC_PSERIES)))))
(xtrue45 <=> (SERIAL_QE && (HAS_IOMEM && QUICC_ENGINE)))
(xtrue46 <=> (USB_ATMEL && (STAGING && (!STAGING_EXCLUDE_BUILD && (WLAN_8false2truetrue && USB)))))
(xtrue47 <=> (SND_DARLA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue48 <=> (SCSI_IPR && (SCSI_LOWLEVEL && (PCI && (SCSI && ATA)))))
(xtrue49 <=> (CYCLADES && (SERIAL_NONSTANDARD && (PCI || ISA))))
(xtrue5false <=> (USB_ISIGHTFW && (USB_SUPPORT && USB)))
(xtrue5true <=> (MICROCODE_AMD && MICROCODE))
(xtrue52 <=> (USB_SPEEDTOUCH && (USB_SUPPORT && USB_ATM)))
(xtrue53 <=> (SND_EMUtruefalseKtrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue54 <=> (SND_LAYLA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtruefalse5 <=> (ATMEL && (NETDEVICES && (!S39false && ((PCI || PCMCIA) && WLAN_8false2truetrue)))))
(xtruefalse8 <=> (LIBERTAS && (NETDEVICES && (!S39false && WLAN_8false2truetrue))))
(xtrue55 <=> (PCMCIA_LOAD_CIS && (PCCARD && (PCMCIA && EXPERIMENTAL))))
(xtruetruefalse <=> (USB_ZDtrue2falsetrue && (NETDEVICES && (!S39false && (USB && WLAN_8false2truetrue)))))
(xtrue56 <=> (SND_INDIGODJ && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue57 <=> (LIBERTAS_CS && (NETDEVICES && (!S39false && (LIBERTAS && PCMCIA)))))
(x6true <=> (MYRItruefalseGE && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(xtruefalsefalse <=> (HERMES && (NETDEVICES && (!S39false && ((PPC_PMAC || (PCI || PCMCIA)) && WLAN_8false2truetrue)))))
(xtrue58 <=> (SND_DARLA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue59 <=> (SND_LAYLA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue6false <=> (MICROCODE_INTEL && MICROCODE))
(xtrue6true <=> (SND_GINA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue62 <=> (B43 && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA)))))))
(xtrue63 <=> (RT2Xfalsefalse_LIB_FIRMWARE && (NETDEVICES && (!S39false && RT2Xfalsefalse))))
(xtrue64 <=> (ATM_FORE2falsefalseE && (ATM_DRIVERS && (NETDEVICES && (ATM && (PCI || SBUS))))))
(xtrue65 <=> (SND_RIPTIDE && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue66 <=> (MICROCODE && true))
(xtrue67 <=> (IWLAGN && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(xtrue68 <=> (SND_INDIGO && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue69 <=> (true && HOTPLUG))
(FW_LOADER || (((true && FW_LOADER) => FIRMWARE_IN_KERNEL) && (FIRMWARE_IN_KERNEL => (true && FW_LOADER))))
(FW_LOADER || ((false => EXTRA_FIRMWARE) && (EXTRA_FIRMWARE => false)))
(!EXTRA_FIRMWARE || (((true && !EXTRA_FIRMWARE) => EXTRA_FIRMWARE_DIR) && (EXTRA_FIRMWARE_DIR => (true && !EXTRA_FIRMWARE))))
(DEBUG_KERNEL || ((false => DEBUG_DRIVER) && (DEBUG_DRIVER => false)))
(DEBUG_KERNEL || ((false => DEBUG_DEVRES) && (DEBUG_DEVRES => false)))
(false || ((false => SYS_HYPERVISOR) && (SYS_HYPERVISOR => false)))
(NET || ((false => CONNECTOR) && (CONNECTOR => false)))
(CONNECTOR || (((true && CONNECTOR) => PROC_EVENTS) && (PROC_EVENTS => (true && CONNECTOR))))
(HAS_IOMEM || ((false => MTD) && (MTD => false)))
(MTD || ((false => MTD_DEBUG) && (MTD_DEBUG => false)))
((MTD && MTD_DEBUG) || (((true && (MTD && MTD_DEBUG)) => MTD_DEBUG_VERBOSE) && (MTD_DEBUG_VERBOSE => (true && (MTD && MTD_DEBUG)))))
(MTD || ((false => MTD_CONCAT) && (MTD_CONCAT => false)))
(MTD || (((((((xtrue7false || xtrue7true) || xtrue72) || xtrue73) || xtrue74) || xtrue75) => MTD_PARTITIONS) && (MTD_PARTITIONS => (((((xtrue7false || xtrue7true) || xtrue72) || xtrue73) || xtrue74) || xtrue75))))
(xtrue7false <=> (MTD_PXA2XX && (MTD && ((PXA25x || PXA27x) && MTD_CFI_INTELEXT))))
(xtrue7true <=> (MTD_TS55falsefalse && (MTD && X86)))
(xtrue72 <=> (MTD_BFIN_ASYNC && (MTD && (BFIN533_STAMP && MTD_CFI))))
(xtrue73 <=> (MTD_PMC_MSP_EVM && (MTD && (PMC_MSP && MTD_CFI))))
(xtrue74 <=> (MTD_DMVtrue82 && (MTD && DMVtrue82)))
(xtrue75 <=> (MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))))
((MTD && MTD_PARTITIONS) || ((false => MTD_REDBOOT_PARTS) && (MTD_REDBOOT_PARTS => false)))
((MTD && MTD_REDBOOT_PARTS) || (((true && (MTD && MTD_REDBOOT_PARTS)) => MTD_REDBOOT_DIRECTORY_BLOCK) && (MTD_REDBOOT_DIRECTORY_BLOCK => (true && (MTD && MTD_REDBOOT_PARTS)))))
((MTD && MTD_REDBOOT_PARTS) || ((false => MTD_REDBOOT_PARTS_UNALLOCATED) && (MTD_REDBOOT_PARTS_UNALLOCATED => false)))
((MTD && MTD_REDBOOT_PARTS) || ((false => MTD_REDBOOT_PARTS_READONLY) && (MTD_REDBOOT_PARTS_READONLY => false)))
((MTD_PARTITIONS && MTD) || ((false => MTD_CMDLINE_PARTS) && (MTD_CMDLINE_PARTS => false)))
((MTD && (ARM && MTD_PARTITIONS)) || ((false => MTD_AFS_PARTS) && (MTD_AFS_PARTS => false)))
((MTD && (PPC_OF && MTD_PARTITIONS)) || ((false => MTD_OF_PARTS) && (MTD_OF_PARTS => false)))
((MTD && MTD_PARTITIONS) || ((false => MTD_AR7_PARTS) && (MTD_AR7_PARTS => false)))
(MTD || ((false => MTD_CHAR) && (MTD_CHAR => false)))
(false || (((((MTD_DATAFLASH_OTP && (MTD && MTD_DATAFLASH)) || (MTD_OTP && (MTD && MTD_CFI_ADV_OPTIONS))) || (MTD_ONENAND_OTP && (MTD && MTD_ONENAND))) => HAVE_MTD_OTP) && (HAVE_MTD_OTP => (((MTD_DATAFLASH_OTP && (MTD && MTD_DATAFLASH)) || (MTD_OTP && (MTD && MTD_CFI_ADV_OPTIONS))) || (MTD_ONENAND_OTP && (MTD && MTD_ONENAND))))))
((MTD && BLOCK) || ((((((((xtrue76 || xtrue77) || xtrue78) || xtrue79) || xtrue8false) || xtrue8true) || xtrue82) => MTD_BLKDEVS) && (MTD_BLKDEVS => ((((((xtrue76 || xtrue77) || xtrue78) || xtrue79) || xtrue8false) || xtrue8true) || xtrue82))))
(xtrue76 <=> (MTD_BLOCK_RO && (MTD && (true && BLOCK))))
(xtrue77 <=> (SSFDC && (MTD && BLOCK)))
(xtrue78 <=> (NFTL && (MTD && BLOCK)))
(xtrue79 <=> (FTL && (MTD && BLOCK)))
(xtrue8false <=> (INFTL && (MTD && BLOCK)))
(xtrue8true <=> (MTD_BLOCK && (MTD && BLOCK)))
(xtrue82 <=> (RFD_FTL && (MTD && BLOCK)))
((MTD && BLOCK) || ((false => MTD_BLOCK) && (MTD_BLOCK => false)))
((MTD && (true && BLOCK)) || ((false => MTD_BLOCK_RO) && (MTD_BLOCK_RO => false)))
((MTD && BLOCK) || ((false => FTL) && (FTL => false)))
((MTD && BLOCK) || ((false => NFTL) && (NFTL => false)))
((MTD && NFTL) || ((false => NFTL_RW) && (NFTL_RW => false)))
((MTD && BLOCK) || ((false => INFTL) && (INFTL => false)))
((MTD && BLOCK) || ((false => RFD_FTL) && (RFD_FTL => false)))
((MTD && BLOCK) || ((false => SSFDC) && (SSFDC => false)))
(MTD || ((false => MTD_OOPS) && (MTD_OOPS => false)))
(MTD || ((false => MTD_CFI) && (MTD_CFI => false)))
(MTD || (((MTD_TS55falsefalse && (MTD && X86)) => MTD_JEDECPROBE) && (MTD_JEDECPROBE => (MTD_TS55falsefalse && (MTD && X86)))))
(false || ((((MTD_CFI && MTD) || (MTD_JEDECPROBE && MTD)) => MTD_GEN_PROBE) && (MTD_GEN_PROBE => ((MTD_CFI && MTD) || (MTD_JEDECPROBE && MTD)))))
((MTD && MTD_GEN_PROBE) || ((false => MTD_CFI_ADV_OPTIONS) && (MTD_CFI_ADV_OPTIONS => false)))
(true || ((false => MTD_CFI_NOSWAP) && (MTD_CFI_NOSWAP => false)))
(true || ((false => MTD_CFI_BE_BYTE_SWAP) && (MTD_CFI_BE_BYTE_SWAP => false)))
(true || ((false => MTD_CFI_LE_BYTE_SWAP) && (MTD_CFI_LE_BYTE_SWAP => false)))
((MTD && MTD_CFI_ADV_OPTIONS) || ((false => MTD_CFI_GEOMETRY) && (MTD_CFI_GEOMETRY => false)))
((MTD && MTD_CFI_GEOMETRY) || ((((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) || (true && MTD)) => MTD_MAP_BANK_WIDTH_true) && (MTD_MAP_BANK_WIDTH_true => ((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) || (true && MTD)))))
((MTD && MTD_CFI_GEOMETRY) || (((true && MTD) => MTD_MAP_BANK_WIDTH_2) && (MTD_MAP_BANK_WIDTH_2 => (true && MTD))))
((MTD && MTD_CFI_GEOMETRY) || ((((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) || (true && MTD)) => MTD_MAP_BANK_WIDTH_4) && (MTD_MAP_BANK_WIDTH_4 => ((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) || (true && MTD)))))
((MTD && MTD_CFI_GEOMETRY) || ((false => MTD_MAP_BANK_WIDTH_8) && (MTD_MAP_BANK_WIDTH_8 => false)))
((MTD && MTD_CFI_GEOMETRY) || ((false => MTD_MAP_BANK_WIDTH_true6) && (MTD_MAP_BANK_WIDTH_true6 => false)))
((MTD && MTD_CFI_GEOMETRY) || (((MTD_DMVtrue82 && (MTD && DMVtrue82)) => MTD_MAP_BANK_WIDTH_32) && (MTD_MAP_BANK_WIDTH_32 => (MTD_DMVtrue82 && (MTD && DMVtrue82)))))
((MTD && MTD_CFI_GEOMETRY) || ((((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) || (true && MTD)) => MTD_CFI_Itrue) && (MTD_CFI_Itrue => ((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) || (true && MTD)))))
((MTD && MTD_CFI_GEOMETRY) || (((true && MTD) => MTD_CFI_I2) && (MTD_CFI_I2 => (true && MTD))))
((MTD && MTD_CFI_GEOMETRY) || (((MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))) => MTD_CFI_I4) && (MTD_CFI_I4 => (MTD_WRSBC826false && (MTD && (SBC82xx || SBC856false))))))
((MTD && MTD_CFI_GEOMETRY) || (((MTD_DMVtrue82 && (MTD && DMVtrue82)) => MTD_CFI_I8) && (MTD_CFI_I8 => (MTD_DMVtrue82 && (MTD && DMVtrue82)))))
((MTD && MTD_CFI_ADV_OPTIONS) || ((false => MTD_OTP) && (MTD_OTP => false)))
((MTD && MTD_GEN_PROBE) || ((false => MTD_CFI_INTELEXT) && (MTD_CFI_INTELEXT => false)))
((MTD && MTD_GEN_PROBE) || ((((MTD_TS55falsefalse && (MTD && X86)) || (MTD_DMVtrue82 && (MTD && DMVtrue82))) => MTD_CFI_AMDSTD) && (MTD_CFI_AMDSTD => ((MTD_TS55falsefalse && (MTD && X86)) || (MTD_DMVtrue82 && (MTD && DMVtrue82))))))
((MTD && MTD_GEN_PROBE) || ((false => MTD_CFI_STAA) && (MTD_CFI_STAA => false)))
(false || ((((((MTD_CFI_INTELEXT && (MTD && MTD_GEN_PROBE)) || (MTD_CFI && MTD)) || (MTD_CFI_STAA && (MTD && MTD_GEN_PROBE))) || (MTD_CFI_AMDSTD && (MTD && MTD_GEN_PROBE))) => MTD_CFI_UTIL) && (MTD_CFI_UTIL => ((((MTD_CFI_INTELEXT && (MTD && MTD_GEN_PROBE)) || (MTD_CFI && MTD)) || (MTD_CFI_STAA && (MTD && MTD_GEN_PROBE))) || (MTD_CFI_AMDSTD && (MTD && MTD_GEN_PROBE))))))
(MTD || (((MTD_PLATRAM && MTD) => MTD_RAM) && (MTD_RAM => (MTD_PLATRAM && MTD))))
(MTD || ((false => MTD_ROM) && (MTD_ROM => false)))
(MTD || ((false => MTD_ABSENT) && (MTD_ABSENT => false)))
((MTD && (!SMP && ((MTD_CFI_INTELEXT || MTD_CFI_AMDSTD) && (EXPERIMENTAL && ARCH_MTD_XIP)))) || (((true && (MTD && (!SMP && ((MTD_CFI_INTELEXT || MTD_CFI_AMDSTD) && (EXPERIMENTAL && (ARCH_MTD_XIP && XIP_KERNEL)))))) => MTD_XIP) && (MTD_XIP => (true && (MTD && (!SMP && ((MTD_CFI_INTELEXT || MTD_CFI_AMDSTD) && (EXPERIMENTAL && (ARCH_MTD_XIP && XIP_KERNEL)))))))))
(MTD || ((false => MTD_COMPLEX_MAPPINGS) && (MTD_COMPLEX_MAPPINGS => false)))
((MTD && (MTD_CFI || (MTD_JEDECPROBE || MTD_ROM))) || ((false => MTD_PHYSMAP) && (MTD_PHYSMAP => false)))
((MTD && MTD_PHYSMAP) || (((true && (MTD && MTD_PHYSMAP)) => MTD_PHYSMAP_START) && (MTD_PHYSMAP_START => (true && (MTD && MTD_PHYSMAP)))))
((MTD && MTD_PHYSMAP) || (((true && (MTD && MTD_PHYSMAP)) => MTD_PHYSMAP_LEN) && (MTD_PHYSMAP_LEN => (true && (MTD && MTD_PHYSMAP)))))
((MTD && MTD_PHYSMAP) || (((true && (MTD && MTD_PHYSMAP)) => MTD_PHYSMAP_BANKWIDTH) && (MTD_PHYSMAP_BANKWIDTH => (true && (MTD && MTD_PHYSMAP)))))
((MTD && (PPC_OF && (MTD_CFI || (MTD_JEDECPROBE || MTD_ROM)))) || ((false => MTD_PHYSMAP_OF) && (MTD_PHYSMAP_OF => false)))
((MTD && (PMC_MSP && MTD_CFI)) || ((false => MTD_PMC_MSP_EVM) && (MTD_PMC_MSP_EVM => false)))
(true || ((false => MSP_FLASH_MAP_LIMIT_32M) && (MSP_FLASH_MAP_LIMIT_32M => false)))
(false || (((true && (MTD && MSP_FLASH_MAP_LIMIT_32M)) => MSP_FLASH_MAP_LIMIT) && (MSP_FLASH_MAP_LIMIT => (true && (MTD && MSP_FLASH_MAP_LIMIT_32M)))))
((MTD && (PMC_MSP_EMBEDDED_ROOTFS && ((MTD_BLOCK || MTD_BLOCK_RO) && MTD_RAM))) || ((false => MTD_PMC_MSP_RAMROOT) && (MTD_PMC_MSP_RAMROOT => false)))
((MTD && (SPARC && (MTD_CFI && PCI))) || ((false => MTD_SUN_UFLASH) && (MTD_SUN_UFLASH => false)))
((MTD && (X86 && (MTD_CFI && MTD_CONCAT))) || ((false => MTD_SC52falseCDP) && (MTD_SC52falseCDP => false)))
((MTD && (X86 && (MTD_CFI && MTD_PARTITIONS))) || ((false => MTD_NETSC52false) && (MTD_NETSC52false => false)))
((MTD && X86) || ((false => MTD_TS55falsefalse) && (MTD_TS55falsefalse => false)))
((MTD && (X86 && (MTD_CFI_INTELEXT && (MTD_PARTITIONS && MTD_COMPLEX_MAPPINGS)))) || ((false => MTD_SBC_GXX) && (MTD_SBC_GXX => false)))
((MTD && ((PXA25x || PXA27x) && MTD_CFI_INTELEXT)) || ((false => MTD_PXA2XX) && (MTD_PXA2XX => false)))
((MTD && (X86 && (MTD_JEDEC && MTD_COMPLEX_MAPPINGS))) || ((false => MTD_OCTAGON) && (MTD_OCTAGON => false)))
((MTD && (X86 && (MTD_JEDEC && MTD_COMPLEX_MAPPINGS))) || ((false => MTD_VMAX) && (MTD_VMAX => false)))
((MTD && (SCx2falsefalse && (MTD_CFI && MTD_PARTITIONS))) || ((false => MTD_SCx2falsefalse_DOCFLASH) && (MTD_SCx2falsefalse_DOCFLASH => false)))
((MTD && (X86 && MTD_JEDECPROBE)) || ((false => MTD_AMD76XROM) && (MTD_AMD76XROM => false)))
((MTD && (X86 && MTD_JEDECPROBE)) || ((false => MTD_ICHXROM) && (MTD_ICHXROM => false)))
((MTD && (X86 && (MTD_JEDECPROBE && PCI))) || ((false => MTD_ESB2ROM) && (MTD_ESB2ROM => false)))
((MTD && (X86 && (MTD_JEDECPROBE && PCI))) || ((false => MTD_CK8false4XROM) && (MTD_CK8false4XROM => false)))
((MTD && (X86 && MTD_JEDECPROBE)) || ((false => MTD_SCB2_FLASH) && (MTD_SCB2_FLASH => false)))
((MTD && (ALPHA_TSUNAMI && MTD_COMPLEX_MAPPINGS)) || ((false => MTD_TSUNAMI) && (MTD_TSUNAMI => false)))
((MTD && (X86 && (MTD_PARTITIONS && MTD_JEDECPROBE))) || ((false => MTD_NETtel) && (MTD_NETtel => false)))
((MTD && (SOC_AUtrueXfalsefalse && (MTD_PARTITIONS && MTD_CFI))) || ((false => MTD_ALCHEMY) && (MTD_ALCHEMY => false)))
((MTD && (X86 && (MTD_CONCAT && (MTD_PARTITIONS && MTD_CFI_INTELEXT)))) || ((false => MTD_DILNETPC) && (MTD_DILNETPC => false)))
((MTD && MTD_DILNETPC) || (((true && (MTD && MTD_DILNETPC)) => MTD_DILNETPC_BOOTSIZE) && (MTD_DILNETPC_BOOTSIZE => (true && (MTD && MTD_DILNETPC)))))
((MTD && (X86 && MTD_JEDECPROBE)) || ((false => MTD_L44falseGX) && (MTD_L44falseGX => false)))
((MTD && (MTD_JEDECPROBE && false)) || ((false => MTD_SBC824false) && (MTD_SBC824false => false)))
((MTD && (MTD_CFI && TQM8xxL)) || ((false => MTD_TQM8XXL) && (MTD_TQM8XXL => false)))
((MTD && (MTD_CFI && (RPXCLASSIC || RPXLITE))) || ((false => MTD_RPXLITE) && (MTD_RPXLITE => false)))
((MTD && (MTD_CFI && MBX)) || ((false => MTD_MBX86false) && (MTD_MBX86false => false)))
((MTD && (DBOX2 && (MTD_CFI_INTELSTD && (MTD_CFI_INTELEXT && MTD_CFI_AMDSTD)))) || ((false => MTD_DBOX2) && (MTD_DBOX2 => false)))
((MTD && (8xx && MTD_CFI)) || ((false => MTD_CFI_FLAGADM) && (MTD_CFI_FLAGADM => false)))
((MTD && (MTD_CFI && (REDWOOD_4 || (REDWOOD_5 || REDWOOD_6)))) || ((false => MTD_REDWOOD) && (MTD_REDWOOD => false)))
((MTD && (SUPERH && (SOLUTION_ENGINE && (MTD_CFI && MTD_REDBOOT_PARTS)))) || ((false => MTD_SOLUTIONENGINE) && (MTD_SOLUTIONENGINE => false)))
((MTD && (ARM && MTD_CFI)) || ((false => MTD_ARM_INTEGRATOR) && (MTD_ARM_INTEGRATOR => false)))
((MTD && (MTD_CFI && ARCH_CDB897true2)) || ((false => MTD_CDB897true2) && (MTD_CDB897true2 => false)))
((MTD && (MTD_CFI && (ARCH_SAtruetruefalsefalse && MTD_PARTITIONS))) || ((false => MTD_SAtruetruefalsefalse) && (MTD_SAtruetruefalsefalse => false)))
((MTD && (IPAQ_HANDHELD && MTD_CFI)) || ((false => MTD_IPAQ) && (MTD_IPAQ => false)))
((MTD && (MTD_CFI && (ARCH_FOOTBRIDGE && MTD_COMPLEX_MAPPINGS))) || ((false => MTD_DC2true285) && (MTD_DC2true285 => false)))
((MTD && (MTD_CFI && (MTD_COMPLEX_MAPPINGS && ARCH_IXP4XX))) || ((false => MTD_IXP4XX) && (MTD_IXP4XX => false)))
((MTD && (MTD_CFI && (MTD_COMPLEX_MAPPINGS && ARCH_IXP2falsefalsefalse))) || ((false => MTD_IXP2falsefalsefalse) && (MTD_IXP2falsefalsefalse => false)))
((MTD && (MTD_CFI && (MTD_PARTITIONS && SAtruetruefalsefalse_FORTUNET))) || ((false => MTD_FORTUNET) && (MTD_FORTUNET => false)))
((MTD && ARCH_AUTCPUtrue2) || ((false => MTD_AUTCPUtrue2) && (MTD_AUTCPUtrue2 => false)))
((MTD && (ARCH_EDB73true2 && MTD_CFI)) || ((false => MTD_EDB73true2) && (MTD_EDB73true2 => false)))
((MTD && (ARM && MTD_JEDECPROBE)) || ((false => MTD_IMPA7) && (MTD_IMPA7 => false)))
((MTD && (MTD_JEDECPROBE && ARCH_CEIVA)) || ((false => MTD_CEIVA) && (MTD_CEIVA => false)))
((MTD && (MTD_CFI && (ARCH_H72falsetrue || ARCH_H72false2))) || ((false => MTD_H72falseX) && (MTD_H72falseX => false)))
((MTD && (MTD_CFI && ARCH_OMAP)) || ((false => MTD_OMAP_NOR) && (MTD_OMAP_NOR => false)))
((MTD && (PCI && MTD_COMPLEX_MAPPINGS)) || ((false => MTD_PCI) && (MTD_PCI => false)))
((MTD && (PCMCIA && (MTD_COMPLEX_MAPPINGS && BROKEN))) || ((false => MTD_PCMCIA) && (MTD_PCMCIA => false)))
((MTD && MTD_PCMCIA) || ((false => MTD_PCMCIA_ANONYMOUS) && (MTD_PCMCIA_ANONYMOUS => false)))
((MTD && (BFIN533_STAMP && MTD_CFI)) || (((true && (MTD && (BFIN533_STAMP && MTD_CFI))) => MTD_BFIN_ASYNC) && (MTD_BFIN_ASYNC => (true && (MTD && (BFIN533_STAMP && MTD_CFI))))))
((MTD && (MTD_PARTITIONS && (MTD_RAM && !MMU))) || ((false => MTD_UCLINUX) && (MTD_UCLINUX => false)))
((MTD && (SBC82xx || SBC856false)) || ((false => MTD_WRSBC826false) && (MTD_WRSBC826false => false)))
((MTD && DMVtrue82) || ((false => MTD_DMVtrue82) && (MTD_DMVtrue82 => false)))
((MTD && ARCH_PXA) || ((false => MTD_SHARP_SL) && (MTD_SHARP_SL => false)))
((MTD && PCI) || ((false => MTD_INTEL_VR_NOR) && (MTD_INTEL_VR_NOR => false)))
(MTD || ((false => MTD_PLATRAM) && (MTD_PLATRAM => false)))
((MTD && PCI) || ((false => MTD_PMC55true) && (MTD_PMC55true => false)))
((MTD && MTD_PMC55true) || ((false => MTD_PMC55true_BUGFIX) && (MTD_PMC55true_BUGFIX => false)))
((MTD && MTD_PMC55true) || ((false => MTD_PMC55true_DEBUG) && (MTD_PMC55true_DEBUG => false)))
((MTD && MACH_DECSTATION) || ((false => MTD_MSfalse2NV) && (MTD_MSfalse2NV => false)))
((MTD && (SPI_MASTER && EXPERIMENTAL)) || ((false => MTD_DATAFLASH) && (MTD_DATAFLASH => false)))
((MTD && MTD_DATAFLASH) || ((false => MTD_DATAFLASH_WRITE_VERIFY) && (MTD_DATAFLASH_WRITE_VERIFY => false)))
((MTD && MTD_DATAFLASH) || ((false => MTD_DATAFLASH_OTP) && (MTD_DATAFLASH_OTP => false)))
((MTD && (SPI_MASTER && EXPERIMENTAL)) || ((false => MTD_M25P8false) && (MTD_M25P8false => false)))
((MTD && MTD_M25P8false) || (((true && (MTD && MTD_M25P8false)) => M25PXX_USE_FAST_READ) && (M25PXX_USE_FAST_READ => (true && (MTD && MTD_M25P8false)))))
(MTD || ((false => MTD_SLRAM) && (MTD_SLRAM => false)))
(MTD || ((false => MTD_PHRAM) && (MTD_PHRAM => false)))
((MTD && SAtruetruefalsefalse_LART) || ((false => MTD_LART) && (MTD_LART => false)))
(MTD || ((false => MTD_MTDRAM) && (MTD_MTDRAM => false)))
((MTD && MTD_MTDRAM) || (((true && (MTD && MTD_MTDRAM)) => MTDRAM_TOTAL_SIZE) && (MTDRAM_TOTAL_SIZE => (true && (MTD && MTD_MTDRAM)))))
((MTD && MTD_MTDRAM) || (((true && (MTD && MTD_MTDRAM)) => MTDRAM_ERASE_SIZE) && (MTDRAM_ERASE_SIZE => (true && (MTD && MTD_MTDRAM)))))
((MTD && MTD_MTDRAM) || (((true && (MTD && MTD_MTDRAM)) => MTDRAM_ABS_POS) && (MTDRAM_ABS_POS => (true && (MTD && MTD_MTDRAM)))))
((MTD && BLOCK) || ((false => MTD_BLOCK2MTD) && (MTD_BLOCK2MTD => false)))
(MTD || ((false => MTD_DOC2falsefalsefalse) && (MTD_DOC2falsefalsefalse => false)))
(MTD || ((false => MTD_DOC2falsefalsetrue) && (MTD_DOC2falsefalsetrue => false)))
(MTD || ((false => MTD_DOC2falsefalsetruePLUS) && (MTD_DOC2falsefalsetruePLUS => false)))
(false || (((((MTD_DOC2falsefalsetruePLUS && MTD) || (MTD_DOC2falsefalsetrue && MTD)) || (MTD_DOC2falsefalsefalse && MTD)) => MTD_DOCPROBE) && (MTD_DOCPROBE => (((MTD_DOC2falsefalsetruePLUS && MTD) || (MTD_DOC2falsefalsetrue && MTD)) || (MTD_DOC2falsefalsefalse && MTD)))))
(false || (((MTD_DOCPROBE && MTD) => MTD_DOCECC) && (MTD_DOCECC => (MTD_DOCPROBE && MTD))))
((MTD && MTD_DOCPROBE) || ((false => MTD_DOCPROBE_ADVANCED) && (MTD_DOCPROBE_ADVANCED => false)))
((MTD && (MTD_DOCPROBE && MTD_DOCPROBE_ADVANCED)) || ((((true && (MTD && (MTD_DOCPROBE && MTD_DOCPROBE_ADVANCED))) || ((true && !(MTD && (MTD_DOCPROBE && MTD_DOCPROBE_ADVANCED))) && (MTD && (MTD_DOCPROBE && !MTD_DOCPROBE_ADVANCED)))) => MTD_DOCPROBE_ADDRESS) && (MTD_DOCPROBE_ADDRESS => ((true && (MTD && (MTD_DOCPROBE && MTD_DOCPROBE_ADVANCED))) || ((true && !(MTD && (MTD_DOCPROBE && MTD_DOCPROBE_ADVANCED))) && (MTD && (MTD_DOCPROBE && !MTD_DOCPROBE_ADVANCED)))))))
((MTD && MTD_DOCPROBE_ADVANCED) || ((false => MTD_DOCPROBE_HIGH) && (MTD_DOCPROBE_HIGH => false)))
((MTD && MTD_DOCPROBE_ADVANCED) || ((false => MTD_DOCPROBE_55AA) && (MTD_DOCPROBE_55AA => false)))
(MTD || ((false => MTD_NAND) && (MTD_NAND => false)))
((MTD && MTD_NAND) || ((false => MTD_NAND_VERIFY_WRITE) && (MTD_NAND_VERIFY_WRITE => false)))
((MTD && MTD_NAND) || ((false => MTD_NAND_ECC_SMC) && (MTD_NAND_ECC_SMC => false)))
((MTD && MTD_NAND) || ((false => MTD_NAND_MUSEUM_IDS) && (MTD_NAND_MUSEUM_IDS => false)))
((MTD && (MTD_NAND && ARCH_AUTCPUtrue2)) || ((false => MTD_NAND_AUTCPUtrue2) && (MTD_NAND_AUTCPUtrue2 => false)))
((MTD && (MTD_NAND && ARCH_EDB73true2)) || ((false => MTD_NAND_EDB73true2) && (MTD_NAND_EDB73true2 => false)))
((MTD && (MTD_NAND && (ARCH_PXA && MTD_PARTITIONS))) || ((false => MTD_NAND_Htrue9falsefalse) && (MTD_NAND_Htrue9falsefalse => false)))
((MTD && (MTD_NAND && (GENERIC_GPIO && ARM))) || ((false => MTD_NAND_GPIO) && (MTD_NAND_GPIO => false)))
((MTD && (MTD_NAND && ARCH_P72falseT)) || ((false => MTD_NAND_SPIA) && (MTD_NAND_SPIA => false)))
((MTD && (MTD_NAND && MACH_AMS_DELTA)) || ((false => MTD_NAND_AMS_DELTA) && (MTD_NAND_AMS_DELTA => false)))
((MTD && (MTD_NAND && MACH_TS72XX)) || ((false => MTD_NAND_TS725false) && (MTD_NAND_TS725false => false)))
(false || ((((((MTD_NAND && MTD) || (MTD_DOC2falsefalsetruePLUS && MTD)) || (MTD_DOC2falsefalsetrue && MTD)) || (MTD_DOC2falsefalsefalse && MTD)) => MTD_NAND_IDS) && (MTD_NAND_IDS => ((((MTD_NAND && MTD) || (MTD_DOC2falsefalsetruePLUS && MTD)) || (MTD_DOC2falsefalsetrue && MTD)) || (MTD_DOC2falsefalsefalse && MTD)))))
((MTD && (MTD_NAND && (SOC_AUtrue2falsefalse || SOC_AUtrue55false))) || ((false => MTD_NAND_AUtrue55false) && (MTD_NAND_AUtrue55false => false)))
((MTD && ((BF54x || BF52x) && MTD_NAND)) || ((false => MTD_NAND_BF5XX) && (MTD_NAND_BF5XX => false)))
((MTD && (MTD_NAND && MTD_NAND_BF5XX)) || (((true && (MTD && (MTD_NAND && MTD_NAND_BF5XX))) => MTD_NAND_BF5XX_HWECC) && (MTD_NAND_BF5XX_HWECC => (true && (MTD && (MTD_NAND && MTD_NAND_BF5XX))))))
((MTD && (MTD_NAND && MTD_NAND_BF5XX_HWECC)) || ((false => MTD_NAND_BF5XX_BOOTROM_ECC) && (MTD_NAND_BF5XX_BOOTROM_ECC => false)))
((MTD && (MTD_NAND && SH_SOLUTION_ENGINE)) || ((false => MTD_NAND_RTC_FROM4) && (MTD_NAND_RTC_FROM4 => false)))
((MTD && (MTD_NAND && (PPCHAMELEONEVB && BROKEN))) || ((false => MTD_NAND_PPCHAMELEONEVB) && (MTD_NAND_PPCHAMELEONEVB => false)))
((MTD && (MTD_NAND && ARCH_S3C24truefalse)) || ((false => MTD_NAND_S3C24truefalse) && (MTD_NAND_S3C24truefalse => false)))
((MTD && (MTD_NAND && MTD_NAND_S3C24truefalse)) || ((false => MTD_NAND_S3C24truefalse_DEBUG) && (MTD_NAND_S3C24truefalse_DEBUG => false)))
((MTD && (MTD_NAND && MTD_NAND_S3C24truefalse)) || ((false => MTD_NAND_S3C24truefalse_HWECC) && (MTD_NAND_S3C24truefalse_HWECC => false)))
((MTD && (MTD_NAND && MTD_NAND_S3C24truefalse)) || ((false => MTD_NAND_S3C24truefalse_CLKSTOP) && (MTD_NAND_S3C24truefalse_CLKSTOP => false)))
((MTD && (MTD_NAND && EXPERIMENTAL)) || ((false => MTD_NAND_DISKONCHIP) && (MTD_NAND_DISKONCHIP => false)))
((MTD && (MTD_NAND && MTD_NAND_DISKONCHIP)) || ((false => MTD_NAND_DISKONCHIP_PROBE_ADVANCED) && (MTD_NAND_DISKONCHIP_PROBE_ADVANCED => false)))
((MTD && (MTD_NAND && (MTD_NAND_DISKONCHIP && MTD_NAND_DISKONCHIP_PROBE_ADVANCED))) || (((true && (MTD && (MTD_NAND && MTD_NAND_DISKONCHIP))) => MTD_NAND_DISKONCHIP_PROBE_ADDRESS) && (MTD_NAND_DISKONCHIP_PROBE_ADDRESS => (true && (MTD && (MTD_NAND && MTD_NAND_DISKONCHIP))))))
((MTD && (MTD_NAND && MTD_NAND_DISKONCHIP_PROBE_ADVANCED)) || ((false => MTD_NAND_DISKONCHIP_PROBE_HIGH) && (MTD_NAND_DISKONCHIP_PROBE_HIGH => false)))
((MTD && (MTD_NAND && MTD_NAND_DISKONCHIP)) || ((false => MTD_NAND_DISKONCHIP_BBTWRITE) && (MTD_NAND_DISKONCHIP_BBTWRITE => false)))
((MTD && (MTD_NAND && ARCH_PXA)) || ((false => MTD_NAND_SHARPSL) && (MTD_NAND_SHARPSL => false)))
((MTD && (MTD_NAND && BASLER_EXCITE)) || ((false => MTD_NAND_BASLER_EXCITE) && (MTD_NAND_BASLER_EXCITE => false)))
((MTD && (MTD_NAND && PCI)) || ((false => MTD_NAND_CAFE) && (MTD_NAND_CAFE => false)))
((MTD && (MTD_NAND && (X86_32 && (X86_PC || X86_GENERICARCH)))) || ((false => MTD_NAND_CS553X) && (MTD_NAND_CS553X => false)))
((MTD && (MTD_NAND && (ARCH_AT9true || AVR32))) || ((false => MTD_NAND_ATMEL) && (MTD_NAND_ATMEL => false)))
((true && (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM926false || AVR32))) || ((false => MTD_NAND_ATMEL_ECC_HW) && (MTD_NAND_ATMEL_ECC_HW => false)))
(true || ((false => MTD_NAND_ATMEL_ECC_SOFT) && (MTD_NAND_ATMEL_ECC_SOFT => false)))
((true && DEBUG_KERNEL) || ((false => MTD_NAND_ATMEL_ECC_NONE) && (MTD_NAND_ATMEL_ECC_NONE => false)))
((MTD && (MTD_NAND && PXA3xx)) || ((false => MTD_NAND_PXA3xx) && (MTD_NAND_PXA3xx => false)))
((MTD && (MTD_NAND && MTD_NAND_PXA3xx)) || ((false => MTD_NAND_PXA3xx_BUILTIN) && (MTD_NAND_PXA3xx_BUILTIN => false)))
((MTD && (MTD_NAND && MACH_ARMCORE)) || ((false => MTD_NAND_CM_X27false) && (MTD_NAND_CM_X27false => false)))
((MTD && (MTD_NAND && PPC_PASEMI)) || ((false => MTD_NAND_PASEMI) && (MTD_NAND_PASEMI => false)))
((MTD && (MTD_NAND && MFD_TMIO)) || ((false => MTD_NAND_TMIO) && (MTD_NAND_TMIO => false)))
((MTD && (MTD_NAND && MTD_PARTITIONS)) || ((false => MTD_NAND_NANDSIM) && (MTD_NAND_NANDSIM => false)))
((MTD && MTD_NAND) || ((false => MTD_NAND_PLATFORM) && (MTD_NAND_PLATFORM => false)))
((MTD && (MTD_NAND && USB)) || ((false => MTD_ALAUDA) && (MTD_ALAUDA => false)))
((MTD && (PLAT_ORION && MTD_NAND)) || ((false => MTD_NAND_ORION) && (MTD_NAND_ORION => false)))
((MTD && (MTD_NAND && PPC_OF)) || ((false => MTD_NAND_FSL_ELBC) && (MTD_NAND_FSL_ELBC => false)))
((MTD && (MTD_NAND && (PPC_83xx || PPC_85xx))) || ((false => MTD_NAND_FSL_UPM) && (MTD_NAND_FSL_UPM => false)))
((MTD && (MTD_NAND && ARCH_MX2)) || ((false => MTD_NAND_MXC) && (MTD_NAND_MXC => false)))
((MTD && (MTD_NAND && (SUPERH && CPU_SUBTYPE_SH7723))) || ((false => MTD_NAND_SH_FLCTL) && (MTD_NAND_SH_FLCTL => false)))
(MTD || ((false => MTD_ONENAND) && (MTD_ONENAND => false)))
((MTD && MTD_ONENAND) || ((false => MTD_ONENAND_VERIFY_WRITE) && (MTD_ONENAND_VERIFY_WRITE => false)))
((MTD && (MTD_ONENAND && ARM)) || ((false => MTD_ONENAND_GENERIC) && (MTD_ONENAND_GENERIC => false)))
((MTD && (MTD_ONENAND && (ARCH_OMAP2 || ARCH_OMAP3))) || ((false => MTD_ONENAND_OMAP2) && (MTD_ONENAND_OMAP2 => false)))
((MTD && MTD_ONENAND) || ((false => MTD_ONENAND_OTP) && (MTD_ONENAND_OTP => false)))
((MTD && MTD_ONENAND) || ((false => MTD_ONENAND_2X_PROGRAM) && (MTD_ONENAND_2X_PROGRAM => false)))
((MTD && (MTD_ONENAND && MTD_PARTITIONS)) || ((false => MTD_ONENAND_SIM) && (MTD_ONENAND_SIM => false)))
(MTD || ((false => MTD_UBI) && (MTD_UBI => false)))
((MTD && MTD_UBI) || (((true && (MTD && MTD_UBI)) => MTD_UBI_WL_THRESHOLD) && (MTD_UBI_WL_THRESHOLD => (true && (MTD && MTD_UBI)))))
((MTD && MTD_UBI) || (((true && (MTD && MTD_UBI)) => MTD_UBI_BEB_RESERVE) && (MTD_UBI_BEB_RESERVE => (true && (MTD && MTD_UBI)))))
((MTD && MTD_UBI) || ((false => MTD_UBI_GLUEBI) && (MTD_UBI_GLUEBI => false)))
((MTD && (SYSFS && MTD_UBI)) || ((false => MTD_UBI_DEBUG) && (MTD_UBI_DEBUG => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_MSG) && (MTD_UBI_DEBUG_MSG => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_PARANOID) && (MTD_UBI_DEBUG_PARANOID => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_DISABLE_BGT) && (MTD_UBI_DEBUG_DISABLE_BGT => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_USERSPACE_IO) && (MTD_UBI_DEBUG_USERSPACE_IO => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_EMULATE_BITFLIPS) && (MTD_UBI_DEBUG_EMULATE_BITFLIPS => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_EMULATE_WRITE_FAILURES) && (MTD_UBI_DEBUG_EMULATE_WRITE_FAILURES => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_EMULATE_ERASE_FAILURES) && (MTD_UBI_DEBUG_EMULATE_ERASE_FAILURES => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_MSG_BLD) && (MTD_UBI_DEBUG_MSG_BLD => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_MSG_EBA) && (MTD_UBI_DEBUG_MSG_EBA => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_MSG_WL) && (MTD_UBI_DEBUG_MSG_WL => false)))
((MTD && MTD_UBI_DEBUG) || ((false => MTD_UBI_DEBUG_MSG_IO) && (MTD_UBI_DEBUG_MSG_IO => false)))
(false || (((true && (OF && (SPARC || PPC_OF))) => OF_DEVICE) && (OF_DEVICE => (true && (OF && (SPARC || PPC_OF))))))
(false || (((true && (OF && (PPC_OF && GPIOLIB))) => OF_GPIO) && (OF_GPIO => (true && (OF && (PPC_OF && GPIOLIB))))))
(false || (((true && ((PPC_OF && I2C) && I2C)) => OF_I2C) && (OF_I2C => (true && ((PPC_OF && I2C) && I2C)))))
(false || (((true && ((OF && (PPC_OF && SPI)) && SPI)) => OF_SPI) && (OF_SPI => (true && ((OF && (PPC_OF && SPI)) && SPI)))))
(HAS_IOMEM || ((false => PARPORT) && (PARPORT => false)))
((PARPORT && ((!SPARC64 || PCI) && (!SPARC32 && (!M32R && (!FRV && ((!M68K || ISA) && (!MNtruefalse3falsefalse && (!AVR32 && !BLACKFIN)))))))) || ((false => PARPORT_PC) && (PARPORT_PC => false)))
((PARPORT && (SERIAL_825false_PCI && (PARPORT_PC && PCI))) || ((false => PARPORT_SERIAL) && (PARPORT_SERIAL => false)))
((PARPORT && (PARPORT_PC && EXPERIMENTAL)) || ((false => PARPORT_PC_FIFO) && (PARPORT_PC_FIFO => false)))
((PARPORT && (PARPORT_PC && EXPERIMENTAL)) || ((false => PARPORT_PC_SUPERIO) && (PARPORT_PC_SUPERIO => false)))
((PARPORT && (PCMCIA && PARPORT_PC)) || ((false => PARPORT_PC_PCMCIA) && (PARPORT_PC_PCMCIA => false)))
((PARPORT && (SGI_IP32 && EXPERIMENTAL)) || ((false => PARPORT_IP32) && (PARPORT_IP32 => false)))
((PARPORT && AMIGA) || ((false => PARPORT_AMIGA) && (PARPORT_AMIGA => false)))
((PARPORT && ZORRO) || ((false => PARPORT_MFC3) && (PARPORT_MFC3 => false)))
((PARPORT && ATARI) || ((false => PARPORT_ATARI) && (PARPORT_ATARI => false)))
(false || (((true && (PARPORT && GSC)) => PARPORT_GSC) && (PARPORT_GSC => (true && (PARPORT && GSC)))))
((PARPORT && (SBUS && EXPERIMENTAL)) || ((false => PARPORT_SUNBPP) && (PARPORT_SUNBPP => false)))
(PARPORT || ((false => PARPORT_AX88796) && (PARPORT_AX88796 => false)))
(PARPORT || ((false => PARPORT_true284) && (PARPORT_true284 => false)))
(false || (((((((((xtrue83 || xtrue84) || xtrue85) || xtrue86) || xtrue87) || xtrue88) || xtrue89) || xtrue9false) => PARPORT_NOT_PC) && (PARPORT_NOT_PC => (((((((xtrue83 || xtrue84) || xtrue85) || xtrue86) || xtrue87) || xtrue88) || xtrue89) || xtrue9false))))
(xtrue83 <=> (PARPORT_MFC3 && (PARPORT && ZORRO)))
(xtrue84 <=> (PARPORT_SUNBPP && (PARPORT && (SBUS && EXPERIMENTAL))))
(xtrue85 <=> (PARPORT_AX88796 && PARPORT))
(xtrue86 <=> (PARPORT_AMIGA && (PARPORT && AMIGA)))
(xtrue87 <=> (PARPORT_GSC && PARPORT))
(xtrue88 <=> (USB_USS72false && (USB_SUPPORT && (USB && PARPORT))))
(xtrue89 <=> (PARPORT_IP32 && (PARPORT && (SGI_IP32 && EXPERIMENTAL))))
(xtrue9false <=> (PARPORT_ATARI && (PARPORT && ATARI)))
((HAS_IOMEM && (ISA || ACPI)) || (((ACPI && (!X86_VOYAGER && (!IA64_HP_SIM && ((IA64 || X86) && (PCI && PM))))) => PNP) && (PNP => (ACPI && (!X86_VOYAGER && (!IA64_HP_SIM && ((IA64 || X86) && (PCI && PM))))))))
(PNP || (((true && PNP) => PNP_DEBUG_MESSAGES) && (PNP_DEBUG_MESSAGES => (true && PNP))))
((PNP && ISA) || ((((((xtrue9true || xtrue92) || xtrue93) || xtrue94) || xtrue95) => ISAPNP) && (ISAPNP => ((((xtrue9true || xtrue92) || xtrue93) || xtrue94) || xtrue95))))
(xtrue9true <=> (SND_DTfalsetrue9X && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue92 <=> (SND_ES968 && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue93 <=> (SND_ALStruefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue94 <=> (SND_AZT232false && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue95 <=> (SND_ADtrue8true6A && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
((PNP && (ISA && (X86 && EXPERIMENTAL))) || ((false => PNPBIOS) && (PNPBIOS => false)))
((PNP && (PNPBIOS && PROC_FS)) || ((false => PNPBIOS_PROC_FS) && (PNPBIOS_PROC_FS => false)))
(false || (((true && (PNP && (PNP && ACPI))) => PNPACPI) && (PNPACPI => (true && (PNP && (PNP && ACPI))))))
(BLOCK || (((true && BLOCK) => BLK_DEV) && (BLK_DEV => (true && BLOCK))))
((BLK_DEV && ARCH_MAY_HAVE_PC_FDC) || ((false => BLK_DEV_FD) && (BLK_DEV_FD => false)))
((BLK_DEV && AMIGA) || ((false => AMIGA_FLOPPY) && (AMIGA_FLOPPY => false)))
((BLK_DEV && ATARI) || ((false => ATARI_FLOPPY) && (ATARI_FLOPPY => false)))
((BLK_DEV && (PPC_PMAC && !PPC_PMAC64)) || ((false => MAC_FLOPPY) && (MAC_FLOPPY => false)))
((BLK_DEV && ZORRO) || ((false => AMIGA_Z2RAM) && (AMIGA_Z2RAM => false)))
((BLK_DEV && (ISA && ISA_DMA_API)) || ((false => BLK_DEV_XD) && (BLK_DEV_XD => false)))
((BLK_DEV && PARPORT_PC) || ((false => PARIDE) && (PARIDE => false)))
((BLK_DEV && SH_DREAMCAST) || ((false => GDROM) && (GDROM => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_PD) && (PARIDE_PD => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_PCD) && (PARIDE_PCD => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_PF) && (PARIDE_PF => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_PT) && (PARIDE_PT => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_PG) && (PARIDE_PG => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_ATEN) && (PARIDE_ATEN => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_BPCK) && (PARIDE_BPCK => false)))
((BLK_DEV && (PARIDE && !a64BIT)) || ((false => PARIDE_BPCK6) && (PARIDE_BPCK6 => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_COMM) && (PARIDE_COMM => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_DSTR) && (PARIDE_DSTR => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_FIT2) && (PARIDE_FIT2 => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_FIT3) && (PARIDE_FIT3 => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_EPAT) && (PARIDE_EPAT => false)))
((BLK_DEV && (PARIDE_EPAT && EXPERIMENTAL)) || ((false => PARIDE_EPATC8) && (PARIDE_EPATC8 => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_EPIA) && (PARIDE_EPIA => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_FRIQ) && (PARIDE_FRIQ => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_FRPW) && (PARIDE_FRPW => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_KBIC) && (PARIDE_KBIC => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_KTTI) && (PARIDE_KTTI => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_ON2false) && (PARIDE_ON2false => false)))
((BLK_DEV && PARIDE) || ((false => PARIDE_ON26) && (PARIDE_ON26 => false)))
((BLK_DEV && (PCI && VIRT_TO_BUS)) || ((false => BLK_CPQ_DA) && (BLK_CPQ_DA => false)))
((BLK_DEV && PCI) || ((false => BLK_CPQ_CISS_DA) && (BLK_CPQ_CISS_DA => false)))
((BLK_DEV && (BLK_CPQ_CISS_DA && (PROC_FS && (SCSI || SCSI)))) || ((false => CISS_SCSI_TAPE) && (CISS_SCSI_TAPE => false)))
((BLK_DEV && PCI) || ((false => BLK_DEV_DAC96false) && (BLK_DEV_DAC96false => false)))
((BLK_DEV && (PCI && EXPERIMENTAL)) || ((false => BLK_DEV_UMEM) && (BLK_DEV_UMEM => false)))
((BLK_DEV && UML) || ((false => BLK_DEV_UBD) && (BLK_DEV_UBD => false)))
((BLK_DEV && BLK_DEV_UBD) || ((false => BLK_DEV_UBD_SYNC) && (BLK_DEV_UBD_SYNC => false)))
(false || (((true && (BLK_DEV && BLK_DEV_UBD)) => BLK_DEV_COW_COMMON) && (BLK_DEV_COW_COMMON => (true && (BLK_DEV && BLK_DEV_UBD)))))
(BLK_DEV || ((false => BLK_DEV_LOOP) && (BLK_DEV_LOOP => false)))
((BLK_DEV && BLK_DEV_LOOP) || ((false => BLK_DEV_CRYPTOLOOP) && (BLK_DEV_CRYPTOLOOP => false)))
((BLK_DEV && NET) || ((false => BLK_DEV_NBD) && (BLK_DEV_NBD => false)))
((BLK_DEV && PCI) || ((false => BLK_DEV_SX8) && (BLK_DEV_SX8 => false)))
((BLK_DEV && USB) || ((false => BLK_DEV_UB) && (BLK_DEV_UB => false)))
(BLK_DEV || ((false => BLK_DEV_RAM) && (BLK_DEV_RAM => false)))
((BLK_DEV && BLK_DEV_RAM) || (((true && (BLK_DEV && BLK_DEV_RAM)) => BLK_DEV_RAM_COUNT) && (BLK_DEV_RAM_COUNT => (true && (BLK_DEV && BLK_DEV_RAM)))))
((BLK_DEV && BLK_DEV_RAM) || (((true && (BLK_DEV && BLK_DEV_RAM)) => BLK_DEV_RAM_SIZE) && (BLK_DEV_RAM_SIZE => (true && (BLK_DEV && BLK_DEV_RAM)))))
((BLK_DEV && BLK_DEV_RAM) || ((false => BLK_DEV_XIP) && (BLK_DEV_XIP => false)))
((BLK_DEV && !UML) || ((false => CDROM_PKTCDVD) && (CDROM_PKTCDVD => false)))
((BLK_DEV && CDROM_PKTCDVD) || (((true && (BLK_DEV && CDROM_PKTCDVD)) => CDROM_PKTCDVD_BUFFERS) && (CDROM_PKTCDVD_BUFFERS => (true && (BLK_DEV && CDROM_PKTCDVD)))))
((BLK_DEV && (CDROM_PKTCDVD && EXPERIMENTAL)) || ((false => CDROM_PKTCDVD_WCACHE) && (CDROM_PKTCDVD_WCACHE => false)))
((BLK_DEV && NET) || ((false => ATA_OVER_ETH) && (ATA_OVER_ETH => false)))
((BLK_DEV && SUN_LDOMS) || ((false => SUNVDC) && (SUNVDC => false)))
((BLK_DEV && (S39false && BLOCK)) || ((false => BLK_DEV_XPRAM) && (BLK_DEV_XPRAM => false)))
((BLK_DEV && (S39false && BLOCK)) || ((false => DCSSBLK) && (DCSSBLK => false)))
((BLK_DEV && (CCW && BLOCK)) || ((false => DASD) && (DASD => false)))
((BLK_DEV && DASD) || ((false => DASD_PROFILE) && (DASD_PROFILE => false)))
((BLK_DEV && DASD) || ((false => DASD_ECKD) && (DASD_ECKD => false)))
((BLK_DEV && DASD) || ((false => DASD_FBA) && (DASD_FBA => false)))
((BLK_DEV && DASD) || ((false => DASD_DIAG) && (DASD_DIAG => false)))
((BLK_DEV && DASD) || ((false => DASD_EER) && (DASD_EER => false)))
((BLK_DEV && 4xx) || ((false => XILINX_SYSACE) && (XILINX_SYSACE => false)))
((BLK_DEV && XEN) || (((true && (BLK_DEV && XEN)) => XEN_BLKDEV_FRONTEND) && (XEN_BLKDEV_FRONTEND => (true && (BLK_DEV && XEN)))))
((BLK_DEV && (EXPERIMENTAL && VIRTIO)) || ((false => VIRTIO_BLK) && (VIRTIO_BLK => false)))
((BLK_DEV && (HAVE_IDE && (!ARM || (ARCH_RPC || (ARCH_SHARK || BROKEN))))) || ((false => BLK_DEV_HD) && (BLK_DEV_HD => false)))
(true || (((true && true) => MISC_DEVICES) && (MISC_DEVICES => (true && true))))
((MISC_DEVICES && (AVR32 || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9RL || ARCH_AT9trueCAP9)))) || ((false => ATMEL_PWM) && (ATMEL_PWM => false)))
((MISC_DEVICES && (AVR32 || ARCH_AT9true)) || ((false => ATMEL_TCLIB) && (ATMEL_TCLIB => false)))
((MISC_DEVICES && (ATMEL_TCLIB && GENERIC_TIME)) || (((true && (MISC_DEVICES && (ATMEL_TCLIB && GENERIC_TIME))) => ATMEL_TCB_CLKSRC) && (ATMEL_TCB_CLKSRC => (true && (MISC_DEVICES && (ATMEL_TCLIB && GENERIC_TIME))))))
((MISC_DEVICES && (ATMEL_TCB_CLKSRC && (ARCH_AT9trueRM92falsefalse || (ARCH_AT9trueSAM926false || CPU_AT32AP7falsefalseX)))) || (((true && (MISC_DEVICES && ATMEL_TCB_CLKSRC)) => ATMEL_TCB_CLKSRC_BLOCK) && (ATMEL_TCB_CLKSRC_BLOCK => (true && (MISC_DEVICES && ATMEL_TCB_CLKSRC)))))
((MISC_DEVICES && (X86 && (PCI && (INPUT && EXPERIMENTAL)))) || ((false => IBM_ASM) && (IBM_ASM => false)))
((MISC_DEVICES && PCI) || ((false => PHANTOM) && (PHANTOM => false)))
(MISC_DEVICES || ((((((((xtrue96 || xtrue97) || xtrue98) || xtrue99) || x2falsefalse) || x2falsetrue) || x2false2) => EEPROM_93CX6) && (EEPROM_93CX6 => ((((((xtrue96 || xtrue97) || xtrue98) || xtrue99) || x2falsefalse) || x2falsetrue) || x2false2))))
(xtrue96 <=> (RTL8true8false && (NETDEVICES && (!S39false && (MAC8false2truetrue && (PCI && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(xtrue97 <=> (RT24falsefalsePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))))
(xtrue98 <=> (AX88796_93CX6 && (NETDEVICES && (NET_ETHERNET && AX88796))))
(xtrue99 <=> (RT25falsefalsePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))))
(x2falsefalse <=> (RTL8true87 && (NETDEVICES && (!S39false && (MAC8false2truetrue && (USB && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(x2falsetrue <=> (ADM82truetrue && (NETDEVICES && (!S39false && (MAC8false2truetrue && (PCI && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(x2false2 <=> (RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))))
((MISC_DEVICES && PCI) || ((false => SGI_IOC4) && (SGI_IOC4 => false)))
((MISC_DEVICES && (EXPERIMENTAL && PCI)) || ((((MMC_TIFM_SD && (MMC && (EXPERIMENTAL && PCI))) || (MEMSTICK_TIFM_MS && (MEMSTICK && (EXPERIMENTAL && PCI)))) => TIFM_CORE) && (TIFM_CORE => ((MMC_TIFM_SD && (MMC && (EXPERIMENTAL && PCI))) || (MEMSTICK_TIFM_MS && (MEMSTICK && (EXPERIMENTAL && PCI)))))))
((MISC_DEVICES && (PCI && (TIFM_CORE && EXPERIMENTAL))) || (((true && ((MISC_DEVICES && (PCI && (TIFM_CORE && EXPERIMENTAL))) && TIFM_CORE)) => TIFM_7XXtrue) && (TIFM_7XXtrue => (true && ((MISC_DEVICES && (PCI && (TIFM_CORE && EXPERIMENTAL))) && TIFM_CORE)))))
((MISC_DEVICES && (X86 && (EXPERIMENTAL && (ACPI && (LEDS_CLASS && (NEW_LEDS && (BACKLIGHT_CLASS_DEVICE && (SERIO_I8false42 && RFKILL)))))))) || ((false => ACER_WMI) && (ACER_WMI => false)))
((MISC_DEVICES && (X86 && (ACPI && (EXPERIMENTAL && (!ACPI_ASUS && (LEDS_CLASS && (NEW_LEDS && BACKLIGHT_CLASS_DEVICE))))))) || ((false => ASUS_LAPTOP) && (ASUS_LAPTOP => false)))
((MISC_DEVICES && (X86 && (ACPI && (INPUT && BACKLIGHT_CLASS_DEVICE)))) || ((false => FUJITSU_LAPTOP) && (FUJITSU_LAPTOP => false)))
((MISC_DEVICES && FUJITSU_LAPTOP) || ((false => FUJITSU_LAPTOP_DEBUG) && (FUJITSU_LAPTOP_DEBUG => false)))
((MISC_DEVICES && (X86 && (!X86_64 && (EXPERIMENTAL && ACPI)))) || ((false => TCtruetruefalsefalse_WMI) && (TCtruetruefalsefalse_WMI => false)))
((MISC_DEVICES && (ACPI_WMI && (INPUT && RFKILL))) || ((false => HP_WMI) && (HP_WMI => false)))
((MISC_DEVICES && (I2C && EXPERIMENTAL)) || ((false => ICS932S4falsetrue) && (ICS932S4falsetrue => false)))
((MISC_DEVICES && (X86 && (ACPI && BACKLIGHT_CLASS_DEVICE))) || ((false => MSI_LAPTOP) && (MSI_LAPTOP => false)))
((MISC_DEVICES && (X86 && (INPUT && (ACPI && BACKLIGHT_CLASS_DEVICE)))) || ((false => PANASONIC_LAPTOP) && (PANASONIC_LAPTOP => false)))
((MISC_DEVICES && (X86 && (ACPI && BACKLIGHT_CLASS_DEVICE))) || ((false => COMPAL_LAPTOP) && (COMPAL_LAPTOP => false)))
((MISC_DEVICES && (X86 && (ACPI && INPUT))) || ((false => SONY_LAPTOP) && (SONY_LAPTOP => false)))
((MISC_DEVICES && SONY_LAPTOP) || ((false => SONYPI_COMPAT) && (SONYPI_COMPAT => false)))
((MISC_DEVICES && (X86 && ACPI)) || ((false => THINKPAD_ACPI) && (THINKPAD_ACPI => false)))
((MISC_DEVICES && THINKPAD_ACPI) || ((false => THINKPAD_ACPI_DEBUG) && (THINKPAD_ACPI_DEBUG => false)))
((MISC_DEVICES && (THINKPAD_ACPI && !ACPI_DOCK)) || ((false => THINKPAD_ACPI_DOCK) && (THINKPAD_ACPI_DOCK => false)))
((MISC_DEVICES && THINKPAD_ACPI) || (((true && (MISC_DEVICES && THINKPAD_ACPI)) => THINKPAD_ACPI_BAY) && (THINKPAD_ACPI_BAY => (true && (MISC_DEVICES && THINKPAD_ACPI)))))
((MISC_DEVICES && THINKPAD_ACPI) || (((true && (MISC_DEVICES && THINKPAD_ACPI)) => THINKPAD_ACPI_VIDEO) && (THINKPAD_ACPI_VIDEO => (true && (MISC_DEVICES && THINKPAD_ACPI)))))
((MISC_DEVICES && THINKPAD_ACPI) || (((true && (MISC_DEVICES && THINKPAD_ACPI)) => THINKPAD_ACPI_HOTKEY_POLL) && (THINKPAD_ACPI_HOTKEY_POLL => (true && (MISC_DEVICES && THINKPAD_ACPI)))))
((MISC_DEVICES && (AVR32 || ARCH_AT9true)) || ((false => ATMEL_SSC) && (ATMEL_SSC => false)))
((MISC_DEVICES && (ACPI_THERMAL && X86)) || ((false => INTEL_MENLOW) && (INTEL_MENLOW => false)))
((MISC_DEVICES && (X86 && (ACPI && (BACKLIGHT_CLASS_DEVICE && (HWMON && (EXPERIMENTAL && RFKILL)))))) || ((false => EEEPC_LAPTOP) && (EEEPC_LAPTOP => false)))
(MISC_DEVICES || ((false => ENCLOSURE_SERVICES) && (ENCLOSURE_SERVICES => false)))
((MISC_DEVICES && (NET && ((IA64_GENERIC || (IA64_SGI_SN2 || (IA64_SGI_UV || X86_64))) && SMP))) || ((false => SGI_XP) && (SGI_XP => false)))
((MISC_DEVICES && PCI) || ((false => HP_ILO) && (HP_ILO => false)))
((MISC_DEVICES && ((X86_64 || (IA64_SGI_UV || IA64_GENERIC)) && SMP)) || (((SGI_XP && (MISC_DEVICES && (NET && ((IA64_GENERIC || (IA64_SGI_SN2 || (IA64_SGI_UV || X86_64))) && ((IA64_GENERIC || (IA64_SGI_UV || X86_64)) && SMP))))) => SGI_GRU) && (SGI_GRU => (SGI_XP && (MISC_DEVICES && (NET && ((IA64_GENERIC || (IA64_SGI_SN2 || (IA64_SGI_UV || X86_64))) && ((IA64_GENERIC || (IA64_SGI_UV || X86_64)) && SMP))))))))
((MISC_DEVICES && SGI_GRU) || ((false => SGI_GRU_DEBUG) && (SGI_GRU_DEBUG => false)))
((MISC_DEVICES && EXPERIMENTAL) || (((true && ((MISC_DEVICES && EXPERIMENTAL) && no)) => C2PORT) && (C2PORT => (true && ((MISC_DEVICES && EXPERIMENTAL) && no)))))
((MISC_DEVICES && (X86 && C2PORT)) || (((true && ((MISC_DEVICES && (X86 && C2PORT)) && no)) => C2PORT_DURAMAR_2true5false) && (C2PORT_DURAMAR_2true5false => (true && ((MISC_DEVICES && (X86 && C2PORT)) && no)))))
(false || (((X86 && true) => HAVE_IDE) && (HAVE_IDE => (X86 && true))))
((HAVE_IDE && BLOCK) || ((false => IDE) && (IDE => false)))
(false || ((((((((((((((x2false3 || x2false4) || x2false5) || x2false6) || x2false7) || x2false8) || x2false9) || x2truefalse) || x2truetrue) || x2true2) || x2true3) || x2true4) || x2true5) => IDE_TIMINGS) && (IDE_TIMINGS => ((((((((((((x2false3 || x2false4) || x2false5) || x2false6) || x2false7) || x2false8) || x2false9) || x2truefalse) || x2truetrue) || x2true2) || x2true3) || x2true4) || x2true5))))
(x2false3 <=> (BLK_DEV_PALMCHIP_BK37truefalse && (IDE && ARCH_DAVINCI)))
(x2false4 <=> (BLK_DEV_CY82C693 && (IDE && (PCI && ALPHA))))
(x2false5 <=> (BLK_DEV_ALItrue5X3 && (IDE && PCI)))
(x2false6 <=> (BLK_DEV_HT656falseB && (IDE && (ISA && (ALPHA || (X86 || MIPS))))))
(x2false7 <=> (BLK_DEV_CMD64false && (IDE && X86)))
(x2false8 <=> (BLK_DEV_QD65XX && (IDE && (ISA && (ALPHA || (X86 || MIPS))))))
(x2false9 <=> (BLK_DEV_SL82Ctruefalse5 && (IDE && (PCI && (PPC || ARM)))))
(x2truefalse <=> (BLK_DEV_CMD64X && (IDE && PCI)))
(x2truetrue <=> (BLK_DEV_ALItrue4XX && (IDE && (ISA && (ALPHA || (X86 || MIPS))))))
(x2true2 <=> (BLK_DEV_VIA82CXXX && (IDE && PCI)))
(x2true3 <=> (BLK_DEV_IDE_PMAC && (PPC_PMAC && IDE)))
(x2true4 <=> (BLK_DEV_AMD74XX && (IDE && (PCI && !ARM))))
(x2true5 <=> (BLK_DEV_IDE_TX4938 && (IDE && SOC_TX4938)))
(false || (((((IDE_GD_ATAPI && (IDE && IDE_GD)) || (BLK_DEV_IDESCSI && (IDE && SCSI))) || (BLK_DEV_IDETAPE && IDE)) => IDE_ATAPI) && (IDE_ATAPI => (((IDE_GD_ATAPI && (IDE && IDE_GD)) || (BLK_DEV_IDESCSI && (IDE && SCSI))) || (BLK_DEV_IDETAPE && IDE)))))
(IDE || ((false => BLK_DEV_IDE_SATA) && (BLK_DEV_IDE_SATA => false)))
(IDE || (((true && IDE) => IDE_GD) && (IDE_GD => (true && IDE))))
((IDE && IDE_GD) || (((true && (IDE && IDE_GD)) => IDE_GD_ATA) && (IDE_GD_ATA => (true && (IDE && IDE_GD)))))
((IDE && IDE_GD) || ((false => IDE_GD_ATAPI) && (IDE_GD_ATAPI => false)))
((IDE && PCMCIA) || ((false => BLK_DEV_IDECS) && (BLK_DEV_IDECS => false)))
((IDE && (CARDBUS && PCI)) || ((false => BLK_DEV_DELKIN) && (BLK_DEV_DELKIN => false)))
(IDE || ((false => BLK_DEV_IDECD) && (BLK_DEV_IDECD => false)))
((IDE && (BLK_DEV_IDECD && EMBEDDED)) || (((true && (IDE && BLK_DEV_IDECD)) => BLK_DEV_IDECD_VERBOSE_ERRORS) && (BLK_DEV_IDECD_VERBOSE_ERRORS => (true && (IDE && BLK_DEV_IDECD)))))
(IDE || ((false => BLK_DEV_IDETAPE) && (BLK_DEV_IDETAPE => false)))
((IDE && SCSI) || ((false => BLK_DEV_IDESCSI) && (BLK_DEV_IDESCSI => false)))
((IDE && ACPI) || ((false => BLK_DEV_IDEACPI) && (BLK_DEV_IDEACPI => false)))
(IDE || ((false => IDE_TASK_IOCTL) && (IDE_TASK_IOCTL => false)))
((IDE && PROC_FS) || (((true && (IDE && PROC_FS)) => IDE_PROC_FS) && (IDE_PROC_FS => (true && (IDE && PROC_FS)))))
((IDE && (ALPHA || (X86 || (IA64 || (M32R || MIPS))))) || ((false => IDE_GENERIC) && (IDE_GENERIC => false)))
(IDE || ((false => BLK_DEV_PLATFORM) && (BLK_DEV_PLATFORM => false)))
((IDE && X86) || ((false => BLK_DEV_CMD64false) && (BLK_DEV_CMD64false => false)))
((IDE && BLK_DEV_CMD64false) || ((false => BLK_DEV_CMD64false_ENHANCED) && (BLK_DEV_CMD64false_ENHANCED => false)))
((IDE && PNP) || ((false => BLK_DEV_IDEPNP) && (BLK_DEV_IDEPNP => false)))
(false || (((((BLK_DEV_PALMCHIP_BK37truefalse && (IDE && ARCH_DAVINCI)) || (BLK_DEV_IDEDMA_PCI && (IDE && PCI))) || (BLK_DEV_IDE_TX4939 && (IDE && SOC_TX4939))) => BLK_DEV_IDEDMA_SFF) && (BLK_DEV_IDEDMA_SFF => (((BLK_DEV_PALMCHIP_BK37truefalse && (IDE && ARCH_DAVINCI)) || (BLK_DEV_IDEDMA_PCI && (IDE && PCI))) || (BLK_DEV_IDE_TX4939 && (IDE && SOC_TX4939))))))
(false || ((((((BLK_DEV_IDEDMA_PCI && (IDE && PCI)) || (BLK_DEV_GENERIC && (IDE && PCI))) || (BLK_DEV_OPTI62true && (IDE && (PCI && EXPERIMENTAL)))) || (BLK_DEV_RZtruefalsefalsefalse && (IDE && (PCI && X86)))) => BLK_DEV_IDEPCI) && (BLK_DEV_IDEPCI => ((((BLK_DEV_IDEDMA_PCI && (IDE && PCI)) || (BLK_DEV_GENERIC && (IDE && PCI))) || (BLK_DEV_OPTI62true && (IDE && (PCI && EXPERIMENTAL)))) || (BLK_DEV_RZtruefalsefalsefalse && (IDE && (PCI && X86)))))))
((PCI && (IDE && BLK_DEV_IDEPCI)) || (((true && (PCI && (IDE && BLK_DEV_IDEPCI))) => IDEPCI_PCIBUS_ORDER) && (IDEPCI_PCIBUS_ORDER => (true && (PCI && (IDE && BLK_DEV_IDEPCI))))))
((IDE && (PCI && (BLK_DEV_IDEPCI && (BLK_DEV_AEC62XX || (BLK_DEV_GENERIC || (BLK_DEV_HPT366 || (BLK_DEV_PDC2false2XX_NEW || (BLK_DEV_PDC2false2XX_OLD || BLK_DEV_TC86Cfalsefalsetrue)))))))) || ((false => BLK_DEV_OFFBOARD) && (BLK_DEV_OFFBOARD => false)))
((IDE && PCI) || ((false => BLK_DEV_GENERIC) && (BLK_DEV_GENERIC => false)))
((IDE && (PCI && EXPERIMENTAL)) || ((false => BLK_DEV_OPTI62true) && (BLK_DEV_OPTI62true => false)))
((IDE && (PCI && X86)) || ((false => BLK_DEV_RZtruefalsefalsefalse) && (BLK_DEV_RZtruefalsefalsefalse => false)))
(false || (((((((((((((((((((((((((((((((x2true6 || x2false4) || x2false5) || x2true7) || x2true8) || x2true9) || x22false) || x22true) || x222) || x223) || x224) || x2false9) || x225) || x226) || x227) || x228) || x229) || x23false) || x2truefalse) || x2true2) || x23true) || x232) || x233) || x234) || x235) || x236) || x2true3) || x2true4) || x237) || x238) => BLK_DEV_IDEDMA_PCI) && (BLK_DEV_IDEDMA_PCI => (((((((((((((((((((((((((((((x2true6 || x2false4) || x2false5) || x2true7) || x2true8) || x2true9) || x22false) || x22true) || x222) || x223) || x224) || x2false9) || x225) || x226) || x227) || x228) || x229) || x23false) || x2truefalse) || x2true2) || x23true) || x232) || x233) || x234) || x235) || x236) || x2true3) || x2true4) || x237) || x238))))
(x2true6 <=> (BLK_DEV_SIS55true3 && (IDE && (PCI && X86))))
(x2false4 <=> (BLK_DEV_CY82C693 && (IDE && (PCI && ALPHA))))
(x2false5 <=> (BLK_DEV_ALItrue5X3 && (IDE && PCI)))
(x2true7 <=> (BLK_DEV_PDC2false2XX_NEW && (IDE && PCI)))
(x2true8 <=> (BLK_DEV_CS5535 && (IDE && (PCI && (X86 && !X86_64)))))
(x2true9 <=> (BLK_DEV_IT82true3 && (IDE && PCI)))
(x22false <=> (BLK_DEV_CS553false && (IDE && PCI)))
(x22true <=> (BLK_DEV_SLC9falseE66 && (IDE && PCI)))
(x222 <=> (BLK_DEV_HPT366 && (IDE && PCI)))
(x223 <=> (BLK_DEV_SIIMAGE && (IDE && PCI)))
(x224 <=> (BLK_DEV_IT82trueX && (IDE && PCI)))
(x2false9 <=> (BLK_DEV_SL82Ctruefalse5 && (IDE && (PCI && (PPC || ARM)))))
(x225 <=> (BLK_DEV_SGIIOC4 && (IDE && (PCI && ((IA64_SGI_SN2 || IA64_GENERIC) && SGI_IOC4)))))
(x226 <=> (BLK_DEV_SCtrue2falsefalse && (IDE && PCI)))
(x227 <=> (BLK_DEV_AEC62XX && (IDE && PCI)))
(x228 <=> (BLK_DEV_PIIX && (IDE && PCI)))
(x229 <=> (BLK_DEV_TRIFLEX && (IDE && PCI)))
(x23false <=> (BLK_DEV_JMICRON && (IDE && PCI)))
(x2truefalse <=> (BLK_DEV_CMD64X && (IDE && PCI)))
(x2true2 <=> (BLK_DEV_VIA82CXXX && (IDE && PCI)))
(x23true <=> (BLK_DEV_PDC2false2XX_OLD && (IDE && PCI)))
(x232 <=> (BLK_DEV_SVWKS && (IDE && PCI)))
(x233 <=> (BLK_DEV_ATIIXP && (IDE && (PCI && X86))))
(x234 <=> (BLK_DEV_TRM29false && (IDE && PCI)))
(x235 <=> (BLK_DEV_CS552false && (IDE && (PCI && EXPERIMENTAL))))
(x236 <=> (BLK_DEV_CELLEB && (IDE && (PCI && PPC_CELLEB))))
(x2true3 <=> (BLK_DEV_IDE_PMAC && (PPC_PMAC && IDE)))
(x2true4 <=> (BLK_DEV_AMD74XX && (IDE && (PCI && !ARM))))
(x237 <=> (BLK_DEV_NS874true5 && (IDE && PCI)))
(x238 <=> (BLK_DEV_TC86Cfalsefalsetrue && (IDE && PCI)))
((IDE && PCI) || ((false => BLK_DEV_AEC62XX) && (BLK_DEV_AEC62XX => false)))
((IDE && PCI) || ((false => BLK_DEV_ALItrue5X3) && (BLK_DEV_ALItrue5X3 => false)))
((IDE && (PCI && !ARM)) || ((false => BLK_DEV_AMD74XX) && (BLK_DEV_AMD74XX => false)))
((IDE && (PCI && X86)) || ((false => BLK_DEV_ATIIXP) && (BLK_DEV_ATIIXP => false)))
((IDE && PCI) || ((false => BLK_DEV_CMD64X) && (BLK_DEV_CMD64X => false)))
((IDE && PCI) || ((false => BLK_DEV_TRIFLEX) && (BLK_DEV_TRIFLEX => false)))
((IDE && (PCI && ALPHA)) || ((false => BLK_DEV_CY82C693) && (BLK_DEV_CY82C693 => false)))
((IDE && (PCI && EXPERIMENTAL)) || ((false => BLK_DEV_CS552false) && (BLK_DEV_CS552false => false)))
((IDE && PCI) || ((false => BLK_DEV_CS553false) && (BLK_DEV_CS553false => false)))
((IDE && (PCI && (X86 && !X86_64))) || ((false => BLK_DEV_CS5535) && (BLK_DEV_CS5535 => false)))
((IDE && PCI) || ((false => BLK_DEV_HPT366) && (BLK_DEV_HPT366 => false)))
((IDE && PCI) || ((false => BLK_DEV_JMICRON) && (BLK_DEV_JMICRON => false)))
((IDE && PCI) || ((false => BLK_DEV_SCtrue2falsefalse) && (BLK_DEV_SCtrue2falsefalse => false)))
((IDE && PCI) || ((false => BLK_DEV_PIIX) && (BLK_DEV_PIIX => false)))
((IDE && PCI) || ((false => BLK_DEV_IT82true3) && (BLK_DEV_IT82true3 => false)))
((IDE && PCI) || ((false => BLK_DEV_IT82trueX) && (BLK_DEV_IT82trueX => false)))
((IDE && PCI) || ((false => BLK_DEV_NS874true5) && (BLK_DEV_NS874true5 => false)))
((IDE && PCI) || ((false => BLK_DEV_PDC2false2XX_OLD) && (BLK_DEV_PDC2false2XX_OLD => false)))
((IDE && PCI) || ((false => BLK_DEV_PDC2false2XX_NEW) && (BLK_DEV_PDC2false2XX_NEW => false)))
((IDE && PCI) || ((false => BLK_DEV_SVWKS) && (BLK_DEV_SVWKS => false)))
((IDE && (PCI && ((IA64_SGI_SN2 || IA64_GENERIC) && SGI_IOC4))) || ((false => BLK_DEV_SGIIOC4) && (BLK_DEV_SGIIOC4 => false)))
((IDE && PCI) || ((false => BLK_DEV_SIIMAGE) && (BLK_DEV_SIIMAGE => false)))
((IDE && (PCI && X86)) || ((false => BLK_DEV_SIS55true3) && (BLK_DEV_SIS55true3 => false)))
((IDE && (PCI && (PPC || ARM))) || ((false => BLK_DEV_SL82Ctruefalse5) && (BLK_DEV_SL82Ctruefalse5 => false)))
((IDE && PCI) || ((false => BLK_DEV_SLC9falseE66) && (BLK_DEV_SLC9falseE66 => false)))
((IDE && PCI) || ((false => BLK_DEV_TRM29false) && (BLK_DEV_TRM29false => false)))
((IDE && PCI) || ((false => BLK_DEV_VIA82CXXX) && (BLK_DEV_VIA82CXXX => false)))
((IDE && PCI) || ((false => BLK_DEV_TC86Cfalsefalsetrue) && (BLK_DEV_TC86Cfalsefalsetrue => false)))
((IDE && (PCI && PPC_CELLEB)) || ((false => BLK_DEV_CELLEB) && (BLK_DEV_CELLEB => false)))
((PPC_PMAC && IDE) || ((false => BLK_DEV_IDE_PMAC) && (BLK_DEV_IDE_PMAC => false)))
((IDE && BLK_DEV_IDE_PMAC) || ((false => BLK_DEV_IDE_PMAC_ATAtruefalsefalseFIRST) && (BLK_DEV_IDE_PMAC_ATAtruefalsefalseFIRST => false)))
((IDE && SOC_AUtrue2falsefalse) || ((false => BLK_DEV_IDE_AUtrueXXX) && (BLK_DEV_IDE_AUtrueXXX => false)))
(true || ((false => BLK_DEV_IDE_AUtrueXXX_PIO_DBDMA) && (BLK_DEV_IDE_AUtrueXXX_PIO_DBDMA => false)))
((true && (SOC_AUtrue2falsefalse && BLK_DEV_IDE_AUtrueXXX)) || ((false => BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA) && (BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA => false)))
((IDE && BLK_DEV_IDE_AUtrueXXX) || (((true && (IDE && BLK_DEV_IDE_AUtrueXXX)) => BLK_DEV_IDE_AUtrueXXX_SEQTS_PER_RQ) && (BLK_DEV_IDE_AUtrueXXX_SEQTS_PER_RQ => (true && (IDE && BLK_DEV_IDE_AUtrueXXX)))))
((IDE && SOC_TX4938) || ((false => BLK_DEV_IDE_TX4938) && (BLK_DEV_IDE_TX4938 => false)))
((IDE && SOC_TX4939) || ((false => BLK_DEV_IDE_TX4939) && (BLK_DEV_IDE_TX4939 => false)))
((IDE && (ARM && (ARCH_CLPS75falsefalse || (ARCH_RPC || ARCH_SHARK)))) || (((true && (IDE && (ARM && (ARCH_CLPS75falsefalse || (ARCH_RPC || ARCH_SHARK))))) => IDE_ARM) && (IDE_ARM => (true && (IDE && (ARM && (ARCH_CLPS75falsefalse || (ARCH_RPC || ARCH_SHARK))))))))
((IDE && (ARM && ARCH_ACORN)) || ((false => BLK_DEV_IDE_ICSIDE) && (BLK_DEV_IDE_ICSIDE => false)))
((IDE && BLK_DEV_IDE_ICSIDE) || ((false => BLK_DEV_IDEDMA_ICS) && (BLK_DEV_IDEDMA_ICS => false)))
((IDE && (ARM && ARCH_ACORN)) || ((false => BLK_DEV_IDE_RAPIDE) && (BLK_DEV_IDE_RAPIDE => false)))
((IDE && H83falsefalse) || (((true && (IDE && H83falsefalse)) => IDE_H83falsefalse) && (IDE_H83falsefalse => (true && (IDE && H83falsefalse)))))
((IDE && AMIGA) || ((false => BLK_DEV_GAYLE) && (BLK_DEV_GAYLE => false)))
((IDE && (BLK_DEV_GAYLE && EXPERIMENTAL)) || ((false => BLK_DEV_IDEDOUBLER) && (BLK_DEV_IDEDOUBLER => false)))
((IDE && (ZORRO && EXPERIMENTAL)) || ((false => BLK_DEV_BUDDHA) && (BLK_DEV_BUDDHA => false)))
((IDE && ATARI) || ((false => BLK_DEV_FALCON_IDE) && (BLK_DEV_FALCON_IDE => false)))
((IDE && MAC) || ((false => BLK_DEV_MAC_IDE) && (BLK_DEV_MAC_IDE => false)))
((IDE && Q4false) || ((false => BLK_DEV_Q4falseIDE) && (BLK_DEV_Q4falseIDE => false)))
((IDE && ARCH_DAVINCI) || ((false => BLK_DEV_PALMCHIP_BK37truefalse) && (BLK_DEV_PALMCHIP_BK37truefalse => false)))
((IDE && (ISA && (ALPHA || (X86 || MIPS)))) || ((false => BLK_DEV_4DRIVES) && (BLK_DEV_4DRIVES => false)))
((IDE && (ISA && (ALPHA || (X86 || MIPS)))) || ((false => BLK_DEV_ALItrue4XX) && (BLK_DEV_ALItrue4XX => false)))
((IDE && (ISA && (ALPHA || (X86 || MIPS)))) || ((false => BLK_DEV_DTC2278) && (BLK_DEV_DTC2278 => false)))
((IDE && (ISA && (ALPHA || (X86 || MIPS)))) || ((false => BLK_DEV_HT656falseB) && (BLK_DEV_HT656falseB => false)))
((IDE && (ISA && (ALPHA || (X86 || MIPS)))) || ((false => BLK_DEV_QD65XX) && (BLK_DEV_QD65XX => false)))
((IDE && (ISA && (ALPHA || (X86 || MIPS)))) || ((false => BLK_DEV_UMC8672) && (BLK_DEV_UMC8672 => false)))
(false || (((true && (IDE && (BLK_DEV_IDEDMA_SFF || (BLK_DEV_IDEDMA_ICS || BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA)))) => BLK_DEV_IDEDMA) && (BLK_DEV_IDEDMA => (true && (IDE && (BLK_DEV_IDEDMA_SFF || (BLK_DEV_IDEDMA_ICS || BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA)))))))
(BLOCK || ((false => RAID_ATTRS) && (RAID_ATTRS => false)))
(BLOCK || (((ATA && (HAS_IOMEM && (BLOCK && ((!M32R && !M68K) || BROKEN)))) => SCSI) && (SCSI => (ATA && (HAS_IOMEM && (BLOCK && ((!M32R && !M68K) || BROKEN)))))))
(false || (((SCSI && (BLOCK && HAS_DMA)) => SCSI_DMA) && (SCSI_DMA => (SCSI && (BLOCK && HAS_DMA)))))
((SCSI && EXPERIMENTAL) || (((SCSI_SRP && (SCSI_LOWLEVEL && (SCSI && PCI))) => SCSI_TGT) && (SCSI_TGT => (SCSI_SRP && (SCSI_LOWLEVEL && (SCSI && PCI))))))
(false || (((SCSI_FC_ATTRS && SCSI) => SCSI_NETLINK) && (SCSI_NETLINK => (SCSI_FC_ATTRS && SCSI))))
((SCSI && PROC_FS) || (((true && (SCSI && PROC_FS)) => SCSI_PROC_FS) && (SCSI_PROC_FS => (true && (SCSI && PROC_FS)))))
(SCSI || ((false => BLK_DEV_SD) && (BLK_DEV_SD => false)))
(SCSI || ((false => CHR_DEV_ST) && (CHR_DEV_ST => false)))
(SCSI || ((false => CHR_DEV_OSST) && (CHR_DEV_OSST => false)))
(SCSI || ((false => BLK_DEV_SR) && (BLK_DEV_SR => false)))
(BLK_DEV_SR || ((false => BLK_DEV_SR_VENDOR) && (BLK_DEV_SR_VENDOR => false)))
(SCSI || ((false => CHR_DEV_SG) && (CHR_DEV_SG => false)))
(SCSI || ((false => CHR_DEV_SCH) && (CHR_DEV_SCH => false)))
((SCSI && ENCLOSURE_SERVICES) || ((false => SCSI_ENCLOSURE) && (SCSI_ENCLOSURE => false)))
(SCSI || ((false => SCSI_MULTI_LUN) && (SCSI_MULTI_LUN => false)))
(SCSI || ((false => SCSI_CONSTANTS) && (SCSI_CONSTANTS => false)))
(SCSI || ((false => SCSI_LOGGING) && (SCSI_LOGGING => false)))
(SCSI || ((false => SCSI_SCAN_ASYNC) && (SCSI_SCAN_ASYNC => false)))
(false || (((true && (SCSI && MODULES)) => SCSI_WAIT_SCAN) && (SCSI_WAIT_SCAN => (true && (SCSI && MODULES)))))
(SCSI || ((((((((((((((((((((((((((((((((((x239 || x24false) || x24true) || x242) || x243) || x244) || x245) || x246) || x247) || x248) || x249) || x25false) || x25true) || x252) || x253) || x254) || x255) || x256) || x257) || x258) || x259) || x26false) || x26true) || x262) || x263) || x264) || x265) || x266) || x267) || x268) || x269) || x27false) || x27true) => SCSI_SPI_ATTRS) && (SCSI_SPI_ATTRS => ((((((((((((((((((((((((((((((((x239 || x24false) || x24true) || x242) || x243) || x244) || x245) || x246) || x247) || x248) || x249) || x25false) || x25true) || x252) || x253) || x254) || x255) || x256) || x257) || x258) || x259) || x26false) || x26true) || x262) || x263) || x264) || x265) || x266) || x267) || x268) || x269) || x27false) || x27true))))
(x239 <=> (SCSI_DMX3true9trueD && (SCSI_LOWLEVEL && (PCI && SCSI))))
(x24false <=> (MVMEtrue6x_SCSI && (SCSI_LOWLEVEL && (MVMEtrue6x && SCSI))))
(x24true <=> (SCSI_AHAtrue52X && (SCSI_LOWLEVEL && (ISA && (SCSI && !a64BIT)))))
(x242 <=> (SCSI_AIC79XX && (SCSI_LOWLEVEL && (PCI && SCSI))))
(x243 <=> (SCSI_GENERIC_NCR538false && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x244 <=> (SCSI_SYM53C8XX_2 && (SCSI_LOWLEVEL && (PCI && SCSI))))
(x245 <=> (SCSI_CUMANA_true && (SCSI_LOWLEVEL && (ARCH_ACORN && (EXPERIMENTAL && SCSI)))))
(x246 <=> (SCSI_ZALON && (SCSI_LOWLEVEL && (GSC && SCSI))))
(x247 <=> (SUN3_SCSI && (SCSI_LOWLEVEL && (SUN3 && SCSI))))
(x248 <=> (ATARI_SCSI && (SCSI_LOWLEVEL && (ATARI && SCSI))))
(x249 <=> (SCSI_NCR_D7falsefalse && (SCSI_LOWLEVEL && (MCA && SCSI))))
(x25false <=> (SCSI_AIC7XXX && (SCSI_LOWLEVEL && ((PCI || EISA) && SCSI))))
(x25true <=> (SCSI_SNI_53C7truefalse && (SCSI_LOWLEVEL && (SNI_RM && SCSI))))
(x252 <=> (SCSI_Ttrue28 && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x253 <=> (SUN3X_ESP && (SCSI_LOWLEVEL && (SUN3X && SCSI))))
(x254 <=> (SCSI_SIM7truefalse && (SCSI_LOWLEVEL && ((EISA || MCA) && SCSI))))
(x255 <=> (SCSI_LASI7falsefalse && (SCSI_LOWLEVEL && (GSC && SCSI))))
(x256 <=> (SCSI_ZORRO7XX && (SCSI_LOWLEVEL && (ZORRO && (SCSI && EXPERIMENTAL)))))
(x257 <=> (SCSI_SUNESP && (SCSI_LOWLEVEL && (SBUS && SCSI))))
(x258 <=> (SCSI_DTC328false && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x259 <=> (SCSI_A4falsefalsefalseT && (SCSI_LOWLEVEL && (AMIGA && (SCSI && EXPERIMENTAL)))))
(x26false <=> (MVMEtrue47_SCSI && (SCSI_LOWLEVEL && (MVMEtrue47 && SCSI))))
(x26true <=> (MAC_SCSI && (SCSI_LOWLEVEL && (MAC && SCSI))))
(x262 <=> (SCSI_NCR_Q72false && (SCSI_LOWLEVEL && (MCA && SCSI))))
(x263 <=> (SCSI_PAStrue6 && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x264 <=> (FUSION_SPI && (FUSION && (PCI && SCSI))))
(x265 <=> (SCSI_ACORNSCSI_3 && (SCSI_LOWLEVEL && (ARCH_ACORN && SCSI))))
(x266 <=> (SCSI_MAC_ESP && (SCSI_LOWLEVEL && (MAC && SCSI))))
(x267 <=> (SCSI_OAKtrue && (SCSI_LOWLEVEL && (ARCH_ACORN && (EXPERIMENTAL && SCSI)))))
(x268 <=> (JAZZ_ESP && (SCSI_LOWLEVEL && (MACH_JAZZ && SCSI))))
(x269 <=> (BVME6falsefalsefalse_SCSI && (SCSI_LOWLEVEL && (BVME6falsefalsefalse && SCSI))))
(x27false <=> (SCSI_GENERIC_NCR538false_MMIO && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x27true <=> (PCMCIA_AHAtrue52X && (SCSI_LOWLEVEL_PCMCIA && (SCSI && (PCMCIA && (true && (true && !a64BIT)))))))
(SCSI || ((((((xtruetrue9 || x272) || x273) || x274) || x275) => SCSI_FC_ATTRS) && (SCSI_FC_ATTRS => ((((xtruetrue9 || x272) || x273) || x274) || x275))))
(xtruetrue9 <=> (SCSI_QLA_FC && (SCSI_LOWLEVEL && (PCI && SCSI))))
(x272 <=> (SCSI_LPFC && (SCSI_LOWLEVEL && (PCI && SCSI))))
(x273 <=> (ZFCP && (SCSI_LOWLEVEL && (S39false && (QDIO && SCSI)))))
(x274 <=> (SCSI_IBMVFC && (SCSI_LOWLEVEL && (PPC_PSERIES && SCSI))))
(x275 <=> (FUSION_FC && (FUSION && (PCI && SCSI))))
((SCSI && (SCSI_FC_ATTRS && (SCSI_TGT || SCSI_TGT))) || ((false => SCSI_FC_TGT_ATTRS) && (SCSI_FC_TGT_ATTRS => false)))
((SCSI && NET) || (((((ISCSI_TCP && (SCSI_LOWLEVEL && (SCSI && INET))) || (SCSI_QLA_ISCSI && (SCSI_LOWLEVEL && (PCI && (SCSI && NET))))) || (INFINIBAND_ISER && (INFINIBAND && (SCSI && INET)))) => SCSI_ISCSI_ATTRS) && (SCSI_ISCSI_ATTRS => (((ISCSI_TCP && (SCSI_LOWLEVEL && (SCSI && INET))) || (SCSI_QLA_ISCSI && (SCSI_LOWLEVEL && (PCI && (SCSI && NET))))) || (INFINIBAND_ISER && (INFINIBAND && (SCSI && INET)))))))
((SCSI && BLK_DEV_BSG) || ((((SCSI_SAS_LIBSAS && SCSI) || (FUSION_SAS && (FUSION && (PCI && SCSI)))) => SCSI_SAS_ATTRS) && (SCSI_SAS_ATTRS => ((SCSI_SAS_LIBSAS && SCSI) || (FUSION_SAS && (FUSION && (PCI && SCSI)))))))
(SCSI || ((((SCSI_MVSAS && (SCSI_LOWLEVEL && (PCI && SCSI))) || (SCSI_AIC94XX && (SCSI_LOWLEVEL && (SCSI && PCI)))) => SCSI_SAS_LIBSAS) && (SCSI_SAS_LIBSAS => ((SCSI_MVSAS && (SCSI_LOWLEVEL && (PCI && SCSI))) || (SCSI_AIC94XX && (SCSI_LOWLEVEL && (SCSI && PCI)))))))
((SCSI && (SCSI_SAS_LIBSAS && (ATA || ATA))) || ((false => SCSI_SAS_ATA) && (SCSI_SAS_ATA => false)))
((SCSI && SCSI_SAS_LIBSAS) || (((true && (SCSI && SCSI_SAS_LIBSAS)) => SCSI_SAS_HOST_SMP) && (SCSI_SAS_HOST_SMP => (true && (SCSI && SCSI_SAS_LIBSAS)))))
((SCSI && SCSI_SAS_LIBSAS) || (((true && (SCSI && SCSI_SAS_LIBSAS)) => SCSI_SAS_LIBSAS_DEBUG) && (SCSI_SAS_LIBSAS_DEBUG => (true && (SCSI && SCSI_SAS_LIBSAS)))))
(SCSI || ((((INFINIBAND_SRP && (INFINIBAND && SCSI)) || (SCSI_IBMVSCSI && (SCSI_LOWLEVEL && (SCSI && (PPC_PSERIES || PPC_ISERIES))))) => SCSI_SRP_ATTRS) && (SCSI_SRP_ATTRS => ((INFINIBAND_SRP && (INFINIBAND && SCSI)) || (SCSI_IBMVSCSI && (SCSI_LOWLEVEL && (SCSI && (PPC_PSERIES || PPC_ISERIES))))))))
((SCSI && (SCSI_SRP_ATTRS && (SCSI_TGT || SCSI_TGT))) || ((false => SCSI_SRP_TGT_ATTRS) && (SCSI_SRP_TGT_ATTRS => false)))
(SCSI || (((true && SCSI) => SCSI_LOWLEVEL) && (SCSI_LOWLEVEL => (true && SCSI))))
((SCSI_LOWLEVEL && (SCSI && INET)) || ((false => ISCSI_TCP) && (ISCSI_TCP => false)))
((SCSI_LOWLEVEL && (SGI_HAS_WD93 && SCSI)) || ((false => SGIWD93_SCSI) && (SGIWD93_SCSI => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => BLK_DEV_3W_XXXX_RAID) && (BLK_DEV_3W_XXXX_RAID => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_3W_9XXX) && (SCSI_3W_9XXX => false)))
((SCSI_LOWLEVEL && (ISA && (SCSI && ISA_DMA_API))) || ((false => SCSI_7falsefalsefalseFASST) && (SCSI_7falsefalsefalseFASST => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_ACARD) && (SCSI_ACARD => false)))
((SCSI_LOWLEVEL && (ISA && (SCSI && !a64BIT))) || ((false => SCSI_AHAtrue52X) && (SCSI_AHAtrue52X => false)))
((SCSI_LOWLEVEL && (ISA && (SCSI && ISA_DMA_API))) || ((false => SCSI_AHAtrue542) && (SCSI_AHAtrue542 => false)))
((SCSI_LOWLEVEL && (EISA && SCSI)) || ((false => SCSI_AHAtrue74false) && (SCSI_AHAtrue74false => false)))
((SCSI_LOWLEVEL && (SCSI && PCI)) || ((false => SCSI_AACRAID) && (SCSI_AACRAID => false)))
((SCSI_LOWLEVEL && ((PCI || EISA) && SCSI)) || ((false => SCSI_AIC7XXX) && (SCSI_AIC7XXX => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))) => AIC7XXX_CMDS_PER_DEVICE) && (AIC7XXX_CMDS_PER_DEVICE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))) => AIC7XXX_RESET_DELAY_MS) && (AIC7XXX_RESET_DELAY_MS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))))))
((SCSI_LOWLEVEL && (SCSI && (SCSI_AIC7XXX && !PREVENT_FIRMWARE_BUILD))) || ((false => AIC7XXX_BUILD_FIRMWARE) && (AIC7XXX_BUILD_FIRMWARE => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))) => AIC7XXX_DEBUG_ENABLE) && (AIC7XXX_DEBUG_ENABLE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))) => AIC7XXX_DEBUG_MASK) && (AIC7XXX_DEBUG_MASK => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))) => AIC7XXX_REG_PRETTY_PRINT) && (AIC7XXX_REG_PRETTY_PRINT => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC7XXX))))))
((SCSI_LOWLEVEL && ((ISA || (EISA || PCI)) && SCSI)) || ((false => SCSI_AIC7XXX_OLD) && (SCSI_AIC7XXX_OLD => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_AIC79XX) && (SCSI_AIC79XX => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))) => AIC79XX_CMDS_PER_DEVICE) && (AIC79XX_CMDS_PER_DEVICE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))) => AIC79XX_RESET_DELAY_MS) && (AIC79XX_RESET_DELAY_MS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))))))
((SCSI_LOWLEVEL && (SCSI && (SCSI_AIC79XX && !PREVENT_FIRMWARE_BUILD))) || ((false => AIC79XX_BUILD_FIRMWARE) && (AIC79XX_BUILD_FIRMWARE => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))) => AIC79XX_DEBUG_ENABLE) && (AIC79XX_DEBUG_ENABLE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))) => AIC79XX_DEBUG_MASK) && (AIC79XX_DEBUG_MASK => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))) => AIC79XX_REG_PRETTY_PRINT) && (AIC79XX_REG_PRETTY_PRINT => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC79XX))))))
((SCSI_LOWLEVEL && (SCSI && PCI)) || ((false => SCSI_AIC94XX) && (SCSI_AIC94XX => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_AIC94XX)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC94XX))) => AIC94XX_DEBUG) && (AIC94XX_DEBUG => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_AIC94XX))))))
((SCSI_LOWLEVEL && (SCSI && (PCI && VIRT_TO_BUS))) || ((false => SCSI_DPT_I2O) && (SCSI_DPT_I2O => false)))
((SCSI_LOWLEVEL && (SCSI && (VIRT_TO_BUS && (ISA || (EISA || PCI))))) || ((false => SCSI_ADVANSYS) && (SCSI_ADVANSYS => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_IN2falsefalsefalse) && (SCSI_IN2falsefalsefalse => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_ARCMSR) && (SCSI_ARCMSR => false)))
((SCSI_LOWLEVEL && (SCSI && (SCSI_ARCMSR && PCIEAER))) || ((false => SCSI_ARCMSR_AER) && (SCSI_ARCMSR_AER => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => MEGARAID_NEWGEN) && (MEGARAID_NEWGEN => false)))
((SCSI_LOWLEVEL && (PCI && (SCSI && MEGARAID_NEWGEN))) || ((false => MEGARAID_MM) && (MEGARAID_MM => false)))
((SCSI_LOWLEVEL && (PCI && (SCSI && MEGARAID_MM))) || ((false => MEGARAID_MAILBOX) && (MEGARAID_MAILBOX => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => MEGARAID_LEGACY) && (MEGARAID_LEGACY => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => MEGARAID_SAS) && (MEGARAID_SAS => false)))
((SCSI_LOWLEVEL && (SCSI && PCI)) || ((false => SCSI_HPTIOP) && (SCSI_HPTIOP => false)))
((SCSI_LOWLEVEL && ((PCI || (ISA || MCA)) && (SCSI && (ISA_DMA_API && VIRT_TO_BUS)))) || ((false => SCSI_BUSLOGIC) && (SCSI_BUSLOGIC => false)))
((SCSI_LOWLEVEL && (SCSI && (SCSI_BUSLOGIC && (PCI && X86_32)))) || ((false => SCSI_FLASHPOINT) && (SCSI_FLASHPOINT => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_DMX3true9trueD) && (SCSI_DMX3true9trueD => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_DTC328false) && (SCSI_DTC328false => false)))
((SCSI_LOWLEVEL && ((ISA || (EISA || PCI)) && (SCSI && ISA_DMA_API))) || ((false => SCSI_EATA) && (SCSI_EATA => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_EATA)) || ((false => SCSI_EATA_TAGGED_QUEUE) && (SCSI_EATA_TAGGED_QUEUE => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_EATA)) || ((false => SCSI_EATA_LINKED_COMMANDS) && (SCSI_EATA_LINKED_COMMANDS => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_EATA)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_EATA))) => SCSI_EATA_MAX_TAGS) && (SCSI_EATA_MAX_TAGS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_EATA))))))
((SCSI_LOWLEVEL && ((ISA || (EISA || PCI)) && (SCSI && BROKEN))) || ((false => SCSI_EATA_PIO) && (SCSI_EATA_PIO => false)))
((SCSI_LOWLEVEL && ((ISA || PCI) && SCSI)) || ((false => SCSI_FUTURE_DOMAIN) && (SCSI_FUTURE_DOMAIN => false)))
((SCSI_LOWLEVEL && (MCA_LEGACY && SCSI)) || ((false => SCSI_FD_MCS) && (SCSI_FD_MCS => false)))
((SCSI_LOWLEVEL && ((ISA || (EISA || PCI)) && (SCSI && ISA_DMA_API))) || ((false => SCSI_GDTH) && (SCSI_GDTH => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_GENERIC_NCR538false) && (SCSI_GENERIC_NCR538false => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_GENERIC_NCR538false_MMIO) && (SCSI_GENERIC_NCR538false_MMIO => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_GENERIC_NCR538false)) || ((false => SCSI_GENERIC_NCR53C4falsefalse) && (SCSI_GENERIC_NCR53C4falsefalse => false)))
((SCSI_LOWLEVEL && (MCA && SCSI)) || ((false => SCSI_IBMMCA) && (SCSI_IBMMCA => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_IBMMCA)) || ((false => IBMMCA_SCSI_ORDER_STANDARD) && (IBMMCA_SCSI_ORDER_STANDARD => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_IBMMCA)) || ((false => IBMMCA_SCSI_DEV_RESET) && (IBMMCA_SCSI_DEV_RESET => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_IPS) && (SCSI_IPS => false)))
((SCSI_LOWLEVEL && (SCSI && (PPC_PSERIES || PPC_ISERIES))) || ((false => SCSI_IBMVSCSI) && (SCSI_IBMVSCSI => false)))
((SCSI_LOWLEVEL && (SCSI && (PPC_PSERIES && (SCSI_SRP && SCSI_SRP_TGT_ATTRS)))) || ((false => SCSI_IBMVSCSIS) && (SCSI_IBMVSCSIS => false)))
((SCSI_LOWLEVEL && (PPC_PSERIES && SCSI)) || ((false => SCSI_IBMVFC) && (SCSI_IBMVFC => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_IBMVFC)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_IBMVFC))) => SCSI_IBMVFC_TRACE) && (SCSI_IBMVFC_TRACE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_IBMVFC))))))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_INITIO) && (SCSI_INITIO => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_INIAtruefalsefalse) && (SCSI_INIAtruefalsefalse => false)))
((SCSI_LOWLEVEL && (SCSI && PARPORT_PC)) || ((false => SCSI_PPA) && (SCSI_PPA => false)))
((SCSI_LOWLEVEL && (SCSI && PARPORT_PC)) || ((false => SCSI_IMM) && (SCSI_IMM => false)))
((SCSI_LOWLEVEL && (SCSI && (SCSI_PPA || SCSI_IMM))) || ((false => SCSI_IZIP_EPPtrue6) && (SCSI_IZIP_EPPtrue6 => false)))
((SCSI_LOWLEVEL && (SCSI && (SCSI_PPA || SCSI_IMM))) || ((false => SCSI_IZIP_SLOW_CTR) && (SCSI_IZIP_SLOW_CTR => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_MVSAS) && (SCSI_MVSAS => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_NCR53C4false6A) && (SCSI_NCR53C4false6A => false)))
((SCSI_LOWLEVEL && (MCA && SCSI)) || ((false => SCSI_NCR_D7falsefalse) && (SCSI_NCR_D7falsefalse => false)))
((SCSI_LOWLEVEL && (GSC && SCSI)) || ((false => SCSI_LASI7falsefalse) && (SCSI_LASI7falsefalse => false)))
((SCSI_LOWLEVEL && (SNI_RM && SCSI)) || ((false => SCSI_SNI_53C7truefalse) && (SCSI_SNI_53C7truefalse => false)))
(false || ((((SCSI_SNI_53C7truefalse && (SCSI_LOWLEVEL && (SNI_RM && SCSI))) || (true && (SCSI_LOWLEVEL && (SCSI && SCSI_LASI7falsefalse)))) => 53C7falsefalse_LE_ON_BE) && (53C7falsefalse_LE_ON_BE => ((SCSI_SNI_53C7truefalse && (SCSI_LOWLEVEL && (SNI_RM && SCSI))) || (true && (SCSI_LOWLEVEL && (SCSI && SCSI_LASI7falsefalse)))))))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_STEX) && (SCSI_STEX => false)))
(false || (((true && (SCSI_LOWLEVEL && (SCSI && (SCSI_A4falsefalsefalseT || (SCSI_ZORRO7XX || (MVMEtrue6x_SCSI || BVME6falsefalsefalse_SCSI)))))) => 53C7falsefalse_BE_BUS) && (53C7falsefalse_BE_BUS => (true && (SCSI_LOWLEVEL && (SCSI && (SCSI_A4falsefalsefalseT || (SCSI_ZORRO7XX || (MVMEtrue6x_SCSI || BVME6falsefalsefalse_SCSI)))))))))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_SYM53C8XX_2) && (SCSI_SYM53C8XX_2 => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))) => SCSI_SYM53C8XX_DMA_ADDRESSING_MODE) && (SCSI_SYM53C8XX_DMA_ADDRESSING_MODE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))) => SCSI_SYM53C8XX_DEFAULT_TAGS) && (SCSI_SYM53C8XX_DEFAULT_TAGS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))) => SCSI_SYM53C8XX_MAX_TAGS) && (SCSI_SYM53C8XX_MAX_TAGS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))) => SCSI_SYM53C8XX_MMIO) && (SCSI_SYM53C8XX_MMIO => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_SYM53C8XX_2))))))
((SCSI_LOWLEVEL && (PCI && (SCSI && ATA))) || ((false => SCSI_IPR) && (SCSI_IPR => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_IPR)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_IPR))) => SCSI_IPR_TRACE) && (SCSI_IPR_TRACE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_IPR))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_IPR)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_IPR))) => SCSI_IPR_DUMP) && (SCSI_IPR_DUMP => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_IPR))))))
((SCSI_LOWLEVEL && (GSC && SCSI)) || ((false => SCSI_ZALON) && (SCSI_ZALON => false)))
((SCSI_LOWLEVEL && (MCA && SCSI)) || ((false => SCSI_NCR_Q72false) && (SCSI_NCR_Q72false => false)))
((SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false))) || (((true && (SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false)))) => SCSI_NCR53C8XX_DEFAULT_TAGS) && (SCSI_NCR53C8XX_DEFAULT_TAGS => (true && (SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false)))))))
((SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false))) || (((true && (SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false)))) => SCSI_NCR53C8XX_MAX_TAGS) && (SCSI_NCR53C8XX_MAX_TAGS => (true && (SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false)))))))
((SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false))) || (((true && (SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false)))) => SCSI_NCR53C8XX_SYNC) && (SCSI_NCR53C8XX_SYNC => (true && (SCSI_LOWLEVEL && (SCSI && (SCSI_ZALON || SCSI_NCR_Q72false)))))))
((SCSI_LOWLEVEL && (SCSI && ((SCSI_ZALON || SCSI_NCR_Q72false) && SCSI_NCR53C8XX_DEFAULT_TAGS))) || ((false => SCSI_NCR53C8XX_NO_DISCONNECT) && (SCSI_NCR53C8XX_NO_DISCONNECT => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_PAStrue6) && (SCSI_PAStrue6 => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_QLOGIC_FAS) && (SCSI_QLOGIC_FAS => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_QLOGIC_true28false) && (SCSI_QLOGIC_true28false => false)))
((SCSI_LOWLEVEL && (SBUS && SCSI)) || ((false => SCSI_QLOGICPTI) && (SCSI_QLOGICPTI => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_QLA_FC) && (SCSI_QLA_FC => false)))
((SCSI_LOWLEVEL && (PCI && (SCSI && NET))) || ((false => SCSI_QLA_ISCSI) && (SCSI_QLA_ISCSI => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_LPFC) && (SCSI_LPFC => false)))
((SCSI_LOWLEVEL && ((EISA || MCA) && SCSI)) || ((false => SCSI_SIM7truefalse) && (SCSI_SIM7truefalse => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_SYM53C4true6) && (SCSI_SYM53C4true6 => false)))
((SCSI_LOWLEVEL && (PCI && (SCSI && EXPERIMENTAL))) || ((false => SCSI_DC395x) && (SCSI_DC395x => false)))
((SCSI_LOWLEVEL && (PCI && SCSI)) || ((false => SCSI_DC39falseT) && (SCSI_DC39falseT => false)))
((SCSI_LOWLEVEL && (ISA && SCSI)) || ((false => SCSI_Ttrue28) && (SCSI_Ttrue28 => false)))
((SCSI_LOWLEVEL && (ISA && (SCSI && ISA_DMA_API))) || ((false => SCSI_Utrue4_34F) && (SCSI_Utrue4_34F => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_Utrue4_34F)) || ((false => SCSI_Utrue4_34F_TAGGED_QUEUE) && (SCSI_Utrue4_34F_TAGGED_QUEUE => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_Utrue4_34F)) || ((false => SCSI_Utrue4_34F_LINKED_COMMANDS) && (SCSI_Utrue4_34F_LINKED_COMMANDS => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_Utrue4_34F)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_Utrue4_34F))) => SCSI_Utrue4_34F_MAX_TAGS) && (SCSI_Utrue4_34F_MAX_TAGS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_Utrue4_34F))))))
((SCSI_LOWLEVEL && (X86 && (ISA && SCSI))) || ((false => SCSI_ULTRASTOR) && (SCSI_ULTRASTOR => false)))
((SCSI_LOWLEVEL && (PCI && (SCSI && !a64BIT))) || ((false => SCSI_NSP32) && (SCSI_NSP32 => false)))
((SCSI_LOWLEVEL && SCSI) || ((false => SCSI_DEBUG) && (SCSI_DEBUG => false)))
((SCSI_LOWLEVEL && (PPC32 && (PPC_PMAC && SCSI))) || ((false => SCSI_MESH) && (SCSI_MESH => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_MESH)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_MESH))) => SCSI_MESH_SYNC_RATE) && (SCSI_MESH_SYNC_RATE => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_MESH))))))
((SCSI_LOWLEVEL && (SCSI && SCSI_MESH)) || (((true && (SCSI_LOWLEVEL && (SCSI && SCSI_MESH))) => SCSI_MESH_RESET_DELAY_MS) && (SCSI_MESH_RESET_DELAY_MS => (true && (SCSI_LOWLEVEL && (SCSI && SCSI_MESH))))))
((SCSI_LOWLEVEL && (PPC32 && (PPC_PMAC && SCSI))) || ((false => SCSI_MAC53C94) && (SCSI_MAC53C94 => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && SCSI)) || ((false => SCSI_ACORNSCSI_3) && (SCSI_ACORNSCSI_3 => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_ACORNSCSI_3)) || ((false => SCSI_ACORNSCSI_TAGGED_QUEUE) && (SCSI_ACORNSCSI_TAGGED_QUEUE => false)))
((SCSI_LOWLEVEL && (SCSI && SCSI_ACORNSCSI_3)) || ((false => SCSI_ACORNSCSI_SYNC) && (SCSI_ACORNSCSI_SYNC => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && SCSI)) || ((false => SCSI_ARXESCSI) && (SCSI_ARXESCSI => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && SCSI)) || ((false => SCSI_CUMANA_2) && (SCSI_CUMANA_2 => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && SCSI)) || ((false => SCSI_EESOXSCSI) && (SCSI_EESOXSCSI => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && SCSI)) || ((false => SCSI_POWERTECSCSI) && (SCSI_POWERTECSCSI => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && (EXPERIMENTAL && SCSI))) || ((false => SCSI_CUMANA_true) && (SCSI_CUMANA_true => false)))
((SCSI_LOWLEVEL && (ARCH_ACORN && (EXPERIMENTAL && SCSI))) || ((false => SCSI_OAKtrue) && (SCSI_OAKtrue => false)))
((SCSI_LOWLEVEL && (MACH_JAZZ && SCSI)) || ((false => JAZZ_ESP) && (JAZZ_ESP => false)))
((SCSI_LOWLEVEL && (AMIGA && SCSI)) || ((false => A3falsefalsefalse_SCSI) && (A3falsefalsefalse_SCSI => false)))
((SCSI_LOWLEVEL && (ZORRO && SCSI)) || ((false => A2false9true_SCSI) && (A2false9true_SCSI => false)))
((SCSI_LOWLEVEL && (ZORRO && SCSI)) || ((false => GVPtruetrue_SCSI) && (GVPtruetrue_SCSI => false)))
((SCSI_LOWLEVEL && (AMIGA && (SCSI && EXPERIMENTAL))) || ((false => SCSI_A4falsefalsefalseT) && (SCSI_A4falsefalsefalseT => false)))
((SCSI_LOWLEVEL && (ZORRO && (SCSI && EXPERIMENTAL))) || ((false => SCSI_ZORRO7XX) && (SCSI_ZORRO7XX => false)))
((SCSI_LOWLEVEL && (ATARI && SCSI)) || ((false => ATARI_SCSI) && (ATARI_SCSI => false)))
((SCSI_LOWLEVEL && (SCSI && ATARI_SCSI)) || ((false => ATARI_SCSI_TOSHIBA_DELAY) && (ATARI_SCSI_TOSHIBA_DELAY => false)))
((SCSI_LOWLEVEL && (SCSI && ATARI_SCSI)) || ((false => ATARI_SCSI_RESET_BOOT) && (ATARI_SCSI_RESET_BOOT => false)))
((SCSI_LOWLEVEL && (MAC && SCSI)) || ((false => MAC_SCSI) && (MAC_SCSI => false)))
((SCSI_LOWLEVEL && (MAC && SCSI)) || ((false => SCSI_MAC_ESP) && (SCSI_MAC_ESP => false)))
((SCSI_LOWLEVEL && (MVMEtrue47 && SCSI)) || ((false => MVMEtrue47_SCSI) && (MVMEtrue47_SCSI => false)))
((SCSI_LOWLEVEL && (MVMEtrue6x && SCSI)) || ((false => MVMEtrue6x_SCSI) && (MVMEtrue6x_SCSI => false)))
((SCSI_LOWLEVEL && (BVME6falsefalsefalse && SCSI)) || ((false => BVME6falsefalsefalse_SCSI) && (BVME6falsefalsefalse_SCSI => false)))
((SCSI_LOWLEVEL && (SUN3 && SCSI)) || ((false => SUN3_SCSI) && (SUN3_SCSI => false)))
((SCSI_LOWLEVEL && (SUN3X && SCSI)) || ((false => SUN3X_ESP) && (SUN3X_ESP => false)))
((SCSI_LOWLEVEL && (SBUS && SCSI)) || ((false => SCSI_SUNESP) && (SCSI_SUNESP => false)))
((SCSI_LOWLEVEL && (S39false && (QDIO && SCSI))) || ((false => ZFCP) && (ZFCP => false)))
((SCSI_LOWLEVEL && (SCSI && PCI)) || ((false => SCSI_SRP) && (SCSI_SRP => false)))
((SCSI && PCMCIA) || ((false => SCSI_LOWLEVEL_PCMCIA) && (SCSI_LOWLEVEL_PCMCIA => false)))
((SCSI_LOWLEVEL_PCMCIA && (SCSI && (PCMCIA && (true && (true && !a64BIT))))) || ((false => PCMCIA_AHAtrue52X) && (PCMCIA_AHAtrue52X => false)))
((SCSI_LOWLEVEL_PCMCIA && (SCSI && (PCMCIA && (true && true)))) || ((false => PCMCIA_FDOMAIN) && (PCMCIA_FDOMAIN => false)))
((SCSI_LOWLEVEL_PCMCIA && (SCSI && (PCMCIA && (true && (true && !a64BIT))))) || ((false => PCMCIA_NINJA_SCSI) && (PCMCIA_NINJA_SCSI => false)))
((SCSI_LOWLEVEL_PCMCIA && (SCSI && (PCMCIA && (true && true)))) || ((false => PCMCIA_QLOGIC) && (PCMCIA_QLOGIC => false)))
((SCSI_LOWLEVEL_PCMCIA && (SCSI && (PCMCIA && (true && true)))) || ((false => PCMCIA_SYM53C5falsefalse) && (PCMCIA_SYM53C5falsefalse => false)))
(SCSI || ((false => SCSI_DH) && (SCSI_DH => false)))
(SCSI_DH || ((false => SCSI_DH_RDAC) && (SCSI_DH_RDAC => false)))
(SCSI_DH || ((false => SCSI_DH_HP_SW) && (SCSI_DH_HP_SW => false)))
(SCSI_DH || ((false => SCSI_DH_EMC) && (SCSI_DH_EMC => false)))
((SCSI_DH && EXPERIMENTAL) || ((false => SCSI_DH_ALUA) && (SCSI_DH_ALUA => false)))
((HAS_IOMEM && (BLOCK && ((!M32R && !M68K) || BROKEN))) || ((false => ATA) && (ATA => false)))
(false || ((false => ATA_NONSTANDARD) && (ATA_NONSTANDARD => false)))
((ATA && (ACPI && PCI)) || (((true && (ATA && (ACPI && PCI))) => ATA_ACPI) && (ATA_ACPI => (true && (ATA && (ACPI && PCI))))))
(ATA || (((true && ATA) => SATA_PMP) && (SATA_PMP => (true && ATA))))
((ATA && PCI) || ((false => SATA_AHCI) && (SATA_AHCI => false)))
((ATA && PCI) || ((false => SATA_SIL24) && (SATA_SIL24 => false)))
((ATA && FSL_SOC) || ((false => SATA_FSL) && (SATA_FSL => false)))
(ATA || (((true && ATA) => ATA_SFF) && (ATA_SFF => (true && ATA))))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_SVW) && (SATA_SVW => false)))
((ATA && (ATA_SFF && PCI)) || ((false => ATA_PIIX) && (ATA_PIIX => false)))
((ATA && (ATA_SFF && EXPERIMENTAL)) || ((false => SATA_MV) && (SATA_MV => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_NV) && (SATA_NV => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PDC_ADMA) && (PDC_ADMA => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_QSTOR) && (SATA_QSTOR => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_PROMISE) && (SATA_PROMISE => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => SATA_SX4) && (SATA_SX4 => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_SIL) && (SATA_SIL => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_SIS) && (SATA_SIS => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_ULI) && (SATA_ULI => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_VIA) && (SATA_VIA => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_VITESSE) && (SATA_VITESSE => false)))
((ATA && (ATA_SFF && PCI)) || ((false => SATA_INICtrue62X) && (SATA_INICtrue62X => false)))
((ATA && (ATA_SFF && ATA_ACPI)) || ((false => PATA_ACPI) && (PATA_ACPI => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_ALI) && (PATA_ALI => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_AMD) && (PATA_AMD => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_ARTOP) && (PATA_ARTOP => false)))
((ATA && (ATA_SFF && (AVR32 && (PLATFORM_AT32AP && EXPERIMENTAL)))) || ((false => PATA_AT32) && (PATA_AT32 => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_ATIIXP) && (PATA_ATIIXP => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_CMD64false_PCI) && (PATA_CMD64false_PCI => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_CMD64X) && (PATA_CMD64X => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_CS552false) && (PATA_CS552false => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_CS553false) && (PATA_CS553false => false)))
((ATA && (ATA_SFF && (PCI && (X86 && (!X86_64 && EXPERIMENTAL))))) || ((false => PATA_CS5535) && (PATA_CS5535 => false)))
((ATA && (ATA_SFF && (PCI && (X86 && !X86_64)))) || ((false => PATA_CS5536) && (PATA_CS5536 => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_CYPRESS) && (PATA_CYPRESS => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_EFAR) && (PATA_EFAR => false)))
((ATA && (ATA_SFF && PCI)) || ((false => ATA_GENERIC) && (ATA_GENERIC => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_HPT366) && (PATA_HPT366 => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_HPT37X) && (PATA_HPT37X => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_HPT3X2N) && (PATA_HPT3X2N => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_HPT3X3) && (PATA_HPT3X3 => false)))
((ATA && (ATA_SFF && PATA_HPT3X3)) || ((false => PATA_HPT3X3_DMA) && (PATA_HPT3X3_DMA => false)))
((ATA && (ATA_SFF && ISAPNP)) || ((false => PATA_ISAPNP) && (PATA_ISAPNP => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_IT82trueX) && (PATA_IT82trueX => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_IT82true3) && (PATA_IT82true3 => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_JMICRON) && (PATA_JMICRON => false)))
((ATA && (ATA_SFF && (ISA && EXPERIMENTAL))) || ((false => PATA_LEGACY) && (PATA_LEGACY => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_TRIFLEX) && (PATA_TRIFLEX => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_MARVELL) && (PATA_MARVELL => false)))
((ATA && (ATA_SFF && PPC_MPC52xx)) || ((false => PATA_MPC52xx) && (PATA_MPC52xx => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_MPIIX) && (PATA_MPIIX => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_OLDPIIX) && (PATA_OLDPIIX => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_NETCELL) && (PATA_NETCELL => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_NINJA32) && (PATA_NINJA32 => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_NS874truefalse) && (PATA_NS874truefalse => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_NS874true5) && (PATA_NS874true5 => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_OPTI) && (PATA_OPTI => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_OPTIDMA) && (PATA_OPTIDMA => false)))
((ATA && (ATA_SFF && PCMCIA)) || ((false => PATA_PCMCIA) && (PATA_PCMCIA => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_PDC_OLD) && (PATA_PDC_OLD => false)))
((ATA && (ATA_SFF && ISA)) || ((false => PATA_QDI) && (PATA_QDI => false)))
((ATA && (ATA_SFF && (PCI && EXPERIMENTAL))) || ((false => PATA_RADISYS) && (PATA_RADISYS => false)))
((ATA && (ATA_SFF && MIKROTIK_RB532)) || ((false => PATA_RB532) && (PATA_RB532 => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_RZtruefalsefalsefalse) && (PATA_RZtruefalsefalsefalse => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_SCtrue2falsefalse) && (PATA_SCtrue2falsefalse => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_SERVERWORKS) && (PATA_SERVERWORKS => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_PDC2false27X) && (PATA_PDC2false27X => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_SIL68false) && (PATA_SIL68false => false)))
((ATA && (ATA_SFF && PCI)) || (((SATA_SIS && (ATA && (ATA_SFF && PCI))) => PATA_SIS) && (PATA_SIS => (SATA_SIS && (ATA && (ATA_SFF && PCI))))))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_VIA) && (PATA_VIA => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_WINBOND) && (PATA_WINBOND => false)))
((ATA && (ATA_SFF && (ISA && EXPERIMENTAL))) || ((false => PATA_WINBOND_VLB) && (PATA_WINBOND_VLB => false)))
(false || ((false => HAVE_PATA_PLATFORM) && (HAVE_PATA_PLATFORM => false)))
((ATA && (ATA_SFF && (EMBEDDED || (PPC || HAVE_PATA_PLATFORM)))) || ((false => PATA_PLATFORM) && (PATA_PLATFORM => false)))
((ATA && (ATA_SFF && (PATA_PLATFORM && PPC_OF))) || ((false => PATA_OF_PLATFORM) && (PATA_OF_PLATFORM => false)))
((ATA && (ATA_SFF && (ARM && ARCH_ACORN))) || ((false => PATA_ICSIDE) && (PATA_ICSIDE => false)))
((ATA && (ATA_SFF && ARCH_IXP4XX)) || ((false => PATA_IXP4XX_CF) && (PATA_IXP4XX_CF => false)))
((ATA && (ATA_SFF && (PCI && PPC_CELLEB))) || ((false => PATA_SCC) && (PATA_SCC => false)))
((ATA && (ATA_SFF && PCI)) || ((false => PATA_SCH) && (PATA_SCH => false)))
((ATA && (ATA_SFF && (BF542 || (BF548 || BF549)))) || ((false => PATA_BF54X) && (PATA_BF54X => false)))
(BLOCK || ((false => MD) && (MD => false)))
(MD || ((false => BLK_DEV_MD) && (BLK_DEV_MD => false)))
((MD && BLK_DEV_MD) || (((true && (MD && BLK_DEV_MD)) => MD_AUTODETECT) && (MD_AUTODETECT => (true && (MD && BLK_DEV_MD)))))
((MD && BLK_DEV_MD) || ((false => MD_LINEAR) && (MD_LINEAR => false)))
((MD && BLK_DEV_MD) || ((false => MD_RAIDfalse) && (MD_RAIDfalse => false)))
((MD && BLK_DEV_MD) || ((false => MD_RAIDtrue) && (MD_RAIDtrue => false)))
((MD && (BLK_DEV_MD && EXPERIMENTAL)) || ((false => MD_RAIDtruefalse) && (MD_RAIDtruefalse => false)))
((MD && BLK_DEV_MD) || ((false => MD_RAID456) && (MD_RAID456 => false)))
((MD && MD_RAID456) || (((true && (MD && MD_RAID456)) => MD_RAID5_RESHAPE) && (MD_RAID5_RESHAPE => (true && (MD && MD_RAID456)))))
((MD && BLK_DEV_MD) || ((false => MD_MULTIPATH) && (MD_MULTIPATH => false)))
((MD && BLK_DEV_MD) || ((false => MD_FAULTY) && (MD_FAULTY => false)))
(MD || ((false => BLK_DEV_DM) && (BLK_DEV_DM => false)))
((MD && BLK_DEV_DM) || ((false => DM_DEBUG) && (DM_DEBUG => false)))
((MD && BLK_DEV_DM) || ((false => DM_CRYPT) && (DM_CRYPT => false)))
((MD && BLK_DEV_DM) || ((false => DM_SNAPSHOT) && (DM_SNAPSHOT => false)))
((MD && BLK_DEV_DM) || ((false => DM_MIRROR) && (DM_MIRROR => false)))
((MD && BLK_DEV_DM) || ((false => DM_ZERO) && (DM_ZERO => false)))
((MD && (BLK_DEV_DM && (SCSI_DH || !SCSI_DH))) || ((false => DM_MULTIPATH) && (DM_MULTIPATH => false)))
((MD && (BLK_DEV_DM && EXPERIMENTAL)) || ((false => DM_DELAY) && (DM_DELAY => false)))
((MD && (BLK_DEV_DM && EXPERIMENTAL)) || ((false => DM_UEVENT) && (DM_UEVENT => false)))
(PCI || ((false => FUSION) && (FUSION => false)))
((FUSION && (PCI && SCSI)) || ((false => FUSION_SPI) && (FUSION_SPI => false)))
((FUSION && (PCI && SCSI)) || ((false => FUSION_FC) && (FUSION_FC => false)))
((FUSION && (PCI && SCSI)) || ((false => FUSION_SAS) && (FUSION_SAS => false)))
(FUSION || (((true && FUSION) => FUSION_MAX_SGE) && (FUSION_MAX_SGE => (true && FUSION))))
((FUSION && (FUSION_SPI || (FUSION_FC || FUSION_SAS))) || ((false => FUSION_CTL) && (FUSION_CTL => false)))
((FUSION && (FUSION_FC && NET_FC)) || ((false => FUSION_LAN) && (FUSION_LAN => false)))
(FUSION || ((false => FUSION_LOGGING) && (FUSION_LOGGING => false)))
(((PCI || BROKEN) && EXPERIMENTAL) || ((false => FIREWIRE) && (FIREWIRE => false)))
(((PCI || BROKEN) && (PCI && FIREWIRE)) || ((false => FIREWIRE_OHCI) && (FIREWIRE_OHCI => false)))
(false || (((true && ((PCI || BROKEN) && FIREWIRE_OHCI)) => FIREWIRE_OHCI_DEBUG) && (FIREWIRE_OHCI_DEBUG => (true && ((PCI || BROKEN) && FIREWIRE_OHCI)))))
(((PCI || BROKEN) && (FIREWIRE && SCSI)) || ((false => FIREWIRE_SBP2) && (FIREWIRE_SBP2 => false)))
((PCI || BROKEN) || ((false => IEEEtrue394) && (IEEEtrue394 => false)))
(((PCI || BROKEN) && (PCI && IEEEtrue394)) || ((false => IEEEtrue394_OHCItrue394) && (IEEEtrue394_OHCItrue394 => false)))
(((PCI || BROKEN) && (PCI && (IEEEtrue394 && I2C))) || ((false => IEEEtrue394_PCILYNX) && (IEEEtrue394_PCILYNX => false)))
(((PCI || BROKEN) && (IEEEtrue394 && SCSI)) || ((false => IEEEtrue394_SBP2) && (IEEEtrue394_SBP2 => false)))
(((PCI || BROKEN) && (IEEEtrue394_SBP2 && (VIRT_TO_BUS && EXPERIMENTAL))) || ((false => IEEEtrue394_SBP2_PHYS_DMA) && (IEEEtrue394_SBP2_PHYS_DMA => false)))
(false || (((IEEEtrue394_ETHtrue394 && ((PCI || BROKEN) && (IEEEtrue394 && (EXPERIMENTAL && INET)))) => IEEEtrue394_ETHtrue394_ROM_ENTRY) && (IEEEtrue394_ETHtrue394_ROM_ENTRY => (IEEEtrue394_ETHtrue394 && ((PCI || BROKEN) && (IEEEtrue394 && (EXPERIMENTAL && INET)))))))
(((PCI || BROKEN) && (IEEEtrue394 && (EXPERIMENTAL && INET))) || ((false => IEEEtrue394_ETHtrue394) && (IEEEtrue394_ETHtrue394 => false)))
(((PCI || BROKEN) && IEEEtrue394) || ((false => IEEEtrue394_RAWIO) && (IEEEtrue394_RAWIO => false)))
(((PCI || BROKEN) && (IEEEtrue394 && IEEEtrue394_OHCItrue394)) || ((false => IEEEtrue394_VIDEOtrue394) && (IEEEtrue394_VIDEOtrue394 => false)))
(((PCI || BROKEN) && (IEEEtrue394 && IEEEtrue394_OHCItrue394)) || ((false => IEEEtrue394_DVtrue394) && (IEEEtrue394_DVtrue394 => false)))
(((PCI || BROKEN) && IEEEtrue394) || ((false => IEEEtrue394_VERBOSEDEBUG) && (IEEEtrue394_VERBOSEDEBUG => false)))
(PCI || ((false => I2O) && (I2O => false)))
(I2O || (((true && I2O) => I2O_LCT_NOTIFY_ON_CHANGES) && (I2O_LCT_NOTIFY_ON_CHANGES => (true && I2O))))
(I2O || (((true && I2O) => I2O_EXT_ADAPTEC) && (I2O_EXT_ADAPTEC => (true && I2O))))
((I2O && (I2O_EXT_ADAPTEC && (a64BIT || HIGHMEM64G))) || (((true && (I2O && (I2O_EXT_ADAPTEC && (a64BIT || HIGHMEM64G)))) => I2O_EXT_ADAPTEC_DMA64) && (I2O_EXT_ADAPTEC_DMA64 => (true && (I2O && (I2O_EXT_ADAPTEC && (a64BIT || HIGHMEM64G)))))))
((I2O && VIRT_TO_BUS) || ((false => I2O_CONFIG) && (I2O_CONFIG => false)))
((I2O && I2O_CONFIG) || (((true && (I2O && I2O_CONFIG)) => I2O_CONFIG_OLD_IOCTL) && (I2O_CONFIG_OLD_IOCTL => (true && (I2O && I2O_CONFIG)))))
(I2O || ((false => I2O_BUS) && (I2O_BUS => false)))
((I2O && BLOCK) || ((false => I2O_BLOCK) && (I2O_BLOCK => false)))
((I2O && SCSI) || ((false => I2O_SCSI) && (I2O_SCSI => false)))
(I2O || ((false => I2O_PROC) && (I2O_PROC => false)))
((PPC || (MAC || X86)) || (((true && ((PPC || (MAC || X86)) && (PPC_PMAC || MAC))) => MACINTOSH_DRIVERS) && (MACINTOSH_DRIVERS => (true && ((PPC || (MAC || X86)) && (PPC_PMAC || MAC))))))
((MACINTOSH_DRIVERS && (MAC || (PPC_PMAC && PPC32))) || ((false => ADB) && (ADB => false)))
((MACINTOSH_DRIVERS && (ADB && MAC)) || ((false => ADB_MACII) && (ADB_MACII => false)))
((MACINTOSH_DRIVERS && (ADB && MAC)) || ((false => ADB_MACIISI) && (ADB_MACIISI => false)))
((MACINTOSH_DRIVERS && (ADB && MAC)) || ((false => ADB_IOP) && (ADB_IOP => false)))
((MACINTOSH_DRIVERS && (ADB && MAC)) || ((false => ADB_PMU68K) && (ADB_PMU68K => false)))
((MACINTOSH_DRIVERS && ((ADB || PPC_PMAC) && !PPC_PMAC64)) || ((false => ADB_CUDA) && (ADB_CUDA => false)))
((MACINTOSH_DRIVERS && PPC_PMAC) || ((false => ADB_PMU) && (ADB_PMU => false)))
((MACINTOSH_DRIVERS && ADB_PMU) || ((false => ADB_PMU_LED) && (ADB_PMU_LED => false)))
((MACINTOSH_DRIVERS && ADB_PMU_LED) || ((false => ADB_PMU_LED_IDE) && (ADB_PMU_LED_IDE => false)))
((MACINTOSH_DRIVERS && PPC_PMAC64) || ((false => PMAC_SMU) && (PMAC_SMU => false)))
((MACINTOSH_DRIVERS && (ADB_PMU && (PM && PPC32))) || ((false => PMAC_APM_EMU) && (PMAC_APM_EMU => false)))
((MACINTOSH_DRIVERS && (PPC_PMAC && PPC32)) || ((false => PMAC_MEDIABAY) && (PMAC_MEDIABAY => false)))
((MACINTOSH_DRIVERS && (ADB_PMU && (FB && (BROKEN || !PPC64)))) || ((false => PMAC_BACKLIGHT) && (PMAC_BACKLIGHT => false)))
((MACINTOSH_DRIVERS && (PMAC_BACKLIGHT && (BROKEN || !PPC64))) || ((false => PMAC_BACKLIGHT_LEGACY) && (PMAC_BACKLIGHT_LEGACY => false)))
((MACINTOSH_DRIVERS && (ADB && (PPC_CHRP && !PPC_PMAC64))) || ((false => ADB_MACIO) && (ADB_MACIO => false)))
((MACINTOSH_DRIVERS && (ADB && INPUT)) || ((false => INPUT_ADBHID) && (INPUT_ADBHID => false)))
(MACINTOSH_DRIVERS || ((false => MAC_EMUMOUSEBTN) && (MAC_EMUMOUSEBTN => false)))
((MACINTOSH_DRIVERS && (I2C && (I2C_POWERMAC && (PPC_PMAC && !PPC_PMAC64)))) || ((false => THERM_WINDTUNNEL) && (THERM_WINDTUNNEL => false)))
((MACINTOSH_DRIVERS && (I2C && (I2C_POWERMAC && (PPC_PMAC && !PPC_PMAC64)))) || ((false => THERM_ADT746X) && (THERM_ADT746X => false)))
((MACINTOSH_DRIVERS && (I2C && (I2C_POWERMAC && PPC_PMAC64))) || ((false => THERM_PM72) && (THERM_PM72 => false)))
((MACINTOSH_DRIVERS && PPC) || ((false => WINDFARM) && (WINDFARM => false)))
((MACINTOSH_DRIVERS && (WINDFARM && (I2C && (CPU_FREQ_PMAC64 && PMAC_SMU)))) || ((false => WINDFARM_PM8true) && (WINDFARM_PM8true => false)))
((MACINTOSH_DRIVERS && (WINDFARM && (I2C && (CPU_FREQ_PMAC64 && PMAC_SMU)))) || ((false => WINDFARM_PM9true) && (WINDFARM_PM9true => false)))
((MACINTOSH_DRIVERS && (WINDFARM && (I2C && PMAC_SMU))) || ((false => WINDFARM_PMtruetrue2) && (WINDFARM_PMtruetrue2 => false)))
((MACINTOSH_DRIVERS && (WINDFARM && (I2C && PMAC_SMU))) || ((false => WINDFARM_PMtrue2true) && (WINDFARM_PMtrue2true => false)))
((MACINTOSH_DRIVERS && (ADB_CUDA && PPC_PMAC)) || ((false => ANSLCD) && (ANSLCD => false)))
((MACINTOSH_DRIVERS && PPC_PMAC) || ((false => PMAC_RACKMETER) && (PMAC_RACKMETER => false)))
(NET || (((true && (NET && UML)) => NETDEVICES) && (NETDEVICES => (true && (NET && UML)))))
((NETDEVICES && NET_CLS_ACT) || ((false => IFB) && (IFB => false)))
(NETDEVICES || ((false => DUMMY) && (DUMMY => false)))
((NETDEVICES && INET) || ((false => BONDING) && (BONDING => false)))
((NETDEVICES && EXPERIMENTAL) || ((false => MACVLAN) && (MACVLAN => false)))
(NETDEVICES || ((false => EQUALIZER) && (EQUALIZER => false)))
(NETDEVICES || ((false => TUN) && (TUN => false)))
(NETDEVICES || ((false => VETH) && (VETH => false)))
((NETDEVICES && PNP) || ((false => NET_SBtruefalsefalsefalse) && (NET_SBtruefalsefalsefalse => false)))
((NETDEVICES && (ISA || PCI)) || ((false => ARCNET) && (ARCNET => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_true2falsetrue) && (ARCNET_true2falsetrue => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_truefalse5true) && (ARCNET_truefalse5true => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_RAW) && (ARCNET_RAW => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_CAP) && (ARCNET_CAP => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_COM9falsexx) && (ARCNET_COM9falsexx => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_COM9falsexxIO) && (ARCNET_COM9falsexxIO => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_RIM_I) && (ARCNET_RIM_I => false)))
((NETDEVICES && ARCNET) || ((false => ARCNET_COM2falsefalse2false) && (ARCNET_COM2falsefalse2false => false)))
((NETDEVICES && (ARCNET && (ARCNET_COM2falsefalse2false && ISA))) || ((false => ARCNET_COM2falsefalse2false_ISA) && (ARCNET_COM2falsefalse2false_ISA => false)))
((NETDEVICES && (ARCNET && (ARCNET_COM2falsefalse2false && PCI))) || ((false => ARCNET_COM2falsefalse2false_PCI) && (ARCNET_COM2falsefalse2false_PCI => false)))
((NETDEVICES && (!S39false && NET_ETHERNET)) || ((((((((((((((((x276 || x277) || x278) || x279) || x28false) || x28true) || x282) || x283) || x284) || x285) || x286) || x287) || x288) || x289) || x69) => PHYLIB) && (PHYLIB => ((((((((((((((x276 || x277) || x278) || x279) || x28false) || x28true) || x282) || x283) || x284) || x285) || x286) || x287) || x288) || x289) || x69))))
(x276 <=> (GIANFAR && (NETDEVICES && (NETDEV_truefalsefalsefalse && FSL_SOC))))
(x277 <=> (BFIN_MAC && (NETDEVICES && (NET_ETHERNET && (BF526 || (BF527 || (BF536 || BF537)))))))
(x278 <=> (NET_DSA && (NET && (EXPERIMENTAL && !S39false))))
(x279 <=> (UCC_GETH && (NETDEVICES && (NETDEV_truefalsefalsefalse && QUICC_ENGINE))))
(x28false <=> (SH_ETH && (NETDEVICES && (NET_ETHERNET && (SUPERH && (CPU_SUBTYPE_SH77truefalse || (CPU_SUBTYPE_SH77true2 || (CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH76true9))))))))
(x28true <=> (CPMAC && (NETDEVICES && (NET_ETHERNET && (EXPERIMENTAL && (AR7 && BROKEN))))))
(x282 <=> (SBtrue25false_MAC && (NETDEVICES && (NETDEV_truefalsefalsefalse && SIBYTE_SBtruexxx_SOC))))
(x283 <=> (MV643XX_ETH && (NETDEVICES && (NETDEV_truefalsefalsefalse && (MV6436false || (MV64X6false || ((PPC_MULTIPLATFORM && PPC32) || PLAT_ORION)))))))
(x284 <=> (TIGON3 && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x285 <=> (TC358true5 && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && MIPS))))))
(x286 <=> (MACB && (NETDEVICES && (NET_ETHERNET && (AVR32 || (ARCH_AT9trueSAM926false || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9G2false || ARCH_AT9trueCAP9))))))))
(x287 <=> (FS_ENET && (NETDEVICES && (NET_ETHERNET && (CPMtrue || CPM2)))))
(x288 <=> (FEC_MPC52xx && (NETDEVICES && (NET_ETHERNET && (PPC_MPC52xx && PPC_BESTCOMM)))))
(x289 <=> (MIPS_AUtrueXfalsefalse_ENET && (NETDEVICES && (NET_ETHERNET && SOC_AUtrueXfalsefalse))))
(x69 <=> (PASEMI_MAC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PPC_PASEMI && PCI)))))
((NETDEVICES && PHYLIB) || ((false => MARVELL_PHY) && (MARVELL_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => DAVICOM_PHY) && (DAVICOM_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => QSEMI_PHY) && (QSEMI_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => LXT_PHY) && (LXT_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => CICADA_PHY) && (CICADA_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => VITESSE_PHY) && (VITESSE_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => SMSC_PHY) && (SMSC_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => BROADCOM_PHY) && (BROADCOM_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => ICPLUS_PHY) && (ICPLUS_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => REALTEK_PHY) && (REALTEK_PHY => false)))
((NETDEVICES && PHYLIB) || ((false => FIXED_PHY) && (FIXED_PHY => false)))
((NETDEVICES && PHYLIB) || ((((FS_ENET_MDIO_FCC && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPM2)))) || (SH_ETH && (NETDEVICES && (NET_ETHERNET && (SUPERH && (CPU_SUBTYPE_SH77truefalse || (CPU_SUBTYPE_SH77true2 || (CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH76true9)))))))) => MDIO_BITBANG) && (MDIO_BITBANG => ((FS_ENET_MDIO_FCC && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPM2)))) || (SH_ETH && (NETDEVICES && (NET_ETHERNET && (SUPERH && (CPU_SUBTYPE_SH77truefalse || (CPU_SUBTYPE_SH77true2 || (CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH76true9)))))))))))
((NETDEVICES && (PHYLIB && (MDIO_BITBANG && OF_GPIO))) || ((false => MDIO_OF_GPIO) && (MDIO_OF_GPIO => false)))
((NETDEVICES && !UML) || ((false => NET_ETHERNET) && (NET_ETHERNET => false)))
((NETDEVICES && NET_ETHERNET) || (((((((((((((((((((((((((((((((((((((((((((x29false || x29true) || x292) || x293) || x28false) || x294) || x295) || x296) || x297) || x298) || x299) || x3falsefalse) || x3falsetrue) || x3false2) || x3false3) || x3false4) || x3false5) || x62) || x3false6) || x277) || x3false7) || x3false8) || x3false9) || x3truefalse) || x3truetrue) || x3true2) || x3true3) || x3true4) || x3true5) || x3true6) || x3true7) || x3true8) || x3true9) || x32false) || x32true) || x322) || x323) || x324) || x325) || x287) || x326) || x327) => MII) && (MII => (((((((((((((((((((((((((((((((((((((((((x29false || x29true) || x292) || x293) || x28false) || x294) || x295) || x296) || x297) || x298) || x299) || x3falsefalse) || x3falsetrue) || x3false2) || x3false3) || x3false4) || x3false5) || x62) || x3false6) || x277) || x3false7) || x3false8) || x3false9) || x3truefalse) || x3truetrue) || x3true2) || x3true3) || x3true4) || x3true5) || x3true6) || x3true7) || x3true8) || x3true9) || x32false) || x32true) || x322) || x323) || x324) || x325) || x287) || x326) || x327))))
(x29false <=> (EEPROtruefalsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x29true <=> (8true39TOO && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x292 <=> (ATL2 && (NETDEVICES && (NET_ETHERNET && PCI))))
(x293 <=> (EPICtruefalsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x28false <=> (SH_ETH && (NETDEVICES && (NET_ETHERNET && (SUPERH && (CPU_SUBTYPE_SH77truefalse || (CPU_SUBTYPE_SH77true2 || (CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH76true9))))))))
(x294 <=> (IXP4XX_ETH && (NETDEVICES && (NET_ETHERNET && (ARM && (ARCH_IXP4XX && (IXP4XX_NPE && IXP4XX_QMGR)))))))
(x295 <=> (USB_PEGASUS && (NETDEVICES && (USB && NET))))
(x296 <=> (USB_USBNET && (NETDEVICES && (USB && NET))))
(x297 <=> (SIS9falsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x298 <=> (PCMCIA_SMC9trueC92 && (NETDEVICES && (NET_PCMCIA && PCMCIA))))
(x299 <=> (AX88796 && (NETDEVICES && (NET_ETHERNET && (ARM || (MIPS || SUPERH))))))
(x3falsefalse <=> (8true39CP && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && EXPERIMENTAL))))))
(x3falsetrue <=> (JME && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x3false2 <=> (SIStrue9false && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x3false3 <=> (USB_RTL8true5false && (NETDEVICES && (USB && (NET && EXPERIMENTAL)))))
(x3false4 <=> (SGI_IOC3_ETH && (NETDEVICES && (NET_ETHERNET && (PCI && SGI_IP27)))))
(x3false5 <=> (WINBOND_84false && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI)))))
(x62 <=> (SFC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x3false6 <=> (R6false4false && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x277 <=> (BFIN_MAC && (NETDEVICES && (NET_ETHERNET && (BF526 || (BF527 || (BF536 || BF537)))))))
(x3false7 <=> (ATLtrue && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x3false8 <=> (ADAPTEC_STARFIRE && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x3false9 <=> (ATLtrueE && (NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL)))))
(x3truefalse <=> (SMC9trueX && (NETDEVICES && (NET_ETHERNET && (ARM || (REDWOOD_5 || (REDWOOD_6 || (M32R || (SUPERH || (MIPS || (BLACKFIN || MNtruefalse3falsefalse)))))))))))
(x3truetrue <=> (PCNET32 && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x3true2 <=> (NET_NETX && (NETDEVICES && (NET_ETHERNET && ARCH_NETX))))
(x3true3 <=> (VORTEX && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && (PCI || EISA))))))
(x3true4 <=> (AMD8truetruetrue_ETH && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x3true5 <=> (R8true69 && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x3true6 <=> (VIA_VELOCITY && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x3true7 <=> (FEALNX && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x3true8 <=> (IPtruefalsefalsefalse && (NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL)))))
(x3true9 <=> (DM9falsefalsefalse && (NETDEVICES && (NET_ETHERNET && (ARM || (BLACKFIN || MIPS))))))
(x32false <=> (HAMACHI && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x32true <=> (SMC9truetrueX && (NETDEVICES && (NET_ETHERNET && (ARM || SUPERH)))))
(x322 <=> (Etruefalsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x323 <=> (SUNDANCE && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x324 <=> (EP93XX_ETH && (NETDEVICES && (NET_ETHERNET && (ARM && ARCH_EP93XX)))))
(x325 <=> (B44 && (NETDEVICES && (NET_ETHERNET && (SSB_POSSIBLE && HAS_DMA)))))
(x287 <=> (FS_ENET && (NETDEVICES && (NET_ETHERNET && (CPMtrue || CPM2)))))
(x326 <=> (ARM_AT9true_ETHER && (NETDEVICES && (NET_ETHERNET && (ARM && ARCH_AT9trueRM92falsefalse)))))
(x327 <=> (VIA_RHINE && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
((NETDEVICES && (NET_ETHERNET && (AVR32 || (ARCH_AT9trueSAM926false || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9G2false || ARCH_AT9trueCAP9)))))) || ((false => MACB) && (MACB => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && ARCH_EBSAtruetruefalse))) || ((false => ARM_AM79C96trueA) && (ARM_AM79C96trueA => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && ARCH_ACORN))) || ((false => ARM_ETHERtrue) && (ARM_ETHERtrue => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && ARCH_ACORN))) || ((false => ARM_ETHER3) && (ARM_ETHER3 => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && ARCH_ACORN))) || ((false => ARM_ETHERH) && (ARM_ETHERH => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && ARCH_AT9trueRM92falsefalse))) || ((false => ARM_AT9true_ETHER) && (ARM_AT9true_ETHER => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && ARCH_EP93XX))) || ((false => EP93XX_ETH) && (EP93XX_ETH => false)))
((NETDEVICES && (NET_ETHERNET && (ARM && (ARCH_IXP4XX && (IXP4XX_NPE && IXP4XX_QMGR))))) || ((false => IXP4XX_ETH) && (IXP4XX_ETH => false)))
((NETDEVICES && (NET_ETHERNET && (ARM || (MIPS || SUPERH)))) || ((false => AX88796) && (AX88796 => false)))
((NETDEVICES && (NET_ETHERNET && AX88796)) || ((false => AX88796_93CX6) && (AX88796_93CX6 => false)))
((NETDEVICES && (NET_ETHERNET && (PPC_PMAC && PPC32))) || ((false => MACE) && (MACE => false)))
((NETDEVICES && (NET_ETHERNET && MACE)) || ((false => MACE_AAUI_PORT) && (MACE_AAUI_PORT => false)))
((NETDEVICES && (NET_ETHERNET && (PPC_PMAC && PPC32))) || ((false => BMAC) && (BMAC => false)))
((NETDEVICES && (NET_ETHERNET && ZORRO)) || ((false => ARIADNE) && (ARIADNE => false)))
((NETDEVICES && (NET_ETHERNET && ZORRO)) || ((false => A2false65) && (A2false65 => false)))
((NETDEVICES && (NET_ETHERNET && ZORRO)) || ((false => HYDRA) && (HYDRA => false)))
((NETDEVICES && (NET_ETHERNET && ZORRO)) || ((false => ZORRO839false) && (ZORRO839false => false)))
((NETDEVICES && (NET_ETHERNET && AMIGA_PCMCIA)) || ((false => APNE) && (APNE => false)))
((NETDEVICES && (NET_ETHERNET && MAC)) || ((false => MAC839false) && (MAC839false => false)))
((NETDEVICES && (NET_ETHERNET && MAC)) || ((false => MAC89xfalse) && (MAC89xfalse => false)))
((NETDEVICES && (NET_ETHERNET && MAC)) || ((false => MACSONIC) && (MACSONIC => false)))
((NETDEVICES && (NET_ETHERNET && MAC)) || ((false => MACMACE) && (MACMACE => false)))
((NETDEVICES && (NET_ETHERNET && MVMEtrue47)) || ((false => MVMEtrue47_NET) && (MVMEtrue47_NET => false)))
((NETDEVICES && (NET_ETHERNET && MVMEtrue6x)) || ((false => MVMEtrue6x_NET) && (MVMEtrue6x_NET => false)))
((NETDEVICES && (NET_ETHERNET && BVME6falsefalsefalse)) || ((false => BVME6falsefalsefalse_NET) && (BVME6falsefalsefalse_NET => false)))
((NETDEVICES && (NET_ETHERNET && ATARI)) || ((false => ATARILANCE) && (ATARILANCE => false)))
((NETDEVICES && (NET_ETHERNET && (SUN3 || SUN3X))) || ((false => SUN3LANCE) && (SUN3LANCE => false)))
((NETDEVICES && (NET_ETHERNET && SUN3)) || ((false => SUN3_82586) && (SUN3_82586 => false)))
((NETDEVICES && (NET_ETHERNET && DIO)) || ((false => HPLANCE) && (HPLANCE => false)))
((NETDEVICES && (NET_ETHERNET && GSC)) || ((false => LASI_82596) && (LASI_82596 => false)))
((NETDEVICES && (NET_ETHERNET && SNI_RM)) || ((false => SNI_82596) && (SNI_82596 => false)))
((NETDEVICES && (NET_ETHERNET && MIKROTIK_RB532)) || ((false => KORINA) && (KORINA => false)))
((NETDEVICES && (NET_ETHERNET && MACH_JAZZ)) || ((false => MIPS_JAZZ_SONIC) && (MIPS_JAZZ_SONIC => false)))
((NETDEVICES && (NET_ETHERNET && XTENSA_PLATFORM_XT2falsefalsefalse)) || ((false => XTENSA_XT2falsefalsefalse_SONIC) && (XTENSA_XT2falsefalsefalse_SONIC => false)))
((NETDEVICES && (NET_ETHERNET && SOC_AUtrueXfalsefalse)) || ((false => MIPS_AUtrueXfalsefalse_ENET) && (MIPS_AUtrueXfalsefalse_ENET => false)))
((NETDEVICES && (NET_ETHERNET && (PCI && SGI_IP27))) || ((false => SGI_IOC3_ETH) && (SGI_IOC3_ETH => false)))
((NETDEVICES && (NET_ETHERNET && MIPS_SIM)) || ((false => MIPS_SIM_NET) && (MIPS_SIM_NET => false)))
((NETDEVICES && (NET_ETHERNET && SGI_IP32)) || ((false => SGI_O2MACE_ETH) && (SGI_O2MACE_ETH => false)))
((NETDEVICES && (NET_ETHERNET && SUPERH)) || ((false => STNIC) && (STNIC => false)))
((NETDEVICES && (NET_ETHERNET && (SUPERH && (CPU_SUBTYPE_SH77truefalse || (CPU_SUBTYPE_SH77true2 || (CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH76true9)))))) || ((false => SH_ETH) && (SH_ETH => false)))
((NETDEVICES && (NET_ETHERNET && SBUS)) || ((false => SUNLANCE) && (SUNLANCE => false)))
((NETDEVICES && (NET_ETHERNET && (SBUS || PCI))) || ((false => HAPPYMEAL) && (HAPPYMEAL => false)))
((NETDEVICES && (NET_ETHERNET && (SBUS && EXPERIMENTAL))) || ((false => SUNBMAC) && (SUNBMAC => false)))
((NETDEVICES && (NET_ETHERNET && SBUS)) || ((false => SUNQE) && (SUNQE => false)))
((NETDEVICES && (NET_ETHERNET && PCI)) || ((false => SUNGEM) && (SUNGEM => false)))
((NETDEVICES && (NET_ETHERNET && PCI)) || ((false => CASSINI) && (CASSINI => false)))
((NETDEVICES && (NET_ETHERNET && SUN_LDOMS)) || ((false => SUNVNET) && (SUNVNET => false)))
((NETDEVICES && (NET_ETHERNET && (ISA || (EISA || (MCA || PCI))))) || ((false => NET_VENDOR_3COM) && (NET_VENDOR_3COM => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && ISA))) || ((false => ELtrue) && (ELtrue => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && ISA))) || ((false => EL2) && (EL2 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && (ISA && ISA_DMA_API)))) || ((false => ELPLUS) && (ELPLUS => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && (ISA && EXPERIMENTAL)))) || ((false => ELtrue6) && (ELtrue6 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && (ISA || (EISA || MCA))))) || ((false => EL3) && (EL3 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && ((ISA || EISA) && ISA_DMA_API)))) || ((false => 3C5true5) && (3C5true5 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && MCA_LEGACY))) || ((false => ELMC) && (ELMC => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && (MCA && MCA_LEGACY)))) || ((false => ELMC_II) && (ELMC_II => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && (PCI || EISA)))) || ((false => VORTEX) && (VORTEX => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && PCI))) || ((false => TYPHOON) && (TYPHOON => false)))
((NETDEVICES && (NET_ETHERNET && (ISA && ISA_DMA_API))) || ((false => LANCE) && (LANCE => false)))
((NETDEVICES && (NET_ETHERNET && (ISA || (MCA || (EISA || MAC))))) || ((false => NET_VENDOR_SMC) && (NET_VENDOR_SMC => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && ISA))) || ((false => WD8falsex3) && (WD8falsex3 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && MCA))) || ((false => ULTRAMCA) && (ULTRAMCA => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && ISA))) || ((false => ULTRA) && (ULTRA => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && EISA))) || ((false => ULTRA32) && (ULTRA32 => false)))
((NETDEVICES && (NET_ETHERNET && (BF526 || (BF527 || (BF536 || BF537))))) || ((false => BFIN_MAC) && (BFIN_MAC => false)))
((NETDEVICES && (NET_ETHERNET && (BFIN_MAC && (BF527 || BF537)))) || ((((BFIN_MAC && (NETDEVICES && (NET_ETHERNET && ((BF526 || (BF527 || (BF536 || BF537))) && DMA_UNCACHED_NONE)))) || (true && (NETDEVICES && (NET_ETHERNET && (BFIN_MAC && (BF527 || BF537)))))) => BFIN_MAC_USE_Ltrue) && (BFIN_MAC_USE_Ltrue => ((BFIN_MAC && (NETDEVICES && (NET_ETHERNET && ((BF526 || (BF527 || (BF536 || BF537))) && DMA_UNCACHED_NONE)))) || (true && (NETDEVICES && (NET_ETHERNET && (BFIN_MAC && (BF527 || BF537)))))))))
((NETDEVICES && (NET_ETHERNET && BFIN_MAC)) || (((true && (NETDEVICES && (NET_ETHERNET && BFIN_MAC))) => BFIN_TX_DESC_NUM) && (BFIN_TX_DESC_NUM => (true && (NETDEVICES && (NET_ETHERNET && BFIN_MAC))))))
((NETDEVICES && (NET_ETHERNET && BFIN_MAC)) || (((true && (NETDEVICES && (NET_ETHERNET && BFIN_MAC))) => BFIN_RX_DESC_NUM) && (BFIN_RX_DESC_NUM => (true && (NETDEVICES && (NET_ETHERNET && BFIN_MAC))))))
((NETDEVICES && (NET_ETHERNET && (BFIN_MAC && EXPERIMENTAL))) || (((true && (NETDEVICES && (NET_ETHERNET && (BFIN_MAC && (EXPERIMENTAL && BFIN527_EZKIT))))) => BFIN_MAC_RMII) && (BFIN_MAC_RMII => (true && (NETDEVICES && (NET_ETHERNET && (BFIN_MAC && (EXPERIMENTAL && BFIN527_EZKIT))))))))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && (ISA || (MAC && BROKEN))))) || ((false => SMC9true94) && (SMC9true94 => false)))
((NETDEVICES && (NET_ETHERNET && (ARM || (REDWOOD_5 || (REDWOOD_6 || (M32R || (SUPERH || (MIPS || (BLACKFIN || MNtruefalse3falsefalse))))))))) || ((false => SMC9trueX) && (SMC9trueX => false)))
((NETDEVICES && (NET_ETHERNET && ARCH_NETX)) || ((false => NET_NETX) && (NET_NETX => false)))
((NETDEVICES && (NET_ETHERNET && (ARM || (BLACKFIN || MIPS)))) || ((false => DM9falsefalsefalse) && (DM9falsefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && DM9falsefalsefalse)) || (((true && (NETDEVICES && (NET_ETHERNET && DM9falsefalsefalse))) => DM9falsefalsefalse_DEBUGLEVEL) && (DM9falsefalsefalse_DEBUGLEVEL => (true && (NETDEVICES && (NET_ETHERNET && DM9falsefalsefalse))))))
((NETDEVICES && (NET_ETHERNET && DM9falsefalsefalse)) || ((false => DM9falsefalsefalse_FORCE_SIMPLE_PHY_POLL) && (DM9falsefalsefalse_FORCE_SIMPLE_PHY_POLL => false)))
((NETDEVICES && (EXPERIMENTAL && (SPI && NET_ETHERNET))) || ((false => ENC28J6false) && (ENC28J6false => false)))
((NETDEVICES && (NET_ETHERNET && ENC28J6false)) || ((false => ENC28J6false_WRITEVERIFY) && (ENC28J6false_WRITEVERIFY => false)))
((NETDEVICES && (NET_ETHERNET && (ARM || SUPERH))) || ((false => SMC9truetrueX) && (SMC9truetrueX => false)))
((NETDEVICES && (NET_ETHERNET && ISA)) || ((false => NET_VENDOR_RACAL) && (NET_VENDOR_RACAL => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_RACAL && (ISA && (EXPERIMENTAL && BROKEN_ON_SMP))))) || ((false => NI5falsetruefalse) && (NI5falsetruefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_RACAL && ISA))) || ((false => NI52) && (NI52 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_VENDOR_RACAL && (ISA && ISA_DMA_API)))) || ((false => NI65) && (NI65 => false)))
((NETDEVICES && (NET_ETHERNET && (PCI || (EISA || CARDBUS)))) || ((false => NET_TULIP) && (NET_TULIP => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && (PCI && EXPERIMENTAL)))) || ((false => DE2truefalse4X) && (DE2truefalse4X => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI))) || ((false => TULIP) && (TULIP => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && (TULIP && EXPERIMENTAL)))) || ((false => TULIP_MWI) && (TULIP_MWI => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && TULIP))) || ((false => TULIP_MMIO) && (TULIP_MMIO => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && TULIP))) || ((false => TULIP_NAPI) && (TULIP_NAPI => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && TULIP_NAPI))) || ((false => TULIP_NAPI_HW_MITIGATION) && (TULIP_NAPI_HW_MITIGATION => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && (PCI || EISA)))) || ((false => DE4X5) && (DE4X5 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI))) || ((false => WINBOND_84false) && (WINBOND_84false => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI))) || ((false => DM9truefalse2) && (DM9truefalse2 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI))) || ((false => ULI526X) && (ULI526X => false)))
((NETDEVICES && (NET_ETHERNET && (NET_TULIP && CARDBUS))) || ((false => PCMCIA_XIRCOM) && (PCMCIA_XIRCOM => false)))
((NETDEVICES && (NET_ETHERNET && ((ISA || MCA_LEGACY) && EXPERIMENTAL))) || ((false => ATtrue7falsefalse) && (ATtrue7falsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (ISA || (EISA || MCA)))) || ((false => DEPCA) && (DEPCA => false)))
((NETDEVICES && (NET_ETHERNET && (ISA || (EISA || PCI)))) || ((false => HPtruefalsefalse) && (HPtruefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && ISA)) || ((false => NET_ISA) && (NET_ISA => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => E2truefalsefalse) && (E2truefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => EWRK3) && (EWRK3 => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => EEXPRESS) && (EEXPRESS => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => EEXPRESS_PRO) && (EEXPRESS_PRO => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => HPLAN_PLUS) && (HPLAN_PLUS => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => HPLAN) && (HPLAN => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => LP486E) && (LP486E => false)))
((NETDEVICES && (NET_ETHERNET && NET_ISA)) || ((false => ETHtrue6I) && (ETHtrue6I => false)))
((NETDEVICES && (NET_ETHERNET && (NET_ISA || ((Q4false && (true && true)) || (M32R || MACH_TX49XX))))) || ((false => NE2falsefalsefalse) && (NE2falsefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_ISA && (EXPERIMENTAL && ISA_DMA_API)))) || ((false => ZNET) && (ZNET => false)))
((NETDEVICES && (NET_ETHERNET && (NET_ISA && EXPERIMENTAL))) || ((false => SEEQ8falsefalse5) && (SEEQ8falsefalse5 => false)))
((NETDEVICES && (NET_ETHERNET && MCA_LEGACY)) || ((false => NE2_MCA) && (NE2_MCA => false)))
((NETDEVICES && (NET_ETHERNET && MCA)) || ((false => IBMLANA) && (IBMLANA => false)))
((NETDEVICES && (NET_ETHERNET && PPC_PSERIES)) || ((false => IBMVETH) && (IBMVETH => false)))
((NETDEVICES && (NET_ETHERNET && PPC_DCR)) || ((false => IBM_NEW_EMAC) && (IBM_NEW_EMAC => false)))
((NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC)) || (((true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))) => IBM_NEW_EMAC_RXB) && (IBM_NEW_EMAC_RXB => (true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))))))
((NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC)) || (((true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))) => IBM_NEW_EMAC_TXB) && (IBM_NEW_EMAC_TXB => (true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))))))
((NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC)) || (((true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))) => IBM_NEW_EMAC_POLL_WEIGHT) && (IBM_NEW_EMAC_POLL_WEIGHT => (true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))))))
((NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC)) || (((true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))) => IBM_NEW_EMAC_RX_COPY_THRESHOLD) && (IBM_NEW_EMAC_RX_COPY_THRESHOLD => (true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))))))
((NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC)) || (((true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))) => IBM_NEW_EMAC_RX_SKB_HEADROOM) && (IBM_NEW_EMAC_RX_SKB_HEADROOM => (true && (NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC))))))
((NETDEVICES && (NET_ETHERNET && IBM_NEW_EMAC)) || ((false => IBM_NEW_EMAC_DEBUG) && (IBM_NEW_EMAC_DEBUG => false)))
(false || ((false => IBM_NEW_EMAC_ZMII) && (IBM_NEW_EMAC_ZMII => false)))
(false || ((false => IBM_NEW_EMAC_RGMII) && (IBM_NEW_EMAC_RGMII => false)))
(false || ((false => IBM_NEW_EMAC_TAH) && (IBM_NEW_EMAC_TAH => false)))
(false || ((false => IBM_NEW_EMAC_EMAC4) && (IBM_NEW_EMAC_EMAC4 => false)))
(false || ((false => IBM_NEW_EMAC_NO_FLOW_CTRL) && (IBM_NEW_EMAC_NO_FLOW_CTRL => false)))
(false || ((false => IBM_NEW_EMAC_MAL_CLR_ICINTSTAT) && (IBM_NEW_EMAC_MAL_CLR_ICINTSTAT => false)))
(false || ((false => IBM_NEW_EMAC_MAL_COMMON_ERR) && (IBM_NEW_EMAC_MAL_COMMON_ERR => false)))
((NETDEVICES && (NET_ETHERNET && (ISA || (EISA || PCI)))) || ((false => NET_PCI) && (NET_PCI => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => PCNET32) && (PCNET32 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => AMD8truetruetrue_ETH) && (AMD8truetruetrue_ETH => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => ADAPTEC_STARFIRE) && (ADAPTEC_STARFIRE => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && ((ISA || EISA) && EXPERIMENTAL)))) || ((false => AC32falsefalse) && (AC32falsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && ISA))) || ((false => APRICOT) && (APRICOT => false)))
((NETDEVICES && (NET_ETHERNET && (SSB_POSSIBLE && HAS_DMA))) || ((false => B44) && (B44 => false)))
(false || (((true && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_PCIHOST_POSSIBLE)))) => B44_PCI_AUTOSELECT) && (B44_PCI_AUTOSELECT => (true && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_PCIHOST_POSSIBLE)))))))
(false || (((true && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_DRIVER_PCICORE_POSSIBLE)))) => B44_PCICORE_AUTOSELECT) && (B44_PCICORE_AUTOSELECT => (true && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_DRIVER_PCICORE_POSSIBLE)))))))
(false || (((true && (NETDEVICES && (NET_ETHERNET && (B44_PCI_AUTOSELECT && B44_PCICORE_AUTOSELECT)))) => B44_PCI) && (B44_PCI => (true && (NETDEVICES && (NET_ETHERNET && (B44_PCI_AUTOSELECT && B44_PCICORE_AUTOSELECT)))))))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => FORCEDETH) && (FORCEDETH => false)))
((NETDEVICES && (NET_ETHERNET && (FORCEDETH && EXPERIMENTAL))) || ((false => FORCEDETH_NAPI) && (FORCEDETH_NAPI => false)))
((NETDEVICES && (NET_ETHERNET && (ISA || (EISA || (MACH_IXDP235true || (ARCH_IXDP2Xfalsetrue || (ARCH_PNXfalsetruefalseX || MACH_MX3trueADS))))))) || ((false => CS89xfalse) && (CS89xfalse => false)))
(false || (((true && (NETDEVICES && (NET_ETHERNET && (CS89xfalse && (MACH_IXDP235true || (ARCH_IXDP2Xfalsetrue || (ARCH_PNXfalsetruefalseX || MACH_MX3trueADS))))))) => CS89xfalse_NONISA_IRQ) && (CS89xfalse_NONISA_IRQ => (true && (NETDEVICES && (NET_ETHERNET && (CS89xfalse && (MACH_IXDP235true || (ARCH_IXDP2Xfalsetrue || (ARCH_PNXfalsetruefalseX || MACH_MX3trueADS))))))))))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && MIPS)))) || ((false => TC358true5) && (TC358true5 => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => EEPROtruefalsefalse) && (EEPROtruefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => Etruefalsefalse) && (Etruefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (EISA && EXPERIMENTAL)))) || ((false => LNE39false) && (LNE39false => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => FEALNX) && (FEALNX => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => NATSEMI) && (NATSEMI => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => NE2K_PCI) && (NE2K_PCI => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (EISA && EXPERIMENTAL)))) || ((false => NE32truefalse) && (NE32truefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (EISA && EXPERIMENTAL)))) || ((false => ES32truefalse) && (ES32truefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && EXPERIMENTAL)))) || ((false => 8true39CP) && (8true39CP => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => 8true39TOO) && (8true39TOO => false)))
((NETDEVICES && (NET_ETHERNET && 8true39TOO)) || (((true && (NETDEVICES && (NET_ETHERNET && 8true39TOO))) => 8true39TOO_PIO) && (8true39TOO_PIO => (true && (NETDEVICES && (NET_ETHERNET && 8true39TOO))))))
((NETDEVICES && (NET_ETHERNET && 8true39TOO)) || ((false => 8true39TOO_TUNE_TWISTER) && (8true39TOO_TUNE_TWISTER => false)))
((NETDEVICES && (NET_ETHERNET && 8true39TOO)) || ((false => 8true39TOO_8true29) && (8true39TOO_8true29 => false)))
((NETDEVICES && (NET_ETHERNET && 8true39TOO)) || ((false => 8true39_OLD_RX_RESET) && (8true39_OLD_RX_RESET => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => R6false4false) && (R6false4false => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => SIS9falsefalse) && (SIS9falsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => EPICtruefalsefalse) && (EPICtruefalsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => SUNDANCE) && (SUNDANCE => false)))
((NETDEVICES && (NET_ETHERNET && SUNDANCE)) || ((false => SUNDANCE_MMIO) && (SUNDANCE_MMIO => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI || EISA)))) || ((false => TLAN) && (TLAN => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI))) || ((false => VIA_RHINE) && (VIA_RHINE => false)))
((NETDEVICES && (NET_ETHERNET && VIA_RHINE)) || ((false => VIA_RHINE_MMIO) && (VIA_RHINE_MMIO => false)))
((NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && EXPERIMENTAL)))) || ((false => SC92false3true) && (SC92false3true => false)))
((NETDEVICES && (NET_ETHERNET && (EXPERIMENTAL && (AR7 && BROKEN)))) || ((false => CPMAC) && (CPMAC => false)))
((NETDEVICES && (NET_ETHERNET && PARPORT)) || ((false => NET_POCKET) && (NET_POCKET => false)))
((NETDEVICES && (NET_ETHERNET && (NET_POCKET && (PARPORT && X86)))) || ((false => ATP) && (ATP => false)))
((NETDEVICES && (NET_ETHERNET && (NET_POCKET && PARPORT))) || ((false => DE6falsefalse) && (DE6falsefalse => false)))
((NETDEVICES && (NET_ETHERNET && (NET_POCKET && PARPORT))) || ((false => DE62false) && (DE62false => false)))
((NETDEVICES && (NET_ETHERNET && SGI_HAS_SEEQ)) || ((false => SGISEEQ) && (SGISEEQ => false)))
((NETDEVICES && (NET_ETHERNET && MACH_DECSTATION)) || ((false => DECLANCE) && (DECLANCE => false)))
((NETDEVICES && (NET_ETHERNET && M6836false)) || ((false => a6836false_ENET) && (a6836false_ENET => false)))
((NETDEVICES && (NET_ETHERNET && (M523x || (M527x || (M5272 || (M528x || M52falsex)))))) || ((false => FEC) && (FEC => false)))
((NETDEVICES && (NET_ETHERNET && FEC)) || ((false => FEC2) && (FEC2 => false)))
((NETDEVICES && (NET_ETHERNET && (PPC_MPC52xx && PPC_BESTCOMM))) || ((false => FEC_MPC52xx) && (FEC_MPC52xx => false)))
((NETDEVICES && (NET_ETHERNET && FEC_MPC52xx)) || (((true && (NETDEVICES && (NET_ETHERNET && FEC_MPC52xx))) => FEC_MPC52xx_MDIO) && (FEC_MPC52xx_MDIO => (true && (NETDEVICES && (NET_ETHERNET && FEC_MPC52xx))))))
((NETDEVICES && (NET_ETHERNET && H83falsefalse)) || ((false => NE_H83falsefalse) && (NE_H83falsefalse => false)))
((NETDEVICES && (NET_ETHERNET && PCI)) || ((false => ATL2) && (ATL2 => false)))
((NETDEVICES && (NET_ETHERNET && (CPMtrue || CPM2))) || ((false => FS_ENET) && (FS_ENET => false)))
((NETDEVICES && (NET_ETHERNET && (FS_ENET && (CPMtrue || CPM2)))) || (((true && (NETDEVICES && (NET_ETHERNET && (FS_ENET && (CPMtrue || CPM2))))) => FS_ENET_HAS_SCC) && (FS_ENET_HAS_SCC => (true && (NETDEVICES && (NET_ETHERNET && (FS_ENET && (CPMtrue || CPM2))))))))
((NETDEVICES && (NET_ETHERNET && (FS_ENET && CPM2))) || (((true && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPM2)))) => FS_ENET_HAS_FCC) && (FS_ENET_HAS_FCC => (true && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPM2)))))))
((NETDEVICES && (NET_ETHERNET && (FS_ENET && CPMtrue))) || (((true && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPMtrue)))) => FS_ENET_HAS_FEC) && (FS_ENET_HAS_FEC => (true && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPMtrue)))))))
((NETDEVICES && (NET_ETHERNET && (FS_ENET && CPMtrue))) || (((FS_ENET_HAS_FEC && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPMtrue)))) => FS_ENET_MDIO_FEC) && (FS_ENET_MDIO_FEC => (FS_ENET_HAS_FEC && (NETDEVICES && (NET_ETHERNET && (FS_ENET && CPMtrue)))))))
((NETDEVICES && (NET_ETHERNET && (FS_ENET && CPM2))) || ((false => FS_ENET_MDIO_FCC) && (FS_ENET_MDIO_FCC => false)))
((NETDEVICES && !UML) || (((true && (NETDEVICES && !UML)) => NETDEV_truefalsefalsefalse) && (NETDEV_truefalsefalsefalse => (true && (NETDEVICES && !UML)))))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => ACENIC) && (ACENIC => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && ACENIC)) || ((false => ACENIC_OMIT_TIGON_I) && (ACENIC_OMIT_TIGON_I => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => DL2K) && (DL2K => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => Etruefalsefalsefalse) && (Etruefalsefalsefalse => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && (!SPARC32 || BROKEN)))) || ((false => EtruefalsefalsefalseE) && (EtruefalsefalsefalseE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL))) || ((false => IPtruefalsefalsefalse) && (IPtruefalsefalsefalse => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => IGB) && (IGB => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (IGB && INET))) || ((false => IGB_LRO) && (IGB_LRO => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (IGB && (DCA && (true || true))))) || (((true && (NETDEVICES && (NETDEV_truefalsefalsefalse && (IGB && (DCA && (true || true)))))) => IGB_DCA) && (IGB_DCA => (true && (NETDEVICES && (NETDEV_truefalsefalsefalse && (IGB && (DCA && (true || true)))))))))
((NETDEVICES && (NETDEV_truefalsefalsefalse && ARCH_ENP26truetrue)) || ((false => ENP26truetrue_MSF_NET) && (ENP26truetrue_MSF_NET => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && SBUS)) || ((false => MYRI_SBUS) && (MYRI_SBUS => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => NS8382false) && (NS8382false => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => HAMACHI) && (HAMACHI => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL))) || ((false => YELLOWFIN) && (YELLOWFIN => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => R8true69) && (R8true69 => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (R8true69 && VLAN_8false2trueQ))) || ((false => R8true69_VLAN) && (R8true69_VLAN => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && SIBYTE_SBtruexxx_SOC)) || ((false => SBtrue25false_MAC) && (SBtrue25false_MAC => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => SIStrue9false) && (SIStrue9false => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => SKGE) && (SKGE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (SKGE && DEBUG_FS))) || ((false => SKGE_DEBUG) && (SKGE_DEBUG => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => SKY2) && (SKY2 => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (SKY2 && DEBUG_FS))) || ((false => SKY2_DEBUG) && (SKY2_DEBUG => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => VIA_VELOCITY) && (VIA_VELOCITY => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => TIGON3) && (TIGON3 => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => BNX2) && (BNX2 => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && (PPC_IBM_CELL_BLADE || PPC_CELLEB)))) || ((false => SPIDER_NET) && (SPIDER_NET => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && TSItruefalse8_BRIDGE)) || ((false => TSItruefalse8_ETH) && (TSItruefalse8_ETH => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PPC_PS3)) || ((false => GELIC_NET) && (GELIC_NET => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && GELIC_NET)) || ((false => GELIC_WIRELESS) && (GELIC_WIRELESS => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && GELIC_WIRELESS)) || ((false => GELIC_WIRELESS_OLD_PSK_INTERFACE) && (GELIC_WIRELESS_OLD_PSK_INTERFACE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && FSL_SOC)) || ((false => GIANFAR) && (GIANFAR => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && QUICC_ENGINE)) || ((false => UCC_GETH) && (UCC_GETH => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && UCC_GETH)) || ((false => UGETH_MAGIC_PACKET) && (UGETH_MAGIC_PACKET => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && UCC_GETH)) || ((false => UGETH_FILTERING) && (UGETH_FILTERING => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && UCC_GETH)) || ((false => UGETH_TX_ON_DEMAND) && (UGETH_TX_ON_DEMAND => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (MV6436false || (MV64X6false || ((PPC_MULTIPLATFORM && PPC32) || PLAT_ORION))))) || ((false => MV643XX_ETH) && (MV643XX_ETH => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => QLA3XXX) && (QLA3XXX => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => ATLtrue) && (ATLtrue => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL))) || ((false => ATLtrueE) && (ATLtrueE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalse && PCI)) || ((false => JME) && (JME => false)))
((NETDEVICES && !UML) || (((true && (NETDEVICES && !UML)) => NETDEV_truefalsefalsefalsefalse) && (NETDEV_truefalsefalsefalsefalse => (true && (NETDEVICES && !UML)))))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => CHELSIO_Ttrue) && (CHELSIO_Ttrue => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && CHELSIO_Ttrue)) || ((false => CHELSIO_Ttrue_trueG) && (CHELSIO_Ttrue_trueG => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET))) || ((false => CHELSIO_T3) && (CHELSIO_T3 => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (IBMEBUS && (INET && SPARSEMEM)))) || ((false => EHEA) && (EHEA => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET))) || ((false => ENIC) && (ENIC => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET))) || ((false => IXGBE) && (IXGBE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (IXGBE && (DCA && (true || true))))) || (((true && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (IXGBE && (DCA && (true || true)))))) => IXGBE_DCA) && (IXGBE_DCA => (true && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (IXGBE && (DCA && (true || true)))))))))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => IXGB) && (IXGB => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => S2IO) && (S2IO => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET))) || ((false => MYRItruefalseGE) && (MYRItruefalseGE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (MYRItruefalseGE && (DCA && (true || true))))) || (((true && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (MYRItruefalseGE && (DCA && (true || true)))))) => MYRItruefalseGE_DCA) && (MYRItruefalseGE_DCA => (true && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (MYRItruefalseGE && (DCA && (true || true)))))))))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => NETXEN_NIC) && (NETXEN_NIC => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => NIU) && (NIU => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PPC_PASEMI && PCI))) || ((false => PASEMI_MAC) && (PASEMI_MAC => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET))) || ((false => MLX4_EN) && (MLX4_EN => false)))
(false || ((((MLX4_EN && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))) || (MLX4_INFINIBAND && INFINIBAND)) => MLX4_CORE) && (MLX4_CORE => ((MLX4_EN && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))) || (MLX4_INFINIBAND && INFINIBAND)))))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (MLX4_CORE && EMBEDDED))) || (((true && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && MLX4_CORE))) => MLX4_DEBUG) && (MLX4_DEBUG => (true && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && MLX4_CORE))))))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => TEHUTI) && (TEHUTI => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => BNX2X) && (BNX2X => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI)) || ((false => QLGE) && (QLGE => false)))
((NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET))) || ((false => SFC) && (SFC => false)))
((NETDEVICES && (!UML && (PCI || (ISA || (MCA || CCW))))) || ((false => TR) && (TR => false)))
((NETDEVICES && (TR && (ISA || MCA))) || ((false => IBMTR) && (IBMTR => false)))
((NETDEVICES && (TR && PCI)) || ((false => IBMOL) && (IBMOL => false)))
((NETDEVICES && (TR && (PCI && !a64BIT))) || ((false => IBMLS) && (IBMLS => false)))
((NETDEVICES && (TR && PCI)) || ((false => 3C359) && (3C359 => false)))
((NETDEVICES && (TR && (PCI || ((ISA && ISA_DMA_API) || MCA)))) || ((false => TMS38falseTR) && (TMS38falseTR => false)))
((NETDEVICES && (TR && (TMS38falseTR && PCI))) || ((false => TMSPCI) && (TMSPCI => false)))
((NETDEVICES && (TR && (TMS38falseTR && ISA))) || ((false => SKISA) && (SKISA => false)))
((NETDEVICES && (TR && (TMS38falseTR && ISA))) || ((false => PROTEON) && (PROTEON => false)))
((NETDEVICES && (TR && (TMS38falseTR && PCI))) || ((false => ABYSS) && (ABYSS => false)))
((NETDEVICES && (TR && (TMS38falseTR && MCA))) || ((false => MADGEMC) && (MADGEMC => false)))
((NETDEVICES && (TR && ((ISA || MCA_LEGACY) && (BROKEN || !a64BIT)))) || ((false => SMCTR) && (SMCTR => false)))
((!S39false && NETDEVICES) || ((false => WLAN_PRE8false2truetrue) && (WLAN_PRE8false2truetrue => false)))
((NETDEVICES && (!S39false && (INET && WLAN_PRE8false2truetrue))) || ((false => STRIP) && (STRIP => false)))
((NETDEVICES && (!S39false && (ISA && (!a64BIT && WLAN_PRE8false2truetrue)))) || ((false => ARLAN) && (ARLAN => false)))
((NETDEVICES && (!S39false && (ISA && WLAN_PRE8false2truetrue))) || ((false => WAVELAN) && (WAVELAN => false)))
((NETDEVICES && (!S39false && (PCMCIA && WLAN_PRE8false2truetrue))) || ((false => PCMCIA_WAVELAN) && (PCMCIA_WAVELAN => false)))
((NETDEVICES && (!S39false && (PCMCIA && WLAN_PRE8false2truetrue))) || ((false => PCMCIA_NETWAVE) && (PCMCIA_NETWAVE => false)))
((!S39false && NETDEVICES) || ((false => WLAN_8false2truetrue) && (WLAN_8false2truetrue => false)))
((NETDEVICES && (!S39false && (PCMCIA && WLAN_8false2truetrue))) || ((false => PCMCIA_RAYCS) && (PCMCIA_RAYCS => false)))
((NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue))) || ((false => IPW2truefalsefalse) && (IPW2truefalsefalse => false)))
((NETDEVICES && (!S39false && IPW2truefalsefalse)) || ((false => IPW2truefalsefalse_MONITOR) && (IPW2truefalsefalse_MONITOR => false)))
((NETDEVICES && (!S39false && IPW2truefalsefalse)) || ((false => IPW2truefalsefalse_DEBUG) && (IPW2truefalsefalse_DEBUG => false)))
((NETDEVICES && (!S39false && (PCI && WLAN_8false2truetrue))) || ((false => IPW22falsefalse) && (IPW22falsefalse => false)))
((NETDEVICES && (!S39false && IPW22falsefalse)) || ((false => IPW22falsefalse_MONITOR) && (IPW22falsefalse_MONITOR => false)))
((NETDEVICES && (!S39false && IPW22falsefalse_MONITOR)) || (((IPW22falsefalse_PROMISCUOUS && (NETDEVICES && (!S39false && IPW22falsefalse_MONITOR))) => IPW22falsefalse_RADIOTAP) && (IPW22falsefalse_RADIOTAP => (IPW22falsefalse_PROMISCUOUS && (NETDEVICES && (!S39false && IPW22falsefalse_MONITOR))))))
((NETDEVICES && (!S39false && IPW22falsefalse_MONITOR)) || ((false => IPW22falsefalse_PROMISCUOUS) && (IPW22falsefalse_PROMISCUOUS => false)))
((NETDEVICES && (!S39false && (IPW22falsefalse && EXPERIMENTAL))) || ((false => IPW22falsefalse_QOS) && (IPW22falsefalse_QOS => false)))
((NETDEVICES && (!S39false && IPW22falsefalse)) || ((false => IPW22falsefalse_DEBUG) && (IPW22falsefalse_DEBUG => false)))
((NETDEVICES && (!S39false && WLAN_8false2truetrue)) || ((false => LIBERTAS) && (LIBERTAS => false)))
((NETDEVICES && (!S39false && (LIBERTAS && USB))) || ((false => LIBERTAS_USB) && (LIBERTAS_USB => false)))
((NETDEVICES && (!S39false && (LIBERTAS && PCMCIA))) || ((false => LIBERTAS_CS) && (LIBERTAS_CS => false)))
((NETDEVICES && (!S39false && (LIBERTAS && MMC))) || ((false => LIBERTAS_SDIO) && (LIBERTAS_SDIO => false)))
((NETDEVICES && (!S39false && LIBERTAS)) || ((false => LIBERTAS_DEBUG) && (LIBERTAS_DEBUG => false)))
((NETDEVICES && (!S39false && (WLAN_8false2truetrue && MAC8false2truetrue))) || ((false => LIBERTAS_THINFIRM) && (LIBERTAS_THINFIRM => false)))
((NETDEVICES && (!S39false && (LIBERTAS_THINFIRM && USB))) || ((false => LIBERTAS_THINFIRM_USB) && (LIBERTAS_THINFIRM_USB => false)))
((NETDEVICES && (!S39false && (ISA_DMA_API && (WLAN_8false2truetrue && (PCI || BROKEN))))) || ((false => AIRO) && (AIRO => false)))
((NETDEVICES && (!S39false && ((PPC_PMAC || (PCI || PCMCIA)) && WLAN_8false2truetrue))) || ((false => HERMES) && (HERMES => false)))
((NETDEVICES && (!S39false && (PPC_PMAC && HERMES))) || ((false => APPLE_AIRPORT) && (APPLE_AIRPORT => false)))
((NETDEVICES && (!S39false && (PCI && HERMES))) || ((false => PLX_HERMES) && (PLX_HERMES => false)))
((NETDEVICES && (!S39false && (PCI && HERMES))) || ((false => TMD_HERMES) && (TMD_HERMES => false)))
((NETDEVICES && (!S39false && (PCI && HERMES))) || ((false => NORTEL_HERMES) && (NORTEL_HERMES => false)))
((NETDEVICES && (!S39false && (PCI && HERMES))) || ((false => PCI_HERMES) && (PCI_HERMES => false)))
((NETDEVICES && (!S39false && (PCMCIA && HERMES))) || ((false => PCMCIA_HERMES) && (PCMCIA_HERMES => false)))
((NETDEVICES && (!S39false && (PCMCIA && HERMES))) || ((false => PCMCIA_SPECTRUM) && (PCMCIA_SPECTRUM => false)))
((NETDEVICES && (!S39false && ((PCI || PCMCIA) && WLAN_8false2truetrue))) || ((false => ATMEL) && (ATMEL => false)))
((NETDEVICES && (!S39false && (ATMEL && PCI))) || ((false => PCI_ATMEL) && (PCI_ATMEL => false)))
((NETDEVICES && (!S39false && (ATMEL && PCMCIA))) || ((false => PCMCIA_ATMEL) && (PCMCIA_ATMEL => false)))
((NETDEVICES && (!S39false && (PCMCIA && ((BROKEN || !M32R) && WLAN_8false2truetrue)))) || ((false => AIRO_CS) && (AIRO_CS => false)))
((NETDEVICES && (!S39false && (EXPERIMENTAL && (PCMCIA && WLAN_8false2truetrue)))) || ((false => PCMCIA_WL35falsetrue) && (PCMCIA_WL35falsetrue => false)))
((NETDEVICES && (!S39false && (PCI && (EXPERIMENTAL && WLAN_8false2truetrue)))) || ((false => PRISM54) && (PRISM54 => false)))
((NETDEVICES && (!S39false && (USB && WLAN_8false2truetrue))) || ((false => USB_ZDtrue2falsetrue) && (USB_ZDtrue2falsetrue => false)))
((NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL)))) || ((false => USB_NET_RNDIS_WLAN) && (USB_NET_RNDIS_WLAN => false)))
((NETDEVICES && (!S39false && (MAC8false2truetrue && (PCI && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => RTL8true8false) && (RTL8true8false => false)))
((NETDEVICES && (!S39false && (MAC8false2truetrue && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => RTL8true87) && (RTL8true87 => false)))
((NETDEVICES && (!S39false && (MAC8false2truetrue && (PCI && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => ADM82truetrue) && (ADM82truetrue => false)))
((NETDEVICES && (!S39false && (MAC8false2truetrue && WLAN_8false2truetrue))) || ((false => MAC8false2truetrue_HWSIM) && (MAC8false2truetrue_HWSIM => false)))
((NETDEVICES && (!S39false && (MAC8false2truetrue && (WLAN_8false2truetrue && (FW_LOADER && EXPERIMENTAL))))) || ((false => P54_COMMON) && (P54_COMMON => false)))
((NETDEVICES && (!S39false && (P54_COMMON && USB))) || ((false => P54_USB) && (P54_USB => false)))
((NETDEVICES && (!S39false && (P54_COMMON && PCI))) || ((false => P54_PCI) && (P54_PCI => false)))
((NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => ATH5K) && (ATH5K => false)))
((NETDEVICES && (!S39false && ATH5K)) || ((false => ATH5K_DEBUG) && (ATH5K_DEBUG => false)))
((NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && WLAN_8false2truetrue)))) || ((false => ATH9K) && (ATH9K => false)))
(false || ((((IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))) || (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))))) => IWLWIFI) && (IWLWIFI => ((IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))) || (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))))))))
((NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))) || (((IWLAGN && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))) => IWLCORE) && (IWLCORE => (IWLAGN && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))))))
(false || (((IWLAGN_LEDS && (NETDEVICES && (!S39false && IWLAGN))) => IWLWIFI_LEDS) && (IWLWIFI_LEDS => (IWLAGN_LEDS && (NETDEVICES && (!S39false && IWLAGN))))))
((NETDEVICES && (!S39false && IWLCORE)) || ((false => IWLWIFI_RFKILL) && (IWLWIFI_RFKILL => false)))
((NETDEVICES && (!S39false && IWLCORE)) || ((false => IWLWIFI_DEBUG) && (IWLWIFI_DEBUG => false)))
((NETDEVICES && (!S39false && (IWLCORE && (IWLWIFI_DEBUG && MAC8false2truetrue_DEBUGFS)))) || ((false => IWLWIFI_DEBUGFS) && (IWLWIFI_DEBUGFS => false)))
((NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => IWLAGN) && (IWLAGN => false)))
((NETDEVICES && (!S39false && IWLAGN)) || ((false => IWLAGN_SPECTRUM_MEASUREMENT) && (IWLAGN_SPECTRUM_MEASUREMENT => false)))
((NETDEVICES && (!S39false && IWLAGN)) || ((false => IWLAGN_LEDS) && (IWLAGN_LEDS => false)))
((NETDEVICES && (!S39false && IWLAGN)) || ((false => IWL4965) && (IWL4965 => false)))
((NETDEVICES && (!S39false && IWLAGN)) || ((false => IWL5falsefalsefalse) && (IWL5falsefalsefalse => false)))
((NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => IWL3945) && (IWL3945 => false)))
((NETDEVICES && (!S39false && IWL3945)) || ((false => IWL3945_RFKILL) && (IWL3945_RFKILL => false)))
((NETDEVICES && (!S39false && IWL3945)) || ((false => IWL3945_SPECTRUM_MEASUREMENT) && (IWL3945_SPECTRUM_MEASUREMENT => false)))
((NETDEVICES && (!S39false && IWL3945)) || ((false => IWL3945_LEDS) && (IWL3945_LEDS => false)))
((NETDEVICES && (!S39false && IWL3945)) || ((false => IWL3945_DEBUG) && (IWL3945_DEBUG => false)))
((NETDEVICES && (!S39false && WLAN_8false2truetrue)) || ((false => HOSTAP) && (HOSTAP => false)))
((NETDEVICES && (!S39false && HOSTAP)) || ((false => HOSTAP_FIRMWARE) && (HOSTAP_FIRMWARE => false)))
((NETDEVICES && (!S39false && HOSTAP_FIRMWARE)) || ((false => HOSTAP_FIRMWARE_NVRAM) && (HOSTAP_FIRMWARE_NVRAM => false)))
((NETDEVICES && (!S39false && (PCI && HOSTAP))) || ((false => HOSTAP_PLX) && (HOSTAP_PLX => false)))
((NETDEVICES && (!S39false && (PCI && HOSTAP))) || ((false => HOSTAP_PCI) && (HOSTAP_PCI => false)))
((NETDEVICES && (!S39false && (PCMCIA && HOSTAP))) || ((false => HOSTAP_CS) && (HOSTAP_CS => false)))
((NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA))))) || ((false => B43) && (B43 => false)))
(false || (((true && (NETDEVICES && (!S39false && (B43 && SSB_PCIHOST_POSSIBLE)))) => B43_PCI_AUTOSELECT) && (B43_PCI_AUTOSELECT => (true && (NETDEVICES && (!S39false && (B43 && SSB_PCIHOST_POSSIBLE)))))))
(false || (((true && (NETDEVICES && (!S39false && (B43 && SSB_DRIVER_PCICORE_POSSIBLE)))) => B43_PCICORE_AUTOSELECT) && (B43_PCICORE_AUTOSELECT => (true && (NETDEVICES && (!S39false && (B43 && SSB_DRIVER_PCICORE_POSSIBLE)))))))
((NETDEVICES && (!S39false && (B43 && (SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL)))) || ((false => B43_PCMCIA) && (B43_PCMCIA => false)))
(false || (((true && (NETDEVICES && (!S39false && (B43 && (B43_PCMCIA || B43_FORCE_PIO))))) => B43_PIO) && (B43_PIO => (true && (NETDEVICES && (!S39false && (B43 && (B43_PCMCIA || B43_FORCE_PIO))))))))
((NETDEVICES && (!S39false && (B43 && (EXPERIMENTAL && BROKEN)))) || ((false => B43_NPHY) && (B43_NPHY => false)))
((NETDEVICES && (!S39false && (B43 && (EXPERIMENTAL && BROKEN)))) || ((false => B43_PHY_LP) && (B43_PHY_LP => false)))
(false || (((true && (NETDEVICES && (!S39false && (B43 && (MAC8false2truetrue_LEDS && (LEDS_CLASS || LEDS_CLASS)))))) => B43_LEDS) && (B43_LEDS => (true && (NETDEVICES && (!S39false && (B43 && (MAC8false2truetrue_LEDS && (LEDS_CLASS || LEDS_CLASS)))))))))
(false || (((true && (NETDEVICES && (!S39false && (B43 && ((RFKILL || RFKILL) && (RFKILL_INPUT && (INPUT_POLLDEV || INPUT_POLLDEV))))))) => B43_RFKILL) && (B43_RFKILL => (true && (NETDEVICES && (!S39false && (B43 && ((RFKILL || RFKILL) && (RFKILL_INPUT && (INPUT_POLLDEV || INPUT_POLLDEV))))))))))
((NETDEVICES && (!S39false && B43)) || ((false => B43_DEBUG) && (B43_DEBUG => false)))
((NETDEVICES && (!S39false && (B43 && B43_DEBUG))) || ((false => B43_FORCE_PIO) && (B43_FORCE_PIO => false)))
((NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA))))) || ((false => B43LEGACY) && (B43LEGACY => false)))
(false || (((true && (NETDEVICES && (!S39false && (B43LEGACY && SSB_PCIHOST_POSSIBLE)))) => B43LEGACY_PCI_AUTOSELECT) && (B43LEGACY_PCI_AUTOSELECT => (true && (NETDEVICES && (!S39false && (B43LEGACY && SSB_PCIHOST_POSSIBLE)))))))
(false || (((true && (NETDEVICES && (!S39false && (B43LEGACY && SSB_DRIVER_PCICORE_POSSIBLE)))) => B43LEGACY_PCICORE_AUTOSELECT) && (B43LEGACY_PCICORE_AUTOSELECT => (true && (NETDEVICES && (!S39false && (B43LEGACY && SSB_DRIVER_PCICORE_POSSIBLE)))))))
(false || (((true && (NETDEVICES && (!S39false && (B43LEGACY && (MAC8false2truetrue_LEDS && (LEDS_CLASS || LEDS_CLASS)))))) => B43LEGACY_LEDS) && (B43LEGACY_LEDS => (true && (NETDEVICES && (!S39false && (B43LEGACY && (MAC8false2truetrue_LEDS && (LEDS_CLASS || LEDS_CLASS)))))))))
(false || (((true && (NETDEVICES && (!S39false && (B43LEGACY && ((RFKILL || RFKILL) && (RFKILL_INPUT && (INPUT_POLLDEV || INPUT_POLLDEV))))))) => B43LEGACY_RFKILL) && (B43LEGACY_RFKILL => (true && (NETDEVICES && (!S39false && (B43LEGACY && ((RFKILL || RFKILL) && (RFKILL_INPUT && (INPUT_POLLDEV || INPUT_POLLDEV))))))))))
((NETDEVICES && (!S39false && B43LEGACY)) || (((true && (NETDEVICES && (!S39false && B43LEGACY))) => B43LEGACY_DEBUG) && (B43LEGACY_DEBUG => (true && (NETDEVICES && (!S39false && B43LEGACY))))))
(false || ((((B43LEGACY_DMA_AND_PIO_MODE && true) || (B43LEGACY_DMA_MODE && true)) => B43LEGACY_DMA) && (B43LEGACY_DMA => ((B43LEGACY_DMA_AND_PIO_MODE && true) || (B43LEGACY_DMA_MODE && true)))))
(false || ((((B43LEGACY_PIO_MODE && true) || (B43LEGACY_DMA_AND_PIO_MODE && true)) => B43LEGACY_PIO) && (B43LEGACY_PIO => ((B43LEGACY_PIO_MODE && true) || (B43LEGACY_DMA_AND_PIO_MODE && true)))))
(true || ((false => B43LEGACY_DMA_AND_PIO_MODE) && (B43LEGACY_DMA_AND_PIO_MODE => false)))
(true || ((false => B43LEGACY_DMA_MODE) && (B43LEGACY_DMA_MODE => false)))
(true || ((false => B43LEGACY_PIO_MODE) && (B43LEGACY_PIO_MODE => false)))
((NETDEVICES && (!S39false && (USB && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL))))) || ((false => ZDtrue2truetrueRW) && (ZDtrue2truetrueRW => false)))
((NETDEVICES && (!S39false && ZDtrue2truetrueRW)) || ((false => ZDtrue2truetrueRW_DEBUG) && (ZDtrue2truetrueRW_DEBUG => false)))
((NETDEVICES && (!S39false && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))) || ((false => RT2Xfalsefalse) && (RT2Xfalsefalse => false)))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))) || ((false => RT24falsefalsePCI) && (RT24falsefalsePCI => false)))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))) || ((false => RT25falsefalsePCI) && (RT25falsefalsePCI => false)))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))) || ((false => RT6truePCI) && (RT6truePCI => false)))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))) || ((false => RT25falsefalseUSB) && (RT25falsefalseUSB => false)))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))) || ((false => RT73USB) && (RT73USB => false)))
(false || (((((RT24falsefalsePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))) || (RT25falsefalsePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))))) || (RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))))) => RT2Xfalsefalse_LIB_PCI) && (RT2Xfalsefalse_LIB_PCI => (((RT24falsefalsePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))) || (RT25falsefalsePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))))) || (RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI))))))))
(false || ((((RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB)))) || (RT25falsefalseUSB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))))) => RT2Xfalsefalse_LIB_USB) && (RT2Xfalsefalse_LIB_USB => ((RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB)))) || (RT25falsefalseUSB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))))))))
(false || ((((RT2Xfalsefalse_LIB_PCI && (NETDEVICES && (!S39false && RT2Xfalsefalse))) || (RT2Xfalsefalse_LIB_USB && (NETDEVICES && (!S39false && RT2Xfalsefalse)))) => RT2Xfalsefalse_LIB) && (RT2Xfalsefalse_LIB => ((RT2Xfalsefalse_LIB_PCI && (NETDEVICES && (!S39false && RT2Xfalsefalse))) || (RT2Xfalsefalse_LIB_USB && (NETDEVICES && (!S39false && RT2Xfalsefalse)))))))
(false || ((((RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))) || (RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))))) => RT2Xfalsefalse_LIB_FIRMWARE) && (RT2Xfalsefalse_LIB_FIRMWARE => ((RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))) || (RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))))))))
(false || ((((RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))) || (RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))))) => RT2Xfalsefalse_LIB_CRYPTO) && (RT2Xfalsefalse_LIB_CRYPTO => ((RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))) || (RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB))))))))
(false || (((true && (NETDEVICES && (!S39false && (RT2Xfalsefalse && ((RT2Xfalsefalse_LIB && RFKILL) || (RT2Xfalsefalse_LIB && RFKILL)))))) => RT2Xfalsefalse_LIB_RFKILL) && (RT2Xfalsefalse_LIB_RFKILL => (true && (NETDEVICES && (!S39false && (RT2Xfalsefalse && ((RT2Xfalsefalse_LIB && RFKILL) || (RT2Xfalsefalse_LIB && RFKILL)))))))))
(false || (((true && (NETDEVICES && (!S39false && (RT2Xfalsefalse && ((RT2Xfalsefalse_LIB && LEDS_CLASS) || (RT2Xfalsefalse_LIB && LEDS_CLASS)))))) => RT2Xfalsefalse_LIB_LEDS) && (RT2Xfalsefalse_LIB_LEDS => (true && (NETDEVICES && (!S39false && (RT2Xfalsefalse && ((RT2Xfalsefalse_LIB && LEDS_CLASS) || (RT2Xfalsefalse_LIB && LEDS_CLASS)))))))))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && (RT2Xfalsefalse_LIB && MAC8false2truetrue_DEBUGFS)))) || ((false => RT2Xfalsefalse_LIB_DEBUGFS) && (RT2Xfalsefalse_LIB_DEBUGFS => false)))
((NETDEVICES && (!S39false && (RT2Xfalsefalse && RT2Xfalsefalse_LIB))) || ((false => RT2Xfalsefalse_DEBUG) && (RT2Xfalsefalse_DEBUG => false)))
((NETDEVICES && (USB && (NET && EXPERIMENTAL))) || ((false => USB_CATC) && (USB_CATC => false)))
((NETDEVICES && (USB && NET)) || ((false => USB_KAWETH) && (USB_KAWETH => false)))
((NETDEVICES && (USB && NET)) || ((false => USB_PEGASUS) && (USB_PEGASUS => false)))
((NETDEVICES && (USB && (NET && EXPERIMENTAL))) || ((false => USB_RTL8true5false) && (USB_RTL8true5false => false)))
((NETDEVICES && (USB && NET)) || (((USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))) => USB_USBNET) && (USB_USBNET => (USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))))))
((NETDEVICES && (USB && (NET && USB_USBNET))) || (((true && (NETDEVICES && (USB && (NET && USB_USBNET)))) => USB_NET_AX88true7X) && (USB_NET_AX88true7X => (true && (NETDEVICES && (USB && (NET && USB_USBNET)))))))
((NETDEVICES && (USB && (NET && USB_USBNET))) || ((((((USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))) || (USB_NET_ZAURUS && (NETDEVICES && (USB && (NET && USB_USBNET))))) || (USB_NET_RNDIS_HOST && (NETDEVICES && (USB && (NET && (USB_USBNET && EXPERIMENTAL)))))) || (true && (NETDEVICES && (USB && (NET && USB_USBNET))))) => USB_NET_CDCETHER) && (USB_NET_CDCETHER => ((((USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))) || (USB_NET_ZAURUS && (NETDEVICES && (USB && (NET && USB_USBNET))))) || (USB_NET_RNDIS_HOST && (NETDEVICES && (USB && (NET && (USB_USBNET && EXPERIMENTAL)))))) || (true && (NETDEVICES && (USB && (NET && USB_USBNET))))))))
((NETDEVICES && (USB && (NET && USB_USBNET))) || ((false => USB_NET_DM96falsetrue) && (USB_NET_DM96falsetrue => false)))
((NETDEVICES && (USB && (NET && USB_USBNET))) || ((false => USB_NET_SMSC95XX) && (USB_NET_SMSC95XX => false)))
((NETDEVICES && (USB && (NET && USB_USBNET))) || ((false => USB_NET_GL62falseA) && (USB_NET_GL62falseA => false)))
((NETDEVICES && (USB && (NET && USB_USBNET))) || (((true && (NETDEVICES && (USB && (NET && USB_USBNET)))) => USB_NET_NETtruefalse8false) && (USB_NET_NETtruefalse8false => (true && (NETDEVICES && (USB && (NET && USB_USBNET)))))))
((NETDEVICES && (USB && (NET && (USB_USBNET && EXPERIMENTAL)))) || ((false => USB_NET_PLUSB) && (USB_NET_PLUSB => false)))
((NETDEVICES && (USB && (NET && USB_USBNET))) || ((false => USB_NET_MCS783false) && (USB_NET_MCS783false => false)))
((NETDEVICES && (USB && (NET && (USB_USBNET && EXPERIMENTAL)))) || (((USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))) => USB_NET_RNDIS_HOST) && (USB_NET_RNDIS_HOST => (USB_NET_RNDIS_WLAN && (NETDEVICES && (!S39false && (USB && (WLAN_8false2truetrue && EXPERIMENTAL))))))))
((NETDEVICES && (USB && (NET && USB_USBNET))) || (((true && (NETDEVICES && (USB && (NET && USB_USBNET)))) => USB_NET_CDC_SUBSET) && (USB_NET_CDC_SUBSET => (true && (NETDEVICES && (USB && (NET && USB_USBNET)))))))
((NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET))) || ((false => USB_ALI_M5632) && (USB_ALI_M5632 => false)))
((NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET))) || ((false => USB_AN272false) && (USB_AN272false => false)))
((NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET))) || (((true && (NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET)))) => USB_BELKIN) && (USB_BELKIN => (true && (NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET)))))))
((NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET))) || (((true && (NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET)))) => USB_ARMLINUX) && (USB_ARMLINUX => (true && (NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET)))))))
((NETDEVICES && (USB && (NET && USB_NET_CDC_SUBSET))) || ((false => USB_EPSON2888) && (USB_EPSON2888 => false)))
((NETDEVICES && (USB && (NET && (USB_NET_CDC_SUBSET && EXPERIMENTAL)))) || ((false => USB_KC2true9false) && (USB_KC2true9false => false)))
((NETDEVICES && (USB && (NET && USB_USBNET))) || (((true && (NETDEVICES && (USB && (NET && USB_USBNET)))) => USB_NET_ZAURUS) && (USB_NET_ZAURUS => (true && (NETDEVICES && (USB && (NET && USB_USBNET)))))))
((NETDEVICES && (NET && (USB && RFKILL))) || ((false => USB_HSO) && (USB_HSO => false)))
((NETDEVICES && PCMCIA) || ((false => NET_PCMCIA) && (NET_PCMCIA => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_3C589) && (PCMCIA_3C589 => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_3C574) && (PCMCIA_3C574 => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_FMVJtrue8X) && (PCMCIA_FMVJtrue8X => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_PCNET) && (PCMCIA_PCNET => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_NMCLAN) && (PCMCIA_NMCLAN => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_SMC9trueC92) && (PCMCIA_SMC9trueC92 => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_XIRC2PS) && (PCMCIA_XIRC2PS => false)))
((NETDEVICES && (NET_PCMCIA && PCMCIA)) || ((false => PCMCIA_AXNET) && (PCMCIA_AXNET => false)))
((NETDEVICES && (NET_PCMCIA && (PCMCIA && ARCNET_COM2falsefalse2false))) || ((false => ARCNET_COM2falsefalse2false_CS) && (ARCNET_COM2falsefalse2false_CS => false)))
((NETDEVICES && (NET_PCMCIA && (PCMCIA && (true && TR)))) || ((false => PCMCIA_IBMTR) && (PCMCIA_IBMTR => false)))
(NETDEVICES || ((false => WAN) && (WAN => false)))
((NETDEVICES && (WAN && (ISA && (true && (true && (ISA_DMA_API && (INET && HDLC))))))) || ((false => HOSTESS_SVtruetrue) && (HOSTESS_SVtruetrue => false)))
((NETDEVICES && (WAN && (ISA && (true && (true && (ISA_DMA_API && HDLC)))))) || ((false => COSA) && (COSA => false)))
((NETDEVICES && (WAN && (PCI && (VIRT_TO_BUS && HDLC)))) || ((false => LANMEDIA) && (LANMEDIA => false)))
((NETDEVICES && (WAN && (ISA && (true && (true && (ISA_DMA_API && (INET && HDLC))))))) || ((false => SEALEVEL_4false2true) && (SEALEVEL_4false2true => false)))
((NETDEVICES && WAN) || ((false => HDLC) && (HDLC => false)))
((NETDEVICES && (WAN && HDLC)) || ((false => HDLC_RAW) && (HDLC_RAW => false)))
((NETDEVICES && (WAN && HDLC)) || ((false => HDLC_RAW_ETH) && (HDLC_RAW_ETH => false)))
((NETDEVICES && (WAN && HDLC)) || ((false => HDLC_CISCO) && (HDLC_CISCO => false)))
((NETDEVICES && (WAN && HDLC)) || ((false => HDLC_FR) && (HDLC_FR => false)))
((NETDEVICES && (WAN && HDLC)) || ((false => HDLC_PPP) && (HDLC_PPP => false)))
((NETDEVICES && (WAN && (HDLC && ((LAPB && HDLC) || LAPB)))) || ((false => HDLC_X25) && (HDLC_X25 => false)))
((NETDEVICES && (WAN && (HDLC && PCI))) || ((false => PCI2falsefalseSYN) && (PCI2falsefalseSYN => false)))
((NETDEVICES && (WAN && (HDLC && PCI))) || ((false => WANXL) && (WANXL => false)))
((NETDEVICES && (WAN && (WANXL && !PREVENT_FIRMWARE_BUILD))) || ((false => WANXL_BUILD_FIRMWARE) && (WANXL_BUILD_FIRMWARE => false)))
((NETDEVICES && (WAN && (HDLC && (PCI && BROKEN)))) || ((false => PC3falsefalse) && (PC3falsefalse => false)))
((NETDEVICES && (WAN && (PC3falsefalse && (PPP_MULTILINK && (PPP_SYNC_TTY && HDLC_PPP))))) || ((false => PC3falsefalse_MLPPP) && (PC3falsefalse_MLPPP => false)))
((NETDEVICES && (WAN && (HDLC && PCI))) || ((false => PC3falsefalseTOO) && (PC3falsefalseTOO => false)))
((NETDEVICES && (WAN && (HDLC && ISA))) || ((false => N2) && (N2 => false)))
((NETDEVICES && (WAN && (HDLC && ISA))) || ((false => Ctruefalsetrue) && (Ctruefalsetrue => false)))
((NETDEVICES && (WAN && (HDLC && PCI))) || ((false => FARSYNC) && (FARSYNC => false)))
((NETDEVICES && (WAN && (HDLC && (PCI && (true && true))))) || ((false => DSCC4) && (DSCC4 => false)))
((NETDEVICES && (WAN && DSCC4)) || ((false => DSCC4_PCISYNC) && (DSCC4_PCISYNC => false)))
((NETDEVICES && (WAN && DSCC4)) || ((false => DSCC4_PCI_RST) && (DSCC4_PCI_RST => false)))
((NETDEVICES && WAN) || ((false => DLCI) && (DLCI => false)))
((NETDEVICES && (WAN && DLCI)) || (((true && (NETDEVICES && (WAN && DLCI))) => DLCI_MAX) && (DLCI_MAX => (true && (NETDEVICES && (WAN && DLCI))))))
((NETDEVICES && (WAN && (DLCI && ISA))) || ((false => SDLA) && (SDLA => false)))
((NETDEVICES && (WAN && WAN_ROUTER)) || ((false => WAN_ROUTER_DRIVERS) && (WAN_ROUTER_DRIVERS => false)))
((NETDEVICES && (WAN && (WAN_ROUTER_DRIVERS && (PCI || ISA)))) || ((false => CYCLADES_SYNC) && (CYCLADES_SYNC => false)))
((NETDEVICES && (WAN && CYCLADES_SYNC)) || ((false => CYCLOMX_X25) && (CYCLOMX_X25 => false)))
((NETDEVICES && (WAN && (LAPB && X25))) || ((false => LAPBETHER) && (LAPBETHER => false)))
((NETDEVICES && (WAN && (LAPB && X25))) || ((false => X25_ASY) && (X25_ASY => false)))
((NETDEVICES && (WAN && X86)) || ((false => SBNI) && (SBNI => false)))
((NETDEVICES && (WAN && SBNI)) || ((false => SBNI_MULTILINE) && (SBNI_MULTILINE => false)))
((NETDEVICES && ATM) || (((true && (NETDEVICES && ATM)) => ATM_DRIVERS) && (ATM_DRIVERS => (true && (NETDEVICES && ATM)))))
((ATM_DRIVERS && (NETDEVICES && ATM)) || ((false => ATM_DUMMY) && (ATM_DUMMY => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && INET))) || ((false => ATM_TCP) && (ATM_TCP => false)))
((ATM_DRIVERS && (NETDEVICES && (PCI && ATM))) || ((false => ATM_LANAI) && (ATM_LANAI => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && PCI))) || ((false => ATM_ENI) && (ATM_ENI => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI))) || ((false => ATM_ENI_DEBUG) && (ATM_ENI_DEBUG => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI))) || ((false => ATM_ENI_TUNE_BURST) && (ATM_ENI_TUNE_BURST => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_TX_true6W) && (ATM_ENI_BURST_TX_true6W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_TX_8W) && (ATM_ENI_BURST_TX_8W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_TX_4W) && (ATM_ENI_BURST_TX_4W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_TX_2W) && (ATM_ENI_BURST_TX_2W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_RX_true6W) && (ATM_ENI_BURST_RX_true6W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_RX_8W) && (ATM_ENI_BURST_RX_8W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_RX_4W) && (ATM_ENI_BURST_RX_4W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ENI_TUNE_BURST))) || ((false => ATM_ENI_BURST_RX_2W) && (ATM_ENI_BURST_RX_2W => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && (PCI && VIRT_TO_BUS)))) || ((false => ATM_FIRESTREAM) && (ATM_FIRESTREAM => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && (PCI && VIRT_TO_BUS)))) || ((false => ATM_ZATM) && (ATM_ZATM => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_ZATM))) || ((false => ATM_ZATM_DEBUG) && (ATM_ZATM_DEBUG => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && (PCI && (!a64BIT && VIRT_TO_BUS))))) || ((false => ATM_NICSTAR) && (ATM_NICSTAR => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_NICSTAR))) || ((false => ATM_NICSTAR_USE_SUNI) && (ATM_NICSTAR_USE_SUNI => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_NICSTAR))) || ((false => ATM_NICSTAR_USE_IDT77truefalse5) && (ATM_NICSTAR_USE_IDT77truefalse5 => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && PCI))) || ((false => ATM_IDT77252) && (ATM_IDT77252 => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_IDT77252))) || ((false => ATM_IDT77252_DEBUG) && (ATM_IDT77252_DEBUG => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_IDT77252))) || ((false => ATM_IDT77252_RCV_ALL) && (ATM_IDT77252_RCV_ALL => false)))
(false || (((true && (ATM_DRIVERS && (NETDEVICES && (ATM && ATM_IDT77252)))) => ATM_IDT77252_USE_SUNI) && (ATM_IDT77252_USE_SUNI => (true && (ATM_DRIVERS && (NETDEVICES && (ATM && ATM_IDT77252)))))))
((ATM_DRIVERS && (NETDEVICES && (ATM && (PCI && VIRT_TO_BUS)))) || ((false => ATM_AMBASSADOR) && (ATM_AMBASSADOR => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_AMBASSADOR))) || ((false => ATM_AMBASSADOR_DEBUG) && (ATM_AMBASSADOR_DEBUG => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && (PCI && VIRT_TO_BUS)))) || ((false => ATM_HORIZON) && (ATM_HORIZON => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_HORIZON))) || ((false => ATM_HORIZON_DEBUG) && (ATM_HORIZON_DEBUG => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && PCI))) || ((false => ATM_IA) && (ATM_IA => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_IA))) || ((false => ATM_IA_DEBUG) && (ATM_IA_DEBUG => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && (PCI || SBUS)))) || ((false => ATM_FORE2falsefalseE) && (ATM_FORE2falsefalseE => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE))) || ((false => ATM_FORE2falsefalseE_USE_TASKLET) && (ATM_FORE2falsefalseE_USE_TASKLET => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE))) || (((true && (ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE)))) => ATM_FORE2falsefalseE_TX_RETRY) && (ATM_FORE2falsefalseE_TX_RETRY => (true && (ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE)))))))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE))) || (((true && (ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE)))) => ATM_FORE2falsefalseE_DEBUG) && (ATM_FORE2falsefalseE_DEBUG => (true && (ATM_DRIVERS && (NETDEVICES && (ATM && ATM_FORE2falsefalseE)))))))
((ATM_DRIVERS && (NETDEVICES && (ATM && PCI))) || ((false => ATM_HE) && (ATM_HE => false)))
((ATM_DRIVERS && (NETDEVICES && (ATM && ATM_HE))) || ((false => ATM_HE_USE_SUNI) && (ATM_HE_USE_SUNI => false)))
((S39false && (CCW && (NETDEVICES && (NET_ETHERNET || (TR || FDDI))))) || ((false => LCS) && (LCS => false)))
((S39false && (CCW && NETDEVICES)) || ((false => CTCM) && (CTCM => false)))
((S39false && (IUCV && NETDEVICES)) || ((false => NETIUCV) && (NETIUCV => false)))
((NETDEVICES && (S39false && IUCV)) || ((false => SMSGIUCV) && (SMSGIUCV => false)))
((S39false && (CCW && NETDEVICES)) || ((false => CLAW) && (CLAW => false)))
((S39false && (CCW && (NETDEVICES && (IP_MULTICAST && QDIO)))) || ((false => QETH) && (QETH => false)))
((NETDEVICES && (S39false && QETH)) || ((false => QETH_L2) && (QETH_L2 => false)))
((NETDEVICES && (S39false && QETH)) || ((false => QETH_L3) && (QETH_L3 => false)))
(false || (((true && (NETDEVICES && (S39false && (QETH_L3 || (QETH_L3 && IPV6))))) => QETH_IPV6) && (QETH_IPV6 => (true && (NETDEVICES && (S39false && (QETH_L3 || (QETH_L3 && IPV6))))))))
(false || (((true && ((NETDEVICES && S39false) && (LCS || (CTCM || QETH)))) => CCWGROUP) && (CCWGROUP => (true && ((NETDEVICES && S39false) && (LCS || (CTCM || QETH)))))))
((NETDEVICES && XEN) || (((true && (NETDEVICES && XEN)) => XEN_NETDEV_FRONTEND) && (XEN_NETDEV_FRONTEND => (true && (NETDEVICES && XEN)))))
((NETDEVICES && PPC_ISERIES) || ((false => ISERIES_VETH) && (ISERIES_VETH => false)))
((NETDEVICES && RAPIDIO) || ((false => RIONET) && (RIONET => false)))
((NETDEVICES && RIONET) || (((true && (NETDEVICES && RIONET)) => RIONET_TX_SIZE) && (RIONET_TX_SIZE => (true && (NETDEVICES && RIONET)))))
((NETDEVICES && RIONET) || (((true && (NETDEVICES && RIONET)) => RIONET_RX_SIZE) && (RIONET_RX_SIZE => (true && (NETDEVICES && RIONET)))))
((NETDEVICES && (PCI || (EISA || TC))) || ((false => FDDI) && (FDDI => false)))
((NETDEVICES && (FDDI && (PCI || (EISA || TC)))) || ((false => DEFXX) && (DEFXX => false)))
((NETDEVICES && (DEFXX && (PCI || EISA))) || (((((true && !(NETDEVICES && (DEFXX && (PCI || EISA)))) && !true) && (NETDEVICES && DEFXX)) => DEFXX_MMIO) && (DEFXX_MMIO => (((true && !(NETDEVICES && (DEFXX && (PCI || EISA)))) && !true) && (NETDEVICES && DEFXX)))))
((NETDEVICES && (FDDI && PCI)) || ((false => SKFP) && (SKFP => false)))
((NETDEVICES && (EXPERIMENTAL && (INET && PCI))) || ((false => HIPPI) && (HIPPI => false)))
((NETDEVICES && (HIPPI && PCI)) || ((false => ROADRUNNER) && (ROADRUNNER => false)))
((NETDEVICES && ROADRUNNER) || ((false => ROADRUNNER_LARGE_RINGS) && (ROADRUNNER_LARGE_RINGS => false)))
((NETDEVICES && PARPORT) || ((false => PLIP) && (PLIP => false)))
(NETDEVICES || (((IPWIRELESS && (HOTPLUG && (PCMCIA && NETDEVICES))) => PPP) && (PPP => (IPWIRELESS && (HOTPLUG && (PCMCIA && NETDEVICES))))))
((NETDEVICES && (PPP && EXPERIMENTAL)) || ((false => PPP_MULTILINK) && (PPP_MULTILINK => false)))
((NETDEVICES && PPP) || ((false => PPP_FILTER) && (PPP_FILTER => false)))
((NETDEVICES && PPP) || ((false => PPP_ASYNC) && (PPP_ASYNC => false)))
((NETDEVICES && PPP) || ((false => PPP_SYNC_TTY) && (PPP_SYNC_TTY => false)))
((NETDEVICES && PPP) || ((false => PPP_DEFLATE) && (PPP_DEFLATE => false)))
((NETDEVICES && PPP) || ((false => PPP_BSDCOMP) && (PPP_BSDCOMP => false)))
((NETDEVICES && (PPP && EXPERIMENTAL)) || ((false => PPP_MPPE) && (PPP_MPPE => false)))
((NETDEVICES && (EXPERIMENTAL && PPP)) || ((false => PPPOE) && (PPPOE => false)))
((NETDEVICES && (ATM && PPP)) || ((false => PPPOATM) && (PPPOATM => false)))
((NETDEVICES && (EXPERIMENTAL && (PPP && INET))) || ((false => PPPOL2TP) && (PPPOL2TP => false)))
(NETDEVICES || ((false => SLIP) && (SLIP => false)))
((NETDEVICES && SLIP) || ((false => SLIP_COMPRESSED) && (SLIP_COMPRESSED => false)))
(false || (((((SLIP_COMPRESSED && (NETDEVICES && SLIP)) || (ISDN_PPP && (ISDN && (ISDN_I4L && INET)))) || (PPP && NETDEVICES)) => SLHC) && (SLHC => (((SLIP_COMPRESSED && (NETDEVICES && SLIP)) || (ISDN_PPP && (ISDN && (ISDN_I4L && INET)))) || (PPP && NETDEVICES)))))
((NETDEVICES && SLIP) || ((false => SLIP_SMART) && (SLIP_SMART => false)))
((NETDEVICES && SLIP) || ((false => SLIP_MODE_SLIP6) && (SLIP_MODE_SLIP6 => false)))
((NETDEVICES && (SCSI && PCI)) || ((false => NET_FC) && (NET_FC => false)))
((NETDEVICES && EXPERIMENTAL) || ((false => NETCONSOLE) && (NETCONSOLE => false)))
((NETDEVICES && (NETCONSOLE && (SYSFS && EXPERIMENTAL))) || ((false => NETCONSOLE_DYNAMIC) && (NETCONSOLE_DYNAMIC => false)))
(false || (((true && (NETDEVICES && NETCONSOLE)) => NETPOLL) && (NETPOLL => (true && (NETDEVICES && NETCONSOLE)))))
((NETDEVICES && NETPOLL) || ((false => NETPOLL_TRAP) && (NETPOLL_TRAP => false)))
(false || (((true && (NETDEVICES && NETPOLL)) => NET_POLL_CONTROLLER) && (NET_POLL_CONTROLLER => (true && (NETDEVICES && NETPOLL)))))
((NETDEVICES && (EXPERIMENTAL && VIRTIO)) || ((false => VIRTIO_NET) && (VIRTIO_NET => false)))
((NET && !S39false) || ((false => ISDN) && (ISDN => false)))
(ISDN || ((false => MISDN) && (MISDN => false)))
((ISDN && MISDN) || ((false => MISDN_DSP) && (MISDN_DSP => false)))
((ISDN && MISDN) || ((false => MISDN_LtrueOIP) && (MISDN_LtrueOIP => false)))
((ISDN && (MISDN && PCI)) || ((false => MISDN_HFCPCI) && (MISDN_HFCPCI => false)))
((ISDN && (PCI && MISDN)) || ((false => MISDN_HFCMULTI) && (MISDN_HFCMULTI => false)))
(ISDN || ((false => ISDN_I4L) && (ISDN_I4L => false)))
((ISDN && (ISDN_I4L && INET)) || ((false => ISDN_PPP) && (ISDN_PPP => false)))
((ISDN && (ISDN_I4L && ISDN_PPP)) || ((false => ISDN_PPP_VJ) && (ISDN_PPP_VJ => false)))
((ISDN && (ISDN_I4L && ISDN_PPP)) || ((false => ISDN_MPP) && (ISDN_MPP => false)))
((ISDN && (ISDN_I4L && ISDN_PPP)) || ((false => IPPP_FILTER) && (IPPP_FILTER => false)))
((ISDN && (ISDN_I4L && ISDN_PPP)) || ((false => ISDN_PPP_BSDCOMP) && (ISDN_PPP_BSDCOMP => false)))
((ISDN && ISDN_I4L) || ((false => ISDN_AUDIO) && (ISDN_AUDIO => false)))
((ISDN && (ISDN_I4L && ISDN_AUDIO)) || ((false => ISDN_TTY_FAX) && (ISDN_TTY_FAX => false)))
((ISDN && (ISDN_I4L && X25)) || ((false => ISDN_X25) && (ISDN_X25 => false)))
((ISDN && (ISDN_I4L && BROKEN_ON_SMP)) || ((false => ISDN_DRV_LOOP) && (ISDN_DRV_LOOP => false)))
((ISDN && ISDN_I4L) || ((false => ISDN_DIVERSION) && (ISDN_DIVERSION => false)))
((ISDN && ISDN_I4L) || ((false => ISDN_DRV_HISAX) && (ISDN_DRV_HISAX => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_EURO) && (HISAX_EURO => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_EURO))) || ((false => DE_AOC) && (DE_AOC => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_EURO))) || ((false => HISAX_NO_SENDCOMPLETE) && (HISAX_NO_SENDCOMPLETE => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_EURO))) || ((false => HISAX_NO_LLC) && (HISAX_NO_LLC => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_EURO))) || ((false => HISAX_NO_KEYPAD) && (HISAX_NO_KEYPAD => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_trueTR6) && (HISAX_trueTR6 => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_NItrue) && (HISAX_NItrue => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || (((true && (ISDN && (ISDN_I4L && ISDN_DRV_HISAX))) => HISAX_MAX_CARDS) && (HISAX_MAX_CARDS => (true && (ISDN && (ISDN_I4L && ISDN_DRV_HISAX))))))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_true6_false) && (HISAX_true6_false => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_true6_3) && (HISAX_true6_3 => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && (PCI_LEGACY && (BROKEN || (!SPARC && (!PPC && (!PARISC && (!M68K && ((!MIPS || CPU_LITTLE_ENDIAN) && !FRV))))))))))) || ((false => HISAX_TELESPCI) && (HISAX_TELESPCI => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_SfalseBOX) && (HISAX_SfalseBOX => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_AVM_Atrue) && (HISAX_AVM_Atrue => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (BROKEN || !PPC64)))) || ((false => HISAX_FRITZPCI) && (HISAX_FRITZPCI => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || (((true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_AVM_Atrue_CS)))) => HISAX_AVM_Atrue_PCMCIA) && (HISAX_AVM_Atrue_PCMCIA => (true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_AVM_Atrue_CS)))))))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_ELSA) && (HISAX_ELSA => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_IXtrueMICROR2) && (HISAX_IXtrueMICROR2 => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_DIEHLDIVA) && (HISAX_DIEHLDIVA => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_ASUSCOM) && (HISAX_ASUSCOM => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_TELEINT) && (HISAX_TELEINT => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_HFCS) && (HISAX_HFCS => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_SEDLBAUER) && (HISAX_SEDLBAUER => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_SPORTSTER) && (HISAX_SPORTSTER => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_MIC) && (HISAX_MIC => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && (PCI_LEGACY && (BROKEN || (!SPARC && (!PPC && (!PARISC && (!M68K && ((!MIPS || CPU_LITTLE_ENDIAN) && !FRV))))))))))) || ((false => HISAX_NETJET) && (HISAX_NETJET => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && (PCI_LEGACY && (BROKEN || (!SPARC && (!PPC && (!PARISC && (!M68K && ((!MIPS || CPU_LITTLE_ENDIAN) && !FRV))))))))))) || ((false => HISAX_NETJET_U) && (HISAX_NETJET_U => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_NICCY) && (HISAX_NICCY => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_ISURF) && (HISAX_ISURF => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && ISA))) || ((false => HISAX_HSTSAPHIR) && (HISAX_HSTSAPHIR => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && PCI_LEGACY)))) || ((false => HISAX_BKM_A4T) && (HISAX_BKM_A4T => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && PCI_LEGACY)))) || ((false => HISAX_SCT_QUADRO) && (HISAX_SCT_QUADRO => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_GAZEL) && (HISAX_GAZEL => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && (PCI_LEGACY && (BROKEN || (!SPARC && (!PPC && (!PARISC && (!M68K && ((!MIPS || CPU_LITTLE_ENDIAN) && !FRV))))))))))) || ((false => HISAX_HFC_PCI) && (HISAX_HFC_PCI => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && PCI_LEGACY)))) || ((false => HISAX_W6692) && (HISAX_W6692 => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_HFC_SX) && (HISAX_HFC_SX => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (HISAX_NETJET && (PCI && (PCI_LEGACY && (BROKEN || (!SPARC && (!PPC && (!PARISC && (!M68K && ((!MIPS || CPU_LITTLE_ENDIAN) && !FRV)))))))))))) || ((false => HISAX_ENTERNOW_PCI) && (HISAX_ENTERNOW_PCI => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || ((false => HISAX_DEBUG) && (HISAX_DEBUG => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCMCIA && HISAX_SEDLBAUER)))) || ((false => HISAX_SEDLBAUER_CS) && (HISAX_SEDLBAUER_CS => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCMCIA && HISAX_ELSA)))) || ((false => HISAX_ELSA_CS) && (HISAX_ELSA_CS => false)))
((ISDN && (ISDN_I4L && (PCMCIA && ISDN_DRV_HISAX))) || ((false => HISAX_AVM_Atrue_CS) && (HISAX_AVM_Atrue_CS => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCMCIA && HISAX_true6_3)))) || ((false => HISAX_TELES_CS) && (HISAX_TELES_CS => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (USB && EXPERIMENTAL)))) || ((false => HISAX_ST548true) && (HISAX_ST548true => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (USB && EXPERIMENTAL)))) || ((false => HISAX_HFCUSB) && (HISAX_HFCUSB => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && EXPERIMENTAL))) || ((false => HISAX_HFC4S8S) && (HISAX_HFC4S8S => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (PCI && (PCI_LEGACY && EXPERIMENTAL))))) || ((false => HISAX_FRITZ_PCIPNP) && (HISAX_FRITZ_PCIPNP => false)))
(false || (((true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_ST548true)))) => HISAX_HDLC) && (HISAX_HDLC => (true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_ST548true)))))))
((ISDN && (ISDN_I4L && ISDN_DRV_HISAX)) || (((true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_AVM_Atrue_CS)))) => HISAX_AVM_Atrue_PCMCIA) && (HISAX_AVM_Atrue_PCMCIA => (true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && HISAX_AVM_Atrue_CS)))))))
((ISDN && (ISDN_I4L && ISA)) || ((false => ISDN_DRV_ICN) && (ISDN_DRV_ICN => false)))
((ISDN && (ISDN_I4L && (ISA && (BROKEN || X86)))) || ((false => ISDN_DRV_PCBIT) && (ISDN_DRV_PCBIT => false)))
((ISDN && (ISDN_I4L && ISA)) || ((false => ISDN_DRV_SC) && (ISDN_DRV_SC => false)))
((ISDN && (ISDN_I4L && ISA)) || ((false => ISDN_DRV_ACT2falsefalsefalse) && (ISDN_DRV_ACT2falsefalsefalse => false)))
((ISDN && (ISDN_I4L && (true && (true && (PROC_FS && PCI))))) || ((false => HYSDN) && (HYSDN => false)))
((ISDN && (ISDN_I4L && (HYSDN && ISDN_CAPI))) || ((false => HYSDN_CAPI) && (HYSDN_CAPI => false)))
((ISDN && ISDN_I4L) || ((false => ISDN_DRV_GIGASET) && (ISDN_DRV_GIGASET => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_GIGASET && USB))) || ((false => GIGASET_BASE) && (GIGASET_BASE => false)))
((ISDN && (ISDN_I4L && (ISDN_DRV_GIGASET && USB))) || ((false => GIGASET_Mtruefalse5) && (GIGASET_Mtruefalse5 => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_GIGASET)) || ((false => GIGASET_Mtruefalsetrue) && (GIGASET_Mtruefalsetrue => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_GIGASET)) || ((false => GIGASET_DEBUG) && (GIGASET_DEBUG => false)))
((ISDN && (ISDN_I4L && ISDN_DRV_GIGASET)) || ((false => GIGASET_UNDOCREQ) && (GIGASET_UNDOCREQ => false)))
(ISDN || ((false => ISDN_CAPI) && (ISDN_CAPI => false)))
((ISDN && ISDN_CAPI) || (((true && (ISDN && ISDN_CAPI)) => ISDN_DRV_AVMBtrue_VERBOSE_REASON) && (ISDN_DRV_AVMBtrue_VERBOSE_REASON => (true && (ISDN && ISDN_CAPI)))))
((ISDN && ISDN_CAPI) || (((true && (ISDN && ISDN_CAPI)) => CAPI_TRACE) && (CAPI_TRACE => (true && (ISDN && ISDN_CAPI)))))
((ISDN && (ISDN_CAPI && EXPERIMENTAL)) || ((false => ISDN_CAPI_MIDDLEWARE) && (ISDN_CAPI_MIDDLEWARE => false)))
((ISDN && ISDN_CAPI) || ((false => ISDN_CAPI_CAPI2false) && (ISDN_CAPI_CAPI2false => false)))
((ISDN && (ISDN_CAPI && (ISDN_CAPI_MIDDLEWARE && ISDN_CAPI_CAPI2false))) || ((false => ISDN_CAPI_CAPIFS_BOOL) && (ISDN_CAPI_CAPIFS_BOOL => false)))
(false || (((true && ((ISDN && (ISDN_CAPI && ISDN_CAPI_CAPIFS_BOOL)) && ISDN_CAPI_CAPI2false)) => ISDN_CAPI_CAPIFS) && (ISDN_CAPI_CAPIFS => (true && ((ISDN && (ISDN_CAPI && ISDN_CAPI_CAPIFS_BOOL)) && ISDN_CAPI_CAPI2false)))))
((ISDN && (ISDN_CAPI && ISDN_I4L)) || ((false => ISDN_CAPI_CAPIDRV) && (ISDN_CAPI_CAPIDRV => false)))
((ISDN && ISDN_CAPI) || ((false => CAPI_AVM) && (CAPI_AVM => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && ISA))) || ((false => ISDN_DRV_AVMBtrue_BtrueISA) && (ISDN_DRV_AVMBtrue_BtrueISA => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && PCI))) || ((false => ISDN_DRV_AVMBtrue_BtruePCI) && (ISDN_DRV_AVMBtrue_BtruePCI => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && ISDN_DRV_AVMBtrue_BtruePCI))) || ((false => ISDN_DRV_AVMBtrue_BtruePCIV4) && (ISDN_DRV_AVMBtrue_BtruePCIV4 => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && ISA))) || ((false => ISDN_DRV_AVMBtrue_TtrueISA) && (ISDN_DRV_AVMBtrue_TtrueISA => false)))
((ISDN && (ISDN_CAPI && CAPI_AVM)) || ((false => ISDN_DRV_AVMBtrue_BtruePCMCIA) && (ISDN_DRV_AVMBtrue_BtruePCMCIA => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && (ISDN_DRV_AVMBtrue_BtruePCMCIA && PCMCIA)))) || ((false => ISDN_DRV_AVMBtrue_AVM_CS) && (ISDN_DRV_AVMBtrue_AVM_CS => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && PCI))) || ((false => ISDN_DRV_AVMBtrue_TtruePCI) && (ISDN_DRV_AVMBtrue_TtruePCI => false)))
((ISDN && (ISDN_CAPI && (CAPI_AVM && PCI))) || ((false => ISDN_DRV_AVMBtrue_C4) && (ISDN_DRV_AVMBtrue_C4 => false)))
((ISDN && ISDN_CAPI) || ((false => CAPI_EICON) && (CAPI_EICON => false)))
((ISDN && (ISDN_CAPI && (CAPI_EICON && (PROC_FS && PCI)))) || ((false => ISDN_DIVAS) && (ISDN_DIVAS => false)))
((ISDN && (ISDN_CAPI && (CAPI_EICON && ISDN_DIVAS))) || ((false => ISDN_DIVAS_BRIPCI) && (ISDN_DIVAS_BRIPCI => false)))
((ISDN && (ISDN_CAPI && (CAPI_EICON && ISDN_DIVAS))) || ((false => ISDN_DIVAS_PRIPCI) && (ISDN_DIVAS_PRIPCI => false)))
((ISDN && (ISDN_CAPI && (CAPI_EICON && ISDN_DIVAS))) || ((false => ISDN_DIVAS_DIVACAPI) && (ISDN_DIVAS_DIVACAPI => false)))
((ISDN && (ISDN_CAPI && (CAPI_EICON && ISDN_DIVAS))) || ((false => ISDN_DIVAS_USERIDI) && (ISDN_DIVAS_USERIDI => false)))
((ISDN && (ISDN_CAPI && (CAPI_EICON && (ISDN_DIVAS && (true && true))))) || ((false => ISDN_DIVAS_MAINT) && (ISDN_DIVAS_MAINT => false)))
(HAS_IOMEM || ((false => PHONE) && (PHONE => false)))
((PHONE && (ISA || PCI)) || ((false => PHONE_IXJ) && (PHONE_IXJ => false)))
((PHONE && (PHONE_IXJ && PCMCIA)) || ((false => PHONE_IXJ_PCMCIA) && (PHONE_IXJ_PCMCIA => false)))
((!S39false && EMBEDDED) || ((((((THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))) || (VT && !S39false)) || (MAC_EMUMOUSEBTN && MACINTOSH_DRIVERS)) || (true && !S39false)) => INPUT) && (INPUT => ((((THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))) || (VT && !S39false)) || (MAC_EMUMOUSEBTN && MACINTOSH_DRIVERS)) || (true && !S39false)))))
((!S39false && INPUT) || (((((((x328 || x329) || x33false) || x33true) || x332) || x333) => INPUT_FF_MEMLESS) && (INPUT_FF_MEMLESS => (((((x328 || x329) || x33false) || x33true) || x332) || x333))))
(x328 <=> (JOYSTICK_XPAD_FF && (!S39false && (INPUT_JOYSTICK && (JOYSTICK_XPAD && INPUT)))))
(x329 <=> (ZEROPLUS_FF && (HID_SUPPORT && (HID && USB_HID))))
(x33false <=> (PANTHERLORD_FF && (HID_SUPPORT && (HID && HID_PANTHERLORD))))
(x33true <=> (LOGITECH_FF && (HID_SUPPORT && (HID && HID_LOGITECH))))
(x332 <=> (LOGIRUMBLEPAD2_FF && (HID_SUPPORT && (HID && HID_LOGITECH))))
(x333 <=> (THRUSTMASTER_FF && (HID_SUPPORT && (HID && USB_HID))))
((!S39false && INPUT) || ((((((((((((x334 || x335) || x336) || x337) || x338) || x339) || x34false) || x34true) || x342) || x343) || x344) => INPUT_POLLDEV) && (INPUT_POLLDEV => ((((((((((x334 || x335) || x336) || x337) || x338) || x339) || x34false) || x34true) || x342) || x343) || x344))))
(x334 <=> (INPUT_COBALT_BTNS && (!S39false && (INPUT && (INPUT_MISC && MIPS_COBALT)))))
(x335 <=> (ACPI_TOSHIBA && (!X86_VOYAGER && (ACPI && (X86 && INPUT)))))
(x336 <=> (SENSORS_AMS && (HWMON && (PPC_PMAC && (!PPC64 && (INPUT && (((ADB_PMU && I2C) || ((ADB_PMU && !I2C) || I2C)) && EXPERIMENTAL)))))))
(x337 <=> (SENSORS_APPLESMC && (HWMON && (INPUT && X86))))
(x338 <=> (MOUSE_GPIO && (!S39false && (INPUT && (INPUT_MOUSE && GENERIC_GPIO)))))
(x339 <=> (KEYBOARD_HP6XX && (!S39false && (INPUT && (INPUT_KEYBOARD && SH_HP6XX)))))
(x34false <=> (INPUT_WISTRON_BTNS && (!S39false && (INPUT && (INPUT_MISC && (X86 && !X86_64))))))
(x34true <=> (INPUT_SGI_BTNS && (!S39false && (INPUT && (INPUT_MISC && (SGI_IP22 || SGI_IP32))))))
(x342 <=> (SENSORS_HDAPS && (HWMON && (INPUT && X86))))
(x343 <=> (KEYBOARD_AAED2falsefalsefalse && (!S39false && (INPUT && (INPUT_KEYBOARD && MACH_AAED2falsefalsefalse)))))
(x344 <=> (INPUT_APANEL && (!S39false && (INPUT && (INPUT_MISC && (X86 && (I2C && LEDS_CLASS)))))))
((!S39false && (INPUT && EMBEDDED)) || (((true && (!S39false && INPUT)) => INPUT_MOUSEDEV) && (INPUT_MOUSEDEV => (true && (!S39false && INPUT)))))
((!S39false && (INPUT && INPUT_MOUSEDEV)) || (((true && (!S39false && (INPUT && INPUT_MOUSEDEV))) => INPUT_MOUSEDEV_PSAUX) && (INPUT_MOUSEDEV_PSAUX => (true && (!S39false && (INPUT && INPUT_MOUSEDEV))))))
((!S39false && (INPUT && INPUT_MOUSEDEV)) || (((true && (!S39false && (INPUT && INPUT_MOUSEDEV))) => INPUT_MOUSEDEV_SCREEN_X) && (INPUT_MOUSEDEV_SCREEN_X => (true && (!S39false && (INPUT && INPUT_MOUSEDEV))))))
((!S39false && (INPUT && INPUT_MOUSEDEV)) || (((true && (!S39false && (INPUT && INPUT_MOUSEDEV))) => INPUT_MOUSEDEV_SCREEN_Y) && (INPUT_MOUSEDEV_SCREEN_Y => (true && (!S39false && (INPUT && INPUT_MOUSEDEV))))))
((!S39false && INPUT) || ((false => INPUT_JOYDEV) && (INPUT_JOYDEV => false)))
((!S39false && INPUT) || ((false => INPUT_EVDEV) && (INPUT_EVDEV => false)))
((!S39false && INPUT) || ((false => INPUT_EVBUG) && (INPUT_EVBUG => false)))
((!S39false && (INPUT && (APM_EMULATION && EMBEDDED))) || ((false => INPUT_APMPOWER) && (INPUT_APMPOWER => false)))
((!S39false && (INPUT && XEN_FBDEV_FRONTEND)) || (((true && (!S39false && (INPUT && XEN_FBDEV_FRONTEND))) => XEN_KBDDEV_FRONTEND) && (XEN_KBDDEV_FRONTEND => (true && (!S39false && (INPUT && XEN_FBDEV_FRONTEND))))))
((!S39false && (INPUT && (EMBEDDED || !X86))) || (((true && (!S39false && INPUT)) => INPUT_KEYBOARD) && (INPUT_KEYBOARD => (true && (!S39false && INPUT)))))
((!S39false && (INPUT && (INPUT_KEYBOARD && (EMBEDDED || !X86_PC)))) || (((true && (!S39false && (INPUT && INPUT_KEYBOARD))) => KEYBOARD_ATKBD) && (KEYBOARD_ATKBD => (true && (!S39false && (INPUT && INPUT_KEYBOARD))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && (PARISC && KEYBOARD_ATKBD)))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && (PARISC && KEYBOARD_ATKBD))))) => KEYBOARD_ATKBD_HP_KEYCODES) && (KEYBOARD_ATKBD_HP_KEYCODES => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && (PARISC && KEYBOARD_ATKBD))))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && KEYBOARD_ATKBD_HP_KEYCODES))) || ((false => KEYBOARD_ATKBD_RDI_KEYCODES) && (KEYBOARD_ATKBD_RDI_KEYCODES => false)))
((!S39false && (INPUT && INPUT_KEYBOARD)) || ((false => KEYBOARD_SUNKBD) && (KEYBOARD_SUNKBD => false)))
((!S39false && (INPUT && INPUT_KEYBOARD)) || ((false => KEYBOARD_LKKBD) && (KEYBOARD_LKKBD => false)))
((!S39false && (INPUT && (SHARP_LOCOMO && INPUT_KEYBOARD))) || ((false => KEYBOARD_LOCOMO) && (KEYBOARD_LOCOMO => false)))
((!S39false && (INPUT && INPUT_KEYBOARD)) || ((false => KEYBOARD_XTKBD) && (KEYBOARD_XTKBD => false)))
((!S39false && (INPUT && INPUT_KEYBOARD)) || ((false => KEYBOARD_NEWTON) && (KEYBOARD_NEWTON => false)))
((!S39false && (INPUT && INPUT_KEYBOARD)) || ((false => KEYBOARD_STOWAWAY) && (KEYBOARD_STOWAWAY => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && PXA_SHARPSL))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && PXA_SHARPSL)))) => KEYBOARD_CORGI) && (KEYBOARD_CORGI => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && PXA_SHARPSL)))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && PXA_SHARPSL))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && PXA_SHARPSL)))) => KEYBOARD_SPITZ) && (KEYBOARD_SPITZ => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && PXA_SHARPSL)))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && MACH_TOSA))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && MACH_TOSA)))) => KEYBOARD_TOSA) && (KEYBOARD_TOSA => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && MACH_TOSA)))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && KEYBOARD_TOSA))) || ((false => KEYBOARD_TOSA_USE_EXT_KEYCODES) && (KEYBOARD_TOSA_USE_EXT_KEYCODES => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && AMIGA))) || ((false => KEYBOARD_AMIGA) && (KEYBOARD_AMIGA => false)))
(false || ((((KEYBOARD_ATARI && (!S39false && (INPUT && (INPUT_KEYBOARD && ATARI)))) || (MOUSE_ATARI && (!S39false && (INPUT && (INPUT_MOUSE && ATARI))))) => ATARI_KBD_CORE) && (ATARI_KBD_CORE => ((KEYBOARD_ATARI && (!S39false && (INPUT && (INPUT_KEYBOARD && ATARI)))) || (MOUSE_ATARI && (!S39false && (INPUT && (INPUT_MOUSE && ATARI))))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && ATARI))) || ((false => KEYBOARD_ATARI) && (KEYBOARD_ATARI => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse)))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))) => KEYBOARD_HIL_OLD) && (KEYBOARD_HIL_OLD => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse)))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))) => KEYBOARD_HIL) && (KEYBOARD_HIL => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && SH_HP6XX))) || ((false => KEYBOARD_HP6XX) && (KEYBOARD_HP6XX => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && (SAtruetruefalsefalse_JORNADA72false_SSP && SAtruetruefalsefalse_SSP)))) || ((false => KEYBOARD_HP7XX) && (KEYBOARD_HP7XX => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && (ARCH_OMAPtrue || ARCH_OMAP2)))) || ((false => KEYBOARD_OMAP) && (KEYBOARD_OMAP => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && (PXA27x || PXA3xx)))) || ((false => KEYBOARD_PXA27x) && (KEYBOARD_PXA27x => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && MACH_AAED2falsefalsefalse))) || (((true && (!S39false && (INPUT && (INPUT_KEYBOARD && MACH_AAED2falsefalsefalse)))) => KEYBOARD_AAED2falsefalsefalse) && (KEYBOARD_AAED2falsefalsefalse => (true && (!S39false && (INPUT && (INPUT_KEYBOARD && MACH_AAED2falsefalsefalse)))))))
((!S39false && (INPUT && (INPUT_KEYBOARD && GENERIC_GPIO))) || ((false => KEYBOARD_GPIO) && (KEYBOARD_GPIO => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && (SH_DREAMCAST && MAPLE)))) || ((false => KEYBOARD_MAPLE) && (KEYBOARD_MAPLE => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && (BF54x && !BF544)))) || ((false => KEYBOARD_BFIN) && (KEYBOARD_BFIN => false)))
((!S39false && (INPUT && (INPUT_KEYBOARD && SUPERH))) || ((false => KEYBOARD_SH_KEYSC) && (KEYBOARD_SH_KEYSC => false)))
((!S39false && INPUT) || (((true && (!S39false && INPUT)) => INPUT_MOUSE) && (INPUT_MOUSE => (true && (!S39false && INPUT)))))
((!S39false && (INPUT && INPUT_MOUSE)) || (((true && (!S39false && (INPUT && INPUT_MOUSE))) => MOUSE_PS2) && (MOUSE_PS2 => (true && (!S39false && (INPUT && INPUT_MOUSE))))))
((!S39false && (INPUT && (INPUT_MOUSE && (MOUSE_PS2 && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))) => MOUSE_PS2_ALPS) && (MOUSE_PS2_ALPS => (true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))))))
((!S39false && (INPUT && (INPUT_MOUSE && (MOUSE_PS2 && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))) => MOUSE_PS2_LOGIPS2PP) && (MOUSE_PS2_LOGIPS2PP => (true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))))))
((!S39false && (INPUT && (INPUT_MOUSE && (MOUSE_PS2 && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))) => MOUSE_PS2_SYNAPTICS) && (MOUSE_PS2_SYNAPTICS => (true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))))))
((!S39false && (INPUT && (INPUT_MOUSE && (MOUSE_PS2 && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))) => MOUSE_PS2_LIFEBOOK) && (MOUSE_PS2_LIFEBOOK => (true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))))))
((!S39false && (INPUT && (INPUT_MOUSE && (MOUSE_PS2 && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))) => MOUSE_PS2_TRACKPOINT) && (MOUSE_PS2_TRACKPOINT => (true && (!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2)))))))
((!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2))) || ((false => MOUSE_PS2_ELANTECH) && (MOUSE_PS2_ELANTECH => false)))
((!S39false && (INPUT && (INPUT_MOUSE && MOUSE_PS2))) || ((false => MOUSE_PS2_TOUCHKIT) && (MOUSE_PS2_TOUCHKIT => false)))
((!S39false && (INPUT && (INPUT_MOUSE && (MOUSE_PS2 && OLPC)))) || ((false => MOUSE_PS2_OLPC) && (MOUSE_PS2_OLPC => false)))
((!S39false && (INPUT && INPUT_MOUSE)) || ((false => MOUSE_SERIAL) && (MOUSE_SERIAL => false)))
((!S39false && (INPUT && (INPUT_MOUSE && USB_ARCH_HAS_HCD))) || ((false => MOUSE_APPLETOUCH) && (MOUSE_APPLETOUCH => false)))
((!S39false && (INPUT && (INPUT_MOUSE && USB_ARCH_HAS_HCD))) || ((false => MOUSE_BCM5974) && (MOUSE_BCM5974 => false)))
((!S39false && (INPUT && (INPUT_MOUSE && ISA))) || ((false => MOUSE_INPORT) && (MOUSE_INPORT => false)))
((!S39false && (INPUT && (INPUT_MOUSE && MOUSE_INPORT))) || ((false => MOUSE_ATIXL) && (MOUSE_ATIXL => false)))
((!S39false && (INPUT && (INPUT_MOUSE && ISA))) || ((false => MOUSE_LOGIBM) && (MOUSE_LOGIBM => false)))
((!S39false && (INPUT && (INPUT_MOUSE && ISA))) || ((false => MOUSE_PCtruetruefalsePAD) && (MOUSE_PCtruetruefalsePAD => false)))
((!S39false && (INPUT && (INPUT_MOUSE && AMIGA))) || ((false => MOUSE_AMIGA) && (MOUSE_AMIGA => false)))
((!S39false && (INPUT && (INPUT_MOUSE && ATARI))) || ((false => MOUSE_ATARI) && (MOUSE_ATARI => false)))
((!S39false && (INPUT && (INPUT_MOUSE && ARCH_ACORN))) || ((false => MOUSE_RISCPC) && (MOUSE_RISCPC => false)))
((!S39false && (INPUT && INPUT_MOUSE)) || ((false => MOUSE_VSXXXAA) && (MOUSE_VSXXXAA => false)))
((!S39false && (INPUT && (INPUT_MOUSE && (GSC || HP3falsefalse)))) || ((false => MOUSE_HIL) && (MOUSE_HIL => false)))
((!S39false && (INPUT && (INPUT_MOUSE && GENERIC_GPIO))) || ((false => MOUSE_GPIO) && (MOUSE_GPIO => false)))
((!S39false && INPUT) || ((false => INPUT_JOYSTICK) && (INPUT_JOYSTICK => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_ANALOG) && (JOYSTICK_ANALOG => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_A3D) && (JOYSTICK_A3D => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_ADI) && (JOYSTICK_ADI => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_COBRA) && (JOYSTICK_COBRA => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_GF2K) && (JOYSTICK_GF2K => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_GRIP) && (JOYSTICK_GRIP => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_GRIP_MP) && (JOYSTICK_GRIP_MP => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_GUILLEMOT) && (JOYSTICK_GUILLEMOT => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_INTERACT) && (JOYSTICK_INTERACT => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_SIDEWINDER) && (JOYSTICK_SIDEWINDER => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_TMDC) && (JOYSTICK_TMDC => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_IFORCE) && (JOYSTICK_IFORCE => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && (JOYSTICK_IFORCE && ((JOYSTICK_IFORCE || USB) && USB))))) || ((false => JOYSTICK_IFORCE_USB) && (JOYSTICK_IFORCE_USB => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && (JOYSTICK_IFORCE && ((JOYSTICK_IFORCE || SERIO) && SERIO))))) || ((false => JOYSTICK_IFORCE_232) && (JOYSTICK_IFORCE_232 => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_WARRIOR) && (JOYSTICK_WARRIOR => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_MAGELLAN) && (JOYSTICK_MAGELLAN => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_SPACEORB) && (JOYSTICK_SPACEORB => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_SPACEBALL) && (JOYSTICK_SPACEBALL => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_STINGER) && (JOYSTICK_STINGER => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_TWIDJOY) && (JOYSTICK_TWIDJOY => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_ZHENHUA) && (JOYSTICK_ZHENHUA => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && PARPORT))) || ((false => JOYSTICK_DB9) && (JOYSTICK_DB9 => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && PARPORT))) || ((false => JOYSTICK_GAMECON) && (JOYSTICK_GAMECON => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && PARPORT))) || ((false => JOYSTICK_TURBOGRAFX) && (JOYSTICK_TURBOGRAFX => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && AMIGA))) || ((false => JOYSTICK_AMIGA) && (JOYSTICK_AMIGA => false)))
((!S39false && (INPUT && INPUT_JOYSTICK)) || ((false => JOYSTICK_JOYDUMP) && (JOYSTICK_JOYDUMP => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && USB_ARCH_HAS_HCD))) || ((false => JOYSTICK_XPAD) && (JOYSTICK_XPAD => false)))
((!S39false && (INPUT_JOYSTICK && (JOYSTICK_XPAD && INPUT))) || ((false => JOYSTICK_XPAD_FF) && (JOYSTICK_XPAD_FF => false)))
((!S39false && (INPUT && (INPUT_JOYSTICK && (JOYSTICK_XPAD && (LEDS_CLASS || LEDS_CLASS))))) || ((false => JOYSTICK_XPAD_LEDS) && (JOYSTICK_XPAD_LEDS => false)))
((!S39false && INPUT) || ((false => INPUT_TABLET) && (INPUT_TABLET => false)))
((!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD))) || ((false => TABLET_USB_ACECAD) && (TABLET_USB_ACECAD => false)))
((!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD))) || ((false => TABLET_USB_AIPTEK) && (TABLET_USB_AIPTEK => false)))
((!S39false && (INPUT_TABLET && (USB && INPUT))) || ((false => TABLET_USB_GTCO) && (TABLET_USB_GTCO => false)))
((!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD))) || ((false => TABLET_USB_KBTAB) && (TABLET_USB_KBTAB => false)))
((!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD))) || ((false => TABLET_USB_WACOM) && (TABLET_USB_WACOM => false)))
((!S39false && INPUT) || ((false => INPUT_TOUCHSCREEN) && (INPUT_TOUCHSCREEN => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (SPI_MASTER && (!HWMON || HWMON))))) || ((false => TOUCHSCREEN_ADS7846) && (TOUCHSCREEN_ADS7846 => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && SAtruetruefalsefalse_BITSY))) || ((false => TOUCHSCREEN_BITSY) && (TOUCHSCREEN_BITSY => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && PXA_SHARPSL))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && PXA_SHARPSL)))) => TOUCHSCREEN_CORGI) && (TOUCHSCREEN_CORGI => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && PXA_SHARPSL)))))))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_FUJITSU) && (TOUCHSCREEN_FUJITSU => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_GUNZE) && (TOUCHSCREEN_GUNZE => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_ELO) && (TOUCHSCREEN_ELO => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_MTOUCH) && (TOUCHSCREEN_MTOUCH => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_INEXIO) && (TOUCHSCREEN_INEXIO => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_MK7true2) && (TOUCHSCREEN_MK7true2 => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (SH_HP6XX && SH_ADC)))) || ((false => TOUCHSCREEN_HP6falsefalse) && (TOUCHSCREEN_HP6falsefalse => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && SAtruetruefalsefalse_JORNADA72false_SSP))) || ((false => TOUCHSCREEN_HP7XX) && (TOUCHSCREEN_HP7XX => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && ISA))) || ((false => TOUCHSCREEN_HTCPEN) && (TOUCHSCREEN_HTCPEN => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_PENMOUNT) && (TOUCHSCREEN_PENMOUNT => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (SH_MIGOR && I2C)))) || ((false => TOUCHSCREEN_MIGOR) && (TOUCHSCREEN_MIGOR => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_TOUCHRIGHT) && (TOUCHSCREEN_TOUCHRIGHT => false)))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_TOUCHWIN) && (TOUCHSCREEN_TOUCHWIN => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && ARCH_AT9trueSAM9RL))) || ((false => TOUCHSCREEN_ATMEL_TSADCC) && (TOUCHSCREEN_ATMEL_TSADCC => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (AC97_BUS && UCBtrue4falsefalse_CORE)))) || ((false => TOUCHSCREEN_UCBtrue4falsefalse) && (TOUCHSCREEN_UCBtrue4falsefalse => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && AC97_BUS))) || ((false => TOUCHSCREEN_WM97XX) && (TOUCHSCREEN_WM97XX => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX)))) => TOUCHSCREEN_WM97false5) && (TOUCHSCREEN_WM97false5 => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX)))) => TOUCHSCREEN_WM97true2) && (TOUCHSCREEN_WM97true2 => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX)))) => TOUCHSCREEN_WM97true3) && (TOUCHSCREEN_WM97true3 => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_WM97XX)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_WM97XX && ARCH_PXA)))) || ((false => TOUCHSCREEN_WM97XX_MAINSTONE) && (TOUCHSCREEN_WM97XX_MAINSTONE => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && USB_ARCH_HAS_HCD))) || ((false => TOUCHSCREEN_USB_COMPOSITE) && (TOUCHSCREEN_USB_COMPOSITE => false)))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_EGALAX) && (TOUCHSCREEN_USB_EGALAX => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_PANJIT) && (TOUCHSCREEN_USB_PANJIT => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_3M) && (TOUCHSCREEN_USB_3M => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_ITM) && (TOUCHSCREEN_USB_ITM => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_ETURBO) && (TOUCHSCREEN_USB_ETURBO => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_GUNZE) && (TOUCHSCREEN_USB_GUNZE => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_DMC_TSCtruefalse) && (TOUCHSCREEN_USB_DMC_TSCtruefalse => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_IRTOUCH) && (TOUCHSCREEN_USB_IRTOUCH => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_IDEALTEK) && (TOUCHSCREEN_USB_IDEALTEK => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_GENERAL_TOUCH) && (TOUCHSCREEN_USB_GENERAL_TOUCH => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && (INPUT_TOUCHSCREEN && (TOUCHSCREEN_USB_COMPOSITE && EMBEDDED)))) || (((true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))) => TOUCHSCREEN_USB_GOTOP) && (TOUCHSCREEN_USB_GOTOP => (true && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && TOUCHSCREEN_USB_COMPOSITE)))))))
((!S39false && (INPUT && INPUT_TOUCHSCREEN)) || ((false => TOUCHSCREEN_TOUCHIT2true3) && (TOUCHSCREEN_TOUCHIT2true3 => false)))
((!S39false && INPUT) || ((false => INPUT_MISC) && (INPUT_MISC => false)))
((!S39false && (INPUT && (INPUT_MISC && PCSPKR_PLATFORM))) || ((false => INPUT_PCSPKR) && (INPUT_PCSPKR => false)))
((!S39false && (INPUT && (INPUT_MISC && (PCI && SPARC64)))) || ((false => INPUT_SPARCSPKR) && (INPUT_SPARCSPKR => false)))
((!S39false && (INPUT && (INPUT_MISC && M68K))) || ((false => INPUT_M68K_BEEP) && (INPUT_M68K_BEEP => false)))
((!S39false && (INPUT && (INPUT_MISC && (X86 && (I2C && LEDS_CLASS))))) || ((false => INPUT_APANEL) && (INPUT_APANEL => false)))
((!S39false && (INPUT && (INPUT_MISC && ARCH_IXP4XX))) || ((false => INPUT_IXP4XX_BEEPER) && (INPUT_IXP4XX_BEEPER => false)))
((!S39false && (INPUT && (INPUT_MISC && MIPS_COBALT))) || ((false => INPUT_COBALT_BTNS) && (INPUT_COBALT_BTNS => false)))
((!S39false && (INPUT && (INPUT_MISC && (X86 && !X86_64)))) || ((false => INPUT_WISTRON_BTNS) && (INPUT_WISTRON_BTNS => false)))
((!S39false && (INPUT && (INPUT_MISC && (X86 && ACPI)))) || ((false => INPUT_ATLAS_BTNS) && (INPUT_ATLAS_BTNS => false)))
((!S39false && (INPUT && (INPUT_MISC && USB_ARCH_HAS_HCD))) || ((false => INPUT_ATI_REMOTE) && (INPUT_ATI_REMOTE => false)))
((!S39false && (INPUT && (INPUT_MISC && USB_ARCH_HAS_HCD))) || ((false => INPUT_ATI_REMOTE2) && (INPUT_ATI_REMOTE2 => false)))
((!S39false && (INPUT && (INPUT_MISC && (EXPERIMENTAL && USB_ARCH_HAS_HCD)))) || ((false => INPUT_KEYSPAN_REMOTE) && (INPUT_KEYSPAN_REMOTE => false)))
((!S39false && (INPUT && (INPUT_MISC && USB_ARCH_HAS_HCD))) || ((false => INPUT_POWERMATE) && (INPUT_POWERMATE => false)))
((!S39false && (INPUT && (INPUT_MISC && (EXPERIMENTAL && USB_ARCH_HAS_HCD)))) || ((false => INPUT_YEALINK) && (INPUT_YEALINK => false)))
((!S39false && (INPUT && (INPUT_MISC && (EXPERIMENTAL && USB_ARCH_HAS_HCD)))) || ((false => INPUT_CMtruefalse9) && (INPUT_CMtruefalse9 => false)))
((!S39false && (INPUT && INPUT_MISC)) || ((false => INPUT_UINPUT) && (INPUT_UINPUT => false)))
((!S39false && (INPUT && (INPUT_MISC && (SGI_IP22 || SGI_IP32)))) || ((false => INPUT_SGI_BTNS) && (INPUT_SGI_BTNS => false)))
((!S39false && (INPUT && (INPUT_MISC && (GSC || HP3falsefalse)))) || ((false => HP_SDC_RTC) && (HP_SDC_RTC => false)))
((!S39false && (EMBEDDED || !X86)) || ((((((((((((((((((((((((((((((x345 || x346) || x347) || x348) || x349) || x35false) || x35true) || x352) || x353) || x354) || x355) || x356) || x357) || x358) || x359) || x36false) || x36true) || x362) || x363) || x364) || x365) || x366) || x367) || x368) || x369) || x37false) || x37true) || x372) || x373) => SERIO) && (SERIO => ((((((((((((((((((((((((((((x345 || x346) || x347) || x348) || x349) || x35false) || x35true) || x352) || x353) || x354) || x355) || x356) || x357) || x358) || x359) || x36false) || x36true) || x362) || x363) || x364) || x365) || x366) || x367) || x368) || x369) || x37false) || x37true) || x372) || x373))))
(x345 <=> (TOUCHSCREEN_TOUCHRIGHT && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x346 <=> (MOUSE_PS2 && (!S39false && (INPUT && INPUT_MOUSE))))
(x347 <=> (MOUSE_SERIAL && (!S39false && (INPUT && INPUT_MOUSE))))
(x348 <=> (JOYSTICK_ZHENHUA && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x349 <=> (TOUCHSCREEN_PENMOUNT && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x35false <=> (JOYSTICK_TWIDJOY && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x35true <=> (KEYBOARD_XTKBD && (!S39false && (INPUT && INPUT_KEYBOARD))))
(x352 <=> (JOYSTICK_MAGELLAN && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x353 <=> (TOUCHSCREEN_MTOUCH && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x354 <=> (JOYSTICK_WARRIOR && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x355 <=> (TOUCHSCREEN_ELO && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x356 <=> (KEYBOARD_HIL && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))))
(x357 <=> (TOUCHSCREEN_INEXIO && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x358 <=> (KEYBOARD_NEWTON && (!S39false && (INPUT && INPUT_KEYBOARD))))
(x359 <=> (I2C_TAOS_EVM && (I2C && EXPERIMENTAL)))
(x36false <=> (JOYSTICK_SPACEBALL && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x36true <=> (KEYBOARD_STOWAWAY && (!S39false && (INPUT && INPUT_KEYBOARD))))
(x362 <=> (TOUCHSCREEN_TOUCHWIN && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x363 <=> (KEYBOARD_ATKBD && (!S39false && (INPUT && INPUT_KEYBOARD))))
(x364 <=> (KEYBOARD_SUNKBD && (!S39false && (INPUT && INPUT_KEYBOARD))))
(x365 <=> (TOUCHSCREEN_BITSY && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && SAtruetruefalsefalse_BITSY)))))
(x366 <=> (TOUCHSCREEN_GUNZE && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x367 <=> (JOYSTICK_STINGER && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x368 <=> (TOUCHSCREEN_TOUCHIT2true3 && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x369 <=> (JOYSTICK_SPACEORB && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x37false <=> (MOUSE_VSXXXAA && (!S39false && (INPUT && INPUT_MOUSE))))
(x37true <=> (KEYBOARD_LKKBD && (!S39false && (INPUT && INPUT_KEYBOARD))))
(x372 <=> (TOUCHSCREEN_FUJITSU && (!S39false && (INPUT && INPUT_TOUCHSCREEN))))
(x373 <=> (true && !S39false))
((!S39false && (SERIO && (!PARISC && ((!ARM || (ARCH_SHARK || FOOTBRIDGE_HOST)) && (!M68K && (!BLACKFIN && (EMBEDDED || !X86))))))) || (((((KEYBOARD_ATKBD && (!S39false && (INPUT && (INPUT_KEYBOARD && X86_PC)))) || (MOUSE_PS2 && (!S39false && (INPUT && (INPUT_MOUSE && X86_PC))))) || (true && (!S39false && (SERIO && (!PARISC && ((!ARM || (ARCH_SHARK || FOOTBRIDGE_HOST)) && (!M68K && !BLACKFIN))))))) => SERIO_I8false42) && (SERIO_I8false42 => (((KEYBOARD_ATKBD && (!S39false && (INPUT && (INPUT_KEYBOARD && X86_PC)))) || (MOUSE_PS2 && (!S39false && (INPUT && (INPUT_MOUSE && X86_PC))))) || (true && (!S39false && (SERIO && (!PARISC && ((!ARM || (ARCH_SHARK || FOOTBRIDGE_HOST)) && (!M68K && !BLACKFIN))))))))))
((!S39false && SERIO) || ((((I2C_TAOS_EVM && (I2C && EXPERIMENTAL)) || (true && (!S39false && SERIO))) => SERIO_SERPORT) && (SERIO_SERPORT => ((I2C_TAOS_EVM && (I2C && EXPERIMENTAL)) || (true && (!S39false && SERIO))))))
((!S39false && (SERIO && X86)) || ((false => SERIO_CT82C7truefalse) && (SERIO_CT82C7truefalse => false)))
((!S39false && (SERIO && Q4false)) || ((false => SERIO_Q4falseKBD) && (SERIO_Q4falseKBD => false)))
((!S39false && (SERIO && PARPORT)) || ((false => SERIO_PARKBD) && (SERIO_PARKBD => false)))
((!S39false && (SERIO && (ARCH_ACORN || ARCH_CLPS75falsefalse))) || (((true && (!S39false && (SERIO && (ARCH_ACORN || ARCH_CLPS75falsefalse)))) => SERIO_RPCKBD) && (SERIO_RPCKBD => (true && (!S39false && (SERIO && (ARCH_ACORN || ARCH_CLPS75falsefalse)))))))
((!S39false && (SERIO && AVR32)) || ((false => SERIO_AT32PSIF) && (SERIO_AT32PSIF => false)))
((!S39false && (SERIO && ARM_AMBA)) || ((false => SERIO_AMBAKMI) && (SERIO_AMBAKMI => false)))
((!S39false && (SERIO && SAtruetruetruetrue)) || ((false => SERIO_SAtruetruetruetrue) && (SERIO_SAtruetruetruetrue => false)))
((!S39false && (SERIO && GSC)) || (((((KEYBOARD_ATKBD && (!S39false && (INPUT && (INPUT_KEYBOARD && GSC)))) || (MOUSE_PS2 && (!S39false && (INPUT && (INPUT_MOUSE && GSC))))) || (true && (!S39false && (SERIO && GSC)))) => SERIO_GSCPS2) && (SERIO_GSCPS2 => (((KEYBOARD_ATKBD && (!S39false && (INPUT && (INPUT_KEYBOARD && GSC)))) || (MOUSE_PS2 && (!S39false && (INPUT && (INPUT_MOUSE && GSC))))) || (true && (!S39false && (SERIO && GSC)))))))
((!S39false && ((GSC || HP3falsefalse) && SERIO)) || ((((((KEYBOARD_HIL && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))) || (HP_SDC_RTC && (!S39false && (INPUT && (INPUT_MISC && (GSC || HP3falsefalse)))))) || (MOUSE_HIL && (!S39false && (INPUT && (INPUT_MOUSE && (GSC || HP3falsefalse)))))) || (true && (!S39false && ((GSC || HP3falsefalse) && SERIO)))) => HP_SDC) && (HP_SDC => ((((KEYBOARD_HIL && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))) || (HP_SDC_RTC && (!S39false && (INPUT && (INPUT_MISC && (GSC || HP3falsefalse)))))) || (MOUSE_HIL && (!S39false && (INPUT && (INPUT_MOUSE && (GSC || HP3falsefalse)))))) || (true && (!S39false && ((GSC || HP3falsefalse) && SERIO)))))))
((!S39false && (SERIO && HP_SDC)) || ((((KEYBOARD_HIL && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))) || (MOUSE_HIL && (!S39false && (INPUT && (INPUT_MOUSE && (GSC || HP3falsefalse)))))) => HIL_MLC) && (HIL_MLC => ((KEYBOARD_HIL && (!S39false && (INPUT && (INPUT_KEYBOARD && (GSC || HP3falsefalse))))) || (MOUSE_HIL && (!S39false && (INPUT && (INPUT_MOUSE && (GSC || HP3falsefalse)))))))))
((!S39false && (SERIO && PCI)) || ((false => SERIO_PCIPS2) && (SERIO_PCIPS2 => false)))
((!S39false && (SERIO && SGI_IP32)) || ((false => SERIO_MACEPS2) && (SERIO_MACEPS2 => false)))
((!S39false && (SERIO && EMBEDDED)) || ((((MOUSE_PS2 && (!S39false && (INPUT && INPUT_MOUSE))) || (KEYBOARD_ATKBD && (!S39false && (INPUT && INPUT_KEYBOARD)))) => SERIO_LIBPS2) && (SERIO_LIBPS2 => ((MOUSE_PS2 && (!S39false && (INPUT && INPUT_MOUSE))) || (KEYBOARD_ATKBD && (!S39false && (INPUT && INPUT_KEYBOARD)))))))
((!S39false && SERIO) || ((false => SERIO_RAW) && (SERIO_RAW => false)))
((!S39false && (SERIO && PPC)) || ((false => SERIO_XILINX_XPS_PS2) && (SERIO_XILINX_XPS_PS2 => false)))
(!S39false || (((((((((((((x374 || x375) || x376) || x377) || x378) || x379) || x38false) || x38true) || x382) || x383) || x384) || x385) => GAMEPORT) && (GAMEPORT => (((((((((((x374 || x375) || x376) || x377) || x378) || x379) || x38false) || x38true) || x382) || x383) || x384) || x385))))
(x374 <=> (JOYSTICK_ADI && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x375 <=> (JOYSTICK_INTERACT && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x376 <=> (JOYSTICK_SIDEWINDER && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x377 <=> (JOYSTICK_GRIP_MP && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x378 <=> (JOYSTICK_GRIP && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x379 <=> (JOYSTICK_GUILLEMOT && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x38false <=> (JOYSTICK_GF2K && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x38true <=> (JOYSTICK_A3D && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x382 <=> (JOYSTICK_COBRA && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x383 <=> (JOYSTICK_JOYDUMP && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x384 <=> (JOYSTICK_ANALOG && (!S39false && (INPUT && INPUT_JOYSTICK))))
(x385 <=> (JOYSTICK_TMDC && (!S39false && (INPUT && INPUT_JOYSTICK))))
((!S39false && GAMEPORT) || ((false => GAMEPORT_NS558) && (GAMEPORT_NS558 => false)))
((!S39false && GAMEPORT) || ((false => GAMEPORT_L4) && (GAMEPORT_L4 => false)))
((!S39false && (GAMEPORT && PCI)) || ((false => GAMEPORT_EMUtruefalseKtrue) && (GAMEPORT_EMUtruefalseKtrue => false)))
((!S39false && (GAMEPORT && PCI)) || ((false => GAMEPORT_FM8falsetrue) && (GAMEPORT_FM8falsetrue => false)))
((!S39false && EMBEDDED) || (((true && !S39false) => VT) && (VT => (true && !S39false))))
((VT && EMBEDDED) || (((true && VT) => CONSOLE_TRANSLATIONS) && (CONSOLE_TRANSLATIONS => (true && VT))))
((VT && EMBEDDED) || (((true && VT) => VT_CONSOLE) && (VT_CONSOLE => (true && VT))))
(false || (((true && (VT && (!S39false && !UML))) => HW_CONSOLE) && (HW_CONSOLE => (true && (VT && (!S39false && !UML))))))
(HW_CONSOLE || (((FB_PS3 && (HAS_IOMEM && (FB && (PS3_PS3AV && FRAMEBUFFER_CONSOLE)))) => VT_HW_CONSOLE_BINDING) && (VT_HW_CONSOLE_BINDING => (FB_PS3 && (HAS_IOMEM && (FB && (PS3_PS3AV && FRAMEBUFFER_CONSOLE)))))))
(true || (((true && true) => DEVKMEM) && (DEVKMEM => (true && true))))
(HAS_IOMEM || ((false => SERIAL_NONSTANDARD) && (SERIAL_NONSTANDARD => false)))
((SERIAL_NONSTANDARD && (ISA || (EISA || PCI))) || ((false => COMPUTONE) && (COMPUTONE => false)))
((SERIAL_NONSTANDARD && (ISA || (EISA || PCI))) || ((false => ROCKETPORT) && (ROCKETPORT => false)))
((SERIAL_NONSTANDARD && (PCI || ISA)) || ((false => CYCLADES) && (CYCLADES => false)))
((EXPERIMENTAL && CYCLADES) || ((false => CYZ_INTR) && (CYZ_INTR => false)))
((SERIAL_NONSTANDARD && (ISA || (EISA || PCI))) || ((false => DIGIEPCA) && (DIGIEPCA => false)))
((SERIAL_NONSTANDARD && (ISA && ISA_DMA_API)) || ((false => ESPSERIAL) && (ESPSERIAL => false)))
((SERIAL_NONSTANDARD && (ISA || (EISA || PCI))) || ((false => MOXA_INTELLIO) && (MOXA_INTELLIO => false)))
((SERIAL_NONSTANDARD && (PCI || (EISA || ISA))) || ((false => MOXA_SMARTIO) && (MOXA_SMARTIO => false)))
((SERIAL_NONSTANDARD && PCI) || ((false => ISI) && (ISI => false)))
((SERIAL_NONSTANDARD && (PCI && ISA_DMA_API)) || ((false => SYNCLINK) && (SYNCLINK => false)))
((SERIAL_NONSTANDARD && PCI) || ((false => SYNCLINKMP) && (SYNCLINKMP => false)))
((SERIAL_NONSTANDARD && PCI) || ((false => SYNCLINK_GT) && (SYNCLINK_GT => false)))
(SERIAL_NONSTANDARD || ((false => N_HDLC) && (N_HDLC => false)))
(SERIAL_NONSTANDARD || ((false => RISCOM8) && (RISCOM8 => false)))
(SERIAL_NONSTANDARD || ((false => SPECIALIX) && (SPECIALIX => false)))
((SERIAL_NONSTANDARD && (PCI || (EISA || ISA))) || ((false => SX) && (SX => false)))
(SERIAL_NONSTANDARD || ((false => RIO) && (RIO => false)))
(RIO || ((false => RIO_OLDPCI) && (RIO_OLDPCI => false)))
(SERIAL_NONSTANDARD || ((false => STALDRV) && (STALDRV => false)))
((STALDRV && (ISA || (EISA || PCI))) || ((false => STALLION) && (STALLION => false)))
((STALDRV && (ISA || (EISA || PCI))) || ((false => ISTALLION) && (ISTALLION => false)))
((PCI && EXPERIMENTAL) || ((false => NOZOMI) && (NOZOMI => false)))
((EXPERIMENTAL && (ZORRO && BROKEN_ON_SMP)) || ((false => A2232) && (A2232 => false)))
((IA64_SGI_SN2 || IA64_GENERIC) || ((false => SGI_SNSC) && (SGI_SNSC => false)))
((IA64_SGI_SN2 || IA64_GENERIC) || ((false => SGI_TIOCX) && (SGI_TIOCX => false)))
(SGI_TIOCX || ((false => SGI_MBCS) && (SGI_MBCS => false)))
(HAS_IOMEM || (((MWAVE && X86) => SERIAL_825false) && (SERIAL_825false => (MWAVE && X86))))
((HAS_IOMEM && SERIAL_825false) || ((false => SERIAL_825false_CONSOLE) && (SERIAL_825false_CONSOLE => false)))
(false || (((true && (HAS_IOMEM && X86)) => FIX_EARLYCON_MEM) && (FIX_EARLYCON_MEM => (true && (HAS_IOMEM && X86)))))
(false || (((true && ((HAS_IOMEM && (SERIAL_825false && GSC)) && SERIAL_825false)) => SERIAL_825false_GSC) && (SERIAL_825false_GSC => (true && ((HAS_IOMEM && (SERIAL_825false && GSC)) && SERIAL_825false)))))
((HAS_IOMEM && (SERIAL_825false && (PCI && EMBEDDED))) || (((true && ((HAS_IOMEM && (SERIAL_825false && PCI)) && SERIAL_825false)) => SERIAL_825false_PCI) && (SERIAL_825false_PCI => (true && ((HAS_IOMEM && (SERIAL_825false && PCI)) && SERIAL_825false)))))
((HAS_IOMEM && (SERIAL_825false && (PNP && EMBEDDED))) || (((true && ((HAS_IOMEM && (SERIAL_825false && PNP)) && SERIAL_825false)) => SERIAL_825false_PNP) && (SERIAL_825false_PNP => (true && ((HAS_IOMEM && (SERIAL_825false && PNP)) && SERIAL_825false)))))
(false || (((true && ((HAS_IOMEM && (SERIAL_825false && HP3falsefalse)) && SERIAL_825false)) => SERIAL_825false_HP3falsefalse) && (SERIAL_825false_HP3falsefalse => (true && ((HAS_IOMEM && (SERIAL_825false && HP3falsefalse)) && SERIAL_825false)))))
((HAS_IOMEM && (PCMCIA && SERIAL_825false)) || ((false => SERIAL_825false_CS) && (SERIAL_825false_CS => false)))
((HAS_IOMEM && SERIAL_825false) || (((true && (HAS_IOMEM && SERIAL_825false)) => SERIAL_825false_NR_UARTS) && (SERIAL_825false_NR_UARTS => (true && (HAS_IOMEM && SERIAL_825false)))))
((HAS_IOMEM && SERIAL_825false) || (((true && (HAS_IOMEM && SERIAL_825false)) => SERIAL_825false_RUNTIME_UARTS) && (SERIAL_825false_RUNTIME_UARTS => (true && (HAS_IOMEM && SERIAL_825false)))))
((HAS_IOMEM && SERIAL_825false) || ((false => SERIAL_825false_EXTENDED) && (SERIAL_825false_EXTENDED => false)))
((HAS_IOMEM && (SERIAL_825false_EXTENDED && !IA64)) || ((false => SERIAL_825false_MANY_PORTS) && (SERIAL_825false_MANY_PORTS => false)))
((HAS_IOMEM && (!SERIAL_825false && (ISA && SERIAL_825false_MANY_PORTS))) || ((false => SERIAL_825false_FOURPORT) && (SERIAL_825false_FOURPORT => false)))
((HAS_IOMEM && (!SERIAL_825false && (ISA && SERIAL_825false_MANY_PORTS))) || ((false => SERIAL_825false_ACCENT) && (SERIAL_825false_ACCENT => false)))
((HAS_IOMEM && (!SERIAL_825false && (ISA && SERIAL_825false_MANY_PORTS))) || ((false => SERIAL_825false_BOCA) && (SERIAL_825false_BOCA => false)))
((HAS_IOMEM && (!SERIAL_825false && (ISA && SERIAL_825false_MANY_PORTS))) || ((false => SERIAL_825false_EXAR_STtrue6C554) && (SERIAL_825false_EXAR_STtrue6C554 => false)))
((HAS_IOMEM && (!SERIAL_825false && (ISA && SERIAL_825false_MANY_PORTS))) || ((false => SERIAL_825false_HUB6) && (SERIAL_825false_HUB6 => false)))
((HAS_IOMEM && SERIAL_825false_EXTENDED) || (((SERIAL_825false_RM9K && (HAS_IOMEM && (SERIAL_825false && SERIAL_RM9falsefalsefalse))) => SERIAL_825false_SHARE_IRQ) && (SERIAL_825false_SHARE_IRQ => (SERIAL_825false_RM9K && (HAS_IOMEM && (SERIAL_825false && SERIAL_RM9falsefalsefalse))))))
((HAS_IOMEM && SERIAL_825false_EXTENDED) || ((false => SERIAL_825false_DETECT_IRQ) && (SERIAL_825false_DETECT_IRQ => false)))
((HAS_IOMEM && SERIAL_825false_EXTENDED) || ((false => SERIAL_825false_RSA) && (SERIAL_825false_RSA => false)))
((HAS_IOMEM && (!SERIAL_825false && MCA)) || ((false => SERIAL_825false_MCA) && (SERIAL_825false_MCA => false)))
((HAS_IOMEM && (ARCH_ACORN && SERIAL_825false)) || ((false => SERIAL_825false_ACORN) && (SERIAL_825false_ACORN => false)))
((HAS_IOMEM && (SERIAL_825false && SOC_AUtrueXfalsefalse)) || ((false => SERIAL_825false_AUtrueXfalsefalse) && (SERIAL_825false_AUtrueXfalsefalse => false)))
((HAS_IOMEM && (SERIAL_825false && SERIAL_RM9falsefalsefalse)) || ((false => SERIAL_825false_RM9K) && (SERIAL_825false_RM9K => false)))
((HAS_IOMEM && (ARM_AMBA && (BROKEN || !ARCH_VERSATILE))) || ((false => SERIAL_AMBA_PLfalsetruefalse) && (SERIAL_AMBA_PLfalsetruefalse => false)))
((HAS_IOMEM && SERIAL_AMBA_PLfalsetruefalse) || ((false => SERIAL_AMBA_PLfalsetruefalse_CONSOLE) && (SERIAL_AMBA_PLfalsetruefalse_CONSOLE => false)))
((HAS_IOMEM && ARM_AMBA) || ((false => SERIAL_AMBA_PLfalsetruetrue) && (SERIAL_AMBA_PLfalsetruetrue => false)))
((HAS_IOMEM && SERIAL_AMBA_PLfalsetruetrue) || ((false => SERIAL_AMBA_PLfalsetruetrue_CONSOLE) && (SERIAL_AMBA_PLfalsetruetrue_CONSOLE => false)))
((HAS_IOMEM && SIBYTE_SBtruexxx_SOC) || (((true && (HAS_IOMEM && SIBYTE_SBtruexxx_SOC)) => SERIAL_SBtrue25false_DUART) && (SERIAL_SBtrue25false_DUART => (true && (HAS_IOMEM && SIBYTE_SBtruexxx_SOC)))))
((HAS_IOMEM && SERIAL_SBtrue25false_DUART) || (((true && (HAS_IOMEM && SERIAL_SBtrue25false_DUART)) => SERIAL_SBtrue25false_DUART_CONSOLE) && (SERIAL_SBtrue25false_DUART_CONSOLE => (true && (HAS_IOMEM && SERIAL_SBtrue25false_DUART)))))
((HAS_IOMEM && ((ARM && ARCH_AT9true) || AVR32)) || ((false => SERIAL_ATMEL) && (SERIAL_ATMEL => false)))
((HAS_IOMEM && SERIAL_ATMEL) || ((false => SERIAL_ATMEL_CONSOLE) && (SERIAL_ATMEL_CONSOLE => false)))
((HAS_IOMEM && SERIAL_ATMEL) || (((true && (HAS_IOMEM && SERIAL_ATMEL)) => SERIAL_ATMEL_PDC) && (SERIAL_ATMEL_PDC => (true && (HAS_IOMEM && SERIAL_ATMEL)))))
((HAS_IOMEM && SERIAL_ATMEL) || ((false => SERIAL_ATMEL_TTYAT) && (SERIAL_ATMEL_TTYAT => false)))
((HAS_IOMEM && ARCH_KS8695) || ((false => SERIAL_KS8695) && (SERIAL_KS8695 => false)))
((HAS_IOMEM && SERIAL_KS8695) || ((false => SERIAL_KS8695_CONSOLE) && (SERIAL_KS8695_CONSOLE => false)))
((HAS_IOMEM && (ARM && ARCH_CLPS7truetrueX)) || ((false => SERIAL_CLPS7truetrueX) && (SERIAL_CLPS7truetrueX => false)))
((HAS_IOMEM && SERIAL_CLPS7truetrueX) || ((false => SERIAL_CLPS7truetrueX_CONSOLE) && (SERIAL_CLPS7truetrueX_CONSOLE => false)))
((HAS_IOMEM && (ARM && PLAT_S3C24XX)) || ((false => SERIAL_SAMSUNG) && (SERIAL_SAMSUNG => false)))
((HAS_IOMEM && (SERIAL_SAMSUNG && DEBUG_LL)) || ((false => SERIAL_SAMSUNG_DEBUG) && (SERIAL_SAMSUNG_DEBUG => false)))
((HAS_IOMEM && SERIAL_SAMSUNG) || ((false => SERIAL_SAMSUNG_CONSOLE) && (SERIAL_SAMSUNG_CONSOLE => false)))
((HAS_IOMEM && (ARM && (SERIAL_SAMSUNG && CPU_S3C24falsefalse))) || (((true && (HAS_IOMEM && (ARM && (SERIAL_SAMSUNG && CPU_S3C24falsefalse)))) => SERIAL_S3C24falsefalse) && (SERIAL_S3C24falsefalse => (true && (HAS_IOMEM && (ARM && (SERIAL_SAMSUNG && CPU_S3C24falsefalse)))))))
((HAS_IOMEM && (SERIAL_SAMSUNG && CPU_S3C24truefalse)) || (((true && (HAS_IOMEM && (SERIAL_SAMSUNG && CPU_S3C24truefalse))) => SERIAL_S3C24truefalse) && (SERIAL_S3C24truefalse => (true && (HAS_IOMEM && (SERIAL_SAMSUNG && CPU_S3C24truefalse))))))
((HAS_IOMEM && (SERIAL_SAMSUNG && CPU_S3C24true2)) || (((true && (HAS_IOMEM && (SERIAL_SAMSUNG && CPU_S3C24true2))) => SERIAL_S3C24true2) && (SERIAL_S3C24true2 => (true && (HAS_IOMEM && (SERIAL_SAMSUNG && CPU_S3C24true2))))))
((HAS_IOMEM && (SERIAL_SAMSUNG && (CPU_S3C244false || CPU_S3C2442))) || ((((true && (HAS_IOMEM && (SERIAL_SAMSUNG && ((CPU_S3C244false || CPU_S3C2442) && CPU_S3C244false)))) || (true && (HAS_IOMEM && (SERIAL_SAMSUNG && ((CPU_S3C244false || CPU_S3C2442) && CPU_S3C2442))))) => SERIAL_S3C244false) && (SERIAL_S3C244false => ((true && (HAS_IOMEM && (SERIAL_SAMSUNG && ((CPU_S3C244false || CPU_S3C2442) && CPU_S3C244false)))) || (true && (HAS_IOMEM && (SERIAL_SAMSUNG && ((CPU_S3C244false || CPU_S3C2442) && CPU_S3C2442))))))))
((HAS_IOMEM && (MACH_DECSTATION && 32BIT)) || (((true && (HAS_IOMEM && (MACH_DECSTATION && 32BIT))) => SERIAL_DZ) && (SERIAL_DZ => (true && (HAS_IOMEM && (MACH_DECSTATION && 32BIT))))))
((HAS_IOMEM && SERIAL_DZ) || (((true && (HAS_IOMEM && SERIAL_DZ)) => SERIAL_DZ_CONSOLE) && (SERIAL_DZ_CONSOLE => (true && (HAS_IOMEM && SERIAL_DZ)))))
((HAS_IOMEM && MACH_DECSTATION) || (((true && (HAS_IOMEM && MACH_DECSTATION)) => SERIAL_ZS) && (SERIAL_ZS => (true && (HAS_IOMEM && MACH_DECSTATION)))))
((HAS_IOMEM && SERIAL_ZS) || (((true && (HAS_IOMEM && SERIAL_ZS)) => SERIAL_ZS_CONSOLE) && (SERIAL_ZS_CONSOLE => (true && (HAS_IOMEM && SERIAL_ZS)))))
((HAS_IOMEM && (ARM && FOOTBRIDGE)) || ((false => SERIAL_2true285) && (SERIAL_2true285 => false)))
((HAS_IOMEM && SERIAL_2true285) || ((false => SERIAL_2true285_CONSOLE) && (SERIAL_2true285_CONSOLE => false)))
((HAS_IOMEM && (PPC32 && MV64X6false)) || ((false => SERIAL_MPSC) && (SERIAL_MPSC => false)))
((HAS_IOMEM && SERIAL_MPSC) || ((false => SERIAL_MPSC_CONSOLE) && (SERIAL_MPSC_CONSOLE => false)))
((HAS_IOMEM && (ARM && ARCH_PXA)) || ((false => SERIAL_PXA) && (SERIAL_PXA => false)))
((HAS_IOMEM && SERIAL_PXA) || ((false => SERIAL_PXA_CONSOLE) && (SERIAL_PXA_CONSOLE => false)))
((HAS_IOMEM && (ARM && ARCH_SAtruetruefalsefalse)) || ((false => SERIAL_SAtruetruefalsefalse) && (SERIAL_SAtruetruefalsefalse => false)))
((HAS_IOMEM && SERIAL_SAtruetruefalsefalse) || ((false => SERIAL_SAtruetruefalsefalse_CONSOLE) && (SERIAL_SAtruetruefalsefalse_CONSOLE => false)))
((HAS_IOMEM && BLACKFIN) || ((false => SERIAL_BFIN) && (SERIAL_BFIN => false)))
((HAS_IOMEM && SERIAL_BFIN) || ((false => SERIAL_BFIN_CONSOLE) && (SERIAL_BFIN_CONSOLE => false)))
((true && (!DMA_UNCACHED_NONE && !KGDB_UART)) || ((false => SERIAL_BFIN_DMA) && (SERIAL_BFIN_DMA => false)))
(true || ((false => SERIAL_BFIN_PIO) && (SERIAL_BFIN_PIO => false)))
((HAS_IOMEM && SERIAL_BFIN) || (((SERIAL_BFIN && (HAS_IOMEM && (BLACKFIN && (BF53true || (BF532 || (BF533 || BF56true)))))) => SERIAL_BFIN_UARTfalse) && (SERIAL_BFIN_UARTfalse => (SERIAL_BFIN && (HAS_IOMEM && (BLACKFIN && (BF53true || (BF532 || (BF533 || BF56true)))))))))
((HAS_IOMEM && SERIAL_BFIN_UARTfalse) || ((false => BFIN_UARTfalse_CTSRTS) && (BFIN_UARTfalse_CTSRTS => false)))
((HAS_IOMEM && BFIN_UARTfalse_CTSRTS) || (((true && (HAS_IOMEM && BFIN_UARTfalse_CTSRTS)) => UARTfalse_CTS_PIN) && (UARTfalse_CTS_PIN => (true && (HAS_IOMEM && BFIN_UARTfalse_CTSRTS)))))
((HAS_IOMEM && BFIN_UARTfalse_CTSRTS) || (((true && (HAS_IOMEM && BFIN_UARTfalse_CTSRTS)) => UARTfalse_RTS_PIN) && (UARTfalse_RTS_PIN => (true && (HAS_IOMEM && BFIN_UARTfalse_CTSRTS)))))
((HAS_IOMEM && (SERIAL_BFIN && (!BF53true && (!BF532 && (!BF533 && !BF56true))))) || ((false => SERIAL_BFIN_UARTtrue) && (SERIAL_BFIN_UARTtrue => false)))
((HAS_IOMEM && SERIAL_BFIN_UARTtrue) || ((false => BFIN_UARTtrue_CTSRTS) && (BFIN_UARTtrue_CTSRTS => false)))
((HAS_IOMEM && (BFIN_UARTtrue_CTSRTS && !BF54x)) || (((true && (HAS_IOMEM && (BFIN_UARTtrue_CTSRTS && !BF54x))) => UARTtrue_CTS_PIN) && (UARTtrue_CTS_PIN => (true && (HAS_IOMEM && (BFIN_UARTtrue_CTSRTS && !BF54x))))))
((HAS_IOMEM && (BFIN_UARTtrue_CTSRTS && !BF54x)) || (((true && (HAS_IOMEM && (BFIN_UARTtrue_CTSRTS && !BF54x))) => UARTtrue_RTS_PIN) && (UARTtrue_RTS_PIN => (true && (HAS_IOMEM && (BFIN_UARTtrue_CTSRTS && !BF54x))))))
((HAS_IOMEM && (SERIAL_BFIN && BF54x)) || ((false => SERIAL_BFIN_UART2) && (SERIAL_BFIN_UART2 => false)))
((HAS_IOMEM && SERIAL_BFIN_UART2) || ((false => BFIN_UART2_CTSRTS) && (BFIN_UART2_CTSRTS => false)))
((HAS_IOMEM && BFIN_UART2_CTSRTS) || (((true && (HAS_IOMEM && BFIN_UART2_CTSRTS)) => UART2_CTS_PIN) && (UART2_CTS_PIN => (true && (HAS_IOMEM && BFIN_UART2_CTSRTS)))))
((HAS_IOMEM && BFIN_UART2_CTSRTS) || (((true && (HAS_IOMEM && BFIN_UART2_CTSRTS)) => UART2_RTS_PIN) && (UART2_RTS_PIN => (true && (HAS_IOMEM && BFIN_UART2_CTSRTS)))))
((HAS_IOMEM && (SERIAL_BFIN && BF54x)) || ((false => SERIAL_BFIN_UART3) && (SERIAL_BFIN_UART3 => false)))
((HAS_IOMEM && SERIAL_BFIN_UART3) || ((false => BFIN_UART3_CTSRTS) && (BFIN_UART3_CTSRTS => false)))
((HAS_IOMEM && (ARM && (ARCH_IMX || ARCH_MXC))) || ((false => SERIAL_IMX) && (SERIAL_IMX => false)))
((HAS_IOMEM && SERIAL_IMX) || ((false => SERIAL_IMX_CONSOLE) && (SERIAL_IMX_CONSOLE => false)))
((HAS_IOMEM && PPC32) || ((false => SERIAL_UARTLITE) && (SERIAL_UARTLITE => false)))
((HAS_IOMEM && SERIAL_UARTLITE) || ((false => SERIAL_UARTLITE_CONSOLE) && (SERIAL_UARTLITE_CONSOLE => false)))
(false || (((true && (HAS_IOMEM && SPARC)) => SERIAL_SUNCORE) && (SERIAL_SUNCORE => (true && (HAS_IOMEM && SPARC)))))
((HAS_IOMEM && SPARC) || ((false => SERIAL_SUNZILOG) && (SERIAL_SUNZILOG => false)))
((HAS_IOMEM && SERIAL_SUNZILOG) || ((false => SERIAL_SUNZILOG_CONSOLE) && (SERIAL_SUNZILOG_CONSOLE => false)))
((HAS_IOMEM && (SPARC && PCI)) || ((false => SERIAL_SUNSU) && (SERIAL_SUNSU => false)))
((HAS_IOMEM && SERIAL_SUNSU) || ((false => SERIAL_SUNSU_CONSOLE) && (SERIAL_SUNSU_CONSOLE => false)))
((HAS_IOMEM && GSC) || (((true && (HAS_IOMEM && GSC)) => SERIAL_MUX) && (SERIAL_MUX => (true && (HAS_IOMEM && GSC)))))
((HAS_IOMEM && SERIAL_MUX) || (((true && (HAS_IOMEM && SERIAL_MUX)) => SERIAL_MUX_CONSOLE) && (SERIAL_MUX_CONSOLE => (true && (HAS_IOMEM && SERIAL_MUX)))))
((HAS_IOMEM && (PARISC && (!SERIAL_MUX && VT))) || ((false => PDC_CONSOLE) && (PDC_CONSOLE => false)))
((HAS_IOMEM && (SPARC && PCI)) || ((false => SERIAL_SUNSAB) && (SERIAL_SUNSAB => false)))
((HAS_IOMEM && SERIAL_SUNSAB) || ((false => SERIAL_SUNSAB_CONSOLE) && (SERIAL_SUNSAB_CONSOLE => false)))
((HAS_IOMEM && SPARC64) || ((false => SERIAL_SUNHV) && (SERIAL_SUNHV => false)))
((HAS_IOMEM && SGI_HAS_ZILOG) || ((false => SERIAL_IP22_ZILOG) && (SERIAL_IP22_ZILOG => false)))
((HAS_IOMEM && SERIAL_IP22_ZILOG) || ((false => SERIAL_IP22_ZILOG_CONSOLE) && (SERIAL_IP22_ZILOG_CONSOLE => false)))
((HAS_IOMEM && (SUPERH || H83falsefalse)) || ((false => SERIAL_SH_SCI) && (SERIAL_SH_SCI => false)))
((HAS_IOMEM && SERIAL_SH_SCI) || (((true && (HAS_IOMEM && SERIAL_SH_SCI)) => SERIAL_SH_SCI_NR_UARTS) && (SERIAL_SH_SCI_NR_UARTS => (true && (HAS_IOMEM && SERIAL_SH_SCI)))))
((HAS_IOMEM && SERIAL_SH_SCI) || ((false => SERIAL_SH_SCI_CONSOLE) && (SERIAL_SH_SCI_CONSOLE => false)))
((HAS_IOMEM && (MIPS && SOC_PNX855false)) || ((false => SERIAL_PNX8XXX) && (SERIAL_PNX8XXX => false)))
((HAS_IOMEM && SERIAL_PNX8XXX) || ((false => SERIAL_PNX8XXX_CONSOLE) && (SERIAL_PNX8XXX_CONSOLE => false)))
(false || ((((((((((((((((((((((((((((((((((((((((x386 || x387) || x388) || x389) || x39false) || x39true) || x392) || x393) || x394) || x395) || x396) || x397) || x398) || x399) || x4falsefalse) || x4falsetrue) || x4false2) || x4false3) || x4false4) || x4false5) || x4false6) || x4false7) || x4false8) || xtrue44) || x4false9) || x4truefalse) || xtrue45) || x4truetrue) || x4true2) || x4true3) || x4true4) || x4true5) || x4true6) || x4true7) || x4true8) || x4true9) || x42false) || x42true) || x422) => SERIAL_CORE) && (SERIAL_CORE => ((((((((((((((((((((((((((((((((((((((x386 || x387) || x388) || x389) || x39false) || x39true) || x392) || x393) || x394) || x395) || x396) || x397) || x398) || x399) || x4falsefalse) || x4falsetrue) || x4false2) || x4false3) || x4false4) || x4false5) || x4false6) || x4false7) || x4false8) || xtrue44) || x4false9) || x4truefalse) || xtrue45) || x4truetrue) || x4true2) || x4true3) || x4true4) || x4true5) || x4true6) || x4true7) || x4true8) || x4true9) || x42false) || x42true) || x422))))
(x386 <=> (SERIAL_NETX && (HAS_IOMEM && (ARM && ARCH_NETX))))
(x387 <=> (SERIAL_MUX && (HAS_IOMEM && GSC)))
(x388 <=> (SERIAL_CLPS7truetrueX && (HAS_IOMEM && (ARM && ARCH_CLPS7truetrueX))))
(x389 <=> (SERIAL_ATMEL && (HAS_IOMEM && ((ARM && ARCH_AT9true) || AVR32))))
(x39false <=> (SERIAL_BFIN && (HAS_IOMEM && BLACKFIN)))
(x39true <=> (SERIAL_VR4trueXX && (HAS_IOMEM && CPU_VR4trueXX)))
(x392 <=> (SERIAL_SUNCORE && (HAS_IOMEM && SPARC)))
(x393 <=> (SERIAL_MPSC && (HAS_IOMEM && (PPC32 && MV64X6false))))
(x394 <=> (SERIAL_PXA && (HAS_IOMEM && (ARM && ARCH_PXA))))
(x395 <=> (SERIAL_SC26XX && (HAS_IOMEM && SNI_RM)))
(x396 <=> (SERIAL_SH_SCI && (HAS_IOMEM && (SUPERH || H83falsefalse))))
(x397 <=> (SERIAL_ZS && (HAS_IOMEM && MACH_DECSTATION)))
(x398 <=> (SERIAL_825false && HAS_IOMEM))
(x399 <=> (SERIAL_SAtruetruefalsefalse && (HAS_IOMEM && (ARM && ARCH_SAtruetruefalsefalse))))
(x4falsefalse <=> (SERIAL_SGI_Ltrue_CONSOLE && (HAS_IOMEM && (IA64_GENERIC || IA64_SGI_SN2))))
(x4falsetrue <=> (SERIAL_MPC52xx && (HAS_IOMEM && (PPC_MPC52xx || PPC_MPC5true2x))))
(x4false2 <=> (SERIAL_M32R_SIO && (HAS_IOMEM && M32R)))
(x4false3 <=> (SERIAL_CPM && (HAS_IOMEM && (CPM2 || 8xx))))
(x4false4 <=> (SERIAL_MCF && (HAS_IOMEM && COLDFIRE)))
(x4false5 <=> (SERIAL_SGI_IOC3 && (HAS_IOMEM && ((IA64_GENERIC || IA64_SGI_SN2) && SGI_IOC3))))
(x4false6 <=> (SERIAL_UARTLITE && (HAS_IOMEM && PPC32)))
(x4false7 <=> (SERIAL_IP22_ZILOG && (HAS_IOMEM && SGI_HAS_ZILOG)))
(x4false8 <=> (SERIAL_PMACZILOG && (HAS_IOMEM && (PPC_OF && PPC_PMAC))))
(xtrue44 <=> (SERIAL_ICOM && (HAS_IOMEM && (PCI && (PPC_ISERIES || PPC_PSERIES)))))
(x4false9 <=> (SERIAL_DZ && (HAS_IOMEM && (MACH_DECSTATION && 32BIT))))
(x4truefalse <=> (SERIAL_SGI_IOC4 && (HAS_IOMEM && ((IA64_GENERIC || IA64_SGI_SN2) && SGI_IOC4))))
(xtrue45 <=> (SERIAL_QE && (HAS_IOMEM && QUICC_ENGINE)))
(x4truetrue <=> (SERIAL_2true285 && (HAS_IOMEM && (ARM && FOOTBRIDGE))))
(x4true2 <=> (SERIAL_JSM && (HAS_IOMEM && PCI)))
(x4true3 <=> (SERIAL_AMBA_PLfalsetruefalse && (HAS_IOMEM && (ARM_AMBA && (BROKEN || !ARCH_VERSATILE)))))
(x4true4 <=> (SERIAL_KS8695 && (HAS_IOMEM && ARCH_KS8695)))
(x4true5 <=> (SERIAL_SAMSUNG && (HAS_IOMEM && (ARM && PLAT_S3C24XX))))
(x4true6 <=> (SERIAL_PNX8XXX && (HAS_IOMEM && (MIPS && SOC_PNX855false))))
(x4true7 <=> (SERIAL_LH7A4falseX && (HAS_IOMEM && (ARM && ARCH_LH7A4falseX))))
(x4true8 <=> (SERIAL_TXX9 && (HAS_IOMEM && HAS_TXX9_SERIAL)))
(x4true9 <=> (SERIAL_SBtrue25false_DUART && (HAS_IOMEM && SIBYTE_SBtruexxx_SOC)))
(x42false <=> (SERIAL_AMBA_PLfalsetruetrue && (HAS_IOMEM && ARM_AMBA)))
(x42true <=> (SERIAL_IMX && (HAS_IOMEM && (ARM && (ARCH_IMX || ARCH_MXC)))))
(x422 <=> (SERIAL_BFIN_SPORT && (HAS_IOMEM && (BLACKFIN && EXPERIMENTAL))))
(false || ((((((((((((((((((((((((((((((((((x423 || x424) || x425) || x426) || x427) || x428) || x392) || x429) || x43false) || x43true) || x432) || x433) || x434) || x435) || x4falsefalse) || x436) || x437) || x438) || x439) || x44false) || x44true) || x442) || x443) || x444) || x445) || x446) || x447) || x448) || x449) || x45false) || x45true) || x452) || x453) => SERIAL_CORE_CONSOLE) && (SERIAL_CORE_CONSOLE => ((((((((((((((((((((((((((((((((x423 || x424) || x425) || x426) || x427) || x428) || x392) || x429) || x43false) || x43true) || x432) || x433) || x434) || x435) || x4falsefalse) || x436) || x437) || x438) || x439) || x44false) || x44true) || x442) || x443) || x444) || x445) || x446) || x447) || x448) || x449) || x45false) || x45true) || x452) || x453))))
(x423 <=> (SERIAL_MPSC_CONSOLE && (HAS_IOMEM && SERIAL_MPSC)))
(x424 <=> (SERIAL_MCF_CONSOLE && (HAS_IOMEM && SERIAL_MCF)))
(x425 <=> (SERIAL_TXX9_CONSOLE && (HAS_IOMEM && SERIAL_TXX9)))
(x426 <=> (SERIAL_PMACZILOG_CONSOLE && (HAS_IOMEM && SERIAL_PMACZILOG)))
(x427 <=> (SERIAL_MPC52xx_CONSOLE && (HAS_IOMEM && SERIAL_MPC52xx)))
(x428 <=> (SERIAL_BFIN_CONSOLE && (HAS_IOMEM && SERIAL_BFIN)))
(x392 <=> (SERIAL_SUNCORE && (HAS_IOMEM && SPARC)))
(x429 <=> (SERIAL_UARTLITE_CONSOLE && (HAS_IOMEM && SERIAL_UARTLITE)))
(x43false <=> (SERIAL_IMX_CONSOLE && (HAS_IOMEM && SERIAL_IMX)))
(x43true <=> (SERIAL_CLPS7truetrueX_CONSOLE && (HAS_IOMEM && SERIAL_CLPS7truetrueX)))
(x432 <=> (SERIAL_SBtrue25false_DUART_CONSOLE && (HAS_IOMEM && SERIAL_SBtrue25false_DUART)))
(x433 <=> (SERIAL_ATMEL_CONSOLE && (HAS_IOMEM && SERIAL_ATMEL)))
(x434 <=> (SERIAL_SAtruetruefalsefalse_CONSOLE && (HAS_IOMEM && SERIAL_SAtruetruefalsefalse)))
(x435 <=> (SERIAL_IP22_ZILOG_CONSOLE && (HAS_IOMEM && SERIAL_IP22_ZILOG)))
(x4falsefalse <=> (SERIAL_SGI_Ltrue_CONSOLE && (HAS_IOMEM && (IA64_GENERIC || IA64_SGI_SN2))))
(x436 <=> (SERIAL_2true285_CONSOLE && (HAS_IOMEM && SERIAL_2true285)))
(x437 <=> (SERIAL_PXA_CONSOLE && (HAS_IOMEM && SERIAL_PXA)))
(x438 <=> (SERIAL_NETX_CONSOLE && (HAS_IOMEM && SERIAL_NETX)))
(x439 <=> (SERIAL_LH7A4falseX_CONSOLE && (HAS_IOMEM && SERIAL_LH7A4falseX)))
(x44false <=> (SERIAL_MUX_CONSOLE && (HAS_IOMEM && SERIAL_MUX)))
(x44true <=> (SERIAL_SAMSUNG_CONSOLE && (HAS_IOMEM && SERIAL_SAMSUNG)))
(x442 <=> (SERIAL_825false_CONSOLE && (HAS_IOMEM && SERIAL_825false)))
(x443 <=> (SERIAL_KS8695_CONSOLE && (HAS_IOMEM && SERIAL_KS8695)))
(x444 <=> (SERIAL_ZS_CONSOLE && (HAS_IOMEM && SERIAL_ZS)))
(x445 <=> (SERIAL_CPM_CONSOLE && (HAS_IOMEM && SERIAL_CPM)))
(x446 <=> (SERIAL_M32R_SIO_CONSOLE && (HAS_IOMEM && SERIAL_M32R_SIO)))
(x447 <=> (SERIAL_PNX8XXX_CONSOLE && (HAS_IOMEM && SERIAL_PNX8XXX)))
(x448 <=> (SERIAL_AMBA_PLfalsetruefalse_CONSOLE && (HAS_IOMEM && SERIAL_AMBA_PLfalsetruefalse)))
(x449 <=> (SERIAL_VR4trueXX_CONSOLE && (HAS_IOMEM && SERIAL_VR4trueXX)))
(x45false <=> (SERIAL_SC26XX_CONSOLE && (HAS_IOMEM && SERIAL_SC26XX)))
(x45true <=> (SERIAL_AMBA_PLfalsetruetrue_CONSOLE && (HAS_IOMEM && SERIAL_AMBA_PLfalsetruetrue)))
(x452 <=> (SERIAL_SH_SCI_CONSOLE && (HAS_IOMEM && SERIAL_SH_SCI)))
(x453 <=> (SERIAL_DZ_CONSOLE && (HAS_IOMEM && SERIAL_DZ)))
(false || (((KGDB_SERIAL_CONSOLE && KGDB) => CONSOLE_POLL) && (CONSOLE_POLL => (KGDB_SERIAL_CONSOLE && KGDB))))
((HAS_IOMEM && (M68328 || (M68EZ328 || M68VZ328))) || ((false => SERIAL_68328) && (SERIAL_68328 => false)))
((HAS_IOMEM && SERIAL_68328) || ((false => SERIAL_68328_RTS_CTS) && (SERIAL_68328_RTS_CTS => false)))
((HAS_IOMEM && COLDFIRE) || ((false => SERIAL_MCF) && (SERIAL_MCF => false)))
((HAS_IOMEM && SERIAL_MCF) || (((true && (HAS_IOMEM && SERIAL_MCF)) => SERIAL_MCF_BAUDRATE) && (SERIAL_MCF_BAUDRATE => (true && (HAS_IOMEM && SERIAL_MCF)))))
((HAS_IOMEM && SERIAL_MCF) || ((false => SERIAL_MCF_CONSOLE) && (SERIAL_MCF_CONSOLE => false)))
((HAS_IOMEM && M6836false) || ((false => SERIAL_6836false_SMC) && (SERIAL_6836false_SMC => false)))
((HAS_IOMEM && M6836false) || ((false => SERIAL_6836false_SCC) && (SERIAL_6836false_SCC => false)))
(false || (((true && (HAS_IOMEM && (SERIAL_6836false_SMC || SERIAL_6836false_SCC))) => SERIAL_6836false) && (SERIAL_6836false => (true && (HAS_IOMEM && (SERIAL_6836false_SMC || SERIAL_6836false_SCC))))))
((HAS_IOMEM && (PPC_OF && PPC_PMAC)) || ((false => SERIAL_PMACZILOG) && (SERIAL_PMACZILOG => false)))
((HAS_IOMEM && SERIAL_PMACZILOG) || ((false => SERIAL_PMACZILOG_TTYS) && (SERIAL_PMACZILOG_TTYS => false)))
((HAS_IOMEM && SERIAL_PMACZILOG) || ((false => SERIAL_PMACZILOG_CONSOLE) && (SERIAL_PMACZILOG_CONSOLE => false)))
((HAS_IOMEM && (ARM && ARCH_LH7A4falseX)) || ((false => SERIAL_LH7A4falseX) && (SERIAL_LH7A4falseX => false)))
((HAS_IOMEM && SERIAL_LH7A4falseX) || ((false => SERIAL_LH7A4falseX_CONSOLE) && (SERIAL_LH7A4falseX_CONSOLE => false)))
((HAS_IOMEM && (CPM2 || 8xx)) || ((false => SERIAL_CPM) && (SERIAL_CPM => false)))
((HAS_IOMEM && SERIAL_CPM) || ((false => SERIAL_CPM_CONSOLE) && (SERIAL_CPM_CONSOLE => false)))
((HAS_IOMEM && (IA64_GENERIC || IA64_SGI_SN2)) || ((false => SERIAL_SGI_Ltrue_CONSOLE) && (SERIAL_SGI_Ltrue_CONSOLE => false)))
((HAS_IOMEM && (PPC_MPC52xx || PPC_MPC5true2x)) || ((false => SERIAL_MPC52xx) && (SERIAL_MPC52xx => false)))
((HAS_IOMEM && SERIAL_MPC52xx) || ((false => SERIAL_MPC52xx_CONSOLE) && (SERIAL_MPC52xx_CONSOLE => false)))
((HAS_IOMEM && SERIAL_MPC52xx_CONSOLE) || (((true && (HAS_IOMEM && SERIAL_MPC52xx_CONSOLE)) => SERIAL_MPC52xx_CONSOLE_BAUD) && (SERIAL_MPC52xx_CONSOLE_BAUD => (true && (HAS_IOMEM && SERIAL_MPC52xx_CONSOLE)))))
((HAS_IOMEM && (PCI && (PPC_ISERIES || PPC_PSERIES))) || ((false => SERIAL_ICOM) && (SERIAL_ICOM => false)))
((HAS_IOMEM && M32R) || (((true && (HAS_IOMEM && M32R)) => SERIAL_M32R_SIO) && (SERIAL_M32R_SIO => (true && (HAS_IOMEM && M32R)))))
((HAS_IOMEM && SERIAL_M32R_SIO) || ((false => SERIAL_M32R_SIO_CONSOLE) && (SERIAL_M32R_SIO_CONSOLE => false)))
((HAS_IOMEM && (SERIAL_M32R_SIO && (PLAT_OPSPUT || (PLAT_USRV || PLAT_M327falsefalseUT)))) || ((false => SERIAL_M32R_PLDSIO) && (SERIAL_M32R_PLDSIO => false)))
((HAS_IOMEM && HAS_TXX9_SERIAL) || (((true && (HAS_IOMEM && HAS_TXX9_SERIAL)) => SERIAL_TXX9) && (SERIAL_TXX9 => (true && (HAS_IOMEM && HAS_TXX9_SERIAL)))))
(false || ((false => HAS_TXX9_SERIAL) && (HAS_TXX9_SERIAL => false)))
((HAS_IOMEM && SERIAL_TXX9) || (((true && (HAS_IOMEM && SERIAL_TXX9)) => SERIAL_TXX9_NR_UARTS) && (SERIAL_TXX9_NR_UARTS => (true && (HAS_IOMEM && SERIAL_TXX9)))))
((HAS_IOMEM && SERIAL_TXX9) || ((false => SERIAL_TXX9_CONSOLE) && (SERIAL_TXX9_CONSOLE => false)))
((HAS_IOMEM && (!SERIAL_825false && SERIAL_TXX9)) || ((false => SERIAL_TXX9_STDSERIAL) && (SERIAL_TXX9_STDSERIAL => false)))
((HAS_IOMEM && CPU_VR4trueXX) || ((false => SERIAL_VR4trueXX) && (SERIAL_VR4trueXX => false)))
((HAS_IOMEM && SERIAL_VR4trueXX) || ((false => SERIAL_VR4trueXX_CONSOLE) && (SERIAL_VR4trueXX_CONSOLE => false)))
((HAS_IOMEM && PCI) || ((false => SERIAL_JSM) && (SERIAL_JSM => false)))
((HAS_IOMEM && ((IA64_GENERIC || IA64_SGI_SN2) && SGI_IOC4)) || ((false => SERIAL_SGI_IOC4) && (SERIAL_SGI_IOC4 => false)))
((HAS_IOMEM && ((IA64_GENERIC || IA64_SGI_SN2) && SGI_IOC3)) || ((false => SERIAL_SGI_IOC3) && (SERIAL_SGI_IOC3 => false)))
((HAS_IOMEM && (ARM && ARCH_NETX)) || ((false => SERIAL_NETX) && (SERIAL_NETX => false)))
((HAS_IOMEM && SERIAL_NETX) || ((false => SERIAL_NETX_CONSOLE) && (SERIAL_NETX_CONSOLE => false)))
((HAS_IOMEM && (PPC_OF && SERIAL_825false)) || ((false => SERIAL_OF_PLATFORM) && (SERIAL_OF_PLATFORM => false)))
((HAS_IOMEM && QUICC_ENGINE) || ((false => SERIAL_QE) && (SERIAL_QE => false)))
((HAS_IOMEM && SNI_RM) || ((false => SERIAL_SC26XX) && (SERIAL_SC26XX => false)))
((HAS_IOMEM && SERIAL_SC26XX) || ((false => SERIAL_SC26XX_CONSOLE) && (SERIAL_SC26XX_CONSOLE => false)))
((HAS_IOMEM && (BLACKFIN && EXPERIMENTAL)) || ((false => SERIAL_BFIN_SPORT) && (SERIAL_BFIN_SPORT => false)))
(true || ((false => SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse) && (SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse => false)))
(true || ((false => SERIAL_SPORT_BAUD_RATE_576falsefalse) && (SERIAL_SPORT_BAUD_RATE_576falsefalse => false)))
(true || ((false => SERIAL_SPORT_BAUD_RATE_384falsefalse) && (SERIAL_SPORT_BAUD_RATE_384falsefalse => false)))
(true || ((false => SERIAL_SPORT_BAUD_RATE_true92falsefalse) && (SERIAL_SPORT_BAUD_RATE_true92falsefalse => false)))
(true || ((false => SERIAL_SPORT_BAUD_RATE_96falsefalse) && (SERIAL_SPORT_BAUD_RATE_96falsefalse => false)))
(false || ((((((x454 || x455) || x456) || x457) || x458) => SPORT_BAUD_RATE) && (SPORT_BAUD_RATE => ((((x454 || x455) || x456) || x457) || x458))))
(x454 <=> (true && (HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse))))
(x455 <=> ((true && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse))) && (HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_576falsefalse))))
(x456 <=> (((true && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_576falsefalse))) && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse))) && (HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_384falsefalse))))
(x457 <=> ((((true && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_384falsefalse))) && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_576falsefalse))) && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse))) && (HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_true92falsefalse))))
(x458 <=> (((((true && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_true92falsefalse))) && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_384falsefalse))) && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_576falsefalse))) && !(HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse))) && (HAS_IOMEM && (SERIAL_BFIN_SPORT && SERIAL_SPORT_BAUD_RATE_96falsefalse))))
(EMBEDDED || (((true && true) => UNIX98_PTYS) && (UNIX98_PTYS => (true && true))))
(true || (((true && true) => LEGACY_PTYS) && (LEGACY_PTYS => (true && true))))
(LEGACY_PTYS || (((true && LEGACY_PTYS) => LEGACY_PTY_COUNT) && (LEGACY_PTY_COUNT => (true && LEGACY_PTYS))))
(PPC_CHRP || ((false => BRIQ_PANEL) && (BRIQ_PANEL => false)))
((BLACKFIN && (BF52x || BF54x)) || (((true && (BLACKFIN && (BF52x || BF54x))) => BFIN_OTP) && (BFIN_OTP => (true && (BLACKFIN && (BF52x || BF54x))))))
(BFIN_OTP || ((false => BFIN_OTP_WRITE_ENABLE) && (BFIN_OTP_WRITE_ENABLE => false)))
(PARPORT || ((false => PRINTER) && (PRINTER => false)))
(PRINTER || ((false => LP_CONSOLE) && (LP_CONSOLE => false)))
(PARPORT || ((false => PPDEV) && (PPDEV => false)))
(false || ((((((((x459 || x46false) || x46true) || x462) || x463) || x464) || x465) => HVC_DRIVER) && (HVC_DRIVER => ((((((x459 || x46false) || x46true) || x462) || x463) || x464) || x465))))
(x459 <=> (HVC_RTAS && PPC_RTAS))
(x46false <=> (HVC_XEN && XEN))
(x46true <=> (HVC_BEAT && PPC_CELLEB))
(x462 <=> (VIRTIO_CONSOLE && VIRTIO))
(x463 <=> (LGUEST && (VIRTUALIZATION && (X86_32 && (EXPERIMENTAL && (!X86_PAE && (FUTEX && !X86_VOYAGER)))))))
(x464 <=> (HVC_ISERIES && PPC_ISERIES))
(x465 <=> (HVC_CONSOLE && PPC_PSERIES))
(false || (((((HVC_ISERIES && PPC_ISERIES) || (HVC_XEN && XEN)) || (HVC_CONSOLE && PPC_PSERIES)) => HVC_IRQ) && (HVC_IRQ => (((HVC_ISERIES && PPC_ISERIES) || (HVC_XEN && XEN)) || (HVC_CONSOLE && PPC_PSERIES)))))
(PPC_PSERIES || ((false => HVC_CONSOLE) && (HVC_CONSOLE => false)))
(PPC_ISERIES || (((true && PPC_ISERIES) => HVC_ISERIES) && (HVC_ISERIES => (true && PPC_ISERIES))))
(PPC_RTAS || ((false => HVC_RTAS) && (HVC_RTAS => false)))
(PPC_CELLEB || ((false => HVC_BEAT) && (HVC_BEAT => false)))
(XEN || (((true && XEN) => HVC_XEN) && (HVC_XEN => (true && XEN))))
(VIRTIO || (((LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER)))) => VIRTIO_CONSOLE) && (VIRTIO_CONSOLE => (LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER)))))))
(PPC_PSERIES || ((false => HVCS) && (HVCS => false)))
(PPC_PSERIES || ((false => IBM_BSR) && (IBM_BSR => false)))
(HAS_IOMEM || ((false => IPMI_HANDLER) && (IPMI_HANDLER => false)))
(IPMI_HANDLER || ((false => IPMI_PANIC_EVENT) && (IPMI_PANIC_EVENT => false)))
((IPMI_HANDLER && IPMI_PANIC_EVENT) || ((false => IPMI_PANIC_STRING) && (IPMI_PANIC_STRING => false)))
(IPMI_HANDLER || ((false => IPMI_DEVICE_INTERFACE) && (IPMI_DEVICE_INTERFACE => false)))
(IPMI_HANDLER || ((((SENSORS_IBMPEX && (HWMON && IPMI_HANDLER)) || (SENSORS_IBMAEM && (HWMON && IPMI_HANDLER))) => IPMI_SI) && (IPMI_SI => ((SENSORS_IBMPEX && (HWMON && IPMI_HANDLER)) || (SENSORS_IBMAEM && (HWMON && IPMI_HANDLER))))))
(IPMI_HANDLER || ((false => IPMI_WATCHDOG) && (IPMI_WATCHDOG => false)))
(IPMI_HANDLER || ((false => IPMI_POWEROFF) && (IPMI_POWEROFF => false)))
(ARCH_NETWINDER || ((false => DStrue62false) && (DStrue62false => false)))
(ARCH_NETWINDER || ((false => NWBUTTON) && (NWBUTTON => false)))
(NWBUTTON || ((false => NWBUTTON_REBOOT) && (NWBUTTON_REBOOT => false)))
(ARCH_NETWINDER || ((false => NWFLASH) && (NWFLASH => false)))
(true || (((((((x466 || x467) || x468) || xtrue35) || xtrue62) || x469) => HW_RANDOM) && (HW_RANDOM => (((((x466 || x467) || x468) || xtrue35) || xtrue62) || x469))))
(x466 <=> (CRYPTO_DEV_HIFN_795X && (CRYPTO && (CRYPTO_HW && (PCI && CRYPTO_DEV_HIFN_795X_RNG)))))
(x467 <=> (CRYPTO_DEV_TALITOS && (CRYPTO && (CRYPTO_HW && FSL_SOC))))
(x468 <=> (ZCRYPT && (CRYPTO && (CRYPTO_HW && S39false))))
(xtrue35 <=> (B43LEGACY && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA)))))))
(xtrue62 <=> (B43 && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA)))))))
(x469 <=> (true && true))
((HW_RANDOM && ((X86 || IA64) && PCI)) || (((true && ((HW_RANDOM && ((X86 || IA64) && PCI)) && HW_RANDOM)) => HW_RANDOM_INTEL) && (HW_RANDOM_INTEL => (true && ((HW_RANDOM && ((X86 || IA64) && PCI)) && HW_RANDOM)))))
((HW_RANDOM && (X86 && PCI)) || (((true && ((HW_RANDOM && (X86 && PCI)) && HW_RANDOM)) => HW_RANDOM_AMD) && (HW_RANDOM_AMD => (true && ((HW_RANDOM && (X86 && PCI)) && HW_RANDOM)))))
((HW_RANDOM && (X86_32 && PCI)) || (((true && ((HW_RANDOM && (X86_32 && PCI)) && HW_RANDOM)) => HW_RANDOM_GEODE) && (HW_RANDOM_GEODE => (true && ((HW_RANDOM && (X86_32 && PCI)) && HW_RANDOM)))))
((HW_RANDOM && SPARC64) || (((true && ((HW_RANDOM && SPARC64) && HW_RANDOM)) => HW_RANDOM_N2RNG) && (HW_RANDOM_N2RNG => (true && ((HW_RANDOM && SPARC64) && HW_RANDOM)))))
((HW_RANDOM && X86_32) || (((true && ((HW_RANDOM && X86_32) && HW_RANDOM)) => HW_RANDOM_VIA) && (HW_RANDOM_VIA => (true && ((HW_RANDOM && X86_32) && HW_RANDOM)))))
((HW_RANDOM && ARCH_IXP4XX) || (((true && ((HW_RANDOM && ARCH_IXP4XX) && HW_RANDOM)) => HW_RANDOM_IXP4XX) && (HW_RANDOM_IXP4XX => (true && ((HW_RANDOM && ARCH_IXP4XX) && HW_RANDOM)))))
((HW_RANDOM && (ARCH_OMAPtrue6XX || ARCH_OMAP24XX)) || (((true && ((HW_RANDOM && (ARCH_OMAPtrue6XX || ARCH_OMAP24XX)) && HW_RANDOM)) => HW_RANDOM_OMAP) && (HW_RANDOM_OMAP => (true && ((HW_RANDOM && (ARCH_OMAPtrue6XX || ARCH_OMAP24XX)) && HW_RANDOM)))))
((HW_RANDOM && PPC_PASEMI) || (((true && ((HW_RANDOM && PPC_PASEMI) && HW_RANDOM)) => HW_RANDOM_PASEMI) && (HW_RANDOM_PASEMI => (true && ((HW_RANDOM && PPC_PASEMI) && HW_RANDOM)))))
((HW_RANDOM && VIRTIO) || ((false => HW_RANDOM_VIRTIO) && (HW_RANDOM_VIRTIO => false)))
((ATARI || (X86 || (ARM || GENERIC_NVRAM))) || ((((THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))) || (ATARI_SCSI && (SCSI_LOWLEVEL && (ATARI && SCSI)))) => NVRAM) && (NVRAM => ((THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))) || (ATARI_SCSI && (SCSI_LOWLEVEL && (ATARI && SCSI)))))))
((!RTC_LIB && (!PPC && (!PARISC && (!IA64 && (!M68K && (!SPARC && (!FRV && (!ARM && (!SUPERH && (!S39false && !AVR32)))))))))) || ((false => RTC) && (RTC => false)))
((!RTC_LIB && (SPARC32 && PCI)) || ((false => JS_RTC) && (JS_RTC => false)))
((!RTC_LIB && (true && (!IA64 && (!ARM && (!M32R && (!MIPS && (!SPARC && (!FRV && (!S39false && (!SUPERH && !AVR32)))))))))) || ((false => GEN_RTC) && (GEN_RTC => false)))
((!RTC_LIB && GEN_RTC) || ((false => GEN_RTC_X) && (GEN_RTC_X => false)))
((!RTC_LIB && IA64) || ((false => EFI_RTC) && (EFI_RTC => false)))
((!RTC_LIB && (M32R && (PLAT_M327falsefalseUT || PLAT_OPSPUT))) || ((false => DStrue3false2) && (DStrue3false2 => false)))
(ISA || ((false => DTLK) && (DTLK => false)))
(XILINX_VIRTEX || ((false => XILINX_HWICAP) && (XILINX_HWICAP => false)))
(true || ((false => R3964) && (R3964 => false)))
(PCI || ((false => APPLICOM) && (APPLICOM => false)))
((EXPERIMENTAL && (X86 && (PCI && (INPUT && !a64BIT)))) || ((false => SONYPI) && (SONYPI => false)))
(TANBAC_TBfalse22X || ((false => GPIO_TBfalse2true9) && (GPIO_TBfalse2true9 => false)))
((HOTPLUG && PCMCIA) || ((false => SYNCLINK_CS) && (SYNCLINK_CS => false)))
((HOTPLUG && PCMCIA) || ((false => CARDMAN_4falsefalsefalse) && (CARDMAN_4falsefalsefalse => false)))
((HOTPLUG && PCMCIA) || ((false => CARDMAN_4false4false) && (CARDMAN_4false4false => false)))
((HOTPLUG && (PCMCIA && NETDEVICES)) || ((false => IPWIRELESS) && (IPWIRELESS => false)))
(X86 || ((false => MWAVE) && (MWAVE => false)))
(SCx2falsefalse || ((false => SCx2falsefalse_GPIO) && (SCx2falsefalse_GPIO => false)))
(X86 || (((true && (X86 && SCx2falsefalse_GPIO)) => PC8736x_GPIO) && (PC8736x_GPIO => (true && (X86 && SCx2falsefalse_GPIO)))))
(X86_32 || ((((SCx2falsefalse_GPIO && SCx2falsefalse) || (PC8736x_GPIO && X86)) => NSC_GPIO) && (NSC_GPIO => ((SCx2falsefalse_GPIO && SCx2falsefalse) || (PC8736x_GPIO && X86)))))
(X86_32 || ((false => CS5535_GPIO) && (CS5535_GPIO => false)))
(CPU_VR4trueXX || (((GPIO_TBfalse2true9 && TANBAC_TBfalse22X) => GPIO_VR4trueXX) && (GPIO_VR4trueXX => (GPIO_TBfalse2true9 && TANBAC_TBfalse22X))))
(BLOCK || ((false => RAW_DRIVER) && (RAW_DRIVER => false)))
(RAW_DRIVER || (((true && RAW_DRIVER) => MAX_RAW_DEVS) && (MAX_RAW_DEVS => (true && RAW_DRIVER))))
((ACPI && (X86 || IA64)) || ((false => HPET) && (HPET => false)))
(HPET || (((true && HPET) => HPET_MMAP) && (HPET_MMAP => (true && HPET))))
((X86 || (IA64 || (PPC64 || S39false))) || ((false => HANGCHECK_TIMER) && (HANGCHECK_TIMER => false)))
((IA64_GENERIC || IA64_SGI_SN2) || (((true && (IA64_GENERIC || IA64_SGI_SN2)) => MMTIMER) && (MMTIMER => (true && (IA64_GENERIC || IA64_SGI_SN2)))))
((HAS_IOMEM && EXPERIMENTAL) || ((false => TCG_TPM) && (TCG_TPM => false)))
((TCG_TPM && PNP) || ((false => TCG_TIS) && (TCG_TIS => false)))
(TCG_TPM || ((false => TCG_NSC) && (TCG_NSC => false)))
(TCG_TPM || ((false => TCG_ATMEL) && (TCG_ATMEL => false)))
((TCG_TPM && PNP) || ((false => TCG_INFINEON) && (TCG_INFINEON => false)))
((EXPERIMENTAL && X86) || ((false => TELCLOCK) && (TELCLOCK => false)))
(false || (((true && (!M68K && (ISA || PCI))) => DEVPORT) && (DEVPORT => (true && (!M68K && (ISA || PCI))))))
(CCW || ((false => TN327false) && (TN327false => false)))
(TN327false || ((false => TN327false_TTY) && (TN327false_TTY => false)))
(TN327false || ((false => TN327false_FS) && (TN327false_FS => false)))
((TN327false && TN327false_TTY) || ((false => TN327false_CONSOLE) && (TN327false_CONSOLE => false)))
(CCW || ((false => TN32true5) && (TN32true5 => false)))
(TN32true5 || ((false => TN32true5_CONSOLE) && (TN32true5_CONSOLE => false)))
(false || (((true && (TN32true5_CONSOLE || TN327false_CONSOLE)) => CCW_CONSOLE) && (CCW_CONSOLE => (true && (TN32true5_CONSOLE || TN327false_CONSOLE)))))
(S39false || ((false => SCLP_TTY) && (SCLP_TTY => false)))
(SCLP_TTY || ((false => SCLP_CONSOLE) && (SCLP_CONSOLE => false)))
(S39false || ((false => SCLP_VT22false_TTY) && (SCLP_VT22false_TTY => false)))
(SCLP_VT22false_TTY || ((false => SCLP_VT22false_CONSOLE) && (SCLP_VT22false_CONSOLE => false)))
(S39false || ((false => SCLP_CPI) && (SCLP_CPI => false)))
(CCW || ((false => S39false_TAPE) && (S39false_TAPE => false)))
(S39false_TAPE || ((false => S39false_TAPE_BLOCK) && (S39false_TAPE_BLOCK => false)))
(S39false_TAPE || ((false => S39false_TAPE_34XX) && (S39false_TAPE_34XX => false)))
(S39false_TAPE || ((false => S39false_TAPE_359false) && (S39false_TAPE_359false => false)))
(IUCV || ((false => VMLOGRDR) && (VMLOGRDR => false)))
(S39false || ((false => VMCP) && (VMCP => false)))
(IUCV || ((false => MONREADER) && (MONREADER => false)))
(S39false || (((true && S39false) => MONWRITER) && (MONWRITER => (true && S39false))))
(S39false || (((true && S39false) => S39false_VMUR) && (S39false_VMUR => (true && S39false))))
(HAS_IOMEM || (((((((x47false || x47true) || x62) || x472) || x473) || x474) => I2C) && (I2C => (((((x47false || x47true) || x62) || x472) || x473) || x474))))
(x47false <=> (FB_DDC && (HAS_IOMEM && FB)))
(x47true <=> (SND_AOA_TAS && (SOUND && (!M68K && (SND && SND_AOA)))))
(x62 <=> (SFC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x472 <=> (FB_VIA && (HAS_IOMEM && (FB && PCI))))
(x473 <=> (SND_AOA_ONYX && (SOUND && (!M68K && (SND && SND_AOA)))))
(x474 <=> (SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))))
(false || (((true && I2C) => I2C_BOARDINFO) && (I2C_BOARDINFO => (true && I2C))))
(I2C || ((false => I2C_CHARDEV) && (I2C_CHARDEV => false)))
(I2C || (((true && I2C) => I2C_HELPER_AUTO) && (I2C_HELPER_AUTO => (true && I2C))))
((I2C && !I2C_HELPER_AUTO) || (((((((((((((((((((((((x475 || x62) || x476) || x477) || x478) || x479) || x48false) || x47false) || x48true) || x482) || x483) || x484) || x485) || x486) || x487) || x488) || x489) || x49false) || x49true) || x492) || x493) || x472) => I2C_ALGOBIT) && (I2C_ALGOBIT => (((((((((((((((((((((x475 || x62) || x476) || x477) || x478) || x479) || x48false) || x47false) || x48true) || x482) || x483) || x484) || x485) || x486) || x487) || x488) || x489) || x49false) || x49true) || x492) || x493) || x472))))
(x475 <=> (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT))))))))
(x62 <=> (SFC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x476 <=> (I2C_SIMTEC && I2C))
(x477 <=> (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))
(x478 <=> (IEEEtrue394_PCILYNX && ((PCI || BROKEN) && (PCI && (IEEEtrue394 && I2C)))))
(x479 <=> (I2C_IXP2falsefalsefalse && (I2C && ARCH_IXP2falsefalsefalse)))
(x48false <=> (I2C_GPIO && (I2C && GENERIC_GPIO)))
(x47false <=> (FB_DDC && (HAS_IOMEM && FB)))
(x48true <=> (SCx2falsefalse_I2C && (I2C && SCx2falsefalse_GPIO)))
(x482 <=> (I2C_VOODOO3 && (I2C && PCI)))
(x483 <=> (I2C_ACORN && (I2C && ARCH_ACORN)))
(x484 <=> (VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && USB))))))))
(x485 <=> (I2C_HYDRA && (I2C && (PCI && (PPC_CHRP && EXPERIMENTAL)))))
(x486 <=> (I2C_PARPORT_LIGHT && I2C))
(x487 <=> (VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x488 <=> (I2C_PARPORT && (I2C && PARPORT)))
(x489 <=> (DVB_PLUTO2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C))))))
(x49false <=> (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))))
(x49true <=> (I2C_VIA && (I2C && (PCI && EXPERIMENTAL))))
(x492 <=> (I2C_VERSATILE && (I2C && (ARCH_VERSATILE || ARCH_REALVIEW))))
(x493 <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT)))))))))
(x472 <=> (FB_VIA && (HAS_IOMEM && (FB && PCI))))
((I2C && !I2C_HELPER_AUTO) || (((I2C_ELEKTOR && (I2C && (ISA && BROKEN_ON_SMP))) => I2C_ALGOPCF) && (I2C_ALGOPCF => (I2C_ELEKTOR && (I2C && (ISA && BROKEN_ON_SMP))))))
((I2C && !I2C_HELPER_AUTO) || ((((I2C_PCA_PLATFORM && I2C) || (I2C_PCA_ISA && (I2C && ISA))) => I2C_ALGOPCA) && (I2C_ALGOPCA => ((I2C_PCA_PLATFORM && I2C) || (I2C_PCA_ISA && (I2C && ISA))))))
(false || (((VIDEO_VINO && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && (SGI_IP22 && (EXPERIMENTAL && VIDEO_V4L2)))))) => I2C_ALGO_SGI) && (I2C_ALGO_SGI => (VIDEO_VINO && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && (SGI_IP22 && (EXPERIMENTAL && VIDEO_V4L2)))))))))
((I2C && PCI) || ((false => I2C_ALItrue535) && (I2C_ALItrue535 => false)))
((I2C && (PCI && EXPERIMENTAL)) || ((false => I2C_ALItrue563) && (I2C_ALItrue563 => false)))
((I2C && PCI) || ((false => I2C_ALItrue5X3) && (I2C_ALItrue5X3 => false)))
((I2C && PCI) || ((false => I2C_AMD756) && (I2C_AMD756 => false)))
((I2C && (I2C_AMD756 && (X86 && EXPERIMENTAL))) || ((false => I2C_AMD756_S4882) && (I2C_AMD756_S4882 => false)))
((I2C && PCI) || ((false => I2C_AMD8truetruetrue) && (I2C_AMD8truetruetrue => false)))
((I2C && PCI) || ((false => I2C_I8falsetrue) && (I2C_I8falsetrue => false)))
((I2C && PCI) || ((false => I2C_ISCH) && (I2C_ISCH => false)))
((I2C && PCI) || ((false => I2C_PIIX4) && (I2C_PIIX4 => false)))
((I2C && PCI) || ((false => I2C_NFORCE2) && (I2C_NFORCE2 => false)))
((I2C && (I2C_NFORCE2 && (X86 && EXPERIMENTAL))) || ((false => I2C_NFORCE2_S4985) && (I2C_NFORCE2_S4985 => false)))
((I2C && PCI) || ((false => I2C_SIS5595) && (I2C_SIS5595 => false)))
((I2C && PCI) || ((false => I2C_SIS63false) && (I2C_SIS63false => false)))
((I2C && PCI) || ((false => I2C_SIS96X) && (I2C_SIS96X => false)))
((I2C && (PCI && EXPERIMENTAL)) || ((false => I2C_VIA) && (I2C_VIA => false)))
((I2C && PCI) || ((false => I2C_VIAPRO) && (I2C_VIAPRO => false)))
((I2C && (PCI && (PPC_CHRP && EXPERIMENTAL))) || ((false => I2C_HYDRA) && (I2C_HYDRA => false)))
((I2C && PPC_PMAC) || ((((((((x47true || x494) || x495) || x473) || x496) || x497) || x498) => I2C_POWERMAC) && (I2C_POWERMAC => ((((((x47true || x494) || x495) || x473) || x496) || x497) || x498))))
(x47true <=> (SND_AOA_TAS && (SOUND && (!M68K && (SND && SND_AOA)))))
(x494 <=> (WINDFARM_PM8true && (MACINTOSH_DRIVERS && (WINDFARM && (I2C && (CPU_FREQ_PMAC64 && PMAC_SMU))))))
(x495 <=> (WINDFARM_PM9true && (MACINTOSH_DRIVERS && (WINDFARM && (I2C && (CPU_FREQ_PMAC64 && PMAC_SMU))))))
(x473 <=> (SND_AOA_ONYX && (SOUND && (!M68K && (SND && SND_AOA)))))
(x496 <=> (WINDFARM_PMtruetrue2 && (MACINTOSH_DRIVERS && (WINDFARM && (I2C && PMAC_SMU)))))
(x497 <=> (WINDFARM_PMtrue2true && (MACINTOSH_DRIVERS && (WINDFARM && (I2C && PMAC_SMU)))))
(x498 <=> (true && (I2C && PPC_PMAC)))
((I2C && (ARCH_AT9true && (EXPERIMENTAL && BROKEN))) || ((false => I2C_AT9true) && (I2C_AT9true => false)))
((I2C && (SOC_AUtrue55false || SOC_AUtrue2falsefalse)) || ((false => I2C_AUtrue55false) && (I2C_AUtrue55false => false)))
((I2C && (BLACKFIN && (!BF56true && (!BF53true && (!BF532 && !BF533))))) || (((SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))) => I2C_BLACKFIN_TWI) && (I2C_BLACKFIN_TWI => (SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))))))
((I2C && I2C_BLACKFIN_TWI) || (((true && (I2C && I2C_BLACKFIN_TWI)) => I2C_BLACKFIN_TWI_CLK_KHZ) && (I2C_BLACKFIN_TWI_CLK_KHZ => (true && (I2C && I2C_BLACKFIN_TWI)))))
((I2C && ((CPMtrue || CPM2) && OF_I2C)) || ((false => I2C_CPM) && (I2C_CPM => false)))
((I2C && ARCH_DAVINCI) || ((false => I2C_DAVINCI) && (I2C_DAVINCI => false)))
((I2C && GENERIC_GPIO) || ((false => I2C_GPIO) && (I2C_GPIO => false)))
((I2C && SH_HIGHLANDER) || ((false => I2C_HIGHLANDER) && (I2C_HIGHLANDER => false)))
((I2C && 4xx) || ((false => I2C_IBM_IIC) && (I2C_IBM_IIC => false)))
((I2C && (ARCH_IOP32X || (ARCH_IOP33X || (ARCH_IXP4XX || ARCH_IOPtrue3XX)))) || ((false => I2C_IOP3XX) && (I2C_IOP3XX => false)))
((I2C && ARCH_IXP2falsefalsefalse) || ((false => I2C_IXP2falsefalsefalse) && (I2C_IXP2falsefalsefalse => false)))
((I2C && PPC32) || ((false => I2C_MPC) && (I2C_MPC => false)))
((I2C && ((MV64X6false || PLAT_ORION) && EXPERIMENTAL)) || ((false => I2C_MV64XXX) && (I2C_MV64XXX => false)))
((I2C && EXPERIMENTAL) || ((false => I2C_OCORES) && (I2C_OCORES => false)))
((I2C && ARCH_OMAP) || (((true && (I2C && (ARCH_OMAP && (MACH_OMAP_H3 || MACH_OMAP_OSK)))) => I2C_OMAP) && (I2C_OMAP => (true && (I2C && (ARCH_OMAP && (MACH_OMAP_H3 || MACH_OMAP_OSK)))))))
((I2C && (PPC_PASEMI && PCI)) || ((false => I2C_PASEMI) && (I2C_PASEMI => false)))
((I2C && ARCH_PNX4falsefalse8) || ((false => I2C_PNX) && (I2C_PNX => false)))
((I2C && (EXPERIMENTAL && ARCH_PXA)) || ((false => I2C_PXA) && (I2C_PXA => false)))
((I2C && I2C_PXA) || ((false => I2C_PXA_SLAVE) && (I2C_PXA_SLAVE => false)))
((I2C && ARCH_S3C24truefalse) || ((false => I2C_S3C24truefalse) && (I2C_S3C24truefalse => false)))
((I2C && CPU_SUBTYPE_SH776false) || ((false => I2C_SH776false) && (I2C_SH776false => false)))
((I2C && SUPERH) || ((false => I2C_SH_MOBILE) && (I2C_SH_MOBILE => false)))
(I2C || ((false => I2C_SIMTEC) && (I2C_SIMTEC => false)))
((I2C && (ARCH_VERSATILE || ARCH_REALVIEW)) || ((false => I2C_VERSATILE) && (I2C_VERSATILE => false)))
((I2C && PARPORT) || ((false => I2C_PARPORT) && (I2C_PARPORT => false)))
(I2C || ((false => I2C_PARPORT_LIGHT) && (I2C_PARPORT_LIGHT => false)))
((I2C && EXPERIMENTAL) || ((false => I2C_TAOS_EVM) && (I2C_TAOS_EVM => false)))
((I2C && USB) || ((false => I2C_TINY_USB) && (I2C_TINY_USB => false)))
((I2C && PCI) || ((false => I2C_VOODOO3) && (I2C_VOODOO3 => false)))
((I2C && ARCH_ACORN) || (((true && (I2C && ARCH_ACORN)) => I2C_ACORN) && (I2C_ACORN => (true && (I2C && ARCH_ACORN)))))
((I2C && (ISA && BROKEN_ON_SMP)) || ((false => I2C_ELEKTOR) && (I2C_ELEKTOR => false)))
((I2C && ISA) || ((false => I2C_PCA_ISA) && (I2C_PCA_ISA => false)))
(I2C || ((false => I2C_PCA_PLATFORM) && (I2C_PCA_PLATFORM => false)))
((I2C && PMC_MSP) || ((false => I2C_PMCMSP) && (I2C_PMCMSP => false)))
((I2C && SIBYTE_SBtruexxx_SOC) || ((false => I2C_SIBYTE) && (I2C_SIBYTE => false)))
((I2C && (EXPERIMENTAL && (true && true))) || ((false => I2C_STUB) && (I2C_STUB => false)))
((I2C && SCx2falsefalse_GPIO) || ((false => SCx2falsefalse_I2C) && (SCx2falsefalse_I2C => false)))
((I2C && SCx2falsefalse_I2C) || (((true && (I2C && SCx2falsefalse_I2C)) => SCx2falsefalse_I2C_SCL) && (SCx2falsefalse_I2C_SCL => (true && (I2C && SCx2falsefalse_I2C)))))
((I2C && SCx2falsefalse_I2C) || (((true && (I2C && SCx2falsefalse_I2C)) => SCx2falsefalse_I2C_SDA) && (SCx2falsefalse_I2C_SDA => (true && (I2C && SCx2falsefalse_I2C)))))
((I2C && (X86_32 && PCI)) || ((false => SCx2falsefalse_ACB) && (SCx2falsefalse_ACB => false)))
((I2C && EXPERIMENTAL) || ((false => DStrue682) && (DStrue682 => false)))
((I2C && (SYSFS && EXPERIMENTAL)) || ((false => AT24) && (AT24 => false)))
((I2C && EXPERIMENTAL) || ((false => SENSORS_EEPROM) && (SENSORS_EEPROM => false)))
((I2C && (EXPERIMENTAL && !GPIO_PCF857X)) || ((false => SENSORS_PCF8574) && (SENSORS_PCF8574 => false)))
((I2C && !GPIO_PCF857X) || ((false => PCF8575) && (PCF8575 => false)))
((I2C && (EXPERIMENTAL && !GPIO_PCA953X)) || ((false => SENSORS_PCA9539) && (SENSORS_PCA9539 => false)))
((I2C && EXPERIMENTAL) || ((false => SENSORS_PCF859true) && (SENSORS_PCF859true => false)))
((I2C && ARCH_OMAP_OTG) || ((((USB_GADGET_OMAP && (true && (ARCH_OMAP && (MACH_OMAP_H2 || (MACH_OMAP_H3 || MACH_OMAP_H4_OTG))))) || (USB_OHCI_HCD && (USB_SUPPORT && (USB && (USB_ARCH_HAS_OHCI && (MACH_OMAP_H2 || MACH_OMAP_H3)))))) => ISPtrue3falsetrue_OMAP) && (ISPtrue3falsetrue_OMAP => ((USB_GADGET_OMAP && (true && (ARCH_OMAP && (MACH_OMAP_H2 || (MACH_OMAP_H3 || MACH_OMAP_H4_OTG))))) || (USB_OHCI_HCD && (USB_SUPPORT && (USB && (USB_ARCH_HAS_OHCI && (MACH_OMAP_H2 || MACH_OMAP_H3)))))))))
((I2C && GPIOLIB) || ((((MMC_OMAP && (MMC && (ARCH_OMAP && MACH_OMAP_H2))) || (true && (I2C && (GPIOLIB && (MACH_OMAP_H2 || (MACH_OMAP_H3 || MACH_OMAP_OSK)))))) => TPS65falsetruefalse) && (TPS65falsetruefalse => ((MMC_OMAP && (MMC && (ARCH_OMAP && MACH_OMAP_H2))) || (true && (I2C && (GPIOLIB && (MACH_OMAP_H2 || (MACH_OMAP_H3 || MACH_OMAP_OSK)))))))))
((I2C && EXPERIMENTAL) || ((false => SENSORS_MAX6875) && (SENSORS_MAX6875 => false)))
((I2C && EXPERIMENTAL) || ((false => SENSORS_TSL255false) && (SENSORS_TSL255false => false)))
((I2C && ARCH_OMAP24XX) || ((false => MENELAUS) && (MENELAUS => false)))
((I2C && PPC_83xx) || ((false => MCU_MPC8349EMITX) && (MCU_MPC8349EMITX => false)))
(I2C || ((false => I2C_DEBUG_CORE) && (I2C_DEBUG_CORE => false)))
(I2C || ((false => I2C_DEBUG_ALGO) && (I2C_DEBUG_ALGO => false)))
(I2C || ((false => I2C_DEBUG_BUS) && (I2C_DEBUG_BUS => false)))
(I2C || ((false => I2C_DEBUG_CHIP) && (I2C_DEBUG_CHIP => false)))
(HAS_IOMEM || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SPI) && (SPI => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
((SPI && DEBUG_KERNEL) || ((false => SPI_DEBUG) && (SPI_DEBUG => false)))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (true && (SPI && SPI))) => SPI_MASTER) && (SPI_MASTER => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (true && (SPI && SPI))))))
((SPI && (SPI_MASTER && (ARCH_AT9true || AVR32))) || ((false => SPI_ATMEL) && (SPI_ATMEL => false)))
((SPI && (SPI_MASTER && BLACKFIN)) || ((false => SPI_BFIN) && (SPI_BFIN => false)))
((SPI && (SPI_MASTER && ((SOC_AUtrue55false || SOC_AUtrue2falsefalse) && EXPERIMENTAL))) || ((false => SPI_AUtrue55false) && (SPI_AUtrue55false => false)))
((SPI && SPI_MASTER) || (((((((((x499 || x5falsefalse) || x5falsetrue) || x5false2) || x5false3) || x5false4) || x5false5) || x5false6) => SPI_BITBANG) && (SPI_BITBANG => (((((((x499 || x5falsefalse) || x5falsetrue) || x5false2) || x5false3) || x5false4) || x5false5) || x5false6))))
(x499 <=> (SPI_OMAP_UWIRE && (SPI && (SPI_MASTER && ARCH_OMAPtrue))))
(x5falsefalse <=> (SPI_LM7false_LLP && (SPI && (SPI_MASTER && (PARPORT && EXPERIMENTAL)))))
(x5falsetrue <=> (SPI_S3C24XX_GPIO && (SPI && (SPI_MASTER && (ARCH_S3C24truefalse && EXPERIMENTAL)))))
(x5false2 <=> (SPI_S3C24XX && (SPI && (SPI_MASTER && (ARCH_S3C24truefalse && EXPERIMENTAL)))))
(x5false3 <=> (SPI_AUtrue55false && (SPI && (SPI_MASTER && ((SOC_AUtrue55false || SOC_AUtrue2falsefalse) && EXPERIMENTAL)))))
(x5false4 <=> (SPI_BUTTERFLY && (SPI && (SPI_MASTER && PARPORT))))
(x5false5 <=> (SPI_XILINX && (SPI && (SPI_MASTER && (XILINX_VIRTEX && EXPERIMENTAL)))))
(x5false6 <=> (SPI_SH_SCI && (SPI && (SPI_MASTER && SUPERH))))
((SPI && (SPI_MASTER && PARPORT)) || ((false => SPI_BUTTERFLY) && (SPI_BUTTERFLY => false)))
((SPI && (SPI_MASTER && (ARCH_IMX && EXPERIMENTAL))) || ((false => SPI_IMX) && (SPI_IMX => false)))
((SPI && (SPI_MASTER && (PARPORT && EXPERIMENTAL))) || ((false => SPI_LM7false_LLP) && (SPI_LM7false_LLP => false)))
((SPI && (SPI_MASTER && (PPC_MPC52xx && EXPERIMENTAL))) || ((false => SPI_MPC52xx_PSC) && (SPI_MPC52xx_PSC => false)))
((SPI && (SPI_MASTER && ((PPC_83xx || QUICC_ENGINE) && EXPERIMENTAL))) || ((false => SPI_MPC83xx) && (SPI_MPC83xx => false)))
((SPI && (SPI_MASTER && ARCH_OMAPtrue)) || ((false => SPI_OMAP_UWIRE) && (SPI_OMAP_UWIRE => false)))
((SPI && (SPI_MASTER && (ARCH_OMAP24XX || ARCH_OMAP34XX))) || ((false => SPI_OMAP24XX) && (SPI_OMAP24XX => false)))
((SPI && (SPI_MASTER && (PLAT_ORION && EXPERIMENTAL))) || ((false => SPI_ORION) && (SPI_ORION => false)))
((SPI && (SPI_MASTER && (ARCH_PXA && EXPERIMENTAL))) || ((false => SPI_PXA2XX) && (SPI_PXA2XX => false)))
((SPI && (SPI_MASTER && (ARCH_S3C24truefalse && EXPERIMENTAL))) || ((false => SPI_S3C24XX) && (SPI_S3C24XX => false)))
((SPI && (SPI_MASTER && (ARCH_S3C24truefalse && EXPERIMENTAL))) || ((false => SPI_S3C24XX_GPIO) && (SPI_S3C24XX_GPIO => false)))
((SPI && (SPI_MASTER && SUPERH)) || ((false => SPI_SH_SCI) && (SPI_SH_SCI => false)))
((SPI && (SPI_MASTER && (GENERIC_GPIO && CPU_TX49XX))) || ((false => SPI_TXX9) && (SPI_TXX9 => false)))
((SPI && (SPI_MASTER && (XILINX_VIRTEX && EXPERIMENTAL))) || ((false => SPI_XILINX) && (SPI_XILINX => false)))
((SPI && (SPI_MASTER && SYSFS)) || ((false => SPI_AT25) && (SPI_AT25 => false)))
((SPI && (SPI_MASTER && EXPERIMENTAL)) || ((false => SPI_SPIDEV) && (SPI_SPIDEV => false)))
((SPI && (SPI_MASTER && SYSFS)) || ((false => SPI_TLE62Xfalse) && (SPI_TLE62Xfalse => false)))
(false || (((X86 && true) => ARCH_WANT_OPTIONAL_GPIOLIB) && (ARCH_WANT_OPTIONAL_GPIOLIB => (X86 && true))))
(false || (((MCU_MPC8349EMITX && (I2C && PPC_83xx)) => ARCH_REQUIRE_GPIOLIB) && (ARCH_REQUIRE_GPIOLIB => (MCU_MPC8349EMITX && (I2C && PPC_83xx)))))
((ARCH_WANT_OPTIONAL_GPIOLIB || ARCH_REQUIRE_GPIOLIB) || (((ARCH_REQUIRE_GPIOLIB && true) => GPIOLIB) && (GPIOLIB => (ARCH_REQUIRE_GPIOLIB && true))))
((GPIOLIB && DEBUG_KERNEL) || ((false => DEBUG_GPIO) && (DEBUG_GPIO => false)))
((GPIOLIB && (SYSFS && EXPERIMENTAL)) || ((false => GPIO_SYSFS) && (GPIO_SYSFS => false)))
((GPIOLIB && PPC_OF) || ((false => GPIO_XILINX) && (GPIO_XILINX => false)))
((GPIOLIB && I2C) || ((false => GPIO_MAX732X) && (GPIO_MAX732X => false)))
((GPIOLIB && I2C) || ((((SOC_CAMERA_MT9Vfalse22 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && (I2C && MT9Vfalse22_PCA9536_SWITCH)))))) || (SOC_CAMERA_MT9Mfalsefalsetrue && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && (I2C && MT9Mfalsefalsetrue_PCA9536_SWITCH))))))) => GPIO_PCA953X) && (GPIO_PCA953X => ((SOC_CAMERA_MT9Vfalse22 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && (I2C && MT9Vfalse22_PCA9536_SWITCH)))))) || (SOC_CAMERA_MT9Mfalsefalsetrue && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && (I2C && MT9Mfalsefalsetrue_PCA9536_SWITCH))))))))))
((GPIOLIB && I2C) || ((false => GPIO_PCF857X) && (GPIO_PCF857X => false)))
((GPIOLIB && TWL4false3false_CORE) || ((false => GPIO_TWL4false3false) && (GPIO_TWL4false3false => false)))
((GPIOLIB && (PCI && !VIDEO_BT848)) || ((false => GPIO_BT8XX) && (GPIO_BT8XX => false)))
((GPIOLIB && SPI_MASTER) || ((false => GPIO_MAX73falsetrue) && (GPIO_MAX73falsetrue => false)))
((GPIOLIB && SPI_MASTER) || ((false => GPIO_MCP23Sfalse8) && (GPIO_MCP23Sfalse8 => false)))
(HAS_IOMEM || (((BATTERY_DS276false && POWER_SUPPLY) => Wtrue) && (Wtrue => (BATTERY_DS276false && POWER_SUPPLY))))
((Wtrue && CONNECTOR) || (((true && (Wtrue && CONNECTOR)) => Wtrue_CON) && (Wtrue_CON => (true && (Wtrue && CONNECTOR)))))
((Wtrue && PCI) || ((false => Wtrue_MASTER_MATROX) && (Wtrue_MASTER_MATROX => false)))
((Wtrue && USB) || ((false => Wtrue_MASTER_DS249false) && (Wtrue_MASTER_DS249false => false)))
((Wtrue && (I2C && EXPERIMENTAL)) || ((false => Wtrue_MASTER_DS2482) && (Wtrue_MASTER_DS2482 => false)))
((Wtrue && (ARM && HAVE_CLK)) || ((false => Wtrue_MASTER_DStrueWM) && (Wtrue_MASTER_DStrueWM => false)))
((Wtrue && GENERIC_GPIO) || ((false => Wtrue_MASTER_GPIO) && (Wtrue_MASTER_GPIO => false)))
((Wtrue && (ARCH_OMAP243false || ARCH_OMAP34XX)) || ((false => HDQ_MASTER_OMAP) && (HDQ_MASTER_OMAP => false)))
(Wtrue || ((false => Wtrue_SLAVE_THERM) && (Wtrue_SLAVE_THERM => false)))
(Wtrue || ((false => Wtrue_SLAVE_SMEM) && (Wtrue_SLAVE_SMEM => false)))
(Wtrue || ((false => Wtrue_SLAVE_DS2433) && (Wtrue_SLAVE_DS2433 => false)))
((Wtrue && Wtrue_SLAVE_DS2433) || ((false => Wtrue_SLAVE_DS2433_CRC) && (Wtrue_SLAVE_DS2433_CRC => false)))
(Wtrue || (((BATTERY_DS276false && POWER_SUPPLY) => Wtrue_SLAVE_DS276false) && (Wtrue_SLAVE_DS276false => (BATTERY_DS276false && POWER_SUPPLY))))
(Wtrue || ((false => Wtrue_SLAVE_BQ27falsefalsefalse) && (Wtrue_SLAVE_BQ27falsefalsefalse => false)))
(true || (((ACPI_SYSFS_POWER && (!X86_VOYAGER && ACPI)) => POWER_SUPPLY) && (POWER_SUPPLY => (ACPI_SYSFS_POWER && (!X86_VOYAGER && ACPI)))))
(POWER_SUPPLY || ((false => POWER_SUPPLY_DEBUG) && (POWER_SUPPLY_DEBUG => false)))
((POWER_SUPPLY && !S39false) || ((false => PDA_POWER) && (PDA_POWER => false)))
((POWER_SUPPLY && APM_EMULATION) || ((false => APM_POWER) && (APM_POWER => false)))
(POWER_SUPPLY || ((false => BATTERY_DS276false) && (BATTERY_DS276false => false)))
((POWER_SUPPLY && (PPC32 && ADB_PMU)) || ((false => BATTERY_PMU) && (BATTERY_PMU => false)))
((POWER_SUPPLY && (X86_32 && OLPC)) || ((false => BATTERY_OLPC) && (BATTERY_OLPC => false)))
((POWER_SUPPLY && (MACH_TOSA && (MFD_TC6393XB && TOUCHSCREEN_WM97XX))) || ((false => BATTERY_TOSA) && (BATTERY_TOSA => false)))
((POWER_SUPPLY && TOUCHSCREEN_WM97XX) || ((false => BATTERY_WM97XX) && (BATTERY_WM97XX => false)))
((POWER_SUPPLY && I2C) || ((false => BATTERY_BQ27xfalsefalse) && (BATTERY_BQ27xfalsefalse => false)))
(HAS_IOMEM || ((((THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))) || (true && HAS_IOMEM)) => HWMON) && (HWMON => ((THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))) || (true && HAS_IOMEM)))))
(false || ((((((((((((((((((((((x5false7 || x5false8) || x5false9) || x5truefalse) || x5truetrue) || x5true2) || x5true3) || x5true4) || x5true5) || x5true6) || x5true7) || x5true8) || x5true9) || x52false) || x52true) || x522) || x523) || x524) || x525) || x526) || x527) => HWMON_VID) && (HWMON_VID => ((((((((((((((((((((x5false7 || x5false8) || x5false9) || x5truefalse) || x5truetrue) || x5true2) || x5true3) || x5true4) || x5true5) || x5true6) || x5true7) || x5true8) || x5true9) || x52false) || x52true) || x522) || x523) || x524) || x525) || x526) || x527))))
(x5false7 <=> (SENSORS_LM87 && (HWMON && I2C)))
(x5false8 <=> (SENSORS_LM85 && (HWMON && (I2C && EXPERIMENTAL))))
(x5false9 <=> (SENSORS_ADMtruefalse26 && (HWMON && (I2C && EXPERIMENTAL))))
(x5truefalse <=> (SENSORS_PC8736false && HWMON))
(x5truetrue <=> (SENSORS_W83793 && (HWMON && (I2C && EXPERIMENTAL))))
(x5true2 <=> (SENSORS_ADMtruefalse25 && (HWMON && I2C)))
(x5true3 <=> (SENSORS_ATXPtrue && (HWMON && (I2C && EXPERIMENTAL))))
(x5true4 <=> (SENSORS_W83627EHF && HWMON))
(x5true5 <=> (SENSORS_IT87 && HWMON))
(x5true6 <=> (SENSORS_LM78 && (HWMON && I2C)))
(x5true7 <=> (SENSORS_W8378trueD && (HWMON && I2C)))
(x5true8 <=> (SENSORS_DMEtrue737 && (HWMON && (I2C && EXPERIMENTAL))))
(x5true9 <=> (SENSORS_LM93 && (HWMON && I2C)))
(x52false <=> (SENSORS_GL52falseSM && (HWMON && I2C)))
(x52true <=> (SENSORS_ADM924false && (HWMON && I2C)))
(x522 <=> (SENSORS_ASBtruefalsefalse && (HWMON && (X86 && (I2C && EXPERIMENTAL)))))
(x523 <=> (SENSORS_W83627HF && HWMON))
(x524 <=> (SENSORS_SMSC47Mtrue92 && (HWMON && (I2C && EXPERIMENTAL))))
(x525 <=> (SENSORS_VTtrue2truetrue && (HWMON && EXPERIMENTAL)))
(x526 <=> (SENSORS_VT823true && (HWMON && PCI)))
(x527 <=> (SENSORS_W8379trueD && (HWMON && (I2C && EXPERIMENTAL))))
((HWMON && (X86 && EXPERIMENTAL)) || ((false => SENSORS_ABITUGURU) && (SENSORS_ABITUGURU => false)))
((HWMON && (X86 && EXPERIMENTAL)) || ((false => SENSORS_ABITUGURU3) && (SENSORS_ABITUGURU3 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_AD74true4) && (SENSORS_AD74true4 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_AD74true8) && (SENSORS_AD74true8 => false)))
((HWMON && (SPI_MASTER && EXPERIMENTAL)) || ((false => SENSORS_ADCXX) && (SENSORS_ADCXX => false)))
((HWMON && I2C) || ((false => SENSORS_ADMtruefalse2true) && (SENSORS_ADMtruefalse2true => false)))
((HWMON && I2C) || ((false => SENSORS_ADMtruefalse25) && (SENSORS_ADMtruefalse25 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ADMtruefalse26) && (SENSORS_ADMtruefalse26 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ADMtruefalse29) && (SENSORS_ADMtruefalse29 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ADMtruefalse3true) && (SENSORS_ADMtruefalse3true => false)))
((HWMON && I2C) || ((false => SENSORS_ADM924false) && (SENSORS_ADM924false => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ADT7462) && (SENSORS_ADT7462 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ADT747false) && (SENSORS_ADT747false => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ADT7473) && (SENSORS_ADT7473 => false)))
((HWMON && (X86 && (PCI && EXPERIMENTAL))) || ((false => SENSORS_K8TEMP) && (SENSORS_K8TEMP => false)))
((HWMON && (PPC_PMAC && (!PPC64 && (INPUT && (((ADB_PMU && I2C) || ((ADB_PMU && !I2C) || I2C)) && EXPERIMENTAL))))) || ((false => SENSORS_AMS) && (SENSORS_AMS => false)))
((HWMON && (SENSORS_AMS && ADB_PMU)) || (((true && (HWMON && (SENSORS_AMS && ADB_PMU))) => SENSORS_AMS_PMU) && (SENSORS_AMS_PMU => (true && (HWMON && (SENSORS_AMS && ADB_PMU))))))
((HWMON && (SENSORS_AMS && I2C)) || (((true && (HWMON && (SENSORS_AMS && I2C))) => SENSORS_AMS_I2C) && (SENSORS_AMS_I2C => (true && (HWMON && (SENSORS_AMS && I2C))))))
((HWMON && (X86 && (I2C && EXPERIMENTAL))) || ((false => SENSORS_ASBtruefalsefalse) && (SENSORS_ASBtruefalsefalse => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_ATXPtrue) && (SENSORS_ATXPtrue => false)))
((HWMON && I2C) || ((false => SENSORS_DStrue62true) && (SENSORS_DStrue62true => false)))
((HWMON && (PCI && EXPERIMENTAL)) || ((false => SENSORS_I5K_AMB) && (SENSORS_I5K_AMB => false)))
((HWMON && EXPERIMENTAL) || ((false => SENSORS_F7true8false5F) && (SENSORS_F7true8false5F => false)))
((HWMON && EXPERIMENTAL) || ((false => SENSORS_F7true882FG) && (SENSORS_F7true882FG => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_F75375S) && (SENSORS_F75375S => false)))
((HWMON && (X86 && I2C)) || ((false => SENSORS_FSCHER) && (SENSORS_FSCHER => false)))
((HWMON && (X86 && I2C)) || ((false => SENSORS_FSCPOS) && (SENSORS_FSCPOS => false)))
((HWMON && (X86 && (I2C && EXPERIMENTAL))) || ((false => SENSORS_FSCHMD) && (SENSORS_FSCHMD => false)))
((HWMON && I2C) || ((false => SENSORS_GL5true8SM) && (SENSORS_GL5true8SM => false)))
((HWMON && I2C) || ((false => SENSORS_GL52falseSM) && (SENSORS_GL52falseSM => false)))
((HWMON && (X86 && EXPERIMENTAL)) || ((false => SENSORS_CORETEMP) && (SENSORS_CORETEMP => false)))
((HWMON && IPMI_HANDLER) || ((false => SENSORS_IBMAEM) && (SENSORS_IBMAEM => false)))
((HWMON && IPMI_HANDLER) || ((false => SENSORS_IBMPEX) && (SENSORS_IBMPEX => false)))
(HWMON || ((false => SENSORS_IT87) && (SENSORS_IT87 => false)))
((HWMON && I2C) || ((false => SENSORS_LM63) && (SENSORS_LM63 => false)))
((HWMON && (SPI_MASTER && EXPERIMENTAL)) || ((false => SENSORS_LM7false) && (SENSORS_LM7false => false)))
((HWMON && I2C) || ((false => SENSORS_LM75) && (SENSORS_LM75 => false)))
((HWMON && I2C) || ((false => SENSORS_LM77) && (SENSORS_LM77 => false)))
((HWMON && I2C) || ((false => SENSORS_LM78) && (SENSORS_LM78 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_LM8false) && (SENSORS_LM8false => false)))
((HWMON && I2C) || ((false => SENSORS_LM83) && (SENSORS_LM83 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_LM85) && (SENSORS_LM85 => false)))
((HWMON && I2C) || ((false => SENSORS_LM87) && (SENSORS_LM87 => false)))
((HWMON && I2C) || ((false => SENSORS_LM9false) && (SENSORS_LM9false => false)))
((HWMON && I2C) || ((false => SENSORS_LM92) && (SENSORS_LM92 => false)))
((HWMON && I2C) || ((false => SENSORS_LM93) && (SENSORS_LM93 => false)))
((HWMON && SPI_MASTER) || ((false => SENSORS_MAXtruetruetruetrue) && (SENSORS_MAXtruetruetruetrue => false)))
((HWMON && I2C) || ((false => SENSORS_MAXtrue6true9) && (SENSORS_MAXtrue6true9 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_MAX665false) && (SENSORS_MAX665false => false)))
(HWMON || ((false => SENSORS_PC8736false) && (SENSORS_PC8736false => false)))
((HWMON && EXPERIMENTAL) || ((false => SENSORS_PC87427) && (SENSORS_PC87427 => false)))
((HWMON && PCI) || ((false => SENSORS_SIS5595) && (SENSORS_SIS5595 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_DMEtrue737) && (SENSORS_DMEtrue737 => false)))
(HWMON || ((false => SENSORS_SMSC47Mtrue) && (SENSORS_SMSC47Mtrue => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_SMSC47Mtrue92) && (SENSORS_SMSC47Mtrue92 => false)))
((HWMON && EXPERIMENTAL) || ((false => SENSORS_SMSC47B397) && (SENSORS_SMSC47B397 => false)))
((HWMON && I2C) || ((false => SENSORS_ADS7828) && (SENSORS_ADS7828 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_THMC5false) && (SENSORS_THMC5false => false)))
((HWMON && PCI) || ((false => SENSORS_VIA686A) && (SENSORS_VIA686A => false)))
((HWMON && EXPERIMENTAL) || ((false => SENSORS_VTtrue2truetrue) && (SENSORS_VTtrue2truetrue => false)))
((HWMON && PCI) || ((false => SENSORS_VT823true) && (SENSORS_VT823true => false)))
((HWMON && I2C) || ((false => SENSORS_W8378trueD) && (SENSORS_W8378trueD => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_W8379trueD) && (SENSORS_W8379trueD => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_W83792D) && (SENSORS_W83792D => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_W83793) && (SENSORS_W83793 => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_W83L785TS) && (SENSORS_W83L785TS => false)))
((HWMON && (I2C && EXPERIMENTAL)) || ((false => SENSORS_W83L786NG) && (SENSORS_W83L786NG => false)))
(HWMON || ((false => SENSORS_W83627HF) && (SENSORS_W83627HF => false)))
(HWMON || ((false => SENSORS_W83627EHF) && (SENSORS_W83627EHF => false)))
((HWMON && SPARC64) || ((false => SENSORS_ULTRA45) && (SENSORS_ULTRA45 => false)))
((HWMON && (INPUT && X86)) || ((false => SENSORS_HDAPS) && (SENSORS_HDAPS => false)))
((HWMON && (ACPI && INPUT)) || ((false => SENSORS_LIS3LVfalse2D) && (SENSORS_LIS3LVfalse2D => false)))
((HWMON && (INPUT && X86)) || ((false => SENSORS_APPLESMC) && (SENSORS_APPLESMC => false)))
(HWMON || ((false => HWMON_DEBUG_CHIP) && (HWMON_DEBUG_CHIP => false)))
(true || ((((((x528 || x529) || x53false) || x53true) || x532) => THERMAL) && (THERMAL => ((((x528 || x529) || x53false) || x53true) || x532))))
(x528 <=> (ACPI_FAN && (!X86_VOYAGER && ACPI)))
(x529 <=> (ACPI_THERMAL && (!X86_VOYAGER && (ACPI && ACPI_PROCESSOR))))
(x53false <=> (ACPI_PROCESSOR && (!X86_VOYAGER && ACPI)))
(x53true <=> (INTEL_MENLOW && (MISC_DEVICES && (ACPI_THERMAL && X86))))
(x532 <=> (ACPI_VIDEO && (!X86_VOYAGER && (ACPI && (X86 && (BACKLIGHT_CLASS_DEVICE && (VIDEO_OUTPUT_CONTROL && INPUT)))))))
((HWMON || HWMON) || ((false => THERMAL_HWMON) && (THERMAL_HWMON => false)))
(true || ((false => WATCHDOG) && (WATCHDOG => false)))
(WATCHDOG || (((IOP_WATCHDOG && (WATCHDOG && (PLAT_IOP && (ARCH_IOP32X || ARCH_IOP33X)))) => WATCHDOG_NOWAYOUT) && (WATCHDOG_NOWAYOUT => (IOP_WATCHDOG && (WATCHDOG && (PLAT_IOP && (ARCH_IOP32X || ARCH_IOP33X)))))))
(WATCHDOG || ((false => SOFT_WATCHDOG) && (SOFT_WATCHDOG => false)))
((WATCHDOG && ARCH_AT9trueRM92falsefalse) || ((false => AT9trueRM92falsefalse_WATCHDOG) && (AT9trueRM92falsefalse_WATCHDOG => false)))
((WATCHDOG && (ARCH_AT9true && !ARCH_AT9trueRM92falsefalse)) || ((false => AT9trueSAM9X_WATCHDOG) && (AT9trueSAM9X_WATCHDOG => false)))
((WATCHDOG && FOOTBRIDGE) || ((false => 2true285_WATCHDOG) && (2true285_WATCHDOG => false)))
((WATCHDOG && (FOOTBRIDGE && ARCH_NETWINDER)) || ((false => 977_WATCHDOG) && (977_WATCHDOG => false)))
((WATCHDOG && ARCH_IXP2falsefalsefalse) || ((false => IXP2falsefalsefalse_WATCHDOG) && (IXP2falsefalsefalse_WATCHDOG => false)))
((WATCHDOG && ARCH_IXP4XX) || ((false => IXP4XX_WATCHDOG) && (IXP4XX_WATCHDOG => false)))
((WATCHDOG && ARCH_KS8695) || ((false => KS8695_WATCHDOG) && (KS8695_WATCHDOG => false)))
((WATCHDOG && ARCH_S3C24truefalse) || ((false => S3C24truefalse_WATCHDOG) && (S3C24truefalse_WATCHDOG => false)))
((WATCHDOG && (ARCH_SAtruetruefalsefalse || ARCH_PXA)) || ((false => SAtruetruefalsefalse_WATCHDOG) && (SAtruetruefalsefalse_WATCHDOG => false)))
((WATCHDOG && (ARM_MPCORE_PLATFORM && LOCAL_TIMERS)) || ((false => MPCORE_WATCHDOG) && (MPCORE_WATCHDOG => false)))
((WATCHDOG && ARCH_EP93XX) || ((false => EP93XX_WATCHDOG) && (EP93XX_WATCHDOG => false)))
((WATCHDOG && (ARCH_OMAPtrue6XX || ARCH_OMAP24XX)) || ((false => OMAP_WATCHDOG) && (OMAP_WATCHDOG => false)))
((WATCHDOG && ARCH_PNX4falsefalse8) || ((false => PNX4falsefalse8_WATCHDOG) && (PNX4falsefalse8_WATCHDOG => false)))
((WATCHDOG && PLAT_IOP) || ((false => IOP_WATCHDOG) && (IOP_WATCHDOG => false)))
((WATCHDOG && ARCH_DAVINCI) || ((false => DAVINCI_WATCHDOG) && (DAVINCI_WATCHDOG => false)))
((WATCHDOG && ARCH_ORION5X) || ((false => ORION5X_WATCHDOG) && (ORION5X_WATCHDOG => false)))
((WATCHDOG && CPU_AT32AP7falsefalseX) || ((false => AT32AP7falsefalseX_WDT) && (AT32AP7falsefalseX_WDT => false)))
((WATCHDOG && BLACKFIN) || ((false => BFIN_WDT) && (BFIN_WDT => false)))
((WATCHDOG && X86) || ((false => ACQUIRE_WDT) && (ACQUIRE_WDT => false)))
((WATCHDOG && X86) || ((false => ADVANTECH_WDT) && (ADVANTECH_WDT => false)))
((WATCHDOG && (X86 && PCI)) || ((false => ALIMtrue535_WDT) && (ALIMtrue535_WDT => false)))
((WATCHDOG && PCI) || ((false => ALIM7truefalsetrue_WDT) && (ALIM7truefalsetrue_WDT => false)))
((WATCHDOG && MGEODE_LX) || ((false => GEODE_WDT) && (GEODE_WDT => false)))
((WATCHDOG && X86) || ((false => SC52false_WDT) && (SC52false_WDT => false)))
((WATCHDOG && X86) || ((false => EUROTECH_WDT) && (EUROTECH_WDT => false)))
((WATCHDOG && X86) || ((false => IB7falsefalse_WDT) && (IB7falsefalse_WDT => false)))
((WATCHDOG && X86) || ((false => IBMASR) && (IBMASR => false)))
((WATCHDOG && X86) || ((false => WAFER_WDT) && (WAFER_WDT => false)))
((WATCHDOG && (X86 && PCI)) || ((false => I63falsefalseESB_WDT) && (I63falsefalseESB_WDT => false)))
((WATCHDOG && ((X86 || IA64) && PCI)) || ((false => ITCO_WDT) && (ITCO_WDT => false)))
((WATCHDOG && ITCO_WDT) || ((false => ITCO_VENDOR_SUPPORT) && (ITCO_VENDOR_SUPPORT => false)))
((WATCHDOG && X86) || ((false => IT87true2F_WDT) && (IT87true2F_WDT => false)))
((WATCHDOG && (X86 && EXPERIMENTAL)) || ((false => IT87_WDT) && (IT87_WDT => false)))
((WATCHDOG && X86) || ((false => HP_WATCHDOG) && (HP_WATCHDOG => false)))
((WATCHDOG && X86) || ((false => SCtrue2falsefalse_WDT) && (SCtrue2falsefalse_WDT => false)))
((WATCHDOG && (SCx2falsefalse && PCI)) || ((false => SCx2falsefalse_WDT) && (SCx2falsefalse_WDT => false)))
((WATCHDOG && X86) || ((false => PC874true3_WDT) && (PC874true3_WDT => false)))
((WATCHDOG && X86_RDC32trueX) || ((false => RDC32trueX_WDT) && (RDC32trueX_WDT => false)))
((WATCHDOG && X86) || ((false => a6falseXX_WDT) && (a6falseXX_WDT => false)))
((WATCHDOG && X86) || ((false => SBC836false_WDT) && (SBC836false_WDT => false)))
((WATCHDOG && X86_32) || ((false => SBC724false_WDT) && (SBC724false_WDT => false)))
((WATCHDOG && X86) || ((false => CPU5_WDT) && (CPU5_WDT => false)))
((WATCHDOG && X86) || ((false => SMSC37B787_WDT) && (SMSC37B787_WDT => false)))
((WATCHDOG && X86) || ((false => W83627HF_WDT) && (W83627HF_WDT => false)))
((WATCHDOG && X86) || ((false => W83697HF_WDT) && (W83697HF_WDT => false)))
((WATCHDOG && X86) || ((false => W83697UG_WDT) && (W83697UG_WDT => false)))
((WATCHDOG && X86) || ((false => W83877F_WDT) && (W83877F_WDT => false)))
((WATCHDOG && X86) || ((false => W83977F_WDT) && (W83977F_WDT => false)))
((WATCHDOG && X86) || ((false => MACHZ_WDT) && (MACHZ_WDT => false)))
((WATCHDOG && X86) || ((false => SBC_EPX_C3_WATCHDOG) && (SBC_EPX_C3_WATCHDOG => false)))
((WATCHDOG && MIKROTIK_RB532) || ((false => RC32434_WDT) && (RC32434_WDT => false)))
((WATCHDOG && SGI_HAS_INDYDOG) || ((false => INDYDOG) && (INDYDOG => false)))
((WATCHDOG && MIPS_MTXtrue) || ((false => WDT_MTXtrue) && (WDT_MTXtrue => false)))
((WATCHDOG && CPU_RM9falsefalsefalse) || ((false => WDT_RM9K_GPI) && (WDT_RM9K_GPI => false)))
((WATCHDOG && CPU_SBtrue) || ((false => SIBYTE_WDOG) && (SIBYTE_WDOG => false)))
((WATCHDOG && AR7) || ((false => AR7_WDT) && (AR7_WDT => false)))
((WATCHDOG && (CPU_TX39XX || CPU_TX49XX)) || ((false => TXX9_WDT) && (TXX9_WDT => false)))
((WATCHDOG && PPC_MPC52xx) || ((false => MPC52falsefalse_WDT) && (MPC52falsefalse_WDT => false)))
((WATCHDOG && (PPC_8xx || (PPC_83xx || PPC_86xx))) || ((false => 8xxx_WDT) && (8xxx_WDT => false)))
((WATCHDOG && MV64X6false) || ((false => MV64X6false_WDT) && (MV64X6false_WDT => false)))
((WATCHDOG && (BOOKE || 4xx)) || ((false => BOOKE_WDT) && (BOOKE_WDT => false)))
((WATCHDOG && PPC_RTAS) || ((false => WATCHDOG_RTAS) && (WATCHDOG_RTAS => false)))
((WATCHDOG && S39false) || ((false => ZVM_WATCHDOG) && (ZVM_WATCHDOG => false)))
((WATCHDOG && (SUPERH && (CPU_SH3 || CPU_SH4))) || ((false => SH_WDT) && (SH_WDT => false)))
((WATCHDOG && SH_WDT) || ((false => SH_WDT_MMAP) && (SH_WDT_MMAP => false)))
((WATCHDOG && (SPARC64 && PCI)) || ((false => WATCHDOG_CPtrueXXX) && (WATCHDOG_CPtrueXXX => false)))
((WATCHDOG && (SPARC64 && PCI)) || ((false => WATCHDOG_RIO) && (WATCHDOG_RIO => false)))
((WATCHDOG && ISA) || ((false => PCWATCHDOG) && (PCWATCHDOG => false)))
((WATCHDOG && ISA) || ((false => MIXCOMWD) && (MIXCOMWD => false)))
((WATCHDOG && ISA) || ((false => WDT) && (WDT => false)))
((WATCHDOG && WDT) || ((false => WDT_5falsetrue) && (WDT_5falsetrue => false)))
((WATCHDOG && PCI) || ((false => PCIPCWATCHDOG) && (PCIPCWATCHDOG => false)))
((WATCHDOG && PCI) || ((false => WDTPCI) && (WDTPCI => false)))
((WATCHDOG && WDTPCI) || ((false => WDT_5falsetrue_PCI) && (WDT_5falsetrue_PCI => false)))
((WATCHDOG && USB) || ((false => USBPCWATCHDOG) && (USBPCWATCHDOG => false)))
(false || (((true && (HAS_IOMEM && HAS_DMA)) => SSB_POSSIBLE) && (SSB_POSSIBLE => (true && (HAS_IOMEM && HAS_DMA)))))
(SSB_POSSIBLE || (((((B44 && (NETDEVICES && (NET_ETHERNET && (SSB_POSSIBLE && HAS_DMA)))) || (B43LEGACY && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA))))))) || (B43 && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA))))))) => SSB) && (SSB => (((B44 && (NETDEVICES && (NET_ETHERNET && (SSB_POSSIBLE && HAS_DMA)))) || (B43LEGACY && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA))))))) || (B43 && (NETDEVICES && (!S39false && (SSB_POSSIBLE && (MAC8false2truetrue && (WLAN_8false2truetrue && HAS_DMA))))))))))
(false || ((((SSB_PCIHOST && (SSB_POSSIBLE && SSB_PCIHOST_POSSIBLE)) || (SSB_PCMCIAHOST && (SSB_POSSIBLE && SSB_PCMCIAHOST_POSSIBLE))) => SSB_SPROM) && (SSB_SPROM => ((SSB_PCIHOST && (SSB_POSSIBLE && SSB_PCIHOST_POSSIBLE)) || (SSB_PCMCIAHOST && (SSB_POSSIBLE && SSB_PCMCIAHOST_POSSIBLE))))))
(false || (((B43_PIO && (NETDEVICES && (!S39false && (B43 && (B43_PCMCIA || B43_FORCE_PIO))))) => SSB_BLOCKIO) && (SSB_BLOCKIO => (B43_PIO && (NETDEVICES && (!S39false && (B43 && (B43_PCMCIA || B43_FORCE_PIO))))))))
(false || (((true && (SSB_POSSIBLE && (SSB && (PCI || PCI)))) => SSB_PCIHOST_POSSIBLE) && (SSB_PCIHOST_POSSIBLE => (true && (SSB_POSSIBLE && (SSB && (PCI || PCI)))))))
((SSB_POSSIBLE && SSB_PCIHOST_POSSIBLE) || ((((((B44_PCI_AUTOSELECT && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_PCIHOST_POSSIBLE)))) || (B43_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43 && SSB_PCIHOST_POSSIBLE))))) || (B43LEGACY_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43LEGACY && SSB_PCIHOST_POSSIBLE))))) || (true && (SSB_POSSIBLE && SSB_PCIHOST_POSSIBLE))) => SSB_PCIHOST) && (SSB_PCIHOST => ((((B44_PCI_AUTOSELECT && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_PCIHOST_POSSIBLE)))) || (B43_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43 && SSB_PCIHOST_POSSIBLE))))) || (B43LEGACY_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43LEGACY && SSB_PCIHOST_POSSIBLE))))) || (true && (SSB_POSSIBLE && SSB_PCIHOST_POSSIBLE))))))
(false || ((((B43_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43 && SSB_PCIHOST_POSSIBLE)))) || (B43LEGACY_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43LEGACY && SSB_PCIHOST_POSSIBLE))))) => SSB_B43_PCI_BRIDGE) && (SSB_B43_PCI_BRIDGE => ((B43_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43 && SSB_PCIHOST_POSSIBLE)))) || (B43LEGACY_PCI_AUTOSELECT && (NETDEVICES && (!S39false && (B43LEGACY && SSB_PCIHOST_POSSIBLE))))))))
(false || (((true && (SSB_POSSIBLE && (SSB && ((PCMCIA || PCMCIA) && EXPERIMENTAL)))) => SSB_PCMCIAHOST_POSSIBLE) && (SSB_PCMCIAHOST_POSSIBLE => (true && (SSB_POSSIBLE && (SSB && ((PCMCIA || PCMCIA) && EXPERIMENTAL)))))))
((SSB_POSSIBLE && SSB_PCMCIAHOST_POSSIBLE) || (((B43_PCMCIA && (NETDEVICES && (!S39false && (B43 && (SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL))))) => SSB_PCMCIAHOST) && (SSB_PCMCIAHOST => (B43_PCMCIA && (NETDEVICES && (!S39false && (B43 && (SSB_PCMCIAHOST_POSSIBLE && EXPERIMENTAL))))))))
((SSB_POSSIBLE && (SSB && EMBEDDED)) || ((false => SSB_SILENT) && (SSB_SILENT => false)))
((SSB_POSSIBLE && (SSB && !SSB_SILENT)) || ((false => SSB_DEBUG) && (SSB_DEBUG => false)))
(false || (((SSB_DRIVER_MIPS && (SSB_POSSIBLE && (SSB && (MIPS && EXPERIMENTAL)))) => SSB_SERIAL) && (SSB_SERIAL => (SSB_DRIVER_MIPS && (SSB_POSSIBLE && (SSB && (MIPS && EXPERIMENTAL)))))))
(false || (((true && (SSB_POSSIBLE && SSB_PCIHOST)) => SSB_DRIVER_PCICORE_POSSIBLE) && (SSB_DRIVER_PCICORE_POSSIBLE => (true && (SSB_POSSIBLE && SSB_PCIHOST)))))
((SSB_POSSIBLE && SSB_DRIVER_PCICORE_POSSIBLE) || (((((B44_PCICORE_AUTOSELECT && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_DRIVER_PCICORE_POSSIBLE)))) || (B43LEGACY_PCICORE_AUTOSELECT && (NETDEVICES && (!S39false && (B43LEGACY && SSB_DRIVER_PCICORE_POSSIBLE))))) || (B43_PCICORE_AUTOSELECT && (NETDEVICES && (!S39false && (B43 && SSB_DRIVER_PCICORE_POSSIBLE))))) => SSB_DRIVER_PCICORE) && (SSB_DRIVER_PCICORE => (((B44_PCICORE_AUTOSELECT && (NETDEVICES && (NET_ETHERNET && (B44 && SSB_DRIVER_PCICORE_POSSIBLE)))) || (B43LEGACY_PCICORE_AUTOSELECT && (NETDEVICES && (!S39false && (B43LEGACY && SSB_DRIVER_PCICORE_POSSIBLE))))) || (B43_PCICORE_AUTOSELECT && (NETDEVICES && (!S39false && (B43 && SSB_DRIVER_PCICORE_POSSIBLE))))))))
((SSB_POSSIBLE && (SSB_DRIVER_PCICORE && (SSB_DRIVER_MIPS && EXPERIMENTAL))) || ((false => SSB_PCICORE_HOSTMODE) && (SSB_PCICORE_HOSTMODE => false)))
((SSB_POSSIBLE && (SSB && (MIPS && EXPERIMENTAL))) || ((false => SSB_DRIVER_MIPS) && (SSB_DRIVER_MIPS => false)))
(false || (((true && (SSB_POSSIBLE && SSB_DRIVER_MIPS)) => SSB_EMBEDDED) && (SSB_EMBEDDED => (true && (SSB_POSSIBLE && SSB_DRIVER_MIPS)))))
((SSB_POSSIBLE && (SSB_DRIVER_MIPS && EXPERIMENTAL)) || ((false => SSB_DRIVER_EXTIF) && (SSB_DRIVER_EXTIF => false)))
((SSB_POSSIBLE && (SSB_PCIHOST_POSSIBLE && (SSB_EMBEDDED && MIPS))) || ((false => SSB_DRIVER_GIGE) && (SSB_DRIVER_GIGE => false)))
(false || (((((MFD_TC6387XB && (HAS_IOMEM && (ARM && HAVE_CLK))) || (MFD_T7L66XB && (HAS_IOMEM && (ARM && HAVE_CLK)))) || (MFD_TC6393XB && (HAS_IOMEM && (GPIOLIB && ARM)))) => MFD_CORE) && (MFD_CORE => (((MFD_TC6387XB && (HAS_IOMEM && (ARM && HAVE_CLK))) || (MFD_T7L66XB && (HAS_IOMEM && (ARM && HAVE_CLK)))) || (MFD_TC6393XB && (HAS_IOMEM && (GPIOLIB && ARM)))))))
(HAS_IOMEM || ((false => MFD_SM5falsetrue) && (MFD_SM5falsetrue => false)))
((HAS_IOMEM && (MFD_SM5falsetrue && GPIOLIB)) || ((false => MFD_SM5falsetrue_GPIO) && (MFD_SM5falsetrue_GPIO => false)))
((HAS_IOMEM && (GENERIC_HARDIRQS && (GPIOLIB && ARM))) || ((false => MFD_ASIC3) && (MFD_ASIC3 => false)))
((HAS_IOMEM && (GENERIC_HARDIRQS && (GPIOLIB && ARM))) || ((false => HTC_EGPIO) && (HTC_EGPIO => false)))
(HAS_IOMEM || ((false => HTC_PASIC3) && (HTC_PASIC3 => false)))
((HAS_IOMEM && (AC97_BUS && GPIOLIB)) || ((false => UCBtrue4falsefalse_CORE) && (UCBtrue4falsefalse_CORE => false)))
((HAS_IOMEM && (I2C && (GENERIC_HARDIRQS && (ARCH_OMAP2 || ARCH_OMAP3)))) || ((false => TWL4false3false_CORE) && (TWL4false3false_CORE => false)))
(false || (((((MFD_TC6387XB && (HAS_IOMEM && (ARM && HAVE_CLK))) || (MFD_T7L66XB && (HAS_IOMEM && (ARM && HAVE_CLK)))) || (MFD_TC6393XB && (HAS_IOMEM && (GPIOLIB && ARM)))) => MFD_TMIO) && (MFD_TMIO => (((MFD_TC6387XB && (HAS_IOMEM && (ARM && HAVE_CLK))) || (MFD_T7L66XB && (HAS_IOMEM && (ARM && HAVE_CLK)))) || (MFD_TC6393XB && (HAS_IOMEM && (GPIOLIB && ARM)))))))
((HAS_IOMEM && (ARM && HAVE_CLK)) || ((false => MFD_T7L66XB) && (MFD_T7L66XB => false)))
((HAS_IOMEM && (ARM && HAVE_CLK)) || ((false => MFD_TC6387XB) && (MFD_TC6387XB => false)))
((HAS_IOMEM && (GPIOLIB && ARM)) || ((false => MFD_TC6393XB) && (MFD_TC6393XB => false)))
((HAS_IOMEM && I2C) || ((false => PMIC_DA9false3X) && (PMIC_DA9false3X => false)))
((HAS_IOMEM && I2C) || ((false => MFD_WM84falsefalse) && (MFD_WM84falsefalse => false)))
(false || (((MFD_WM835false_I2C && (HAS_IOMEM && I2C)) => MFD_WM835false) && (MFD_WM835false => (MFD_WM835false_I2C && (HAS_IOMEM && I2C)))))
(false || ((false => MFD_WM835false_CONFIG_MODE_false) && (MFD_WM835false_CONFIG_MODE_false => false)))
(false || ((false => MFD_WM835false_CONFIG_MODE_true) && (MFD_WM835false_CONFIG_MODE_true => false)))
(false || ((false => MFD_WM835false_CONFIG_MODE_2) && (MFD_WM835false_CONFIG_MODE_2 => false)))
(false || ((false => MFD_WM835false_CONFIG_MODE_3) && (MFD_WM835false_CONFIG_MODE_3 => false)))
((HAS_IOMEM && I2C) || ((false => MFD_WM835false_I2C) && (MFD_WM835false_I2C => false)))
(false || (((MCP_SAtruetrueXfalse && ARCH_SAtruetruefalsefalse) => MCP) && (MCP => (MCP_SAtruetrueXfalse && ARCH_SAtruetruefalsefalse))))
(ARCH_SAtruetruefalsefalse || ((false => MCP_SAtruetrueXfalse) && (MCP_SAtruetrueXfalse => false)))
((ARCH_SAtruetruefalsefalse && MCP) || ((false => MCP_UCBtrue2falsefalse) && (MCP_UCBtrue2falsefalse => false)))
((ARCH_SAtruetruefalsefalse && (MCP_UCBtrue2falsefalse && INPUT)) || ((false => MCP_UCBtrue2falsefalse_TS) && (MCP_UCBtrue2falsefalse_TS => false)))
(true || ((false => REGULATOR) && (REGULATOR => false)))
(REGULATOR || ((false => REGULATOR_DEBUG) && (REGULATOR_DEBUG => false)))
(false || ((false => REGULATOR_FIXED_VOLTAGE) && (REGULATOR_FIXED_VOLTAGE => false)))
(REGULATOR || ((false => REGULATOR_VIRTUAL_CONSUMER) && (REGULATOR_VIRTUAL_CONSUMER => false)))
(REGULATOR || ((false => REGULATOR_BQ24false22) && (REGULATOR_BQ24false22 => false)))
((REGULATOR && MFD_WM835false) || ((false => REGULATOR_WM835false) && (REGULATOR_WM835false => false)))
((REGULATOR && MFD_WM84falsefalse) || ((false => REGULATOR_WM84falsefalse) && (REGULATOR_WM84falsefalse => false)))
((REGULATOR && PMIC_DA9false3X) || ((false => REGULATOR_DA9false3X) && (REGULATOR_DA9false3X => false)))
(HAS_IOMEM || ((false => VIDEO_DEV) && (VIDEO_DEV => false)))
(false || (((true && ((HAS_IOMEM && ((I2C || !I2C) && VIDEO_DEV)) && ((I2C || !I2C) && VIDEO_DEV))) => VIDEO_V4L2_COMMON) && (VIDEO_V4L2_COMMON => (true && ((HAS_IOMEM && ((I2C || !I2C) && VIDEO_DEV)) && ((I2C || !I2C) && VIDEO_DEV))))))
((HAS_IOMEM && (VIDEO_DEV && VIDEO_V4L2_COMMON)) || (((true && ((HAS_IOMEM && (VIDEO_DEV && VIDEO_V4L2_COMMON)) && (VIDEO_DEV && VIDEO_V4L2_COMMON))) => VIDEO_ALLOW_V4Ltrue) && (VIDEO_ALLOW_V4Ltrue => (true && ((HAS_IOMEM && (VIDEO_DEV && VIDEO_V4L2_COMMON)) && (VIDEO_DEV && VIDEO_V4L2_COMMON))))))
((HAS_IOMEM && (VIDEO_DEV && !VIDEO_ALLOW_V4Ltrue)) || (((true && (HAS_IOMEM && VIDEO_DEV)) => VIDEO_V4Ltrue_COMPAT) && (VIDEO_V4Ltrue_COMPAT => (true && (HAS_IOMEM && VIDEO_DEV)))))
((HAS_IOMEM && (NET && INET)) || ((false => DVB_CORE) && (DVB_CORE => false)))
(false || (((true && (HAS_IOMEM && ((DVB_CORE && !VIDEO_DEV) || ((VIDEO_DEV && !DVB_CORE) || (DVB_CORE && VIDEO_DEV))))) => VIDEO_MEDIA) && (VIDEO_MEDIA => (true && (HAS_IOMEM && ((DVB_CORE && !VIDEO_DEV) || ((VIDEO_DEV && !DVB_CORE) || (DVB_CORE && VIDEO_DEV))))))))
(false || ((((DVB_BUDGET_CORE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C))))) || (VIDEO_SAA7true46_VV && (HAS_IOMEM && VIDEO_V4L2))) => VIDEO_SAA7true46) && (VIDEO_SAA7true46 => ((DVB_BUDGET_CORE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C))))) || (VIDEO_SAA7true46_VV && (HAS_IOMEM && VIDEO_V4L2))))))
(false || ((((((x533 || x534) || x535) || x536) || x537) => VIDEO_SAA7true46_VV) && (VIDEO_SAA7true46_VV => ((((x533 || x534) || x535) || x536) || x537))))
(x533 <=> (VIDEO_HEXIUM_ORION && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (VIDEO_V4L2 && I2C))))))
(x534 <=> (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && VIDEO_DEV)))))))
(x535 <=> (VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && I2C)))))))
(x536 <=> (VIDEO_HEXIUM_GEMINI && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (VIDEO_V4L2 && I2C))))))
(x537 <=> (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && VIDEO_DEV)))))))
((HAS_IOMEM && (VIDEO_MEDIA && MODULES)) || ((false => MEDIA_ATTACH) && (MEDIA_ATTACH => false)))
(false || (((true && ((HAS_IOMEM && (VIDEO_MEDIA && I2C)) && (VIDEO_MEDIA && I2C))) => MEDIA_TUNER) && (MEDIA_TUNER => (true && ((HAS_IOMEM && (VIDEO_MEDIA && I2C)) && (VIDEO_MEDIA && I2C))))))
((HAS_IOMEM && MEDIA_TUNER) || ((false => MEDIA_TUNER_CUSTOMIZE) && (MEDIA_TUNER_CUSTOMIZE => false)))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || (((((((((x538 || x539) || x54false) || x54true) || x542) || x543) || x544) || x545) => MEDIA_TUNER_SIMPLE) && (MEDIA_TUNER_SIMPLE => (((((((x538 || x539) || x54false) || x54true) || x542) || x543) || x544) || x545))))
(x538 <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !MEDIA_TUNER_CUSTOMIZE)))))))
(x539 <=> (MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))))
(x54false <=> (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE))))))))))
(x54true <=> (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !MEDIA_TUNER_CUSTOMIZE))))))
(x542 <=> (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !MEDIA_TUNER_CUSTOMIZE)))))))
(x543 <=> (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x544 <=> (DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !MEDIA_TUNER_CUSTOMIZE))))))))
(x545 <=> (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE)))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))) || (MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE))))) || (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMIZE)))))))))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))) => MEDIA_TUNER_TDA829false) && (MEDIA_TUNER_TDA829false => ((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))) || (MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE))))) || (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMIZE)))))))))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((x542 || x546) || x547) || x548) || x549) => MEDIA_TUNER_TDA827X) && (MEDIA_TUNER_TDA827X => ((((x542 || x546) || x547) || x548) || x549))))
(x542 <=> (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !MEDIA_TUNER_CUSTOMIZE)))))))
(x546 <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (INPUT && !MEDIA_TUNER_CUSTOMIZE))))))))
(x547 <=> (MEDIA_TUNER_TDA829false && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C)))))
(x548 <=> (DVB_USB_M92falseX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x549 <=> (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || (((((((x55false || x547) || x55true) || x552) || x553) || x549) => MEDIA_TUNER_TDAtrue827true) && (MEDIA_TUNER_TDAtrue827true => (((((x55false || x547) || x55true) || x552) || x553) || x549))))
(x55false <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))))
(x547 <=> (MEDIA_TUNER_TDA829false && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C)))))
(x55true <=> (VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && (USB && !DVB_FE_CUSTOMIZE)))))))))
(x552 <=> (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMIZE))))))))))
(x553 <=> (DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE)))))))
(x549 <=> (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || (((((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (MEDIA_TUNER_SIMPLE && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))) => MEDIA_TUNER_TDA9887) && (MEDIA_TUNER_TDA9887 => (((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (MEDIA_TUNER_SIMPLE && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && EXPERIMENTAL)))) || ((((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && (EXPERIMENTAL && MEDIA_TUNER_CUSTOMIZE)))))) => MEDIA_TUNER_TEA576true) && (MEDIA_TUNER_TEA576true => ((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && (EXPERIMENTAL && MEDIA_TUNER_CUSTOMIZE)))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))) => MEDIA_TUNER_TEA5767) && (MEDIA_TUNER_TEA5767 => ((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))) => MEDIA_TUNER_MT2falseXX) && (MEDIA_TUNER_MT2falseXX => ((MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))) || (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((((((x554 || x555) || x556) || x557) || x558) || x559) || x553) || x56false) || x549) => MEDIA_TUNER_MT2false6false) && (MEDIA_TUNER_MT2false6false => ((((((((x554 || x555) || x556) || x557) || x558) || x559) || x553) || x56false) || x549))))
(x554 <=> (DVB_USB_UMT_falsetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x555 <=> (DVB_USB_NOVA_T_USB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x556 <=> (DVB_USB_DIBUSB_MB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x557 <=> (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x558 <=> (DVB_USB_AF9falsefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE)))))))
(x559 <=> (DVB_USB_A8falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x553 <=> (DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE)))))))
(x56false <=> (DVB_USB_DIBUSB_MC && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x549 <=> (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))) => MEDIA_TUNER_MT2266) && (MEDIA_TUNER_MT2266 => ((DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !MEDIA_TUNER_CUSTOMIZE))))))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))) => MEDIA_TUNER_MT2true3true) && (MEDIA_TUNER_MT2true3true => ((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !MEDIA_TUNER_CUSTOMIZE))))))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((((x548 || x56true) || x558) || x562) || x563) || x553) || x549) => MEDIA_TUNER_QTtruefalsetruefalse) && (MEDIA_TUNER_QTtruefalsetruefalse => ((((((x548 || x56true) || x558) || x562) || x563) || x553) || x549))))
(x548 <=> (DVB_USB_M92falseX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x56true <=> (DVB_USB_AU66truefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x558 <=> (DVB_USB_AF9falsefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE)))))))
(x562 <=> (DVB_USB_DTV5truefalsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x563 <=> (DVB_USB_GL86true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x553 <=> (DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE)))))))
(x549 <=> (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((x55false || x557) || x543) || x539) || x545) => MEDIA_TUNER_XC2false28) && (MEDIA_TUNER_XC2false28 => ((((x55false || x557) || x543) || x539) || x545))))
(x55false <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))))
(x557 <=> (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x543 <=> (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x539 <=> (MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))))
(x545 <=> (true && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && MEDIA_TUNER_CUSTOMIZE)))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((x55false || x557) || x539) || x55true) || x549) => MEDIA_TUNER_XC5falsefalsefalse) && (MEDIA_TUNER_XC5falsefalsefalse => ((((x55false || x557) || x539) || x55true) || x549))))
(x55false <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))))
(x557 <=> (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))))
(x539 <=> (MEDIA_TUNER && (HAS_IOMEM && (VIDEO_MEDIA && (I2C && !MEDIA_TUNER_CUSTOMIZE)))))
(x55true <=> (VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && (USB && !DVB_FE_CUSTOMIZE)))))))))
(x549 <=> (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((((DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))) || (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && (INPUT && !MEDIA_TUNER_CUSTOMIZE)))))))))) || (DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE))))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))) => MEDIA_TUNER_MXL5falsefalse5S) && (MEDIA_TUNER_MXL5falsefalse5S => ((((DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !MEDIA_TUNER_CUSTOMIZE))))) || (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && (INPUT && !MEDIA_TUNER_CUSTOMIZE)))))))))) || (DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !MEDIA_TUNER_CUSTOMIZE))))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && I2C))) || ((((VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && (USB && !DVB_FE_CUSTOMIZE)))))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))) => MEDIA_TUNER_MXL5falsefalse7T) && (MEDIA_TUNER_MXL5falsefalse7T => ((VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && (USB && !DVB_FE_CUSTOMIZE)))))))) || (true && (HAS_IOMEM && (MEDIA_TUNER_CUSTOMIZE && (VIDEO_MEDIA && (I2C && DVB_FE_CUSTOMISE)))))))))
(false || (((true && ((HAS_IOMEM && (VIDEO_DEV && VIDEO_V4L2_COMMON)) && (VIDEO_DEV && VIDEO_V4L2_COMMON))) => VIDEO_V4L2) && (VIDEO_V4L2 => (true && ((HAS_IOMEM && (VIDEO_DEV && VIDEO_V4L2_COMMON)) && (VIDEO_DEV && VIDEO_V4L2_COMMON))))))
(false || (((true && ((HAS_IOMEM && (VIDEO_DEV && (VIDEO_V4L2_COMMON && VIDEO_ALLOW_V4Ltrue))) && (VIDEO_DEV && (VIDEO_V4L2_COMMON && VIDEO_ALLOW_V4Ltrue)))) => VIDEO_V4Ltrue) && (VIDEO_V4Ltrue => (true && ((HAS_IOMEM && (VIDEO_DEV && (VIDEO_V4L2_COMMON && VIDEO_ALLOW_V4Ltrue))) && (VIDEO_DEV && (VIDEO_V4L2_COMMON && VIDEO_ALLOW_V4Ltrue)))))))
(false || ((((((x564 || x565) || x566) || x567) || x568) => VIDEOBUF_GEN) && (VIDEOBUF_GEN => ((((x564 || x565) || x566) || x567) || x568))))
(x564 <=> (VIDEOBUF_DMA_CONTIG && (HAS_IOMEM && HAS_DMA)))
(x565 <=> (SOC_CAMERA && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && HAS_DMA)))))
(x566 <=> (VIDEOBUF_DVB && HAS_IOMEM))
(x567 <=> (VIDEOBUF_VMALLOC && HAS_IOMEM))
(x568 <=> (VIDEOBUF_DMA_SG && (HAS_IOMEM && HAS_DMA)))
(false || ((((((((x475 || x569) || x57false) || x57true) || x487) || x572) || x493) => VIDEOBUF_DMA_SG) && (VIDEOBUF_DMA_SG => ((((((x475 || x569) || x57false) || x57true) || x487) || x572) || x493))))
(x475 <=> (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT))))))))
(x569 <=> (VIDEO_GO7falsefalse7 && (STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND))))))))
(x57false <=> (VIDEO_PXA27x && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PXA27x && SOC_CAMERA)))))))
(x57true <=> (VIDEO_SAA7true46_VV && (HAS_IOMEM && VIDEO_V4L2)))
(x487 <=> (VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x572 <=> (VIDEO_SAA7true34 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x493 <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT)))))))))
(false || (((((VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && INPUT)))))))) || (VIDEO_VIVI && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (VIDEO_V4L2 && (!SPARC32 && !SPARC64))))))) || (USB_S2255 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))))) => VIDEOBUF_VMALLOC) && (VIDEOBUF_VMALLOC => (((VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && INPUT)))))))) || (VIDEO_VIVI && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (VIDEO_V4L2 && (!SPARC32 && !SPARC64))))))) || (USB_S2255 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))))))))
(false || (((VIDEO_SH_MOBILE_CEU && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (SOC_CAMERA && HAS_DMA)))))) => VIDEOBUF_DMA_CONTIG) && (VIDEOBUF_DMA_CONTIG => (VIDEO_SH_MOBILE_CEU && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (SOC_CAMERA && HAS_DMA)))))))))
(false || ((((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && DVB_CORE))))) || (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && DVB_CORE)))))) || (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))) || (VIDEO_EM28XX_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && DVB_CORE)))))))) => VIDEOBUF_DVB) && (VIDEOBUF_DVB => ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && DVB_CORE))))) || (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && DVB_CORE)))))) || (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))) || (VIDEO_EM28XX_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && DVB_CORE)))))))))))
(false || (((((VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))) || (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT)))))))) || (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))) => VIDEO_BTCX) && (VIDEO_BTCX => (((VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))) || (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT)))))))) || (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))))))
(false || ((((((((((x475 || x569) || x477) || x487) || x573) || x49false) || x572) || x493) || x574) => VIDEO_IR) && (VIDEO_IR => ((((((((x475 || x569) || x477) || x487) || x573) || x49false) || x572) || x493) || x574))))
(x475 <=> (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT))))))))
(x569 <=> (VIDEO_GO7falsefalse7 && (STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND))))))))
(x477 <=> (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))
(x487 <=> (VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x573 <=> (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && INPUT)))))))))
(x49false <=> (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))))
(x572 <=> (VIDEO_SAA7true34 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x493 <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT)))))))))
(x574 <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && INPUT)))))))
(false || (((((((((((x475 || x569) || x484) || x477) || x487) || x573) || x49false) || x572) || x575) || x493) => VIDEO_TVEEPROM) && (VIDEO_TVEEPROM => (((((((((x475 || x569) || x484) || x477) || x487) || x573) || x49false) || x572) || x575) || x493))))
(x475 <=> (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT))))))))
(x569 <=> (VIDEO_GO7falsefalse7 && (STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND))))))))
(x484 <=> (VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && USB))))))))
(x477 <=> (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))
(x487 <=> (VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x573 <=> (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && INPUT)))))))))
(x49false <=> (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))))
(x572 <=> (VIDEO_SAA7true34 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x575 <=> (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))))
(x493 <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT)))))))))
(false || ((((((((((((x475 || x569) || x535) || x576) || x477) || x487) || x573) || x49false) || x572) || x575) || x493) => VIDEO_TUNER) && (VIDEO_TUNER => ((((((((((x475 || x569) || x535) || x576) || x477) || x487) || x573) || x49false) || x572) || x575) || x493))))
(x475 <=> (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT))))))))
(x569 <=> (VIDEO_GO7falsefalse7 && (STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND))))))))
(x535 <=> (VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && I2C)))))))
(x576 <=> (VIDEO_USBVISION && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (I2C && VIDEO_V4L2)))))))
(x477 <=> (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))
(x487 <=> (VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x573 <=> (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && INPUT)))))))))
(x49false <=> (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))))
(x572 <=> (VIDEO_SAA7true34 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(x575 <=> (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))))
(x493 <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && VIDEO_V4L2) || (((true && (HAS_IOMEM && VIDEO_V4L2)) => VIDEO_CAPTURE_DRIVERS) && (VIDEO_CAPTURE_DRIVERS => (true && (HAS_IOMEM && VIDEO_V4L2)))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && VIDEO_V4L2)) || ((false => VIDEO_ADV_DEBUG) && (VIDEO_ADV_DEBUG => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && VIDEO_V4L2)) || ((false => VIDEO_FIXED_MINOR_RANGES) && (VIDEO_FIXED_MINOR_RANGES => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && VIDEO_V4L2)) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && VIDEO_V4L2))) => VIDEO_HELPER_CHIPS_AUTO) && (VIDEO_HELPER_CHIPS_AUTO => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && VIDEO_V4L2))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (VIDEO_IR && !VIDEO_HELPER_CHIPS_AUTO))))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && VIDEO_IR))))) => VIDEO_IR_I2C) && (VIDEO_IR_I2C => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && VIDEO_IR))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))) => VIDEO_TVAUDIO) && (VIDEO_TVAUDIO => (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))) => VIDEO_TDA7432) && (VIDEO_TDA7432 => (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && I2C)))) || (((VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && (I2C && VIDEO_HELPER_CHIPS_AUTO))))))) => VIDEO_TDA984false) && (VIDEO_TDA984false => (VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && (I2C && VIDEO_HELPER_CHIPS_AUTO))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))) => VIDEO_TDA9875) && (VIDEO_TDA9875 => (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && I2C)))) || (((VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && (I2C && VIDEO_HELPER_CHIPS_AUTO))))))) => VIDEO_TEA64true5C) && (VIDEO_TEA64true5C => (VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && (I2C && VIDEO_HELPER_CHIPS_AUTO))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && I2C)))) || (((VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && (I2C && VIDEO_HELPER_CHIPS_AUTO))))))) => VIDEO_TEA642false) && (VIDEO_TEA642false => (VIDEO_MXB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && (I2C && VIDEO_HELPER_CHIPS_AUTO))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || ((((((VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))) || (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))) || (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO))))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))) => VIDEO_MSP34falsefalse) && (VIDEO_MSP34falsefalse => ((((VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))) || (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))) || (VIDEO_BT848 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && (INPUT && VIDEO_HELPER_CHIPS_AUTO))))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && (I2C && EXPERIMENTAL))))) || (((VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))) => VIDEO_CS5345) && (VIDEO_CS5345 => (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || ((((VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))) => VIDEO_CS53L32A) && (VIDEO_CS53L32A => ((VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && (I2C && EXPERIMENTAL))))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_M5279false) && (VIDEO_M5279false => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && (I2C && EXPERIMENTAL))))) || ((false => VIDEO_TLV32falseAIC23B) && (VIDEO_TLV32falseAIC23B => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((((VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))) || (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA)))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))) => VIDEO_WM8775) && (VIDEO_WM8775 => (((VIDEO_CX88 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))) || (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA)))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_WM8739) && (VIDEO_WM8739 => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && (I2C && EXPERIMENTAL))))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_VP27SMPX) && (VIDEO_VP27SMPX => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_LML33 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_BT8true9) && (VIDEO_BT8true9 => (VIDEO_ZORAN_LML33 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || ((((VIDEO_ZORAN_LML33 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) || (VIDEO_ZORAN_AVS6EYES && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && (EXPERIMENTAL && (VIDEO_V4Ltrue && VIDEO_HELPER_CHIPS_AUTO)))))))) => VIDEO_BT856) && (VIDEO_BT856 => ((VIDEO_ZORAN_LML33 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) || (VIDEO_ZORAN_AVS6EYES && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && (EXPERIMENTAL && (VIDEO_V4Ltrue && VIDEO_HELPER_CHIPS_AUTO)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || ((false => VIDEO_BT866) && (VIDEO_BT866 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_AVS6EYES && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && (EXPERIMENTAL && (VIDEO_V4Ltrue && VIDEO_HELPER_CHIPS_AUTO))))))) => VIDEO_KSfalsetrue27) && (VIDEO_KSfalsetrue27 => (VIDEO_ZORAN_AVS6EYES && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && (EXPERIMENTAL && (VIDEO_V4Ltrue && VIDEO_HELPER_CHIPS_AUTO))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (I2C && VIDEO_V4L2)))) || (((VIDEO_CAFE_CCIC && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (I2C && VIDEO_V4L2))))) => VIDEO_OV767false) && (VIDEO_OV767false => (VIDEO_CAFE_CCIC && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (I2C && VIDEO_V4L2))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (I2C && VIDEO_V4L2)))) || ((false => VIDEO_TCM825X) && (VIDEO_TCM825X => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_DCtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_SAA7truetruefalse) && (VIDEO_SAA7truetruefalse => (VIDEO_ZORAN_DCtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_BUZ && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_SAA7truetruetrue) && (VIDEO_SAA7truetruetrue => (VIDEO_ZORAN_BUZ && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_LML33Rtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_SAA7truetrue4) && (VIDEO_SAA7truetrue4 => (VIDEO_ZORAN_LML33Rtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || ((((((VIDEO_USBVISION && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (I2C && (VIDEO_V4L2 && VIDEO_HELPER_CHIPS_AUTO))))))) || (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA)))))))) || (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))) => VIDEO_SAA7truetrueX) && (VIDEO_SAA7truetrueX => ((((VIDEO_USBVISION && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (I2C && (VIDEO_V4L2 && VIDEO_HELPER_CHIPS_AUTO))))))) || (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA)))))))) || (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO)))))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_SAA7true7X) && (VIDEO_SAA7true7X => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_VINO && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && (SGI_IP22 && (EXPERIMENTAL && (VIDEO_V4L2 && VIDEO_HELPER_CHIPS_AUTO))))))) => VIDEO_SAA7true9true) && (VIDEO_SAA7true9true => (VIDEO_VINO && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && (SGI_IP22 && (EXPERIMENTAL && (VIDEO_V4L2 && VIDEO_HELPER_CHIPS_AUTO))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO))))))))) => VIDEO_TVP5true5false) && (VIDEO_TVP5true5false => (VIDEO_EM28XX && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && (INPUT && VIDEO_HELPER_CHIPS_AUTO))))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_DC3false && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_VPX322false) && (VIDEO_VPX322false => (VIDEO_ZORAN_DC3false && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && (I2C && EXPERIMENTAL))))) || (((((VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))) || (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))) => VIDEO_CX2584false) && (VIDEO_CX2584false => (((VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))) || (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))) || (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && (EXPERIMENTAL && VIDEO_V4L2_COMMON))))) || ((((((x49false || x575) || x577) || x493) || x477) => VIDEO_CX234trueX) && (VIDEO_CX234trueX => ((((x49false || x575) || x577) || x493) || x477))))
(x49false <=> (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT)))))))))
(x575 <=> (VIDEO_PVRUSB2 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA))))))))
(x577 <=> (VIDEO_CX88_BLACKBIRD && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_CX88)))))
(x493 <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT)))))))))
(x477 <=> (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_SAA7true27) && (VIDEO_SAA7true27 => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_BUZ && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_SAA7true85) && (VIDEO_SAA7true85 => (VIDEO_ZORAN_BUZ && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || (((VIDEO_ZORAN_LML33Rtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))) => VIDEO_ADV7true7false) && (VIDEO_ADV7true7false => (VIDEO_ZORAN_LML33Rtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4Ltrue && I2C))))) || ((((VIDEO_ZORAN_DC3false && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN && VIDEO_HELPER_CHIPS_AUTO))))) || (VIDEO_ZORAN_DCtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO)))))) => VIDEO_ADV7true75) && (VIDEO_ADV7true75 => ((VIDEO_ZORAN_DC3false && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN && VIDEO_HELPER_CHIPS_AUTO))))) || (VIDEO_ZORAN_DCtruefalse && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && VIDEO_HELPER_CHIPS_AUTO)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_UPD64false3trueA) && (VIDEO_UPD64false3trueA => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (!VIDEO_HELPER_CHIPS_AUTO && (VIDEO_V4L2 && I2C)))) || (((VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))) => VIDEO_UPD64false83) && (VIDEO_UPD64false83 => (VIDEO_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT)))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (VIDEO_V4L2 && (!SPARC32 && !SPARC64))))) || ((false => VIDEO_VIVI) && (VIDEO_VIVI => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_DEV && (PCI && (I2C && (VIDEO_V4L2 && INPUT)))))) || ((false => VIDEO_BT848) && (VIDEO_BT848 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_BT848 && DVB_CORE)))) || ((false => VIDEO_BT848_DVB) && (VIDEO_BT848_DVB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && VIDEO_BT848)))) || ((false => VIDEO_SAA6588) && (VIDEO_SAA6588 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (ISA && VIDEO_V4Ltrue)))) || ((false => VIDEO_PMS) && (VIDEO_PMS => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PARPORT && VIDEO_V4Ltrue)))) || ((false => VIDEO_BWQCAM) && (VIDEO_BWQCAM => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (EXPERIMENTAL && (PARPORT && VIDEO_V4Ltrue))))) || ((false => VIDEO_CQCAM) && (VIDEO_CQCAM => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PARPORT_true284 && (PARPORT && VIDEO_V4Ltrue))))) || ((false => VIDEO_W9966) && (VIDEO_W9966 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_V4Ltrue))) || ((false => VIDEO_CPIA) && (VIDEO_CPIA => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PARPORT_true284 && (VIDEO_CPIA && PARPORT))))) || ((false => VIDEO_CPIA_PP) && (VIDEO_CPIA_PP => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CPIA && USB)))) || ((false => VIDEO_CPIA_USB) && (VIDEO_CPIA_USB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (USB && VIDEO_V4Ltrue))))) || ((false => VIDEO_CPIA2) && (VIDEO_CPIA2 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && VIDEO_V4L2))) || ((false => VIDEO_SAA5246A) && (VIDEO_SAA5246A => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && VIDEO_V4L2))) || ((false => VIDEO_SAA5249) && (VIDEO_SAA5249 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (I2C && (SGI_IP22 && (EXPERIMENTAL && VIDEO_V4L2))))) || ((false => VIDEO_VINO) && (VIDEO_VINO => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (EXPERIMENTAL && (PCI && (VIDEO_V4Ltrue && VIRT_TO_BUS)))))) || ((false => VIDEO_STRADIS) && (VIDEO_STRADIS => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C_ALGOBIT && (VIDEO_V4Ltrue && VIRT_TO_BUS)))))) || ((false => VIDEO_ZORAN) && (VIDEO_ZORAN => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_ZORAN))) || ((false => VIDEO_ZORAN_DC3false) && (VIDEO_ZORAN_DC3false => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_ZORAN))) || ((false => VIDEO_ZORAN_ZR36false6false) && (VIDEO_ZORAN_ZR36false6false => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_ZORAN_ZR36false6false))) || ((false => VIDEO_ZORAN_BUZ) && (VIDEO_ZORAN_BUZ => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_ZORAN_ZR36false6false))) || ((false => VIDEO_ZORAN_DCtruefalse) && (VIDEO_ZORAN_DCtruefalse => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_ZORAN_ZR36false6false))) || ((false => VIDEO_ZORAN_LML33) && (VIDEO_ZORAN_LML33 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_ZORAN_ZR36false6false))) || ((false => VIDEO_ZORAN_LML33Rtruefalse) && (VIDEO_ZORAN_LML33Rtruefalse => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_ZORAN_ZR36false6false && (EXPERIMENTAL && VIDEO_V4Ltrue))))) || ((false => VIDEO_ZORAN_AVS6EYES) && (VIDEO_ZORAN_AVS6EYES => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (SONY_LAPTOP && VIDEO_V4Ltrue))))) || ((false => VIDEO_MEYE) && (VIDEO_MEYE => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT)))))) || ((false => VIDEO_SAA7true34) && (VIDEO_SAA7true34 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && SND)))) || ((false => VIDEO_SAA7true34_ALSA) && (VIDEO_SAA7true34_ALSA => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && DVB_CORE)))) || ((false => VIDEO_SAA7true34_DVB) && (VIDEO_SAA7true34_DVB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (VIDEO_V4Ltrue && I2C))))) || ((false => VIDEO_MXB) && (VIDEO_MXB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (VIDEO_V4L2 && I2C)))) || ((false => VIDEO_HEXIUM_ORION) && (VIDEO_HEXIUM_ORION => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (VIDEO_V4L2 && I2C)))) || ((false => VIDEO_HEXIUM_GEMINI) && (VIDEO_HEXIUM_GEMINI => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT)))))) || ((false => VIDEO_CX88) && (VIDEO_CX88 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (SND && EXPERIMENTAL))))) || ((false => VIDEO_CX88_ALSA) && (VIDEO_CX88_ALSA => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && VIDEO_CX88))) || ((false => VIDEO_CX88_BLACKBIRD) && (VIDEO_CX88_BLACKBIRD => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && DVB_CORE)))) || ((false => VIDEO_CX88_DVB) && (VIDEO_CX88_DVB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88_DVB && DVB_MT352)))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88_DVB && DVB_MT352))))) => VIDEO_CX88_VP3false54) && (VIDEO_CX88_VP3false54 => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88_DVB && DVB_MT352))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && INPUT))))))) || ((false => VIDEO_CX23885) && (VIDEO_CX23885 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && USB)))))) || ((false => VIDEO_AUfalse828) && (VIDEO_AUfalse828 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (PCI && (I2C && INPUT))))) || ((false => VIDEO_IVTV) && (VIDEO_IVTV => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_IVTV && FB)))) || ((false => VIDEO_FB_IVTV) && (VIDEO_FB_IVTV => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && INPUT))))))) || ((false => VIDEO_CXtrue8) && (VIDEO_CXtrue8 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (M32R && VIDEO_V4Ltrue)))) || (((VIDEO_M32R_AR_M64278 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && PLAT_M327falsefalseUT)))) => VIDEO_M32R_AR) && (VIDEO_M32R_AR => (VIDEO_M32R_AR_M64278 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && PLAT_M327falsefalseUT)))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && PLAT_M327falsefalseUT))) || ((false => VIDEO_M32R_AR_M64278) && (VIDEO_M32R_AR_M64278 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (PCI && (I2C && VIDEO_V4L2)))) || ((false => VIDEO_CAFE_CCIC) && (VIDEO_CAFE_CCIC => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && HAS_DMA))) || ((false => SOC_CAMERA) && (SOC_CAMERA => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && I2C)))) || ((false => SOC_CAMERA_MT9Mfalsefalsetrue) && (SOC_CAMERA_MT9Mfalsefalsetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA_MT9Mfalsefalsetrue && GENERIC_GPIO)))) || ((false => MT9Mfalsefalsetrue_PCA9536_SWITCH) && (MT9Mfalsefalsetrue_PCA9536_SWITCH => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && I2C)))) || ((false => SOC_CAMERA_MT9Mtruetruetrue) && (SOC_CAMERA_MT9Mtruetruetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA && I2C)))) || ((false => SOC_CAMERA_MT9Vfalse22) && (SOC_CAMERA_MT9Vfalse22 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (SOC_CAMERA_MT9Vfalse22 && GENERIC_GPIO)))) || ((false => MT9Vfalse22_PCA9536_SWITCH) && (MT9Vfalse22_PCA9536_SWITCH => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && SOC_CAMERA))) || ((false => SOC_CAMERA_PLATFORM) && (SOC_CAMERA_PLATFORM => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PXA27x && SOC_CAMERA))))) || ((false => VIDEO_PXA27x) && (VIDEO_PXA27x => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (SOC_CAMERA && HAS_DMA))))) || ((false => VIDEO_SH_MOBILE_CEU) && (VIDEO_SH_MOBILE_CEU => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && USB))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && USB)))) => V4L_USB_DRIVERS) && (V4L_USB_DRIVERS => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && USB)))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && USB)))) || ((false => USB_VIDEO_CLASS) && (USB_VIDEO_CLASS => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (USB_VIDEO_CLASS && INPUT)))))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (USB_VIDEO_CLASS && INPUT))))))) => USB_VIDEO_CLASS_INPUT_EVDEV) && (USB_VIDEO_CLASS_INPUT_EVDEV => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (USB_VIDEO_CLASS && INPUT))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2))))) => USB_GSPCA) && (USB_GSPCA => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_M56false2) && (USB_M56false2 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_CONEX) && (USB_GSPCA_CONEX => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_ETOMS) && (USB_GSPCA_ETOMS => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_FINEPIX) && (USB_GSPCA_FINEPIX => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_MARS) && (USB_GSPCA_MARS => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_OV5true9) && (USB_GSPCA_OV5true9 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_PAC2false7) && (USB_GSPCA_PAC2false7 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_PAC73truetrue) && (USB_GSPCA_PAC73truetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SONIXB) && (USB_GSPCA_SONIXB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SONIXJ) && (USB_GSPCA_SONIXJ => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SPCA5falsefalse) && (USB_GSPCA_SPCA5falsefalse => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SPCA5falsetrue) && (USB_GSPCA_SPCA5falsetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SPCA5false5) && (USB_GSPCA_SPCA5false5 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SPCA5false6) && (USB_GSPCA_SPCA5false6 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SPCA5false8) && (USB_GSPCA_SPCA5false8 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SPCA56true) && (USB_GSPCA_SPCA56true => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_STKfalsetrue4) && (USB_GSPCA_STKfalsetrue4 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_SUNPLUS) && (USB_GSPCA_SUNPLUS => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_T6true3) && (USB_GSPCA_T6true3 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_TV8532) && (USB_GSPCA_TV8532 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_VCfalse32X) && (USB_GSPCA_VCfalse32X => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && USB_GSPCA))))) || ((false => USB_GSPCA_ZC3XX) && (USB_GSPCA_ZC3XX => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && (I2C && VIDEO_MEDIA)))))) || ((false => VIDEO_PVRUSB2) && (VIDEO_PVRUSB2 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (SYSFS && EXPERIMENTAL))))))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (SYSFS && EXPERIMENTAL)))))))) => VIDEO_PVRUSB2_SYSFS) && (VIDEO_PVRUSB2_SYSFS => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (SYSFS && EXPERIMENTAL)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && EXPERIMENTAL))))))) || (((true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && EXPERIMENTAL)))))))) => VIDEO_PVRUSB2_DVB) && (VIDEO_PVRUSB2_DVB => (true && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && EXPERIMENTAL)))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_PVRUSB2_SYSFS))))) || ((false => VIDEO_PVRUSB2_DEBUGIFC) && (VIDEO_PVRUSB2_DEBUGIFC => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_DEV && (I2C && INPUT))))))) || ((false => VIDEO_EM28XX) && (VIDEO_EM28XX => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && SND)))))) || ((false => VIDEO_EM28XX_ALSA) && (VIDEO_EM28XX_ALSA => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && DVB_CORE)))))) || ((false => VIDEO_EM28XX_DVB) && (VIDEO_EM28XX_DVB => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (I2C && VIDEO_V4L2))))) || ((false => VIDEO_USBVISION) && (VIDEO_USBVISION => false)))
(false || ((((((USB_QUICKCAM_MESSENGER && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue)))))) || (USB_VICAM && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_V4Ltrue && EXPERIMENTAL)))))))) || (USB_KONICAWC && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))))) || (USB_IBMCAM && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))))) => VIDEO_USBVIDEO) && (VIDEO_USBVIDEO => ((((USB_QUICKCAM_MESSENGER && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue)))))) || (USB_VICAM && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_V4Ltrue && EXPERIMENTAL)))))))) || (USB_KONICAWC && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))))) || (USB_IBMCAM && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))))))))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_V4Ltrue && EXPERIMENTAL)))))) || ((false => USB_VICAM) && (USB_VICAM => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_IBMCAM) && (USB_IBMCAM => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_KONICAWC) && (USB_KONICAWC => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_QUICKCAM_MESSENGER) && (USB_QUICKCAM_MESSENGER => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))) || ((false => USB_ET6trueX25true) && (USB_ET6trueX25true => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (I2C && VIDEO_V4Ltrue)))))) || ((false => VIDEO_OVCAMCHIP) && (VIDEO_OVCAMCHIP => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_V4Ltrue && (I2C && VIDEO_OVCAMCHIP))))))) || ((false => USB_W9968CF) && (USB_W9968CF => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_OV5truetrue) && (USB_OV5truetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_SE4falsetrue) && (USB_SE4falsetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))) || ((false => USB_SN9Ctruefalse2) && (USB_SN9Ctruefalse2 => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_STV68false) && (USB_STV68false => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))) || ((false => USB_ZCfalse3falsetrue) && (USB_ZCfalse3falsetrue => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && VIDEO_V4Ltrue))))) || ((false => USB_PWC) && (USB_PWC => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && USB_PWC))))) || ((false => USB_PWC_DEBUG) && (USB_PWC_DEBUG => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))) || ((false => USB_ZR364XX) && (USB_ZR364XX => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && (VIDEO_V4L2 && EXPERIMENTAL))))) || ((false => USB_STKWEBCAM) && (USB_STKWEBCAM => false)))
((HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (V4L_USB_DRIVERS && (USB && VIDEO_V4L2)))) || ((false => USB_S2255) && (USB_S2255 => false)))
((HAS_IOMEM && VIDEO_V4L2) || (((true && (HAS_IOMEM && VIDEO_V4L2)) => RADIO_ADAPTERS) && (RADIO_ADAPTERS => (true && (HAS_IOMEM && VIDEO_V4L2)))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_CADET) && (RADIO_CADET => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_RTRACK) && (RADIO_RTRACK => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_RTRACK))) || (((true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_RTRACK))) && 2falsef)) => RADIO_RTRACK_PORT) && (RADIO_RTRACK_PORT => (true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_RTRACK))) && 2falsef)))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_RTRACK2) && (RADIO_RTRACK2 => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_RTRACK2))) || (((true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_RTRACK2))) && 3falsec)) => RADIO_RTRACK2_PORT) && (RADIO_RTRACK2_PORT => (true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_RTRACK2))) && 3falsec)))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_AZTECH) && (RADIO_AZTECH => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_AZTECH))) || (((true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_AZTECH)))) => RADIO_AZTECH_PORT) && (RADIO_AZTECH_PORT => (true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_AZTECH)))))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_GEMTEK) && (RADIO_GEMTEK => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_GEMTEK))) || (((true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_GEMTEK))) && 34c)) => RADIO_GEMTEK_PORT) && (RADIO_GEMTEK_PORT => (true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_GEMTEK))) && 34c)))))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_GEMTEK))) || (((true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_GEMTEK)))) => RADIO_GEMTEK_PROBE) && (RADIO_GEMTEK_PROBE => (true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_GEMTEK)))))))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && PCI))) || ((false => RADIO_GEMTEK_PCI) && (RADIO_GEMTEK_PCI => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && PCI))) || ((false => RADIO_MAXIRADIO) && (RADIO_MAXIRADIO => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && PCI))) || ((false => RADIO_MAESTRO) && (RADIO_MAESTRO => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_SFtrue6FMI) && (RADIO_SFtrue6FMI => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_SFtrue6FMR2) && (RADIO_SFtrue6FMR2 => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_TERRATEC) && (RADIO_TERRATEC => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TERRATEC))) || (((true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TERRATEC)))) => RADIO_TERRATEC_PORT) && (RADIO_TERRATEC_PORT => (true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TERRATEC)))))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_TRUST) && (RADIO_TRUST => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TRUST))) || (((true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TRUST)))) => RADIO_TRUST_PORT) && (RADIO_TRUST_PORT => (true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TRUST)))))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_TYPHOON) && (RADIO_TYPHOON => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && (PROC_FS && RADIO_TYPHOON)))) || ((false => RADIO_TYPHOON_PROC_FS) && (RADIO_TYPHOON_PROC_FS => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TYPHOON))) || (((true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TYPHOON)))) => RADIO_TYPHOON_PORT) && (RADIO_TYPHOON_PORT => (true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TYPHOON)))))))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TYPHOON))) || (((true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TYPHOON)))) => RADIO_TYPHOON_MUTEFREQ) && (RADIO_TYPHOON_MUTEFREQ => (true && (HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_TYPHOON)))))))
((HAS_IOMEM && (RADIO_ADAPTERS && (ISA && VIDEO_V4L2))) || ((false => RADIO_ZOLTRIX) && (RADIO_ZOLTRIX => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_ZOLTRIX))) || (((true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_ZOLTRIX))) && 2falsec)) => RADIO_ZOLTRIX_PORT) && (RADIO_ZOLTRIX_PORT => (true && ((HAS_IOMEM && (RADIO_ADAPTERS && (VIDEO_V4L2 && RADIO_ZOLTRIX))) && 2falsec)))))
((HAS_IOMEM && (RADIO_ADAPTERS && (USB && VIDEO_V4L2))) || ((false => USB_DSBR) && (USB_DSBR => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (USB && VIDEO_V4L2))) || ((false => USB_SI47falseX) && (USB_SI47falseX => false)))
((HAS_IOMEM && (RADIO_ADAPTERS && (USB && VIDEO_V4L2))) || ((false => USB_MR8falsefalse) && (USB_MR8falsefalse => false)))
((HAS_IOMEM && DVB_CORE) || (((true && (HAS_IOMEM && DVB_CORE)) => DVB_CAPTURE_DRIVERS) && (DVB_CAPTURE_DRIVERS => (true && (HAS_IOMEM && DVB_CORE)))))
(false || ((((DVB_BUDGET_CORE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C))))) || (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && VIDEO_DEV))))))) => TTPCI_EEPROM) && (TTPCI_EEPROM => ((DVB_BUDGET_CORE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C))))) || (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && VIDEO_DEV))))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && VIDEO_DEV))))) || ((false => DVB_AV7truetruefalse) && (DVB_AV7truetruefalse => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_AV7truetruefalse && !STANDALONE)))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (!STANDALONE && DVB_AV7truetruefalse))))) => DVB_AV7truetruefalse_FIRMWARE) && (DVB_AV7truetruefalse_FIRMWARE => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (!STANDALONE && DVB_AV7truetruefalse))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_AV7truetruefalse_FIRMWARE))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_AV7truetruefalse_FIRMWARE)))) => DVB_AV7truetruefalse_FIRMWARE_FILE) && (DVB_AV7truetruefalse_FIRMWARE_FILE => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_AV7truetruefalse_FIRMWARE)))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_AV7truetruefalse))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_AV7truetruefalse)))) => DVB_AV7truetruefalse_OSD) && (DVB_AV7truetruefalse_OSD => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_AV7truetruefalse)))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C)))) || ((false => DVB_BUDGET_CORE) && (DVB_BUDGET_CORE => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && I2C)))) || ((false => DVB_BUDGET) && (DVB_BUDGET => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && INPUT))))) || ((false => DVB_BUDGET_CI) && (DVB_BUDGET_CI => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && VIDEO_DEV))))) || ((false => DVB_BUDGET_AV) && (DVB_BUDGET_AV => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && DVB_AV7truetruefalse))))) || ((false => DVB_BUDGET_PATCH) && (DVB_BUDGET_PATCH => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && INPUT))))) || ((false => DVB_USB) && (DVB_USB => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DEBUG) && (DVB_USB_DEBUG => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_A8falsefalse) && (DVB_USB_A8falsefalse => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DIBUSB_MB) && (DVB_USB_DIBUSB_MB => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB_DIBUSB_MB))) || ((false => DVB_USB_DIBUSB_MB_FAULTY) && (DVB_USB_DIBUSB_MB_FAULTY => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DIBUSB_MC) && (DVB_USB_DIBUSB_MC => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DIBfalse7falsefalse) && (DVB_USB_DIBfalse7falsefalse => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_UMT_falsetruefalse) && (DVB_USB_UMT_falsetruefalse => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_CXUSB) && (DVB_USB_CXUSB => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_M92falseX) && (DVB_USB_M92falseX => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_GL86true) && (DVB_USB_GL86true => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_AU66truefalse) && (DVB_USB_AU66truefalse => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DIGITV) && (DVB_USB_DIGITV => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_VP7false45) && (DVB_USB_VP7false45 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_VP7false2X) && (DVB_USB_VP7false2X => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_GP8PSK) && (DVB_USB_GP8PSK => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_NOVA_T_USB2) && (DVB_USB_NOVA_T_USB2 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_TTUSB2) && (DVB_USB_TTUSB2 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DTT2falsefalseU) && (DVB_USB_DTT2falsefalseU => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_OPERAtrue) && (DVB_USB_OPERAtrue => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && EXPERIMENTAL)))) || ((false => DVB_USB_AF9falsefalse5) && (DVB_USB_AF9falsefalse5 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB_AF9falsefalse5))) || ((false => DVB_USB_AF9falsefalse5_REMOTE) && (DVB_USB_AF9falsefalse5_REMOTE => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DW2truefalse2) && (DVB_USB_DW2truefalse2 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_CINERGY_T2) && (DVB_USB_CINERGY_T2 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_ANYSEE) && (DVB_USB_ANYSEE => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))) || ((false => DVB_USB_DTV5truefalsefalse) && (DVB_USB_DTV5truefalsefalse => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && EXPERIMENTAL)))) || ((false => DVB_USB_AF9falsetrue5) && (DVB_USB_AF9falsetrue5 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && I2C)))) || ((false => DVB_TTUSB_BUDGET) && (DVB_TTUSB_BUDGET => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && INPUT)))) || ((false => DVB_TTUSB_DEC) && (DVB_TTUSB_DEC => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && USB))) || ((false => DVB_SIANO_SMStrueXXX) && (DVB_SIANO_SMStrueXXX => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_SIANO_SMStrueXXX))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_SIANO_SMStrueXXX)))) => DVB_SIANO_SMStrueXXX_SMS_IDS) && (DVB_SIANO_SMStrueXXX_SMS_IDS => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_SIANO_SMStrueXXX)))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((false => DVB_B2C2_FLEXCOP) && (DVB_B2C2_FLEXCOP => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_B2C2_FLEXCOP && (PCI && I2C))))) || ((false => DVB_B2C2_FLEXCOP_PCI) && (DVB_B2C2_FLEXCOP_PCI => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_B2C2_FLEXCOP && (USB && I2C))))) || ((false => DVB_B2C2_FLEXCOP_USB) && (DVB_B2C2_FLEXCOP_USB => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_B2C2_FLEXCOP))) || ((false => DVB_B2C2_FLEXCOP_DEBUG) && (DVB_B2C2_FLEXCOP_DEBUG => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && VIDEO_BT848))))) || (((VIDEO_BT848_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_BT848 && DVB_CORE))))) => DVB_BT8XX) && (DVB_BT8XX => (VIDEO_BT848_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_BT848 && DVB_CORE))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C)))) || ((false => DVB_PLUTO2) && (DVB_PLUTO2 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C)))) || ((false => DVB_DMtruetruefalse5) && (DVB_DMtruetruefalse5 => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && DVB_CORE)) || ((false => DVB_FE_CUSTOMISE) && (DVB_FE_CUSTOMISE => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_CX24truetruefalse) && (DVB_CX24truetruefalse => ((DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_CX24true23) && (DVB_CX24true23 => (((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_MT3true2) && (DVB_MT3true2 => ((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_S5Htrue42false) && (DVB_S5Htrue42false => (((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_STVfalse288) && (DVB_STVfalse288 => ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_STB6falsefalsefalse) && (DVB_STB6falsefalsefalse => ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((((((((x578 || x579) || x58false) || x58true) || x582) || x583) || x584) || x585) || x586) || x587) || x588) || x589) => DVB_STVfalse299) && (DVB_STVfalse299 => (((((((((((x578 || x579) || x58false) || x58true) || x582) || x583) || x584) || x585) || x586) || x587) || x588) || x589))))
(x578 <=> (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE)))))))
(x579 <=> (DVB_BUDGET_PATCH && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (DVB_AV7truetruefalse && !DVB_FE_CUSTOMISE))))))))
(x58false <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))
(x58true <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x582 <=> (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))))
(x583 <=> (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x584 <=> (DVB_USB_OPERAtrue && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x585 <=> (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))))
(x586 <=> (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))))
(x587 <=> (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x588 <=> (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((x579 || x583) || x585) || x586) || x589) => DVB_TDA8false83) && (DVB_TDA8false83 => ((((x579 || x583) || x585) || x586) || x589))))
(x579 <=> (DVB_BUDGET_PATCH && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (DVB_AV7truetruefalse && !DVB_FE_CUSTOMISE))))))))
(x583 <=> (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x585 <=> (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))))
(x586 <=> (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_TTUSB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TDAtruefalsefalse86) && (DVB_TDAtruefalsefalse86 => ((((VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_TTUSB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((DVB_BUDGET_PATCH && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (DVB_AV7truetruefalse && !DVB_FE_CUSTOMISE))))))) || (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE)))))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_VEStrueX93) && (DVB_VEStrueX93 => ((((DVB_BUDGET_PATCH && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (DVB_AV7truetruefalse && !DVB_FE_CUSTOMISE))))))) || (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE)))))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TUNER_ITDtruefalsefalsefalse) && (DVB_TUNER_ITDtruefalsefalsefalse => ((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_TTUSB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TDA826X) && (DVB_TDA826X => ((((VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_TTUSB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TUA6truefalsefalse) && (DVB_TUA6truefalsefalse => ((DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_CX24truetrue6) && (DVB_CX24truetrue6 => ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE)))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_SI2trueXX) && (DVB_SI2trueXX => (((DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE)))))) || (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_SP887false) && (DVB_SP887false => ((DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_SP887X) && (DVB_SP887X => ((DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_CX227falsefalse) && (DVB_CX227falsefalse => ((DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_CX227false2) && (DVB_CX227false2 => (((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))) => DVB_DRX397XD) && (DVB_DRX397XD => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_L6478true) && (DVB_L6478true => (((DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((((x59false || x58false) || x489) || x59true) || x585) || x586) || x587) || x589) => DVB_TDAtruefalsefalse4X) && (DVB_TDAtruefalsefalse4X => (((((((x59false || x58false) || x489) || x59true) || x585) || x586) || x587) || x589))))
(x59false <=> (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x58false <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))
(x489 <=> (DVB_PLUTO2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && I2C))))))
(x59true <=> (DVB_USB_M92falseX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x585 <=> (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))))
(x586 <=> (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))))
(x587 <=> (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((DVB_USB_DIGITV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))) || (DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE)))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_NXT6falsefalsefalse) && (DVB_NXT6falsefalsefalse => (((DVB_USB_DIGITV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))) || (DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE)))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((((((x59false || x592) || x58true) || x59true) || x593) || x582) || x594) || x595) || x589) => DVB_MT352) && (DVB_MT352 => ((((((((x59false || x592) || x58true) || x59true) || x593) || x582) || x594) || x595) || x589))))
(x59false <=> (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x592 <=> (DVB_USB_ANYSEE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x58true <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x59true <=> (DVB_USB_M92falseX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x593 <=> (DVB_USB_DIGITV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x582 <=> (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))))
(x594 <=> (DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))))
(x595 <=> (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((((((x596 || x592) || x58true) || x597) || x598) || x599) || x594) || x6falsefalse) || x595) || x589) => DVB_ZLtruefalse353) && (DVB_ZLtruefalse353 => (((((((((x596 || x592) || x58true) || x597) || x598) || x599) || x594) || x6falsefalse) || x595) || x589))))
(x596 <=> (DVB_USB_GL86true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x592 <=> (DVB_USB_ANYSEE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x58true <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x597 <=> (DVB_USB_AU66truefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x598 <=> (DVB_USB_DTV5truefalsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x599 <=> (VIDEO_EM28XX_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))))
(x594 <=> (DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))))
(x6falsefalse <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))))
(x595 <=> (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_USB_DIBUSB_MB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_DIB3falsefalsefalseMB) && (DVB_DIB3falsefalsefalseMB => ((DVB_USB_DIBUSB_MB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((x6falsetrue || x6false2) || x6false3) || x6false4) || x6false5) || x589) => DVB_DIB3falsefalsefalseMC) && (DVB_DIB3falsefalsefalseMC => (((((x6falsetrue || x6false2) || x6false3) || x6false4) || x6false5) || x589))))
(x6falsetrue <=> (DVB_USB_UMT_falsetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))))
(x6false2 <=> (DVB_USB_A8falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))))
(x6false3 <=> (DVB_USB_DIBUSB_MC && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))))
(x6false4 <=> (DVB_USB_NOVA_T_USB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))))
(x6false5 <=> (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_DIB7falsefalsefalseM) && (DVB_DIB7falsefalsefalseM => ((DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB)))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))) || (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_DIB7falsefalsefalseP) && (DVB_DIB7falsefalsefalseP => ((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))) || (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE)))))) || (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))) || (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMIZE)))))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TDAtruefalsefalse48) && (DVB_TDAtruefalsefalse48 => (((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMIZE))))))))) || (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMIZE)))))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_VEStrue82false) && (DVB_VEStrue82false => ((((DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))) || (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE))))))) || (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE)))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TDAtruefalsefalse2true) && (DVB_TDAtruefalsefalse2true => (((DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE)))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((x585 || x58false) || x592) || x587) || x589) => DVB_TDAtruefalsefalse23) && (DVB_TDAtruefalsefalse23 => ((((x585 || x58false) || x592) || x587) || x589))))
(x585 <=> (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))))
(x58false <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))
(x592 <=> (DVB_USB_ANYSEE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x587 <=> (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((x582 || x583) || x58false) || x586) || x589) => DVB_STVfalse297) && (DVB_STVfalse297 => ((((x582 || x583) || x58false) || x586) || x589))))
(x582 <=> (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))))
(x583 <=> (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x58false <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))
(x586 <=> (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_NXT2falsefalseX) && (DVB_NXT2falsefalseX => ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_OR5true2truetrue) && (DVB_OR5true2truetrue => ((DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_OR5truetrue32) && (DVB_OR5truetrue32 => ((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_BCM35truefalse) && (DVB_BCM35truefalse => ((DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((((x58true || x582) || x599) || x594) || x6falsefalse) || x6false6) || x595) || x589) => DVB_LGDT33falseX) && (DVB_LGDT33falseX => (((((((x58true || x582) || x599) || x594) || x6falsefalse) || x6false6) || x595) || x589))))
(x58true <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x582 <=> (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))))
(x599 <=> (VIDEO_EM28XX_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))))
(x594 <=> (DVB_BT8XX && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_BT848 && !DVB_FE_CUSTOMISE))))))))
(x6falsefalse <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))))
(x6false6 <=> (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMISE))))))))))
(x595 <=> (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))) || (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && (INPUT && !DVB_FE_CUSTOMISE)))))))))) || (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMISE)))))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_S5Htrue4false9) && (DVB_S5Htrue4false9 => ((((VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))) || (VIDEO_CXtrue8 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (PCI && (I2C && (EXPERIMENTAL && (INPUT && !DVB_FE_CUSTOMISE)))))))))) || (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMISE)))))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && (USB && !DVB_FE_CUSTOMIZE)))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_AU8522) && (DVB_AU8522 => ((VIDEO_AUfalse828 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (I2C && (INPUT && (DVB_CORE && (USB && !DVB_FE_CUSTOMIZE)))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((x58true || x6false7) || x6falsefalse) || x6false6) || x589) => DVB_S5Htrue4truetrue) && (DVB_S5Htrue4truetrue => ((((x58true || x6false7) || x6falsefalse) || x6false6) || x589))))
(x58true <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x6false7 <=> (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x6falsefalse <=> (VIDEO_CX23885 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (DVB_CORE && (VIDEO_DEV && (PCI && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))))
(x6false6 <=> (VIDEO_PVRUSB2_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_PVRUSB2 && (DVB_CORE && (EXPERIMENTAL && !DVB_FE_CUSTOMISE))))))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((((((((((((x592 || x6false8) || x6false9) || x584) || x6truefalse) || x587) || x6truetrue) || x595) || x578) || x59false) || x6true2) || x58true) || x593) || x582) || x588) || x589) => DVB_PLL) && (DVB_PLL => (((((((((((((((x592 || x6false8) || x6false9) || x584) || x6truefalse) || x587) || x6truetrue) || x595) || x578) || x59false) || x6true2) || x58true) || x593) || x582) || x588) || x589))))
(x592 <=> (DVB_USB_ANYSEE && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x6false8 <=> (DVB_USB_UMT_falsetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x6false9 <=> (DVB_USB_DIBUSB_MB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x584 <=> (DVB_USB_OPERAtrue && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x6truefalse <=> (DVB_USB_NOVA_T_USB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x587 <=> (DVB_BUDGET_AV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x6truetrue <=> (DVB_USB_A8falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x595 <=> (DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x578 <=> (DVB_DMtruetruefalse5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && !DVB_FE_CUSTOMISE)))))))
(x59false <=> (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x6true2 <=> (DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && (EXPERIMENTAL && !DVB_FE_CUSTOMISE)))))))
(x58true <=> (VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))))
(x593 <=> (DVB_USB_DIGITV && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x582 <=> (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE))))))
(x588 <=> (DVB_USB_DW2truefalse2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))) || (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_TUNER_DIBfalsefalse7false) && (DVB_TUNER_DIBfalsefalse7false => (((DVB_USB_CXUSB && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))) || (DVB_USB_DIBfalse7falsefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && DVB_USB))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((((((x583 || x585) || x58false) || x586) || x6true3) || x589) => DVB_LNBP2true) && (DVB_LNBP2true => (((((x583 || x585) || x58false) || x586) || x6true3) || x589))))
(x583 <=> (DVB_AV7truetruefalse && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (PCI && (I2C && (VIDEO_DEV && !DVB_FE_CUSTOMISE))))))))
(x585 <=> (DVB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && !DVB_FE_CUSTOMISE)))))))
(x58false <=> (DVB_BUDGET_CI && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_BUDGET_CORE && (I2C && (INPUT && !DVB_FE_CUSTOMISE))))))))
(x586 <=> (DVB_TTUSB_BUDGET && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && (I2C && !DVB_FE_CUSTOMISE)))))))
(x6true3 <=> (DVB_USB_TTUSB2 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && !DVB_FE_CUSTOMISE))))))
(x589 <=> (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))) => DVB_ISL64false5) && (DVB_ISL64false5 => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_ISL642true) && (DVB_ISL642true => ((((VIDEO_CX88_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (DVB_CORE && !DVB_FE_CUSTOMISE)))))) || (DVB_B2C2_FLEXCOP && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && !DVB_FE_CUSTOMISE)))))) || (VIDEO_SAA7true34_DVB && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && (DVB_CORE && !DVB_FE_CUSTOMISE))))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || (((true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))) => DVB_LGS8GL5) && (DVB_LGS8GL5 => (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE))))))))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && DVB_CORE)) || ((false => DVB_DUMMY_FE) && (DVB_DUMMY_FE => false)))
((HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && I2C))) || ((((DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && EXPERIMENTAL))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))) => DVB_AF9falsetrue3) && (DVB_AF9falsetrue3 => ((DVB_USB_AF9falsetrue5 && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (DVB_USB && EXPERIMENTAL))))) || (true && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (I2C && DVB_FE_CUSTOMISE)))))))))
(HAS_IOMEM || ((false => DAB) && (DAB => false)))
((HAS_IOMEM && (DAB && USB)) || ((false => USB_DABUSB) && (USB_DABUSB => false)))
((HAS_IOMEM && ((ALPHA || (IA64 || (PARISC || (PPC || X86)))) && PCI)) || (((((GART_IOMMU && (X86_64 && PCI)) || (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86)))))) || (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32)))))) => AGP) && (AGP => (((GART_IOMMU && (X86_64 && PCI)) || (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86)))))) || (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32)))))))))
((HAS_IOMEM && (AGP && X86_32)) || ((false => AGP_ALI) && (AGP_ALI => false)))
((HAS_IOMEM && (AGP && X86_32)) || ((false => AGP_ATI) && (AGP_ATI => false)))
((HAS_IOMEM && (AGP && (X86_32 || ALPHA))) || ((false => AGP_AMD) && (AGP_AMD => false)))
((HAS_IOMEM && (AGP && (X86 && !GART_IOMMU))) || (((true && (HAS_IOMEM && (AGP && (X86 && GART_IOMMU)))) => AGP_AMD64) && (AGP_AMD64 => (true && (HAS_IOMEM && (AGP && (X86 && GART_IOMMU)))))))
((HAS_IOMEM && (AGP && X86)) || ((((FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86))))) || (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32)))))) => AGP_INTEL) && (AGP_INTEL => ((FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86))))) || (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32)))))))))
((HAS_IOMEM && (AGP && X86_32)) || ((false => AGP_NVIDIA) && (AGP_NVIDIA => false)))
((HAS_IOMEM && (AGP && X86)) || ((false => AGP_SIS) && (AGP_SIS => false)))
((HAS_IOMEM && (AGP && X86_32)) || ((false => AGP_SWORKS) && (AGP_SWORKS => false)))
((HAS_IOMEM && (AGP && X86)) || ((false => AGP_VIA) && (AGP_VIA => false)))
((HAS_IOMEM && (AGP && (IA64_DIG || IA64_GENERIC))) || ((false => AGP_I46false) && (AGP_I46false => false)))
((HAS_IOMEM && (AGP && (IA64_HP_ZXtrue || (IA64_HP_ZXtrue_SWIOTLB || IA64_GENERIC)))) || ((false => AGP_HP_ZXtrue) && (AGP_HP_ZXtrue => false)))
((HAS_IOMEM && (AGP && (PARISC && a64BIT))) || ((false => AGP_PARISC) && (AGP_PARISC => false)))
((HAS_IOMEM && (AGP && (ALPHA_GENERIC || (ALPHA_TITAN || ALPHA_MARVEL)))) || (((true && ((HAS_IOMEM && (AGP && (ALPHA_GENERIC || (ALPHA_TITAN || ALPHA_MARVEL)))) && AGP)) => AGP_ALPHA_CORE) && (AGP_ALPHA_CORE => (true && ((HAS_IOMEM && (AGP && (ALPHA_GENERIC || (ALPHA_TITAN || ALPHA_MARVEL)))) && AGP)))))
((HAS_IOMEM && (AGP && PPC_PMAC)) || ((false => AGP_UNINORTH) && (AGP_UNINORTH => false)))
((HAS_IOMEM && (AGP && X86_32)) || ((false => AGP_EFFICEON) && (AGP_EFFICEON => false)))
((HAS_IOMEM && (AGP && (IA64_SGI_SN2 || IA64_GENERIC))) || ((false => AGP_SGI_TIOCA) && (AGP_SGI_TIOCA => false)))
((HAS_IOMEM && ((AGP || !AGP) && (PCI && (!EMULATED_CMPXCHG && MMU)))) || ((false => DRM) && (DRM => false)))
((HAS_IOMEM && (DRM && PCI)) || ((false => DRM_TDFX) && (DRM_TDFX => false)))
((HAS_IOMEM && (DRM && PCI)) || ((false => DRM_Rtrue28) && (DRM_Rtrue28 => false)))
((HAS_IOMEM && (DRM && PCI)) || ((false => DRM_RADEON) && (DRM_RADEON => false)))
((HAS_IOMEM && (DRM && (AGP && AGP_INTEL))) || ((false => DRM_I8truefalse) && (DRM_I8truefalse => false)))
(true || ((false => DRM_I83false) && (DRM_I83false => false)))
(true || ((false => DRM_I9true5) && (DRM_I9true5 => false)))
((HAS_IOMEM && DRM) || ((false => DRM_MGA) && (DRM_MGA => false)))
((HAS_IOMEM && (DRM && (AGP && (FB_SIS || !FB_SIS)))) || ((false => DRM_SIS) && (DRM_SIS => false)))
((HAS_IOMEM && DRM) || ((false => DRM_VIA) && (DRM_VIA => false)))
((HAS_IOMEM && DRM) || ((false => DRM_SAVAGE) && (DRM_SAVAGE => false)))
(false || ((((((((((x6true4 || x6true5) || x6true6) || x6true7) || x6true8) || x6true9) || x62false) || x62true) || x622) => VGASTATE) && (VGASTATE => ((((((((x6true4 || x6true5) || x6true6) || x6true7) || x6true8) || x6true9) || x62false) || x62true) || x622))))
(x6true4 <=> (FB_RIVA && (HAS_IOMEM && (FB && PCI))))
(x6true5 <=> (FB_S3 && (HAS_IOMEM && (FB && PCI))))
(x6true6 <=> (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32))))))
(x6true7 <=> (FB_VT8623 && (HAS_IOMEM && (FB && PCI))))
(x6true8 <=> (FB_ARK && (HAS_IOMEM && (FB && PCI))))
(x6true9 <=> (FB_NVIDIA && (HAS_IOMEM && (FB && PCI))))
(x62false <=> (FB_VGAtrue6 && (HAS_IOMEM && (FB && (X86 || PPC)))))
(x62true <=> (FB_NEOMAGIC && (HAS_IOMEM && (FB && PCI))))
(x622 <=> (FB_SAVAGE && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(HAS_IOMEM || ((false => VIDEO_OUTPUT_CONTROL) && (VIDEO_OUTPUT_CONTROL => false)))
(HAS_IOMEM || ((false => FB) && (FB => false)))
((HAS_IOMEM && FB) || ((false => FIRMWARE_EDID) && (FIRMWARE_EDID => false)))
(false || ((((((((x623 || x624) || x625) || x626) || x627) || x628) || x629) => FB_DDC) && (FB_DDC => ((((((x623 || x624) || x625) || x626) || x627) || x628) || x629))))
(x623 <=> (FB_INTEL_I2C && (HAS_IOMEM && FB_INTEL)))
(x624 <=> (FB_RADEON_I2C && (HAS_IOMEM && FB_RADEON)))
(x625 <=> (FB_I8truefalse_I2C && (HAS_IOMEM && (FB_I8truefalse && FB_I8truefalse_GTF))))
(x626 <=> (FB_SAVAGE_I2C && (HAS_IOMEM && FB_SAVAGE)))
(x627 <=> (FB_MATROX_I2C && (HAS_IOMEM && FB_MATROX)))
(x628 <=> (FB_NVIDIA_I2C && (HAS_IOMEM && FB_NVIDIA)))
(x629 <=> (FB_RIVA_I2C && (HAS_IOMEM && FB_RIVA)))
(false || (((((FB_VESA && (HAS_IOMEM && (FB && X86))) || (FB_SIS && (HAS_IOMEM && (FB && PCI)))) || (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86)))))) => FB_BOOT_VESA_SUPPORT) && (FB_BOOT_VESA_SUPPORT => (((FB_VESA && (HAS_IOMEM && (FB && X86))) || (FB_SIS && (HAS_IOMEM && (FB && PCI)))) || (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86)))))))))
(false || (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((x63false || x63true) || x632) || x633) || x634) || x635) || x636) || x637) || x638) || x62true) || x639) || x64false) || x64true) || x642) || x643) || x6true6) || x644) || x645) || x646) || x647) || x648) || x649) || x622) || x65false) || x65true) || x652) || x653) || x654) || x655) || x656) || x657) || x658) || x659) || x66false) || x66true) || x662) || x663) || x664) || x665) || x666) || x6true7) || x667) || x668) || x669) || x6true4) || x67false) || x67true) || x672) || x6true8) || x673) || x674) || x675) || x676) || x677) || x678) || x679) || x68false) || x68true) || x6true9) || x682) || x683) || x684) || x685) || x686) || x687) || x688) || x689) || x69false) || x69true) || x62false) || x692) || x693) || x694) || x695) || x696) || x697) || x698) || x699) || x7falsefalse) || x6true5) || x7falsetrue) || x7false2) || x7false3) || x7false4) || x7false5) || x7false6) || x7false7) || x7false8) || x7false9) || x7truefalse) || x472) || x7truetrue) => FB_CFB_FILLRECT) && (FB_CFB_FILLRECT => (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((x63false || x63true) || x632) || x633) || x634) || x635) || x636) || x637) || x638) || x62true) || x639) || x64false) || x64true) || x642) || x643) || x6true6) || x644) || x645) || x646) || x647) || x648) || x649) || x622) || x65false) || x65true) || x652) || x653) || x654) || x655) || x656) || x657) || x658) || x659) || x66false) || x66true) || x662) || x663) || x664) || x665) || x666) || x6true7) || x667) || x668) || x669) || x6true4) || x67false) || x67true) || x672) || x6true8) || x673) || x674) || x675) || x676) || x677) || x678) || x679) || x68false) || x68true) || x6true9) || x682) || x683) || x684) || x685) || x686) || x687) || x688) || x689) || x69false) || x69true) || x62false) || x692) || x693) || x694) || x695) || x696) || x697) || x698) || x699) || x7falsefalse) || x6true5) || x7falsetrue) || x7false2) || x7false3) || x7false4) || x7false5) || x7false6) || x7false7) || x7false8) || x7false9) || x7truefalse) || x472) || x7truetrue))))
(x63false <=> (FB_GBE && (HAS_IOMEM && (FB && (SGI_IP32 || X86_VISWS)))))
(x63true <=> (FB_HGA && (HAS_IOMEM && (FB && X86))))
(x632 <=> (FB_IBM_GXT45falsefalse && (HAS_IOMEM && (FB && PPC))))
(x633 <=> (FB_XVR25falsefalse && (HAS_IOMEM && (FB && (PCI && SPARC64)))))
(x634 <=> (VIDEO_FB_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_IVTV && FB))))))
(x635 <=> (FB_ATARI && (HAS_IOMEM && (FB && ATARI))))
(x636 <=> (FB_CG3 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x637 <=> (FB_HIT && (HAS_IOMEM && (FB && HD6446true))))
(x638 <=> (FB_CGtrue4 && (HAS_IOMEM && FB_SBUS)))
(x62true <=> (FB_NEOMAGIC && (HAS_IOMEM && (FB && PCI))))
(x639 <=> (FB_PNX4falsefalse8_DUM_RGB && (HAS_IOMEM && FB_PNX4falsefalse8_DUM)))
(x64false <=> (FB_CONTROL && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x64true <=> (FB_SH776false && (HAS_IOMEM && (FB && (CPU_SUBTYPE_SH776false || CPU_SUBTYPE_SH7763)))))
(x642 <=> (FB_STI && (HAS_IOMEM && (FB && PARISC))))
(x643 <=> (FB_MAXINE && (HAS_IOMEM && (FB && MACH_DECSTATION))))
(x6true6 <=> (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32))))))
(x644 <=> (FB_LE8false578 && (HAS_IOMEM && (FB && (PCI && X86)))))
(x645 <=> (FB_AUtruetruefalsefalse && (HAS_IOMEM && (FB && (MIPS && SOC_AUtruetruefalsefalse)))))
(x646 <=> (FB_XILINX && (HAS_IOMEM && (FB && XILINX_VIRTEX))))
(x647 <=> (FB_68328 && (HAS_IOMEM && (FB && (M68328 || (M68EZ328 || M68VZ328))))))
(x648 <=> (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86))))))
(x649 <=> (FB_MBX && (HAS_IOMEM && (FB && ARCH_PXA))))
(x622 <=> (FB_SAVAGE && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(x65false <=> (FB_EFI && (HAS_IOMEM && (FB && (X86 && EFI)))))
(x65true <=> (FB_GEODE_LX && (HAS_IOMEM && (FB && FB_GEODE))))
(x652 <=> (FB_PXA && (HAS_IOMEM && (FB && ARCH_PXA))))
(x653 <=> (FB_SM5falsetrue && (HAS_IOMEM && (FB && MFD_SM5falsetrue))))
(x654 <=> (FB_CARMINE && (HAS_IOMEM && (FB && PCI))))
(x655 <=> (FB_VOODOOtrue && (HAS_IOMEM && (FB && PCI))))
(x656 <=> (FB_TRIDENT && (HAS_IOMEM && (FB && PCI))))
(x657 <=> (FB_VESA && (HAS_IOMEM && (FB && X86))))
(x658 <=> (FB_G364 && (HAS_IOMEM && (FB && (MIPS_MAGNUM_4falsefalsefalse || OLIVETTI_M7falsefalse)))))
(x659 <=> (FB_BF54X_LQfalse43 && (HAS_IOMEM && (FB && (BF54x && !BF542)))))
(x66false <=> (FB_MAC && (HAS_IOMEM && (FB && MAC))))
(x66true <=> (FB_MB862XX && (HAS_IOMEM && FB)))
(x662 <=> (FB_SAtruetruefalsefalse && (HAS_IOMEM && (FB && (ARM && ARCH_SAtruetruefalsefalse)))))
(x663 <=> (FB_Wtruefalsefalse && (HAS_IOMEM && (FB && ARCH_PXA))))
(x664 <=> (FB_EPSONtrue355 && (HAS_IOMEM && (FB && ARCH_CEIVA))))
(x665 <=> (FB_CYBER2falsefalsefalse && (HAS_IOMEM && (FB && (PCI && (BROKEN || !SPARC64))))))
(x666 <=> (FB_BFIN_T35falseMCQB && (HAS_IOMEM && (FB && BLACKFIN))))
(x6true7 <=> (FB_VT8623 && (HAS_IOMEM && (FB && PCI))))
(x667 <=> (FB_APOLLO && (HAS_IOMEM && (FB && APOLLO))))
(x668 <=> (FB_P9truefalsefalse && (HAS_IOMEM && FB_SBUS)))
(x669 <=> (FB_S3C24truefalse && (HAS_IOMEM && (FB && ARCH_S3C24truefalse))))
(x6true4 <=> (FB_RIVA && (HAS_IOMEM && (FB && PCI))))
(x67false <=> (FB_OF && (HAS_IOMEM && (FB && ((PPC64 || PPC_OF) && (!PPC_PSERIES || PCI))))))
(x67true <=> (FB_PMAG_BA && (HAS_IOMEM && (FB && TC))))
(x672 <=> (FB_OMAP && (HAS_IOMEM && (FB && ARCH_OMAP))))
(x6true8 <=> (FB_ARK && (HAS_IOMEM && (FB && PCI))))
(x673 <=> (FB_CLPS7truetrueX && (HAS_IOMEM && (FB && (ARM && ARCH_CLPS7truetrueX)))))
(x674 <=> (FB_ATYtrue28 && (HAS_IOMEM && (FB && PCI))))
(x675 <=> (FB_FSL_DIU && (HAS_IOMEM && (FB && FSL_SOC))))
(x676 <=> (FB_PMAG_AA && (HAS_IOMEM && (FB && TC))))
(x677 <=> (FB_PVR2 && (HAS_IOMEM && (FB && SH_DREAMCAST))))
(x678 <=> (FB_UVESA && (HAS_IOMEM && (FB && CONNECTOR))))
(x679 <=> (FB_PLATINUM && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x68false <=> (FB_LEO && (HAS_IOMEM && FB_SBUS)))
(x68true <=> (FB_3DFX && (HAS_IOMEM && (FB && PCI))))
(x6true9 <=> (FB_NVIDIA && (HAS_IOMEM && (FB && PCI))))
(x682 <=> (FB_MATROX && (HAS_IOMEM && (FB && PCI))))
(x683 <=> (FB_ARMCLCD && (HAS_IOMEM && (FB && (ARM && ARM_AMBA)))))
(x684 <=> (FB_SH_MOBILE_LCDC && (HAS_IOMEM && (FB && SUPERH))))
(x685 <=> (FB_SGIVW && (HAS_IOMEM && (FB && X86_VISWS))))
(x686 <=> (FB_GEODE_GX && (HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL)))))
(x687 <=> (FB_PMAGB_B && (HAS_IOMEM && (FB && TC))))
(x688 <=> (FB_SIS && (HAS_IOMEM && (FB && PCI))))
(x689 <=> (FB_TCX && (HAS_IOMEM && FB_SBUS)))
(x69false <=> (FB_ATY && (HAS_IOMEM && (FB && !SPARC32))))
(x69true <=> (FB_BW2 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x62false <=> (FB_VGAtrue6 && (HAS_IOMEM && (FB && (X86 || PPC)))))
(x692 <=> (FB_PM3 && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(x693 <=> (FB_AUtrue2falsefalse && (HAS_IOMEM && (FB && (MIPS && SOC_AUtrue2falsefalse)))))
(x694 <=> (FB_GEODE_GXtrue && (HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL)))))
(x695 <=> (FB_StrueDtrue3XXX && (HAS_IOMEM && FB)))
(x696 <=> (FB_XVR5falsefalse && (HAS_IOMEM && (FB && (PCI && SPARC64)))))
(x697 <=> (FB_TMIO && (HAS_IOMEM && (FB && MFD_CORE))))
(x698 <=> (FB_KYRO && (HAS_IOMEM && (FB && PCI))))
(x699 <=> (FB_CIRRUS && (HAS_IOMEM && (FB && (ZORRO || PCI)))))
(x7falsefalse <=> (FB_PM2 && (HAS_IOMEM && (FB && ((AMIGA && BROKEN) || PCI)))))
(x6true5 <=> (FB_S3 && (HAS_IOMEM && (FB && PCI))))
(x7falsetrue <=> (FB_IMX && (HAS_IOMEM && (FB && (ARM && ARCH_IMX)))))
(x7false2 <=> (FB_TGA && (HAS_IOMEM && (FB && (ALPHA || TC)))))
(x7false3 <=> (FB_IGA && (HAS_IOMEM && (FB && SPARC32))))
(x7false4 <=> (FB_ATMEL && (HAS_IOMEM && (FB && (ARCH_AT9trueSAM926true || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9RL || (ARCH_AT9trueCAP9 || AVR32))))))))
(x7false5 <=> (FB_Q4false && (HAS_IOMEM && (FB && Q4false))))
(x7false6 <=> (FB_RADEON && (HAS_IOMEM && (FB && PCI))))
(x7false7 <=> (FB_ACORN && (HAS_IOMEM && (FB && (ARM && (ARCH_ACORN || ARCH_CLPS75falsefalse))))))
(x7false8 <=> (FB_FM2 && (HAS_IOMEM && (FB && ZORRO))))
(x7false9 <=> (FB_CT6555false && (HAS_IOMEM && (FB && (PPC32 && PCI)))))
(x7truefalse <=> (FB_ASILIANT && (HAS_IOMEM && (FB && PCI))))
(x472 <=> (FB_VIA && (HAS_IOMEM && (FB && PCI))))
(x7truetrue <=> (FB_VALKYRIE && (HAS_IOMEM && (FB && (MAC || (PPC_PMAC && PPC32))))))
(false || ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((x63false || x63true) || x632) || x633) || x634) || x635) || x636) || x637) || x638) || x62true) || x639) || x64false) || x64true) || x642) || x643) || x6true6) || x644) || x645) || x646) || x647) || x648) || x649) || x622) || x7true2) || x65false) || x65true) || x652) || x653) || x654) || x655) || x656) || x657) || x658) || x659) || x66false) || x66true) || x662) || x663) || x664) || x665) || x7true3) || x666) || x6true7) || x668) || x669) || x6true4) || x67false) || x67true) || x672) || x6true8) || x673) || x674) || x675) || x676) || x677) || x678) || x679) || x68false) || x68true) || x6true9) || x682) || x683) || x684) || x685) || x686) || x687) || x688) || x689) || x69false) || x69true) || x62false) || x692) || x693) || x694) || x695) || x696) || x697) || x698) || x699) || x7falsefalse) || x6true5) || x7falsetrue) || x7false2) || x7false3) || x7false4) || x7false5) || x7false6) || x7false7) || x7false8) || x7false9) || x7truefalse) || x472) || x7truetrue) => FB_CFB_COPYAREA) && (FB_CFB_COPYAREA => ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((x63false || x63true) || x632) || x633) || x634) || x635) || x636) || x637) || x638) || x62true) || x639) || x64false) || x64true) || x642) || x643) || x6true6) || x644) || x645) || x646) || x647) || x648) || x649) || x622) || x7true2) || x65false) || x65true) || x652) || x653) || x654) || x655) || x656) || x657) || x658) || x659) || x66false) || x66true) || x662) || x663) || x664) || x665) || x7true3) || x666) || x6true7) || x668) || x669) || x6true4) || x67false) || x67true) || x672) || x6true8) || x673) || x674) || x675) || x676) || x677) || x678) || x679) || x68false) || x68true) || x6true9) || x682) || x683) || x684) || x685) || x686) || x687) || x688) || x689) || x69false) || x69true) || x62false) || x692) || x693) || x694) || x695) || x696) || x697) || x698) || x699) || x7falsefalse) || x6true5) || x7falsetrue) || x7false2) || x7false3) || x7false4) || x7false5) || x7false6) || x7false7) || x7false8) || x7false9) || x7truefalse) || x472) || x7truetrue))))
(x63false <=> (FB_GBE && (HAS_IOMEM && (FB && (SGI_IP32 || X86_VISWS)))))
(x63true <=> (FB_HGA && (HAS_IOMEM && (FB && X86))))
(x632 <=> (FB_IBM_GXT45falsefalse && (HAS_IOMEM && (FB && PPC))))
(x633 <=> (FB_XVR25falsefalse && (HAS_IOMEM && (FB && (PCI && SPARC64)))))
(x634 <=> (VIDEO_FB_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_IVTV && FB))))))
(x635 <=> (FB_ATARI && (HAS_IOMEM && (FB && ATARI))))
(x636 <=> (FB_CG3 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x637 <=> (FB_HIT && (HAS_IOMEM && (FB && HD6446true))))
(x638 <=> (FB_CGtrue4 && (HAS_IOMEM && FB_SBUS)))
(x62true <=> (FB_NEOMAGIC && (HAS_IOMEM && (FB && PCI))))
(x639 <=> (FB_PNX4falsefalse8_DUM_RGB && (HAS_IOMEM && FB_PNX4falsefalse8_DUM)))
(x64false <=> (FB_CONTROL && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x64true <=> (FB_SH776false && (HAS_IOMEM && (FB && (CPU_SUBTYPE_SH776false || CPU_SUBTYPE_SH7763)))))
(x642 <=> (FB_STI && (HAS_IOMEM && (FB && PARISC))))
(x643 <=> (FB_MAXINE && (HAS_IOMEM && (FB && MACH_DECSTATION))))
(x6true6 <=> (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32))))))
(x644 <=> (FB_LE8false578 && (HAS_IOMEM && (FB && (PCI && X86)))))
(x645 <=> (FB_AUtruetruefalsefalse && (HAS_IOMEM && (FB && (MIPS && SOC_AUtruetruefalsefalse)))))
(x646 <=> (FB_XILINX && (HAS_IOMEM && (FB && XILINX_VIRTEX))))
(x647 <=> (FB_68328 && (HAS_IOMEM && (FB && (M68328 || (M68EZ328 || M68VZ328))))))
(x648 <=> (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86))))))
(x649 <=> (FB_MBX && (HAS_IOMEM && (FB && ARCH_PXA))))
(x622 <=> (FB_SAVAGE && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(x7true2 <=> (FB_FFB && (HAS_IOMEM && (FB_SBUS && SPARC64))))
(x65false <=> (FB_EFI && (HAS_IOMEM && (FB && (X86 && EFI)))))
(x65true <=> (FB_GEODE_LX && (HAS_IOMEM && (FB && FB_GEODE))))
(x652 <=> (FB_PXA && (HAS_IOMEM && (FB && ARCH_PXA))))
(x653 <=> (FB_SM5falsetrue && (HAS_IOMEM && (FB && MFD_SM5falsetrue))))
(x654 <=> (FB_CARMINE && (HAS_IOMEM && (FB && PCI))))
(x655 <=> (FB_VOODOOtrue && (HAS_IOMEM && (FB && PCI))))
(x656 <=> (FB_TRIDENT && (HAS_IOMEM && (FB && PCI))))
(x657 <=> (FB_VESA && (HAS_IOMEM && (FB && X86))))
(x658 <=> (FB_G364 && (HAS_IOMEM && (FB && (MIPS_MAGNUM_4falsefalsefalse || OLIVETTI_M7falsefalse)))))
(x659 <=> (FB_BF54X_LQfalse43 && (HAS_IOMEM && (FB && (BF54x && !BF542)))))
(x66false <=> (FB_MAC && (HAS_IOMEM && (FB && MAC))))
(x66true <=> (FB_MB862XX && (HAS_IOMEM && FB)))
(x662 <=> (FB_SAtruetruefalsefalse && (HAS_IOMEM && (FB && (ARM && ARCH_SAtruetruefalsefalse)))))
(x663 <=> (FB_Wtruefalsefalse && (HAS_IOMEM && (FB && ARCH_PXA))))
(x664 <=> (FB_EPSONtrue355 && (HAS_IOMEM && (FB && ARCH_CEIVA))))
(x665 <=> (FB_CYBER2falsefalsefalse && (HAS_IOMEM && (FB && (PCI && (BROKEN || !SPARC64))))))
(x7true3 <=> (FB_CG6 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x666 <=> (FB_BFIN_T35falseMCQB && (HAS_IOMEM && (FB && BLACKFIN))))
(x6true7 <=> (FB_VT8623 && (HAS_IOMEM && (FB && PCI))))
(x668 <=> (FB_P9truefalsefalse && (HAS_IOMEM && FB_SBUS)))
(x669 <=> (FB_S3C24truefalse && (HAS_IOMEM && (FB && ARCH_S3C24truefalse))))
(x6true4 <=> (FB_RIVA && (HAS_IOMEM && (FB && PCI))))
(x67false <=> (FB_OF && (HAS_IOMEM && (FB && ((PPC64 || PPC_OF) && (!PPC_PSERIES || PCI))))))
(x67true <=> (FB_PMAG_BA && (HAS_IOMEM && (FB && TC))))
(x672 <=> (FB_OMAP && (HAS_IOMEM && (FB && ARCH_OMAP))))
(x6true8 <=> (FB_ARK && (HAS_IOMEM && (FB && PCI))))
(x673 <=> (FB_CLPS7truetrueX && (HAS_IOMEM && (FB && (ARM && ARCH_CLPS7truetrueX)))))
(x674 <=> (FB_ATYtrue28 && (HAS_IOMEM && (FB && PCI))))
(x675 <=> (FB_FSL_DIU && (HAS_IOMEM && (FB && FSL_SOC))))
(x676 <=> (FB_PMAG_AA && (HAS_IOMEM && (FB && TC))))
(x677 <=> (FB_PVR2 && (HAS_IOMEM && (FB && SH_DREAMCAST))))
(x678 <=> (FB_UVESA && (HAS_IOMEM && (FB && CONNECTOR))))
(x679 <=> (FB_PLATINUM && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x68false <=> (FB_LEO && (HAS_IOMEM && FB_SBUS)))
(x68true <=> (FB_3DFX && (HAS_IOMEM && (FB && PCI))))
(x6true9 <=> (FB_NVIDIA && (HAS_IOMEM && (FB && PCI))))
(x682 <=> (FB_MATROX && (HAS_IOMEM && (FB && PCI))))
(x683 <=> (FB_ARMCLCD && (HAS_IOMEM && (FB && (ARM && ARM_AMBA)))))
(x684 <=> (FB_SH_MOBILE_LCDC && (HAS_IOMEM && (FB && SUPERH))))
(x685 <=> (FB_SGIVW && (HAS_IOMEM && (FB && X86_VISWS))))
(x686 <=> (FB_GEODE_GX && (HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL)))))
(x687 <=> (FB_PMAGB_B && (HAS_IOMEM && (FB && TC))))
(x688 <=> (FB_SIS && (HAS_IOMEM && (FB && PCI))))
(x689 <=> (FB_TCX && (HAS_IOMEM && FB_SBUS)))
(x69false <=> (FB_ATY && (HAS_IOMEM && (FB && !SPARC32))))
(x69true <=> (FB_BW2 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x62false <=> (FB_VGAtrue6 && (HAS_IOMEM && (FB && (X86 || PPC)))))
(x692 <=> (FB_PM3 && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(x693 <=> (FB_AUtrue2falsefalse && (HAS_IOMEM && (FB && (MIPS && SOC_AUtrue2falsefalse)))))
(x694 <=> (FB_GEODE_GXtrue && (HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL)))))
(x695 <=> (FB_StrueDtrue3XXX && (HAS_IOMEM && FB)))
(x696 <=> (FB_XVR5falsefalse && (HAS_IOMEM && (FB && (PCI && SPARC64)))))
(x697 <=> (FB_TMIO && (HAS_IOMEM && (FB && MFD_CORE))))
(x698 <=> (FB_KYRO && (HAS_IOMEM && (FB && PCI))))
(x699 <=> (FB_CIRRUS && (HAS_IOMEM && (FB && (ZORRO || PCI)))))
(x7falsefalse <=> (FB_PM2 && (HAS_IOMEM && (FB && ((AMIGA && BROKEN) || PCI)))))
(x6true5 <=> (FB_S3 && (HAS_IOMEM && (FB && PCI))))
(x7falsetrue <=> (FB_IMX && (HAS_IOMEM && (FB && (ARM && ARCH_IMX)))))
(x7false2 <=> (FB_TGA && (HAS_IOMEM && (FB && (ALPHA || TC)))))
(x7false3 <=> (FB_IGA && (HAS_IOMEM && (FB && SPARC32))))
(x7false4 <=> (FB_ATMEL && (HAS_IOMEM && (FB && (ARCH_AT9trueSAM926true || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9RL || (ARCH_AT9trueCAP9 || AVR32))))))))
(x7false5 <=> (FB_Q4false && (HAS_IOMEM && (FB && Q4false))))
(x7false6 <=> (FB_RADEON && (HAS_IOMEM && (FB && PCI))))
(x7false7 <=> (FB_ACORN && (HAS_IOMEM && (FB && (ARM && (ARCH_ACORN || ARCH_CLPS75falsefalse))))))
(x7false8 <=> (FB_FM2 && (HAS_IOMEM && (FB && ZORRO))))
(x7false9 <=> (FB_CT6555false && (HAS_IOMEM && (FB && (PPC32 && PCI)))))
(x7truefalse <=> (FB_ASILIANT && (HAS_IOMEM && (FB && PCI))))
(x472 <=> (FB_VIA && (HAS_IOMEM && (FB && PCI))))
(x7truetrue <=> (FB_VALKYRIE && (HAS_IOMEM && (FB && (MAC || (PPC_PMAC && PPC32))))))
(false || ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((x63false || x63true) || x632) || x633) || x634) || x635) || x636) || x637) || x638) || x62true) || x639) || x64false) || x64true) || x642) || x643) || x6true6) || x644) || x645) || x646) || x647) || x648) || x649) || x622) || x7true2) || x65false) || x65true) || x652) || x653) || x7true4) || x654) || x7true5) || x655) || x656) || x657) || x658) || x659) || x66false) || x66true) || x662) || x663) || x664) || x665) || x7true3) || x666) || x6true7) || x667) || x668) || x669) || x6true4) || x67false) || x67true) || x672) || x6true8) || x673) || x674) || x7true6) || x675) || x676) || x677) || x678) || x679) || x68false) || x68true) || x6true9) || x682) || x683) || x684) || x685) || x686) || x687) || x688) || x689) || x69false) || x69true) || x62false) || x692) || x693) || x694) || x695) || x696) || x697) || x698) || x699) || x7falsefalse) || x6true5) || x7falsetrue) || x7false2) || x7false3) || x7false4) || x7false5) || x7false6) || x7false7) || x7false8) || x7false9) || x7truefalse) || x472) || x7truetrue) => FB_CFB_IMAGEBLIT) && (FB_CFB_IMAGEBLIT => ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((x63false || x63true) || x632) || x633) || x634) || x635) || x636) || x637) || x638) || x62true) || x639) || x64false) || x64true) || x642) || x643) || x6true6) || x644) || x645) || x646) || x647) || x648) || x649) || x622) || x7true2) || x65false) || x65true) || x652) || x653) || x7true4) || x654) || x7true5) || x655) || x656) || x657) || x658) || x659) || x66false) || x66true) || x662) || x663) || x664) || x665) || x7true3) || x666) || x6true7) || x667) || x668) || x669) || x6true4) || x67false) || x67true) || x672) || x6true8) || x673) || x674) || x7true6) || x675) || x676) || x677) || x678) || x679) || x68false) || x68true) || x6true9) || x682) || x683) || x684) || x685) || x686) || x687) || x688) || x689) || x69false) || x69true) || x62false) || x692) || x693) || x694) || x695) || x696) || x697) || x698) || x699) || x7falsefalse) || x6true5) || x7falsetrue) || x7false2) || x7false3) || x7false4) || x7false5) || x7false6) || x7false7) || x7false8) || x7false9) || x7truefalse) || x472) || x7truetrue))))
(x63false <=> (FB_GBE && (HAS_IOMEM && (FB && (SGI_IP32 || X86_VISWS)))))
(x63true <=> (FB_HGA && (HAS_IOMEM && (FB && X86))))
(x632 <=> (FB_IBM_GXT45falsefalse && (HAS_IOMEM && (FB && PPC))))
(x633 <=> (FB_XVR25falsefalse && (HAS_IOMEM && (FB && (PCI && SPARC64)))))
(x634 <=> (VIDEO_FB_IVTV && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_IVTV && FB))))))
(x635 <=> (FB_ATARI && (HAS_IOMEM && (FB && ATARI))))
(x636 <=> (FB_CG3 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x637 <=> (FB_HIT && (HAS_IOMEM && (FB && HD6446true))))
(x638 <=> (FB_CGtrue4 && (HAS_IOMEM && FB_SBUS)))
(x62true <=> (FB_NEOMAGIC && (HAS_IOMEM && (FB && PCI))))
(x639 <=> (FB_PNX4falsefalse8_DUM_RGB && (HAS_IOMEM && FB_PNX4falsefalse8_DUM)))
(x64false <=> (FB_CONTROL && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x64true <=> (FB_SH776false && (HAS_IOMEM && (FB && (CPU_SUBTYPE_SH776false || CPU_SUBTYPE_SH7763)))))
(x642 <=> (FB_STI && (HAS_IOMEM && (FB && PARISC))))
(x643 <=> (FB_MAXINE && (HAS_IOMEM && (FB && MACH_DECSTATION))))
(x6true6 <=> (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32))))))
(x644 <=> (FB_LE8false578 && (HAS_IOMEM && (FB && (PCI && X86)))))
(x645 <=> (FB_AUtruetruefalsefalse && (HAS_IOMEM && (FB && (MIPS && SOC_AUtruetruefalsefalse)))))
(x646 <=> (FB_XILINX && (HAS_IOMEM && (FB && XILINX_VIRTEX))))
(x647 <=> (FB_68328 && (HAS_IOMEM && (FB && (M68328 || (M68EZ328 || M68VZ328))))))
(x648 <=> (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86))))))
(x649 <=> (FB_MBX && (HAS_IOMEM && (FB && ARCH_PXA))))
(x622 <=> (FB_SAVAGE && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(x7true2 <=> (FB_FFB && (HAS_IOMEM && (FB_SBUS && SPARC64))))
(x65false <=> (FB_EFI && (HAS_IOMEM && (FB && (X86 && EFI)))))
(x65true <=> (FB_GEODE_LX && (HAS_IOMEM && (FB && FB_GEODE))))
(x652 <=> (FB_PXA && (HAS_IOMEM && (FB && ARCH_PXA))))
(x653 <=> (FB_SM5falsetrue && (HAS_IOMEM && (FB && MFD_SM5falsetrue))))
(x7true4 <=> (FB_CYBLA && (HAS_IOMEM && (FB && (PCI && (X86_32 && !a64BIT))))))
(x654 <=> (FB_CARMINE && (HAS_IOMEM && (FB && PCI))))
(x7true5 <=> (FB_IMSTT && (HAS_IOMEM && (FB && PCI))))
(x655 <=> (FB_VOODOOtrue && (HAS_IOMEM && (FB && PCI))))
(x656 <=> (FB_TRIDENT && (HAS_IOMEM && (FB && PCI))))
(x657 <=> (FB_VESA && (HAS_IOMEM && (FB && X86))))
(x658 <=> (FB_G364 && (HAS_IOMEM && (FB && (MIPS_MAGNUM_4falsefalsefalse || OLIVETTI_M7falsefalse)))))
(x659 <=> (FB_BF54X_LQfalse43 && (HAS_IOMEM && (FB && (BF54x && !BF542)))))
(x66false <=> (FB_MAC && (HAS_IOMEM && (FB && MAC))))
(x66true <=> (FB_MB862XX && (HAS_IOMEM && FB)))
(x662 <=> (FB_SAtruetruefalsefalse && (HAS_IOMEM && (FB && (ARM && ARCH_SAtruetruefalsefalse)))))
(x663 <=> (FB_Wtruefalsefalse && (HAS_IOMEM && (FB && ARCH_PXA))))
(x664 <=> (FB_EPSONtrue355 && (HAS_IOMEM && (FB && ARCH_CEIVA))))
(x665 <=> (FB_CYBER2falsefalsefalse && (HAS_IOMEM && (FB && (PCI && (BROKEN || !SPARC64))))))
(x7true3 <=> (FB_CG6 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x666 <=> (FB_BFIN_T35falseMCQB && (HAS_IOMEM && (FB && BLACKFIN))))
(x6true7 <=> (FB_VT8623 && (HAS_IOMEM && (FB && PCI))))
(x667 <=> (FB_APOLLO && (HAS_IOMEM && (FB && APOLLO))))
(x668 <=> (FB_P9truefalsefalse && (HAS_IOMEM && FB_SBUS)))
(x669 <=> (FB_S3C24truefalse && (HAS_IOMEM && (FB && ARCH_S3C24truefalse))))
(x6true4 <=> (FB_RIVA && (HAS_IOMEM && (FB && PCI))))
(x67false <=> (FB_OF && (HAS_IOMEM && (FB && ((PPC64 || PPC_OF) && (!PPC_PSERIES || PCI))))))
(x67true <=> (FB_PMAG_BA && (HAS_IOMEM && (FB && TC))))
(x672 <=> (FB_OMAP && (HAS_IOMEM && (FB && ARCH_OMAP))))
(x6true8 <=> (FB_ARK && (HAS_IOMEM && (FB && PCI))))
(x673 <=> (FB_CLPS7truetrueX && (HAS_IOMEM && (FB && (ARM && ARCH_CLPS7truetrueX)))))
(x674 <=> (FB_ATYtrue28 && (HAS_IOMEM && (FB && PCI))))
(x7true6 <=> (FB_HP3falsefalse && (HAS_IOMEM && (FB && DIO))))
(x675 <=> (FB_FSL_DIU && (HAS_IOMEM && (FB && FSL_SOC))))
(x676 <=> (FB_PMAG_AA && (HAS_IOMEM && (FB && TC))))
(x677 <=> (FB_PVR2 && (HAS_IOMEM && (FB && SH_DREAMCAST))))
(x678 <=> (FB_UVESA && (HAS_IOMEM && (FB && CONNECTOR))))
(x679 <=> (FB_PLATINUM && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x68false <=> (FB_LEO && (HAS_IOMEM && FB_SBUS)))
(x68true <=> (FB_3DFX && (HAS_IOMEM && (FB && PCI))))
(x6true9 <=> (FB_NVIDIA && (HAS_IOMEM && (FB && PCI))))
(x682 <=> (FB_MATROX && (HAS_IOMEM && (FB && PCI))))
(x683 <=> (FB_ARMCLCD && (HAS_IOMEM && (FB && (ARM && ARM_AMBA)))))
(x684 <=> (FB_SH_MOBILE_LCDC && (HAS_IOMEM && (FB && SUPERH))))
(x685 <=> (FB_SGIVW && (HAS_IOMEM && (FB && X86_VISWS))))
(x686 <=> (FB_GEODE_GX && (HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL)))))
(x687 <=> (FB_PMAGB_B && (HAS_IOMEM && (FB && TC))))
(x688 <=> (FB_SIS && (HAS_IOMEM && (FB && PCI))))
(x689 <=> (FB_TCX && (HAS_IOMEM && FB_SBUS)))
(x69false <=> (FB_ATY && (HAS_IOMEM && (FB && !SPARC32))))
(x69true <=> (FB_BW2 && (HAS_IOMEM && (FB && (SPARC && FB_SBUS)))))
(x62false <=> (FB_VGAtrue6 && (HAS_IOMEM && (FB && (X86 || PPC)))))
(x692 <=> (FB_PM3 && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
(x693 <=> (FB_AUtrue2falsefalse && (HAS_IOMEM && (FB && (MIPS && SOC_AUtrue2falsefalse)))))
(x694 <=> (FB_GEODE_GXtrue && (HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL)))))
(x695 <=> (FB_StrueDtrue3XXX && (HAS_IOMEM && FB)))
(x696 <=> (FB_XVR5falsefalse && (HAS_IOMEM && (FB && (PCI && SPARC64)))))
(x697 <=> (FB_TMIO && (HAS_IOMEM && (FB && MFD_CORE))))
(x698 <=> (FB_KYRO && (HAS_IOMEM && (FB && PCI))))
(x699 <=> (FB_CIRRUS && (HAS_IOMEM && (FB && (ZORRO || PCI)))))
(x7falsefalse <=> (FB_PM2 && (HAS_IOMEM && (FB && ((AMIGA && BROKEN) || PCI)))))
(x6true5 <=> (FB_S3 && (HAS_IOMEM && (FB && PCI))))
(x7falsetrue <=> (FB_IMX && (HAS_IOMEM && (FB && (ARM && ARCH_IMX)))))
(x7false2 <=> (FB_TGA && (HAS_IOMEM && (FB && (ALPHA || TC)))))
(x7false3 <=> (FB_IGA && (HAS_IOMEM && (FB && SPARC32))))
(x7false4 <=> (FB_ATMEL && (HAS_IOMEM && (FB && (ARCH_AT9trueSAM926true || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9RL || (ARCH_AT9trueCAP9 || AVR32))))))))
(x7false5 <=> (FB_Q4false && (HAS_IOMEM && (FB && Q4false))))
(x7false6 <=> (FB_RADEON && (HAS_IOMEM && (FB && PCI))))
(x7false7 <=> (FB_ACORN && (HAS_IOMEM && (FB && (ARM && (ARCH_ACORN || ARCH_CLPS75falsefalse))))))
(x7false8 <=> (FB_FM2 && (HAS_IOMEM && (FB && ZORRO))))
(x7false9 <=> (FB_CT6555false && (HAS_IOMEM && (FB && (PPC32 && PCI)))))
(x7truefalse <=> (FB_ASILIANT && (HAS_IOMEM && (FB && PCI))))
(x472 <=> (FB_VIA && (HAS_IOMEM && (FB && PCI))))
(x7truetrue <=> (FB_VALKYRIE && (HAS_IOMEM && (FB && (MAC || (PPC_PMAC && PPC32))))))
(false || ((false => FB_CFB_REV_PIXELS_IN_BYTE) && (FB_CFB_REV_PIXELS_IN_BYTE => false)))
(false || ((((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723) => FB_SYS_FILLRECT) && (FB_SYS_FILLRECT => ((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723))))
(x7true7 <=> (XEN_FBDEV_FRONTEND && (HAS_IOMEM && (FB && XEN))))
(x7true8 <=> (FB_METRONOME && (HAS_IOMEM && FB)))
(x7true9 <=> (CFAGtrue2864B && (AUXDISPLAY && (PARPORT && (X86 && (FB && KSfalsetruefalse8))))))
(x72false <=> (FB_PS3 && (HAS_IOMEM && (FB && PS3_PS3AV))))
(x72true <=> (FB_VIRTUAL && (HAS_IOMEM && FB)))
(x722 <=> (FB_ARC && (HAS_IOMEM && (FB && X86))))
(x723 <=> (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU)))))
(false || ((((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723) => FB_SYS_COPYAREA) && (FB_SYS_COPYAREA => ((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723))))
(x7true7 <=> (XEN_FBDEV_FRONTEND && (HAS_IOMEM && (FB && XEN))))
(x7true8 <=> (FB_METRONOME && (HAS_IOMEM && FB)))
(x7true9 <=> (CFAGtrue2864B && (AUXDISPLAY && (PARPORT && (X86 && (FB && KSfalsetruefalse8))))))
(x72false <=> (FB_PS3 && (HAS_IOMEM && (FB && PS3_PS3AV))))
(x72true <=> (FB_VIRTUAL && (HAS_IOMEM && FB)))
(x722 <=> (FB_ARC && (HAS_IOMEM && (FB && X86))))
(x723 <=> (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU)))))
(false || ((((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723) => FB_SYS_IMAGEBLIT) && (FB_SYS_IMAGEBLIT => ((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723))))
(x7true7 <=> (XEN_FBDEV_FRONTEND && (HAS_IOMEM && (FB && XEN))))
(x7true8 <=> (FB_METRONOME && (HAS_IOMEM && FB)))
(x7true9 <=> (CFAGtrue2864B && (AUXDISPLAY && (PARPORT && (X86 && (FB && KSfalsetruefalse8))))))
(x72false <=> (FB_PS3 && (HAS_IOMEM && (FB && PS3_PS3AV))))
(x72true <=> (FB_VIRTUAL && (HAS_IOMEM && FB)))
(x722 <=> (FB_ARC && (HAS_IOMEM && (FB && X86))))
(x723 <=> (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU)))))
((HAS_IOMEM && FB) || (((FB_MB862XX_LIME && (HAS_IOMEM && (FB_MB862XX && (OF && !FB_MB862XX_PCI_GDC)))) => FB_FOREIGN_ENDIAN) && (FB_FOREIGN_ENDIAN => (FB_MB862XX_LIME && (HAS_IOMEM && (FB_MB862XX && (OF && !FB_MB862XX_PCI_GDC)))))))
(true || ((false => FB_BOTH_ENDIAN) && (FB_BOTH_ENDIAN => false)))
(true || ((false => FB_BIG_ENDIAN) && (FB_BIG_ENDIAN => false)))
(true || (((FB_MB862XX_LIME && (HAS_IOMEM && (FB_MB862XX && (OF && !FB_MB862XX_PCI_GDC)))) => FB_LITTLE_ENDIAN) && (FB_LITTLE_ENDIAN => (FB_MB862XX_LIME && (HAS_IOMEM && (FB_MB862XX && (OF && !FB_MB862XX_PCI_GDC)))))))
(false || ((((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723) => FB_SYS_FOPS) && (FB_SYS_FOPS => ((((((x7true7 || x7true8) || x7true9) || x72false) || x72true) || x722) || x723))))
(x7true7 <=> (XEN_FBDEV_FRONTEND && (HAS_IOMEM && (FB && XEN))))
(x7true8 <=> (FB_METRONOME && (HAS_IOMEM && FB)))
(x7true9 <=> (CFAGtrue2864B && (AUXDISPLAY && (PARPORT && (X86 && (FB && KSfalsetruefalse8))))))
(x72false <=> (FB_PS3 && (HAS_IOMEM && (FB && PS3_PS3AV))))
(x72true <=> (FB_VIRTUAL && (HAS_IOMEM && FB)))
(x722 <=> (FB_ARC && (HAS_IOMEM && (FB && X86))))
(x723 <=> (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU)))))
(false || (((((XEN_FBDEV_FRONTEND && (HAS_IOMEM && (FB && XEN))) || (FB_METRONOME && (HAS_IOMEM && FB))) || (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU))))) => FB_DEFERRED_IO) && (FB_DEFERRED_IO => (((XEN_FBDEV_FRONTEND && (HAS_IOMEM && (FB && XEN))) || (FB_METRONOME && (HAS_IOMEM && FB))) || (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU))))))))
(false || (((FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU)))) => FB_HECUBA) && (FB_HECUBA => (FB_N4truetrue && (HAS_IOMEM && (FB && (X86 && MMU)))))))
(false || (((((FB_VT8623 && (HAS_IOMEM && (FB && PCI))) || (FB_ARK && (HAS_IOMEM && (FB && PCI)))) || (FB_S3 && (HAS_IOMEM && (FB && PCI)))) => FB_SVGALIB) && (FB_SVGALIB => (((FB_VT8623 && (HAS_IOMEM && (FB && PCI))) || (FB_ARK && (HAS_IOMEM && (FB && PCI)))) || (FB_S3 && (HAS_IOMEM && (FB && PCI)))))))
(false || (((((((((((x7truetrue || x64false) || x66false) || x724) || x725) || x726) || x679) || x727) || x728) || x67false) => FB_MACMODES) && (FB_MACMODES => (((((((((x7truetrue || x64false) || x66false) || x724) || x725) || x726) || x679) || x727) || x728) || x67false))))
(x7truetrue <=> (FB_VALKYRIE && (HAS_IOMEM && (FB && (MAC || (PPC_PMAC && PPC32))))))
(x64false <=> (FB_CONTROL && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x66false <=> (FB_MAC && (HAS_IOMEM && (FB && MAC))))
(x724 <=> (FB_ATYtrue28 && (HAS_IOMEM && (FB && (PCI && PPC_PMAC)))))
(x725 <=> (FB_MATROX && (HAS_IOMEM && (FB && (PCI && PPC_PMAC)))))
(x726 <=> (FB_ATY && (HAS_IOMEM && (FB && (!SPARC32 && PPC)))))
(x679 <=> (FB_PLATINUM && (HAS_IOMEM && (FB && (PPC_PMAC && PPC32)))))
(x727 <=> (FB_RADEON && (HAS_IOMEM && (FB && (PCI && PPC_OF)))))
(x728 <=> (FB_IMSTT && (HAS_IOMEM && (FB && (PCI && PPC)))))
(x67false <=> (FB_OF && (HAS_IOMEM && (FB && ((PPC64 || PPC_OF) && (!PPC_PSERIES || PCI))))))
(false || (((((((x729 || x73false) || x73true) || x732) || x733) || x734) => FB_BACKLIGHT) && (FB_BACKLIGHT => (((((x729 || x73false) || x73true) || x732) || x733) || x734))))
(x729 <=> (PMAC_BACKLIGHT && (MACINTOSH_DRIVERS && (ADB_PMU && (FB && (BROKEN || !PPC64))))))
(x73false <=> (FB_RIVA && (HAS_IOMEM && (FB && (PCI && FB_RIVA_BACKLIGHT)))))
(x73true <=> (FB_NVIDIA && (HAS_IOMEM && (FB && (PCI && FB_NVIDIA_BACKLIGHT)))))
(x732 <=> (FB_RADEON && (HAS_IOMEM && (FB && (PCI && FB_RADEON_BACKLIGHT)))))
(x733 <=> (FB_ATYtrue28 && (HAS_IOMEM && (FB && (PCI && FB_ATYtrue28_BACKLIGHT)))))
(x734 <=> (FB_ATY && (HAS_IOMEM && (FB && (!SPARC32 && FB_ATY_BACKLIGHT)))))
((HAS_IOMEM && FB) || ((((((((((x6true4 || x678) || x7false6) || x6true6) || x6true9) || x644) || x62true) || x648) || x622) => FB_MODE_HELPERS) && (FB_MODE_HELPERS => ((((((((x6true4 || x678) || x7false6) || x6true6) || x6true9) || x644) || x62true) || x648) || x622))))
(x6true4 <=> (FB_RIVA && (HAS_IOMEM && (FB && PCI))))
(x678 <=> (FB_UVESA && (HAS_IOMEM && (FB && CONNECTOR))))
(x7false6 <=> (FB_RADEON && (HAS_IOMEM && (FB && PCI))))
(x6true6 <=> (FB_I8truefalse && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32))))))
(x6true9 <=> (FB_NVIDIA && (HAS_IOMEM && (FB && PCI))))
(x644 <=> (FB_LE8false578 && (HAS_IOMEM && (FB && (PCI && X86)))))
(x62true <=> (FB_NEOMAGIC && (HAS_IOMEM && (FB && PCI))))
(x648 <=> (FB_INTEL && (HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86))))))
(x622 <=> (FB_SAVAGE && (HAS_IOMEM && (FB && (PCI && EXPERIMENTAL)))))
((HAS_IOMEM && FB) || ((((((FB_VT8623 && (HAS_IOMEM && (FB && PCI))) || (FB_ARK && (HAS_IOMEM && (FB && PCI)))) || (FB_MATROX && (HAS_IOMEM && (FB && PCI)))) || (FB_S3 && (HAS_IOMEM && (FB && PCI)))) => FB_TILEBLITTING) && (FB_TILEBLITTING => ((((FB_VT8623 && (HAS_IOMEM && (FB && PCI))) || (FB_ARK && (HAS_IOMEM && (FB && PCI)))) || (FB_MATROX && (HAS_IOMEM && (FB && PCI)))) || (FB_S3 && (HAS_IOMEM && (FB && PCI)))))))
((HAS_IOMEM && (FB && (ZORRO || PCI))) || ((false => FB_CIRRUS) && (FB_CIRRUS => false)))
((HAS_IOMEM && (FB && ((AMIGA && BROKEN) || PCI))) || ((false => FB_PM2) && (FB_PM2 => false)))
((HAS_IOMEM && (FB_PM2 && PCI)) || ((false => FB_PM2_FIFO_DISCONNECT) && (FB_PM2_FIFO_DISCONNECT => false)))
((HAS_IOMEM && (FB && (ARM && ARM_AMBA))) || ((false => FB_ARMCLCD) && (FB_ARMCLCD => false)))
(true || ((false => FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT) && (FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT => false)))
(true || ((false => FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2) && (FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 => false)))
(true || ((false => FB_ARMCLCD_SHARP_LQ64D343) && (FB_ARMCLCD_SHARP_LQ64D343 => false)))
(true || ((false => FB_ARMCLCD_SHARP_LQtruefalseD368) && (FB_ARMCLCD_SHARP_LQtruefalseD368 => false)))
(true || ((false => FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true) && (FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true => false)))
(true || ((false => FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE) && (FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE => false)))
(true || ((false => FB_ARMCLCD_HITACHI) && (FB_ARMCLCD_HITACHI => false)))
((HAS_IOMEM && (FB && (ARM && (ARCH_ACORN || ARCH_CLPS75falsefalse)))) || ((false => FB_ACORN) && (FB_ACORN => false)))
((HAS_IOMEM && (FB && (ARM && ARCH_CLPS7truetrueX))) || ((false => FB_CLPS7truetrueX) && (FB_CLPS7truetrueX => false)))
((HAS_IOMEM && (FB && (ARM && ARCH_SAtruetruefalsefalse))) || ((false => FB_SAtruetruefalsefalse) && (FB_SAtruetruefalsefalse => false)))
((HAS_IOMEM && (FB && (ARM && ARCH_IMX))) || ((false => FB_IMX) && (FB_IMX => false)))
((HAS_IOMEM && (FB && (PCI && (BROKEN || !SPARC64)))) || ((false => FB_CYBER2falsefalsefalse) && (FB_CYBER2falsefalsefalse => false)))
(false || (((true && (HAS_IOMEM && (FB && APOLLO))) => FB_APOLLO) && (FB_APOLLO => (true && (HAS_IOMEM && (FB && APOLLO))))))
(false || (((true && (HAS_IOMEM && (FB && Q4false))) => FB_Q4false) && (FB_Q4false => (true && (HAS_IOMEM && (FB && Q4false))))))
((HAS_IOMEM && (FB && AMIGA)) || ((false => FB_AMIGA) && (FB_AMIGA => false)))
((HAS_IOMEM && FB_AMIGA) || ((false => FB_AMIGA_OCS) && (FB_AMIGA_OCS => false)))
((HAS_IOMEM && FB_AMIGA) || ((false => FB_AMIGA_ECS) && (FB_AMIGA_ECS => false)))
((HAS_IOMEM && FB_AMIGA) || ((false => FB_AMIGA_AGA) && (FB_AMIGA_AGA => false)))
((HAS_IOMEM && (FB && ZORRO)) || ((false => FB_FM2) && (FB_FM2 => false)))
((HAS_IOMEM && (FB && X86)) || ((false => FB_ARC) && (FB_ARC => false)))
((HAS_IOMEM && (FB && ATARI)) || ((false => FB_ATARI) && (FB_ATARI => false)))
((HAS_IOMEM && (FB && ((PPC64 || PPC_OF) && (!PPC_PSERIES || PCI)))) || ((false => FB_OF) && (FB_OF => false)))
((HAS_IOMEM && (FB && (PPC_PMAC && PPC32))) || ((false => FB_CONTROL) && (FB_CONTROL => false)))
((HAS_IOMEM && (FB && (PPC_PMAC && PPC32))) || ((false => FB_PLATINUM) && (FB_PLATINUM => false)))
((HAS_IOMEM && (FB && (MAC || (PPC_PMAC && PPC32)))) || ((false => FB_VALKYRIE) && (FB_VALKYRIE => false)))
((HAS_IOMEM && (FB && (PPC32 && PCI))) || ((false => FB_CT6555false) && (FB_CT6555false => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_ASILIANT) && (FB_ASILIANT => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_IMSTT) && (FB_IMSTT => false)))
((HAS_IOMEM && (FB && (X86 || PPC))) || ((false => FB_VGAtrue6) && (FB_VGAtrue6 => false)))
((HAS_IOMEM && (FB && (BF54x && !BF542))) || ((false => FB_BF54X_LQfalse43) && (FB_BF54X_LQfalse43 => false)))
((HAS_IOMEM && (FB && BLACKFIN)) || ((false => FB_BFIN_T35falseMCQB) && (FB_BFIN_T35falseMCQB => false)))
((HAS_IOMEM && (FB && PARISC)) || (((true && (HAS_IOMEM && (FB && PARISC))) => FB_STI) && (FB_STI => (true && (HAS_IOMEM && (FB && PARISC))))))
((HAS_IOMEM && (FB && MAC)) || ((false => FB_MAC) && (FB_MAC => false)))
(false || (((true && (HAS_IOMEM && (FB && DIO))) => FB_HP3falsefalse) && (FB_HP3falsefalse => (true && (HAS_IOMEM && (FB && DIO))))))
((HAS_IOMEM && (FB && (ALPHA || TC))) || ((false => FB_TGA) && (FB_TGA => false)))
((HAS_IOMEM && (FB && CONNECTOR)) || ((false => FB_UVESA) && (FB_UVESA => false)))
((HAS_IOMEM && (FB && X86)) || ((false => FB_VESA) && (FB_VESA => false)))
((HAS_IOMEM && (FB && (X86 && EFI))) || ((false => FB_EFI) && (FB_EFI => false)))
((HAS_IOMEM && (FB && (X86 && MMU))) || ((false => FB_N4truetrue) && (FB_N4truetrue => false)))
((HAS_IOMEM && (FB && X86)) || ((false => FB_HGA) && (FB_HGA => false)))
((HAS_IOMEM && (FB_HGA && EXPERIMENTAL)) || ((false => FB_HGA_ACCEL) && (FB_HGA_ACCEL => false)))
((HAS_IOMEM && (FB && X86_VISWS)) || ((false => FB_SGIVW) && (FB_SGIVW => false)))
((HAS_IOMEM && (FB && (SGI_IP32 || X86_VISWS))) || ((false => FB_GBE) && (FB_GBE => false)))
((HAS_IOMEM && FB_GBE) || (((true && (HAS_IOMEM && FB_GBE)) => FB_GBE_MEM) && (FB_GBE_MEM => (true && (HAS_IOMEM && FB_GBE)))))
((HAS_IOMEM && (FB && SPARC)) || ((false => FB_SBUS) && (FB_SBUS => false)))
((HAS_IOMEM && (FB && (SPARC && FB_SBUS))) || ((false => FB_BW2) && (FB_BW2 => false)))
((HAS_IOMEM && (FB && (SPARC && FB_SBUS))) || ((false => FB_CG3) && (FB_CG3 => false)))
((HAS_IOMEM && (FB && (SPARC && FB_SBUS))) || ((false => FB_CG6) && (FB_CG6 => false)))
((HAS_IOMEM && (FB_SBUS && SPARC64)) || ((false => FB_FFB) && (FB_FFB => false)))
((HAS_IOMEM && FB_SBUS) || ((false => FB_TCX) && (FB_TCX => false)))
((HAS_IOMEM && FB_SBUS) || ((false => FB_CGtrue4) && (FB_CGtrue4 => false)))
((HAS_IOMEM && FB_SBUS) || ((false => FB_P9truefalsefalse) && (FB_P9truefalsefalse => false)))
((HAS_IOMEM && FB_SBUS) || ((false => FB_LEO) && (FB_LEO => false)))
((HAS_IOMEM && (FB && SPARC32)) || ((false => FB_IGA) && (FB_IGA => false)))
((HAS_IOMEM && (FB && (PCI && SPARC64))) || ((false => FB_XVR5falsefalse) && (FB_XVR5falsefalse => false)))
((HAS_IOMEM && (FB && (PCI && SPARC64))) || ((false => FB_XVR25falsefalse) && (FB_XVR25falsefalse => false)))
((HAS_IOMEM && (FB && SH_DREAMCAST)) || ((false => FB_PVR2) && (FB_PVR2 => false)))
((HAS_IOMEM && (FB && ARCH_CEIVA)) || ((false => FB_EPSONtrue355) && (FB_EPSONtrue355 => false)))
((HAS_IOMEM && FB) || ((false => FB_StrueDtrue3XXX) && (FB_StrueDtrue3XXX => false)))
((HAS_IOMEM && (FB && (ARCH_AT9trueSAM926true || (ARCH_AT9trueSAM9263 || (ARCH_AT9trueSAM9RL || (ARCH_AT9trueCAP9 || AVR32)))))) || ((false => FB_ATMEL) && (FB_ATMEL => false)))
((HAS_IOMEM && (FB_ATMEL && ARCH_AT9trueSAM926true)) || ((false => FB_INTSRAM) && (FB_INTSRAM => false)))
((HAS_IOMEM && (FB_ATMEL && MACH_AT9trueSAM926trueEK)) || ((false => FB_ATMEL_STN) && (FB_ATMEL_STN => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_NVIDIA) && (FB_NVIDIA => false)))
((HAS_IOMEM && FB_NVIDIA) || ((false => FB_NVIDIA_I2C) && (FB_NVIDIA_I2C => false)))
((HAS_IOMEM && FB_NVIDIA) || ((false => FB_NVIDIA_DEBUG) && (FB_NVIDIA_DEBUG => false)))
((HAS_IOMEM && FB_NVIDIA) || (((true && (HAS_IOMEM && FB_NVIDIA)) => FB_NVIDIA_BACKLIGHT) && (FB_NVIDIA_BACKLIGHT => (true && (HAS_IOMEM && FB_NVIDIA)))))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_RIVA) && (FB_RIVA => false)))
((HAS_IOMEM && FB_RIVA) || ((false => FB_RIVA_I2C) && (FB_RIVA_I2C => false)))
((HAS_IOMEM && FB_RIVA) || ((false => FB_RIVA_DEBUG) && (FB_RIVA_DEBUG => false)))
((HAS_IOMEM && FB_RIVA) || (((true && (HAS_IOMEM && FB_RIVA)) => FB_RIVA_BACKLIGHT) && (FB_RIVA_BACKLIGHT => (true && (HAS_IOMEM && FB_RIVA)))))
((HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86_32)))) || ((false => FB_I8truefalse) && (FB_I8truefalse => false)))
((HAS_IOMEM && FB_I8truefalse) || ((false => FB_I8truefalse_GTF) && (FB_I8truefalse_GTF => false)))
((HAS_IOMEM && (FB_I8truefalse && FB_I8truefalse_GTF)) || ((false => FB_I8truefalse_I2C) && (FB_I8truefalse_I2C => false)))
((HAS_IOMEM && (FB && (PCI && X86))) || ((false => FB_LE8false578) && (FB_LE8false578 => false)))
((HAS_IOMEM && (FB_LE8false578 && (FB && (PCI && X86)))) || ((false => FB_CARILLO_RANCH) && (FB_CARILLO_RANCH => false)))
((HAS_IOMEM && (FB && (EXPERIMENTAL && (PCI && X86)))) || ((false => FB_INTEL) && (FB_INTEL => false)))
((HAS_IOMEM && FB_INTEL) || ((false => FB_INTEL_DEBUG) && (FB_INTEL_DEBUG => false)))
((HAS_IOMEM && FB_INTEL) || (((true && (HAS_IOMEM && FB_INTEL)) => FB_INTEL_I2C) && (FB_INTEL_I2C => (true && (HAS_IOMEM && FB_INTEL)))))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_MATROX) && (FB_MATROX => false)))
((HAS_IOMEM && FB_MATROX) || ((false => FB_MATROX_MILLENIUM) && (FB_MATROX_MILLENIUM => false)))
((HAS_IOMEM && FB_MATROX) || ((false => FB_MATROX_MYSTIQUE) && (FB_MATROX_MYSTIQUE => false)))
((HAS_IOMEM && FB_MATROX) || ((false => FB_MATROX_G) && (FB_MATROX_G => false)))
((HAS_IOMEM && FB_MATROX) || ((false => FB_MATROX_I2C) && (FB_MATROX_I2C => false)))
((HAS_IOMEM && (FB_MATROX_G && FB_MATROX_I2C)) || ((false => FB_MATROX_MAVEN) && (FB_MATROX_MAVEN => false)))
((HAS_IOMEM && FB_MATROX) || ((false => FB_MATROX_MULTIHEAD) && (FB_MATROX_MULTIHEAD => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_RADEON) && (FB_RADEON => false)))
((HAS_IOMEM && FB_RADEON) || (((true && (HAS_IOMEM && FB_RADEON)) => FB_RADEON_I2C) && (FB_RADEON_I2C => (true && (HAS_IOMEM && FB_RADEON)))))
((HAS_IOMEM && FB_RADEON) || (((true && (HAS_IOMEM && FB_RADEON)) => FB_RADEON_BACKLIGHT) && (FB_RADEON_BACKLIGHT => (true && (HAS_IOMEM && FB_RADEON)))))
((HAS_IOMEM && FB_RADEON) || ((false => FB_RADEON_DEBUG) && (FB_RADEON_DEBUG => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_ATYtrue28) && (FB_ATYtrue28 => false)))
((HAS_IOMEM && FB_ATYtrue28) || (((true && (HAS_IOMEM && FB_ATYtrue28)) => FB_ATYtrue28_BACKLIGHT) && (FB_ATYtrue28_BACKLIGHT => (true && (HAS_IOMEM && FB_ATYtrue28)))))
((HAS_IOMEM && (FB && (!SPARC32 && (PCI || ATARI)))) || ((false => FB_ATY) && (FB_ATY => false)))
((HAS_IOMEM && (PCI && FB_ATY)) || (((true && (HAS_IOMEM && (FB_ATY && (SPARC64 && PCI)))) => FB_ATY_CT) && (FB_ATY_CT => (true && (HAS_IOMEM && (FB_ATY && (SPARC64 && PCI)))))))
((HAS_IOMEM && FB_ATY_CT) || ((false => FB_ATY_GENERIC_LCD) && (FB_ATY_GENERIC_LCD => false)))
((HAS_IOMEM && (FB_ATY && PCI)) || (((true && (HAS_IOMEM && (FB_ATY && ATARI))) => FB_ATY_GX) && (FB_ATY_GX => (true && (HAS_IOMEM && (FB_ATY && ATARI))))))
((HAS_IOMEM && FB_ATY) || (((true && (HAS_IOMEM && FB_ATY)) => FB_ATY_BACKLIGHT) && (FB_ATY_BACKLIGHT => (true && (HAS_IOMEM && FB_ATY)))))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_S3) && (FB_S3 => false)))
((HAS_IOMEM && (FB && (PCI && EXPERIMENTAL))) || ((false => FB_SAVAGE) && (FB_SAVAGE => false)))
((HAS_IOMEM && FB_SAVAGE) || ((false => FB_SAVAGE_I2C) && (FB_SAVAGE_I2C => false)))
((HAS_IOMEM && FB_SAVAGE) || ((false => FB_SAVAGE_ACCEL) && (FB_SAVAGE_ACCEL => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_SIS) && (FB_SIS => false)))
((HAS_IOMEM && FB_SIS) || ((false => FB_SIS_3falsefalse) && (FB_SIS_3falsefalse => false)))
((HAS_IOMEM && FB_SIS) || ((false => FB_SIS_3true5) && (FB_SIS_3true5 => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_VIA) && (FB_VIA => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_NEOMAGIC) && (FB_NEOMAGIC => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_KYRO) && (FB_KYRO => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_3DFX) && (FB_3DFX => false)))
((HAS_IOMEM && (FB_3DFX && EXPERIMENTAL)) || ((false => FB_3DFX_ACCEL) && (FB_3DFX_ACCEL => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_VOODOOtrue) && (FB_VOODOOtrue => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_VT8623) && (FB_VT8623 => false)))
((HAS_IOMEM && (FB && (PCI && (X86_32 && !a64BIT)))) || ((false => FB_CYBLA) && (FB_CYBLA => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_TRIDENT) && (FB_TRIDENT => false)))
((HAS_IOMEM && (FB_TRIDENT && EXPERIMENTAL)) || ((false => FB_TRIDENT_ACCEL) && (FB_TRIDENT_ACCEL => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_ARK) && (FB_ARK => false)))
((HAS_IOMEM && (FB && (PCI && EXPERIMENTAL))) || ((false => FB_PM3) && (FB_PM3 => false)))
((HAS_IOMEM && (FB && PCI)) || ((false => FB_CARMINE) && (FB_CARMINE => false)))
(true || ((false => FB_CARMINE_DRAM_EVAL) && (FB_CARMINE_DRAM_EVAL => false)))
(true || ((false => CARMINE_DRAM_CUSTOM) && (CARMINE_DRAM_CUSTOM => false)))
((HAS_IOMEM && (FB && (MIPS && SOC_AUtruetruefalsefalse))) || ((false => FB_AUtruetruefalsefalse) && (FB_AUtruetruefalsefalse => false)))
((HAS_IOMEM && (FB && (MIPS && SOC_AUtrue2falsefalse))) || ((false => FB_AUtrue2falsefalse) && (FB_AUtrue2falsefalse => false)))
((HAS_IOMEM && (FB && (PCI && (EXPERIMENTAL && X86)))) || ((false => FB_GEODE) && (FB_GEODE => false)))
((HAS_IOMEM && (FB && FB_GEODE)) || ((false => FB_GEODE_LX) && (FB_GEODE_LX => false)))
((HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL))) || ((false => FB_GEODE_GX) && (FB_GEODE_GX => false)))
((HAS_IOMEM && (FB && (FB_GEODE && EXPERIMENTAL))) || ((false => FB_GEODE_GXtrue) && (FB_GEODE_GXtrue => false)))
((HAS_IOMEM && (FB && HD6446true)) || ((false => FB_HIT) && (FB_HIT => false)))
((HAS_IOMEM && (FB && TC)) || ((false => FB_PMAG_AA) && (FB_PMAG_AA => false)))
((HAS_IOMEM && (FB && TC)) || ((false => FB_PMAG_BA) && (FB_PMAG_BA => false)))
((HAS_IOMEM && (FB && TC)) || ((false => FB_PMAGB_B) && (FB_PMAGB_B => false)))
((HAS_IOMEM && (FB && MACH_DECSTATION)) || ((false => FB_MAXINE) && (FB_MAXINE => false)))
((HAS_IOMEM && (FB && (MIPS_MAGNUM_4falsefalsefalse || OLIVETTI_M7falsefalse))) || ((false => FB_G364) && (FB_G364 => false)))
((HAS_IOMEM && (FB && (M68328 || (M68EZ328 || M68VZ328)))) || ((false => FB_68328) && (FB_68328 => false)))
((HAS_IOMEM && (FB && ARCH_PXA)) || ((false => FB_PXA) && (FB_PXA => false)))
((HAS_IOMEM && FB_PXA) || ((false => FB_PXA_SMARTPANEL) && (FB_PXA_SMARTPANEL => false)))
((HAS_IOMEM && FB_PXA) || ((false => FB_PXA_PARAMETERS) && (FB_PXA_PARAMETERS => false)))
((HAS_IOMEM && (FB && ARCH_PXA)) || ((false => FB_MBX) && (FB_MBX => false)))
((HAS_IOMEM && (FB_MBX && DEBUG_FS)) || ((false => FB_MBX_DEBUG) && (FB_MBX_DEBUG => false)))
((HAS_IOMEM && (FB && FSL_SOC)) || ((false => FB_FSL_DIU) && (FB_FSL_DIU => false)))
((HAS_IOMEM && (FB && ARCH_PXA)) || ((false => FB_Wtruefalsefalse) && (FB_Wtruefalsefalse => false)))
((HAS_IOMEM && (FB && SUPERH)) || (((true && (HAS_IOMEM && (FB && SUPERH))) => FB_SH_MOBILE_LCDC) && (FB_SH_MOBILE_LCDC => (true && (HAS_IOMEM && (FB && SUPERH))))))
((HAS_IOMEM && (FB && MFD_CORE)) || ((false => FB_TMIO) && (FB_TMIO => false)))
((HAS_IOMEM && FB_TMIO) || (((true && (HAS_IOMEM && FB_TMIO)) => FB_TMIO_ACCELL) && (FB_TMIO_ACCELL => (true && (HAS_IOMEM && FB_TMIO)))))
((HAS_IOMEM && (FB && ARCH_S3C24truefalse)) || ((false => FB_S3C24truefalse) && (FB_S3C24truefalse => false)))
((HAS_IOMEM && FB_S3C24truefalse) || ((false => FB_S3C24truefalse_DEBUG) && (FB_S3C24truefalse_DEBUG => false)))
((HAS_IOMEM && (FB && MFD_SM5falsetrue)) || ((false => FB_SM5falsetrue) && (FB_SM5falsetrue => false)))
((HAS_IOMEM && (FB && ARCH_PNX4falsefalse8)) || ((false => FB_PNX4falsefalse8_DUM) && (FB_PNX4falsefalse8_DUM => false)))
((HAS_IOMEM && FB_PNX4falsefalse8_DUM) || ((false => FB_PNX4falsefalse8_DUM_RGB) && (FB_PNX4falsefalse8_DUM_RGB => false)))
((HAS_IOMEM && (FB && PPC)) || ((false => FB_IBM_GXT45falsefalse) && (FB_IBM_GXT45falsefalse => false)))
((HAS_IOMEM && (FB && PS3_PS3AV)) || ((false => FB_PS3) && (FB_PS3 => false)))
((HAS_IOMEM && FB_PS3) || (((true && (HAS_IOMEM && FB_PS3)) => FB_PS3_DEFAULT_SIZE_M) && (FB_PS3_DEFAULT_SIZE_M => (true && (HAS_IOMEM && FB_PS3)))))
((HAS_IOMEM && (FB && XILINX_VIRTEX)) || ((false => FB_XILINX) && (FB_XILINX => false)))
((HAS_IOMEM && (FB && MIPS_COBALT)) || ((false => FB_COBALT) && (FB_COBALT => false)))
((HAS_IOMEM && (FB && (CPU_SUBTYPE_SH776false || CPU_SUBTYPE_SH7763))) || ((false => FB_SH776false) && (FB_SH776false => false)))
((HAS_IOMEM && FB) || ((false => FB_VIRTUAL) && (FB_VIRTUAL => false)))
((HAS_IOMEM && (FB && XEN)) || (((true && (HAS_IOMEM && (FB && XEN))) => XEN_FBDEV_FRONTEND) && (XEN_FBDEV_FRONTEND => (true && (HAS_IOMEM && (FB && XEN))))))
((HAS_IOMEM && FB) || ((false => FB_METRONOME) && (FB_METRONOME => false)))
((HAS_IOMEM && FB) || ((false => FB_MB862XX) && (FB_MB862XX => false)))
((HAS_IOMEM && (PCI && FB_MB862XX)) || ((false => FB_MB862XX_PCI_GDC) && (FB_MB862XX_PCI_GDC => false)))
((HAS_IOMEM && (FB_MB862XX && (OF && !FB_MB862XX_PCI_GDC))) || ((false => FB_MB862XX_LIME) && (FB_MB862XX_LIME => false)))
((HAS_IOMEM && FB_MB862XX_LIME) || ((false => FB_PRE_INIT_FB) && (FB_PRE_INIT_FB => false)))
((HAS_IOMEM && (FB && ARCH_OMAP)) || ((false => FB_OMAP) && (FB_OMAP => false)))
((HAS_IOMEM && FB_OMAP) || ((false => FB_OMAP_BOOTLOADER_INIT) && (FB_OMAP_BOOTLOADER_INIT => false)))
((HAS_IOMEM && FB_OMAP) || (((true && (HAS_IOMEM && FB_OMAP)) => FB_OMAP_CONSISTENT_DMA_SIZE) && (FB_OMAP_CONSISTENT_DMA_SIZE => (true && (HAS_IOMEM && FB_OMAP)))))
((HAS_IOMEM && (FB_OMAP && ARCH_OMAPtrue)) || ((false => FB_OMAP_DMA_TUNE) && (FB_OMAP_DMA_TUNE => false)))
((HAS_IOMEM && FB_OMAP) || ((false => FB_OMAP_LCDC_EXTERNAL) && (FB_OMAP_LCDC_EXTERNAL => false)))
((HAS_IOMEM && (FB_OMAP && FB_OMAP_LCDC_EXTERNAL)) || ((false => FB_OMAP_LCDC_HWA742) && (FB_OMAP_LCDC_HWA742 => false)))
((HAS_IOMEM && (FB_OMAP && FB_OMAP_LCDC_EXTERNAL)) || ((false => FB_OMAP_LCDC_BLIZZARD) && (FB_OMAP_LCDC_BLIZZARD => false)))
(HAS_IOMEM || (((((USB_APPLEDISPLAY && (USB_SUPPORT && USB)) || (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI)))) || (FB_BACKLIGHT && (HAS_IOMEM && FB))) => BACKLIGHT_LCD_SUPPORT) && (BACKLIGHT_LCD_SUPPORT => (((USB_APPLEDISPLAY && (USB_SUPPORT && USB)) || (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI)))) || (FB_BACKLIGHT && (HAS_IOMEM && FB))))))
((HAS_IOMEM && BACKLIGHT_LCD_SUPPORT) || (((true && (HAS_IOMEM && BACKLIGHT_LCD_SUPPORT)) => LCD_CLASS_DEVICE) && (LCD_CLASS_DEVICE => (true && (HAS_IOMEM && BACKLIGHT_LCD_SUPPORT)))))
((HAS_IOMEM && (LCD_CLASS_DEVICE && (SPI_MASTER && PXA_SHARPSL))) || ((false => LCD_CORGI) && (LCD_CORGI => false)))
((HAS_IOMEM && (LCD_CLASS_DEVICE && SPI_MASTER)) || ((false => LCD_LTV35falseQV) && (LCD_LTV35falseQV => false)))
(false || (((LCD_VGG2432A4 && (HAS_IOMEM && (BACKLIGHT_LCD_SUPPORT && (LCD_CLASS_DEVICE && SPI_MASTER)))) => LCD_ILI932false) && (LCD_ILI932false => (LCD_VGG2432A4 && (HAS_IOMEM && (BACKLIGHT_LCD_SUPPORT && (LCD_CLASS_DEVICE && SPI_MASTER)))))))
((HAS_IOMEM && (LCD_CLASS_DEVICE && SPI_MASTER)) || ((false => LCD_TDO24M) && (LCD_TDO24M => false)))
((HAS_IOMEM && (BACKLIGHT_LCD_SUPPORT && (LCD_CLASS_DEVICE && SPI_MASTER))) || ((false => LCD_VGG2432A4) && (LCD_VGG2432A4 => false)))
((HAS_IOMEM && LCD_CLASS_DEVICE) || ((false => LCD_PLATFORM) && (LCD_PLATFORM => false)))
((HAS_IOMEM && (LCD_CLASS_DEVICE && (SPI && MACH_TOSA))) || ((false => LCD_TOSA) && (LCD_TOSA => false)))
((HAS_IOMEM && BACKLIGHT_LCD_SUPPORT) || ((((((((x335 || x735) || x736) || x737) || x738) || x739) || x74false) => BACKLIGHT_CLASS_DEVICE) && (BACKLIGHT_CLASS_DEVICE => ((((((x335 || x735) || x736) || x737) || x738) || x739) || x74false))))
(x335 <=> (ACPI_TOSHIBA && (!X86_VOYAGER && (ACPI && (X86 && INPUT)))))
(x735 <=> (USB_APPLEDISPLAY && (USB_SUPPORT && USB)))
(x736 <=> (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))))
(x737 <=> (ACPI_ASUS && (!X86_VOYAGER && (ACPI && X86))))
(x738 <=> (SONY_LAPTOP && (MISC_DEVICES && (X86 && (ACPI && INPUT)))))
(x739 <=> (FB_BACKLIGHT && (HAS_IOMEM && FB)))
(x74false <=> (true && (HAS_IOMEM && BACKLIGHT_LCD_SUPPORT)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && FB_ATMEL)) || (((true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && (FB_ATMEL && (MACH_SAM926trueEK || MACH_SAM9263EK))))) => BACKLIGHT_ATMEL_LCDC) && (BACKLIGHT_ATMEL_LCDC => (true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && (FB_ATMEL && (MACH_SAM926trueEK || MACH_SAM9263EK))))))))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && ATMEL_PWM)) || ((false => BACKLIGHT_ATMEL_PWM) && (BACKLIGHT_ATMEL_PWM => false)))
((HAS_IOMEM && BACKLIGHT_CLASS_DEVICE) || ((false => BACKLIGHT_CORGI) && (BACKLIGHT_CORGI => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && SHARP_LOCOMO)) || (((true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && SHARP_LOCOMO))) => BACKLIGHT_LOCOMO) && (BACKLIGHT_LOCOMO => (true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && SHARP_LOCOMO))))))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && ARCH_OMAPtrue)) || (((true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && ARCH_OMAPtrue))) => BACKLIGHT_OMAPtrue) && (BACKLIGHT_OMAPtrue => (true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && ARCH_OMAPtrue))))))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && SH_HP6XX)) || (((true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && SH_HP6XX))) => BACKLIGHT_HP68false) && (BACKLIGHT_HP68false => (true && (HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && SH_HP6XX))))))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && (PCI && X86))) || ((false => BACKLIGHT_PROGEAR) && (BACKLIGHT_PROGEAR => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && (LCD_CLASS_DEVICE && (PCI && (X86 && FB_LE8false578))))) || ((false => BACKLIGHT_CARILLO_RANCH) && (BACKLIGHT_CARILLO_RANCH => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && HAVE_PWM)) || ((false => BACKLIGHT_PWM) && (BACKLIGHT_PWM => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && PMIC_DA9false3X)) || ((false => BACKLIGHT_DA9false3X) && (BACKLIGHT_DA9false3X => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && X86)) || ((false => BACKLIGHT_MBP_NVIDIA) && (BACKLIGHT_MBP_NVIDIA => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && (I2C && (MACH_TOSA && LCD_TOSA)))) || ((false => BACKLIGHT_TOSA) && (BACKLIGHT_TOSA => false)))
((HAS_IOMEM && (BACKLIGHT_CLASS_DEVICE && X86)) || ((false => BACKLIGHT_SAHARA) && (BACKLIGHT_SAHARA => false)))
(HAS_IOMEM || ((false => DISPLAY_SUPPORT) && (DISPLAY_SUPPORT => false)))
((HAS_IOMEM && (VT && (!ARCH_ACORN && (!ARCH_EBSAtruetruefalse && (!4xx && (!8xx && (!SPARC && (!M68K && (!PARISC && (!FRV && (!ARCH_VERSATILE && (!SUPERH && (!BLACKFIN && (!AVR32 && (!MNtruefalse3falsefalse && (EMBEDDED || !X86)))))))))))))))) || (((true && (HAS_IOMEM && (VT && (!ARCH_ACORN && (!ARCH_EBSAtruetruefalse && (!4xx && (!8xx && (!SPARC && (!M68K && (!PARISC && (!FRV && (!ARCH_VERSATILE && (!SUPERH && (!BLACKFIN && (!AVR32 && !MNtruefalse3falsefalse))))))))))))))) => VGA_CONSOLE) && (VGA_CONSOLE => (true && (HAS_IOMEM && (VT && (!ARCH_ACORN && (!ARCH_EBSAtruetruefalse && (!4xx && (!8xx && (!SPARC && (!M68K && (!PARISC && (!FRV && (!ARCH_VERSATILE && (!SUPERH && (!BLACKFIN && (!AVR32 && !MNtruefalse3falsefalse))))))))))))))))))
((HAS_IOMEM && (VT && VGA_CONSOLE)) || ((false => VGACON_SOFT_SCROLLBACK) && (VGACON_SOFT_SCROLLBACK => false)))
((HAS_IOMEM && (VT && VGACON_SOFT_SCROLLBACK)) || (((true && (HAS_IOMEM && (VT && VGACON_SOFT_SCROLLBACK))) => VGACON_SOFT_SCROLLBACK_SIZE) && (VGACON_SOFT_SCROLLBACK_SIZE => (true && (HAS_IOMEM && (VT && VGACON_SOFT_SCROLLBACK))))))
((HAS_IOMEM && (VT && (!M68K && (!PARISC && ISA)))) || ((false => MDA_CONSOLE) && (MDA_CONSOLE => false)))
((HAS_IOMEM && (VT && SGI_IP22)) || ((false => SGI_NEWPORT_CONSOLE) && (SGI_NEWPORT_CONSOLE => false)))
((HAS_IOMEM && (VT && SPARC)) || ((false => PROM_CONSOLE) && (PROM_CONSOLE => false)))
(false || (((true && (HAS_IOMEM && (VT && (!PROM_CONSOLE || (!VGA_CONSOLE || true))))) => DUMMY_CONSOLE) && (DUMMY_CONSOLE => (true && (HAS_IOMEM && (VT && (!PROM_CONSOLE || (!VGA_CONSOLE || true))))))))
((HAS_IOMEM && (VT && (PARISC && DUMMY_CONSOLE))) || (((true && (HAS_IOMEM && (VT && (PARISC && DUMMY_CONSOLE)))) => DUMMY_CONSOLE_COLUMNS) && (DUMMY_CONSOLE_COLUMNS => (true && (HAS_IOMEM && (VT && (PARISC && DUMMY_CONSOLE)))))))
((HAS_IOMEM && (VT && (PARISC && DUMMY_CONSOLE))) || (((true && (HAS_IOMEM && (VT && (PARISC && DUMMY_CONSOLE)))) => DUMMY_CONSOLE_ROWS) && (DUMMY_CONSOLE_ROWS => (true && (HAS_IOMEM && (VT && (PARISC && DUMMY_CONSOLE)))))))
((HAS_IOMEM && (VT && FB)) || ((false => FRAMEBUFFER_CONSOLE) && (FRAMEBUFFER_CONSOLE => false)))
((HAS_IOMEM && (VT && FRAMEBUFFER_CONSOLE)) || ((false => FRAMEBUFFER_CONSOLE_DETECT_PRIMARY) && (FRAMEBUFFER_CONSOLE_DETECT_PRIMARY => false)))
((HAS_IOMEM && (VT && FRAMEBUFFER_CONSOLE)) || ((false => FRAMEBUFFER_CONSOLE_ROTATION) && (FRAMEBUFFER_CONSOLE_ROTATION => false)))
((HAS_IOMEM && (VT && PARISC)) || (((true && (HAS_IOMEM && (VT && PARISC))) => STI_CONSOLE) && (STI_CONSOLE => (true && (HAS_IOMEM && (VT && PARISC))))))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE || STI_CONSOLE))) || ((false => FONTS) && (FONTS => false)))
((HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || STI_CONSOLE) && FONTS))) || (((true && (HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || STI_CONSOLE) && (!SPARC && !FONTS))))) => FONT_8x8) && (FONT_8x8 => (true && (HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || STI_CONSOLE) && (!SPARC && !FONTS))))))))
((HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || (SGI_NEWPORT_CONSOLE || (STI_CONSOLE || USB_SISUSBVGA_CON))) && FONTS))) || (((((((x74true || x742) || x743) || x744) || x745) || x746) => FONT_8xtrue6) && (FONT_8xtrue6 => (((((x74true || x742) || x743) || x744) || x745) || x746))))
(x74true <=> (FB_ARK && (HAS_IOMEM && (FB && (PCI && FRAMEBUFFER_CONSOLE)))))
(x742 <=> (FB_VT8623 && (HAS_IOMEM && (FB && (PCI && FRAMEBUFFER_CONSOLE)))))
(x743 <=> (USB_SISUSBVGA_CON && (USB_SUPPORT && VT)))
(x744 <=> (FB_S3 && (HAS_IOMEM && (FB && (PCI && FRAMEBUFFER_CONSOLE)))))
(x745 <=> (FB_VGAtrue6 && (HAS_IOMEM && (FB && ((X86 || PPC) && FRAMEBUFFER_CONSOLE)))))
(x746 <=> (true && (HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || (SGI_NEWPORT_CONSOLE || (STI_CONSOLE || USB_SISUSBVGA_CON))) && (!SPARC && !FONTS))))))
((HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || STI_CONSOLE) && FONTS))) || (((true && (HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || STI_CONSOLE) && (!SPARC && (!FONTS && MAC)))))) => FONT_6xtruetrue) && (FONT_6xtruetrue => (true && (HAS_IOMEM && (VT && ((FRAMEBUFFER_CONSOLE || STI_CONSOLE) && (!SPARC && (!FONTS && MAC)))))))))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && FONTS))) || ((false => FONT_7xtrue4) && (FONT_7xtrue4 => false)))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && FONTS))) || (((true && (HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && (!SPARC && (!FONTS && AMIGA)))))) => FONT_PEARL_8x8) && (FONT_PEARL_8x8 => (true && (HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && (!SPARC && (!FONTS && AMIGA)))))))))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && FONTS))) || (((true && (HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && (!SPARC && (!FONTS && (ARM && ARCH_ACORN))))))) => FONT_ACORN_8x8) && (FONT_ACORN_8x8 => (true && (HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && (!SPARC && (!FONTS && (ARM && ARCH_ACORN))))))))))
((HAS_IOMEM && (VT && (!SPARC && FONTS))) || ((false => FONT_MINI_4x6) && (FONT_MINI_4x6 => false)))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && ((!SPARC && FONTS) || SPARC)))) || ((false => FONT_SUN8xtrue6) && (FONT_SUN8xtrue6 => false)))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && ((!SPARC && FONTS) || SPARC)))) || ((false => FONT_SUNtrue2x22) && (FONT_SUNtrue2x22 => false)))
((HAS_IOMEM && (VT && (FRAMEBUFFER_CONSOLE && FONTS))) || ((false => FONT_truefalsextrue8) && (FONT_truefalsextrue8 => false)))
((HAS_IOMEM && (FB || SGI_NEWPORT_CONSOLE)) || ((false => LOGO) && (LOGO => false)))
(false || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (FB && SPU_BASE))))) => FB_LOGO_EXTRA) && (FB_LOGO_EXTRA => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (FB && SPU_BASE))))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO)) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO))) => LOGO_LINUX_MONO) && (LOGO_LINUX_MONO => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO)) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO))) => LOGO_LINUX_VGAtrue6) && (LOGO_LINUX_VGAtrue6 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO)) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO))) => LOGO_LINUX_CLUT224) && (LOGO_LINUX_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && LOGO))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && BLACKFIN))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && BLACKFIN)))) => LOGO_BLACKFIN_VGAtrue6) && (LOGO_BLACKFIN_VGAtrue6 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && BLACKFIN)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && BLACKFIN))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && BLACKFIN)))) => LOGO_BLACKFIN_CLUT224) && (LOGO_BLACKFIN_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && BLACKFIN)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (MACH_DECSTATION || ALPHA)))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (MACH_DECSTATION || ALPHA))))) => LOGO_DEC_CLUT224) && (LOGO_DEC_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (MACH_DECSTATION || ALPHA))))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && MAC))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && MAC)))) => LOGO_MAC_CLUT224) && (LOGO_MAC_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && MAC)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && PARISC))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && PARISC)))) => LOGO_PARISC_CLUT224) && (LOGO_PARISC_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && PARISC)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (SGI_IP22 || (SGI_IP27 || (SGI_IP32 || X86_VISWS)))))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (SGI_IP22 || (SGI_IP27 || (SGI_IP32 || X86_VISWS))))))) => LOGO_SGI_CLUT224) && (LOGO_SGI_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && (SGI_IP22 || (SGI_IP27 || (SGI_IP32 || X86_VISWS))))))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SPARC))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SPARC)))) => LOGO_SUN_CLUT224) && (LOGO_SUN_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SPARC)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH)))) => LOGO_SUPERH_MONO) && (LOGO_SUPERH_MONO => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH)))) => LOGO_SUPERH_VGAtrue6) && (LOGO_SUPERH_VGAtrue6 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH)))) => LOGO_SUPERH_CLUT224) && (LOGO_SUPERH_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && SUPERH)))))))
((HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && M32R))) || (((true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && M32R)))) => LOGO_M32R_CLUT224) && (LOGO_M32R_CLUT224 => (true && (HAS_IOMEM && ((FB || SGI_NEWPORT_CONSOLE) && (LOGO && M32R)))))))
(HAS_IOMEM || ((false => SOUND) && (SOUND => false)))
(false || (((((SOUND_PRIME && (SOUND && !M68K)) || (SND_OSSEMUL && (SOUND && (!M68K && SND)))) || (DMASOUND && SOUND)) => SOUND_OSS_CORE) && (SOUND_OSS_CORE => (((SOUND_PRIME && (SOUND && !M68K)) || (SND_OSSEMUL && (SOUND && (!M68K && SND)))) || (DMASOUND && SOUND)))))
((ATARI && SOUND) || ((false => DMASOUND_ATARI) && (DMASOUND_ATARI => false)))
((AMIGA && SOUND) || ((false => DMASOUND_PAULA) && (DMASOUND_PAULA => false)))
((Q4false && SOUND) || ((false => DMASOUND_Q4false) && (DMASOUND_Q4false => false)))
(false || (((((DMASOUND_Q4false && (Q4false && SOUND)) || (DMASOUND_ATARI && (ATARI && SOUND))) || (DMASOUND_PAULA && (AMIGA && SOUND))) => DMASOUND) && (DMASOUND => (((DMASOUND_Q4false && (Q4false && SOUND)) || (DMASOUND_ATARI && (ATARI && SOUND))) || (DMASOUND_PAULA && (AMIGA && SOUND))))))
((SOUND && !M68K) || ((false => SND) && (SND => false)))
(false || (((((((x747 || x748) || x749) || x75false) || x75true) || x752) => SND_TIMER) && (SND_TIMER => (((((x747 || x748) || x749) || x75false) || x75true) || x752))))
(x747 <=> (SND_OPL4_LIB && (SOUND && (!M68K && SND))))
(x748 <=> (SND_VIRMIDI && (SOUND && (!M68K && (SND && (SND_DRIVERS && SND_SEQUENCER))))))
(x749 <=> (SND_RTCTIMER && (SOUND && (!M68K && (SND && RTC)))))
(x75false <=> (SND_PCM && (SOUND && (!M68K && SND))))
(x75true <=> (SND_OPL3_LIB && (SOUND && (!M68K && SND))))
(x752 <=> (SND_SEQUENCER && (SOUND && (!M68K && SND))))
(false || (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((xtrue2true || x753) || xtrue25) || x754) || x755) || xtrue28) || x756) || x757) || x758) || xtrue32) || x759) || x76false) || x76true) || x762) || x763) || x764) || x765) || x766) || x767) || x768) || xtrue38) || x769) || x77false) || x77true) || x772) || x773) || x774) || x775) || x776) || x777) || xtrue47) || x778) || x779) || x78false) || x78true) || x569) || x782) || x783) || x784) || x785) || x786) || xtrue54) || x787) || x788) || x789) || x79false) || x79true) || x792) || x793) || xtrue56) || x794) || x795) || x796) || x797) || xtrue95) || x798) || xtrue58) || x799) || xtrue59) || xtrue6true) || x8falsefalse) || x8falsetrue) || x8false2) || xtrue68) || x8false3) || x8false4) => SND_PCM) && (SND_PCM => (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((xtrue2true || x753) || xtrue25) || x754) || x755) || xtrue28) || x756) || x757) || x758) || xtrue32) || x759) || x76false) || x76true) || x762) || x763) || x764) || x765) || x766) || x767) || x768) || xtrue38) || x769) || x77false) || x77true) || x772) || x773) || x774) || x775) || x776) || x777) || xtrue47) || x778) || x779) || x78false) || x78true) || x569) || x782) || x783) || x784) || x785) || x786) || xtrue54) || x787) || x788) || x789) || x79false) || x79true) || x792) || x793) || xtrue56) || x794) || x795) || x796) || x797) || xtrue95) || x798) || xtrue58) || x799) || xtrue59) || xtrue6true) || x8falsefalse) || x8falsetrue) || x8false2) || xtrue68) || x8false3) || x8false4))))
(xtrue2true <=> (SND_GINA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x753 <=> (SND_DUMMY && (SOUND && (!M68K && (SND && SND_DRIVERS)))))
(xtrue25 <=> (SND_INDIGOIO && (SOUND && (!M68K && (SND && SND_PCI)))))
(x754 <=> (SND_AOA_SOUNDBUS && (SOUND && (!M68K && (SND && SND_AOA)))))
(x755 <=> (SND_MIRO && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue28 <=> (SND_ECHO3G && (SOUND && (!M68K && (SND && SND_PCI)))))
(x756 <=> (SND_SB8_DSP && (SOUND && (!M68K && SND))))
(x757 <=> (SND_SUN_DBRI && (SOUND && (!M68K && (SND && (SND_SPARC && SBUS))))))
(x758 <=> (SND_KORGtrue2true2 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue32 <=> (SND_MONA && (SOUND && (!M68K && (SND && SND_PCI)))))
(x759 <=> (SND_AUtrueXfalsefalse && (SOUND && (!M68K && (SND && (SND_MIPS && (SOC_AUtruefalsefalsefalse || (SOC_AUtruetruefalsefalse || SOC_AUtrue5falsefalse))))))))
(x76false <=> (SND_RME9652 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x76true <=> (SND_POWERMAC && (SOUND && (!M68K && (SND && (SND_PPC && (I2C && (INPUT && PPC_PMAC))))))))
(x762 <=> (SND_EStrue8XX && (SOUND && (!M68K && (SND && SND_ISA)))))
(x763 <=> (SND_SAtruetrueXX_UDAtrue34true && (SOUND && (!M68K && (SND && (SND_ARM && (ARCH_SAtruetruefalsefalse && L3)))))))
(x764 <=> (SND_RME32 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x765 <=> (SND_PCSP && (SOUND && (!M68K && (SND && (SND_DRIVERS && (PCSPKR_PLATFORM && (X86_PC && (HIGH_RES_TIMERS && (INPUT && EXPERIMENTAL))))))))))
(x766 <=> (VIDEO_CX88_ALSA && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_CX88 && (SND && EXPERIMENTAL)))))))
(x767 <=> (VIDEO_EM28XX_ALSA && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (V4L_USB_DRIVERS && (USB && (VIDEO_EM28XX && SND))))))))
(x768 <=> (SND_PDAUDIOCF && (SOUND && (!M68K && (SND && (SND_PCMCIA && PCMCIA))))))
(xtrue38 <=> (SND_MIA && (SOUND && (!M68K && (SND && SND_PCI)))))
(x769 <=> (VIDEO_SAA7true34_ALSA && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_SAA7true34 && SND))))))
(x77false <=> (SND_GUSEXTREME && (SOUND && (!M68K && (SND && SND_ISA)))))
(x77true <=> (SND_OXYGEN_LIB && (SOUND && (!M68K && (SND && SND_PCI)))))
(x772 <=> (SND_HDSP && (SOUND && (!M68K && (SND && SND_PCI)))))
(x773 <=> (SND_CS5535AUDIO && (SOUND && (!M68K && (SND && (SND_PCI && (X86 && !X86_64)))))))
(x774 <=> (SND_ALS4falsefalsefalse && (SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API))))))
(x775 <=> (SND_EStrue688 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x776 <=> (SND_USB_AUDIO && (SOUND && (!M68K && (SND && (SND_USB && USB))))))
(x777 <=> (SND_BT87X && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue47 <=> (SND_DARLA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x778 <=> (SND_ENStrue37false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x779 <=> (SND_AICA && (SOUND && (!M68K && (SND && (SND_SUPERH && SH_DREAMCAST))))))
(x78false <=> (SND_MIXART && (SOUND && (!M68K && (SND && SND_PCI)))))
(x78true <=> (SND_HDA_INTEL && (SOUND && (!M68K && (SND && SND_PCI)))))
(x569 <=> (VIDEO_GO7falsefalse7 && (STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND))))))))
(x782 <=> (SND_GUSCLASSIC && (SOUND && (!M68K && (SND && SND_ISA)))))
(x783 <=> (SND_SUN_CS423true && (SOUND && (!M68K && (SND && SND_SPARC)))))
(x784 <=> (SND_RME96 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x785 <=> (SND_AC97_CODEC && (SOUND && (!M68K && SND))))
(x786 <=> (SND_SBtrue6_DSP && (SOUND && (!M68K && SND))))
(xtrue54 <=> (SND_LAYLA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x787 <=> (SND_ALS3falsefalse && (SOUND && (!M68K && (SND && SND_PCI)))))
(x788 <=> (SND_PXA2XX_PCM && (SOUND && (!M68K && (SND && SND_ARM)))))
(x789 <=> (SND_AT73C2true3 && (SOUND && (!M68K && (SND && (SND_SPI && ATMEL_SSC))))))
(x79false <=> (SND_PCM_OSS && (SOUND && (!M68K && SND))))
(x79true <=> (SND_CMIPCI && (SOUND && (!M68K && (SND && SND_PCI)))))
(x792 <=> (SND_USB_CAIAQ && (SOUND && (!M68K && (SND && (SND_USB && USB))))))
(x793 <=> (SND_SUN_AMD793false && (SOUND && (!M68K && (SND && (SND_SPARC && SBUS))))))
(xtrue56 <=> (SND_INDIGODJ && (SOUND && (!M68K && (SND && SND_PCI)))))
(x794 <=> (SND_SOC && (SOUND && (!M68K && SND))))
(x795 <=> (SND_HDSPM && (SOUND && (!M68K && (SND && SND_PCI)))))
(x796 <=> (SND_HARMONY && (SOUND && (!M68K && (SND && SND_GSC)))))
(x797 <=> (SND_USB_USX2Y && (SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 || (PPC || ALPHA)))))))))
(xtrue95 <=> (SND_ADtrue8true6A && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x798 <=> (SND_AZT3328 && (SOUND && (!M68K && (SND && (SND_PCI && EXPERIMENTAL))))))
(xtrue58 <=> (SND_DARLA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x799 <=> (SND_VX_LIB && (SOUND && (!M68K && SND))))
(xtrue59 <=> (SND_LAYLA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue6true <=> (SND_GINA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8falsefalse <=> (SND_PCXHR && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8falsetrue <=> (SND_AOA && (SOUND && (!M68K && (SND && PPC_PMAC)))))
(x8false2 <=> (SND_WSS_LIB && (SOUND && (!M68K && SND))))
(xtrue68 <=> (SND_INDIGO && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8false3 <=> (SND_PS3 && (SOUND && (!M68K && (SND && (SND_PPC && PS3_PS3AV))))))
(x8false4 <=> (SND_ARMAACI && (SOUND && (!M68K && (SND && (SND_ARM && ARM_AMBA))))))
(false || (((((((((((((((x797 || x747) || x8false5) || x772) || xtrue53) || x799) || x8false6) || x776) || x75true) || x8falsefalse) || x8false7) || x792) || x78false) || x795) => SND_HWDEP) && (SND_HWDEP => (((((((((((((x797 || x747) || x8false5) || x772) || xtrue53) || x799) || x8false6) || x776) || x75true) || x8falsefalse) || x8false7) || x792) || x78false) || x795))))
(x797 <=> (SND_USB_USX2Y && (SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 || (PPC || ALPHA)))))))))
(x747 <=> (SND_OPL4_LIB && (SOUND && (!M68K && SND))))
(x8false5 <=> (SND_HDA_HWDEP && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))
(x772 <=> (SND_HDSP && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue53 <=> (SND_EMUtruefalseKtrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(x799 <=> (SND_VX_LIB && (SOUND && (!M68K && SND))))
(x8false6 <=> (SND_USB_UStrue22L && (SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 && EXPERIMENTAL))))))))
(x776 <=> (SND_USB_AUDIO && (SOUND && (!M68K && (SND && (SND_USB && USB))))))
(x75true <=> (SND_OPL3_LIB && (SOUND && (!M68K && SND))))
(x8falsefalse <=> (SND_PCXHR && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8false7 <=> (SND_SSCAPE && (SOUND && (!M68K && (SND && SND_ISA)))))
(x792 <=> (SND_USB_CAIAQ && (SOUND && (!M68K && (SND && (SND_USB && USB))))))
(x78false <=> (SND_MIXART && (SOUND && (!M68K && (SND && SND_PCI)))))
(x795 <=> (SND_HDSPM && (SOUND && (!M68K && (SND && SND_PCI)))))
(false || ((((((((((((((((((((((((((((((((x8false8 || x782) || xtrue53) || x8false9) || xtrue54) || x8truefalse) || xtrue28) || x8truetrue) || xtrue32) || x8true2) || x748) || x8true3) || x8true4) || x8true5) || x792) || xtrue38) || x795) || x797) || x772) || x8true6) || x8true7) || x8true8) || xtrue59) || x8true9) || x82false) || x776) || x8false6) || x82true) || x778) || x822) || x823) => SND_RAWMIDI) && (SND_RAWMIDI => ((((((((((((((((((((((((((((((x8false8 || x782) || xtrue53) || x8false9) || xtrue54) || x8truefalse) || xtrue28) || x8truetrue) || xtrue32) || x8true2) || x748) || x8true3) || x8true4) || x8true5) || x792) || xtrue38) || x795) || x797) || x772) || x8true6) || x8true7) || x8true8) || xtrue59) || x8true9) || x82false) || x776) || x8false6) || x82true) || x778) || x822) || x823))))
(x8false8 <=> (SND_EMUtruefalseKtrueX && (SOUND && (!M68K && (SND && SND_PCI)))))
(x782 <=> (SND_GUSCLASSIC && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue53 <=> (SND_EMUtruefalseKtrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8false9 <=> (SND_INTERWAVE && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue54 <=> (SND_LAYLA2false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8truefalse <=> (USB_MIDI_GADGET && (true && (SND && EXPERIMENTAL))))
(xtrue28 <=> (SND_ECHO3G && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8truetrue <=> (SND_CS428true && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue32 <=> (SND_MONA && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8true2 <=> (SND_MTPAV && (SOUND && (!M68K && (SND && SND_DRIVERS)))))
(x748 <=> (SND_VIRMIDI && (SOUND && (!M68K && (SND && (SND_DRIVERS && SND_SEQUENCER))))))
(x8true3 <=> (SND_INTERWAVE_STB && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x8true4 <=> (SND_SB8 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8true5 <=> (SND_ICEtrue724 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x792 <=> (SND_USB_CAIAQ && (SOUND && (!M68K && (SND && (SND_USB && USB))))))
(xtrue38 <=> (SND_MIA && (SOUND && (!M68K && (SND && SND_PCI)))))
(x795 <=> (SND_HDSPM && (SOUND && (!M68K && (SND && SND_PCI)))))
(x797 <=> (SND_USB_USX2Y && (SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 || (PPC || ALPHA)))))))))
(x772 <=> (SND_HDSP && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8true6 <=> (SND_CS46XX && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8true7 <=> (SND_GUSMAX && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8true8 <=> (SND_CAfalsetruefalse6 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue59 <=> (SND_LAYLA24 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8true9 <=> (SND_PORTMAN2X4 && (SOUND && (!M68K && (SND && (SND_DRIVERS && PARPORT))))))
(x82false <=> (SND_SERIAL_Utrue655false && (SOUND && (!M68K && (SND && SND_DRIVERS)))))
(x776 <=> (SND_USB_AUDIO && (SOUND && (!M68K && (SND && (SND_USB && USB))))))
(x8false6 <=> (SND_USB_UStrue22L && (SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 && EXPERIMENTAL))))))))
(x82true <=> (SND_MTS64 && (SOUND && (!M68K && (SND && (SND_DRIVERS && PARPORT))))))
(x778 <=> (SND_ENStrue37false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x822 <=> (SND_MPU4falsetrue_UART && (SOUND && (!M68K && SND))))
(x823 <=> (SND_ENStrue37true && (SOUND && (!M68K && (SND && SND_PCI)))))
(false || ((false => SND_JACK) && (SND_JACK => false)))
((SOUND && (!M68K && SND)) || ((false => SND_SEQUENCER) && (SND_SEQUENCER => false)))
((SOUND && (!M68K && (SND && SND_SEQUENCER))) || ((false => SND_SEQ_DUMMY) && (SND_SEQ_DUMMY => false)))
(false || (((((SND_SEQUENCER_OSS && (SOUND && (!M68K && (SND && SND_SEQUENCER)))) || (SND_MIXER_OSS && (SOUND && (!M68K && SND)))) || (SND_PCM_OSS && (SOUND && (!M68K && SND)))) => SND_OSSEMUL) && (SND_OSSEMUL => (((SND_SEQUENCER_OSS && (SOUND && (!M68K && (SND && SND_SEQUENCER)))) || (SND_MIXER_OSS && (SOUND && (!M68K && SND)))) || (SND_PCM_OSS && (SOUND && (!M68K && SND)))))))
((SOUND && (!M68K && SND)) || ((false => SND_MIXER_OSS) && (SND_MIXER_OSS => false)))
((SOUND && (!M68K && SND)) || ((false => SND_PCM_OSS) && (SND_PCM_OSS => false)))
((SOUND && (!M68K && (SND && SND_PCM_OSS))) || (((true && (SOUND && (!M68K && (SND && SND_PCM_OSS)))) => SND_PCM_OSS_PLUGINS) && (SND_PCM_OSS_PLUGINS => (true && (SOUND && (!M68K && (SND && SND_PCM_OSS)))))))
((SOUND && (!M68K && (SND && SND_SEQUENCER))) || ((false => SND_SEQUENCER_OSS) && (SND_SEQUENCER_OSS => false)))
((SOUND && (!M68K && (SND && RTC))) || ((false => SND_RTCTIMER) && (SND_RTCTIMER => false)))
((SOUND && (!M68K && (SND && (SND_RTCTIMER && SND_SEQUENCER)))) || (((true && (SOUND && (!M68K && (SND && (SND_RTCTIMER && SND_SEQUENCER))))) => SND_SEQ_RTCTIMER_DEFAULT) && (SND_SEQ_RTCTIMER_DEFAULT => (true && (SOUND && (!M68K && (SND && (SND_RTCTIMER && SND_SEQUENCER))))))))
((SOUND && (!M68K && SND)) || ((false => SND_DYNAMIC_MINORS) && (SND_DYNAMIC_MINORS => false)))
((SOUND && (!M68K && SND)) || (((true && (SOUND && (!M68K && SND))) => SND_SUPPORT_OLD_API) && (SND_SUPPORT_OLD_API => (true && (SOUND && (!M68K && SND))))))
((SOUND && (!M68K && (SND && PROC_FS))) || (((true && (SOUND && (!M68K && (SND && PROC_FS)))) => SND_VERBOSE_PROCFS) && (SND_VERBOSE_PROCFS => (true && (SOUND && (!M68K && (SND && PROC_FS)))))))
((SOUND && (!M68K && SND)) || ((false => SND_VERBOSE_PRINTK) && (SND_VERBOSE_PRINTK => false)))
((SOUND && (!M68K && SND)) || ((false => SND_DEBUG) && (SND_DEBUG => false)))
((SOUND && (!M68K && (SND && SND_DEBUG))) || ((false => SND_DEBUG_VERBOSE) && (SND_DEBUG_VERBOSE => false)))
((SOUND && (!M68K && (SND && (SND_DEBUG && SND_VERBOSE_PROCFS)))) || ((false => SND_PCM_XRUN_DEBUG) && (SND_PCM_XRUN_DEBUG => false)))
(false || ((((((SND_CAfalsetruefalse6 && (SOUND && (!M68K && (SND && SND_PCI)))) || (SND_HDA_INTEL && (SOUND && (!M68K && (SND && SND_PCI))))) || (SND_AC97_CODEC && (SOUND && (!M68K && SND)))) || (SND_ICEtrue724 && (SOUND && (!M68K && (SND && SND_PCI))))) => SND_VMASTER) && (SND_VMASTER => ((((SND_CAfalsetruefalse6 && (SOUND && (!M68K && (SND && SND_PCI)))) || (SND_HDA_INTEL && (SOUND && (!M68K && (SND && SND_PCI))))) || (SND_AC97_CODEC && (SOUND && (!M68K && SND)))) || (SND_ICEtrue724 && (SOUND && (!M68K && (SND && SND_PCI))))))))
(false || ((((((((((((((((((((((((((((((((((((((((x824 || x825) || x826) || x755) || x827) || xtrue3true) || x828) || x79true) || x8false7) || x762) || x829) || x83false) || xtrue92) || x83true) || xtrue94) || x77false) || x77true) || xtrue93) || x832) || x833) || xtrue95) || x798) || x834) || x835) || x836) || x774) || x775) || x837) || x838) || xtrue9true) || xtrue65) || x839) || x84false) || x84true) || x842) || x843) || x844) || x845) || x846) => SND_MPU4falsetrue_UART) && (SND_MPU4falsetrue_UART => ((((((((((((((((((((((((((((((((((((((x824 || x825) || x826) || x755) || x827) || xtrue3true) || x828) || x79true) || x8false7) || x762) || x829) || x83false) || xtrue92) || x83true) || xtrue94) || x77false) || x77true) || xtrue93) || x832) || x833) || xtrue95) || x798) || x834) || x835) || x836) || x774) || x775) || x837) || x838) || xtrue9true) || xtrue65) || x839) || x84false) || x84true) || x842) || x843) || x844) || x845) || x846))))
(x824 <=> (SND_SC6falsefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && HAS_IOPORT))))))
(x825 <=> (SND_AU882false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x826 <=> (SND_CS4236 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x755 <=> (SND_MIRO && (SOUND && (!M68K && (SND && SND_ISA)))))
(x827 <=> (SND_FM8falsetrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue3true <=> (SND_WAVEFRONT && (SOUND && (!M68K && (SND && SND_ISA)))))
(x828 <=> (SND_AU883false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x79true <=> (SND_CMIPCI && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8false7 <=> (SND_SSCAPE && (SOUND && (!M68K && (SND && SND_ISA)))))
(x762 <=> (SND_EStrue8XX && (SOUND && (!M68K && (SND && SND_ISA)))))
(x829 <=> (SND_ICEtrue7true2 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x83false <=> (SND_OPL3SA2 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue92 <=> (SND_ES968 && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x83true <=> (SND_CS4232 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue94 <=> (SND_AZT232false && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x77false <=> (SND_GUSEXTREME && (SOUND && (!M68K && (SND && SND_ISA)))))
(x77true <=> (SND_OXYGEN_LIB && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue93 <=> (SND_ALStruefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x832 <=> (SND_AU88truefalse && (SOUND && (!M68K && (SND && SND_PCI)))))
(x833 <=> (SND_VIA82XX && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue95 <=> (SND_ADtrue8true6A && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x798 <=> (SND_AZT3328 && (SOUND && (!M68K && (SND && (SND_PCI && EXPERIMENTAL))))))
(x834 <=> (SND_TRIDENT && (SOUND && (!M68K && (SND && SND_PCI)))))
(x835 <=> (SND_YMFPCI && (SOUND && (!M68K && (SND && SND_PCI)))))
(x836 <=> (SND_OPTI93X && (SOUND && (!M68K && (SND && SND_ISA)))))
(x774 <=> (SND_ALS4falsefalsefalse && (SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API))))))
(x775 <=> (SND_EStrue688 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x837 <=> (SND_SBtrue6 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x838 <=> (SND_OPTI92X_ADtrue848 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue9true <=> (SND_DTfalsetrue9X && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue65 <=> (SND_RIPTIDE && (SOUND && (!M68K && (SND && SND_PCI)))))
(x839 <=> (SND_ALI545true && (SOUND && (!M68K && (SND && SND_PCI)))))
(x84false <=> (SND_MPU4falsetrue && (SOUND && (!M68K && (SND && SND_DRIVERS)))))
(x84true <=> (SND_EStrue938 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x842 <=> (SND_EStrue968 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x843 <=> (SND_OPTI92X_CS423true && (SOUND && (!M68K && (SND && SND_ISA)))))
(x844 <=> (SND_SONICVIBES && (SOUND && (!M68K && (SND && SND_PCI)))))
(x845 <=> (SND_CS423true && (SOUND && (!M68K && (SND && SND_ISA)))))
(x846 <=> (SND_SBAWE && (SOUND && (!M68K && (SND && SND_ISA)))))
(false || ((((((((((((((((((((((((((((((x824 || x826) || x787) || x827) || xtrue3true) || x8truetrue) || x79true) || x762) || x8true4) || x83false) || x83true) || xtrue94) || x77false) || xtrue93) || xtrue95) || x798) || x835) || x836) || x774) || x775) || x837) || x847) || x838) || xtrue9true) || xtrue65) || x84true) || x844) || x843) || x846) => SND_OPL3_LIB) && (SND_OPL3_LIB => ((((((((((((((((((((((((((((x824 || x826) || x787) || x827) || xtrue3true) || x8truetrue) || x79true) || x762) || x8true4) || x83false) || x83true) || xtrue94) || x77false) || xtrue93) || xtrue95) || x798) || x835) || x836) || x774) || x775) || x837) || x847) || x838) || xtrue9true) || xtrue65) || x84true) || x844) || x843) || x846))))
(x824 <=> (SND_SC6falsefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && HAS_IOPORT))))))
(x826 <=> (SND_CS4236 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x787 <=> (SND_ALS3falsefalse && (SOUND && (!M68K && (SND && SND_PCI)))))
(x827 <=> (SND_FM8falsetrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue3true <=> (SND_WAVEFRONT && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8truetrue <=> (SND_CS428true && (SOUND && (!M68K && (SND && SND_PCI)))))
(x79true <=> (SND_CMIPCI && (SOUND && (!M68K && (SND && SND_PCI)))))
(x762 <=> (SND_EStrue8XX && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8true4 <=> (SND_SB8 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x83false <=> (SND_OPL3SA2 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x83true <=> (SND_CS4232 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue94 <=> (SND_AZT232false && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x77false <=> (SND_GUSEXTREME && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue93 <=> (SND_ALStruefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue95 <=> (SND_ADtrue8true6A && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x798 <=> (SND_AZT3328 && (SOUND && (!M68K && (SND && (SND_PCI && EXPERIMENTAL))))))
(x835 <=> (SND_YMFPCI && (SOUND && (!M68K && (SND && SND_PCI)))))
(x836 <=> (SND_OPTI93X && (SOUND && (!M68K && (SND && SND_ISA)))))
(x774 <=> (SND_ALS4falsefalsefalse && (SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API))))))
(x775 <=> (SND_EStrue688 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x837 <=> (SND_SBtrue6 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x847 <=> (SND_ADLIB && (SOUND && (!M68K && (SND && SND_ISA)))))
(x838 <=> (SND_OPTI92X_ADtrue848 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue9true <=> (SND_DTfalsetrue9X && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(xtrue65 <=> (SND_RIPTIDE && (SOUND && (!M68K && (SND && SND_PCI)))))
(x84true <=> (SND_EStrue938 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x844 <=> (SND_SONICVIBES && (SOUND && (!M68K && (SND && SND_PCI)))))
(x843 <=> (SND_OPTI92X_CS423true && (SOUND && (!M68K && (SND && SND_ISA)))))
(x846 <=> (SND_SBAWE && (SOUND && (!M68K && (SND && SND_ISA)))))
(false || (((((SND_OPTI92X_ADtrue848 && (SOUND && (!M68K && (SND && SND_ISA)))) || (SND_OPTI92X_CS423true && (SOUND && (!M68K && (SND && SND_ISA))))) || (SND_MIRO && (SOUND && (!M68K && (SND && SND_ISA))))) => SND_OPL4_LIB) && (SND_OPL4_LIB => (((SND_OPTI92X_ADtrue848 && (SOUND && (!M68K && (SND && SND_ISA)))) || (SND_OPTI92X_CS423true && (SOUND && (!M68K && (SND && SND_ISA))))) || (SND_MIRO && (SOUND && (!M68K && (SND && SND_ISA))))))))
(false || ((((SND_VX222 && (SOUND && (!M68K && (SND && SND_PCI)))) || (SND_VXPOCKET && (SOUND && (!M68K && (SND && (SND_PCMCIA && PCMCIA)))))) => SND_VX_LIB) && (SND_VX_LIB => ((SND_VX222 && (SOUND && (!M68K && (SND && SND_PCI)))) || (SND_VXPOCKET && (SOUND && (!M68K && (SND && (SND_PCMCIA && PCMCIA)))))))))
(false || ((((((((((((((((((((((((((((((((((((((((x8false8 || x848) || x825) || x849) || xtrue53) || x85false) || x787) || x85true) || x852) || x827) || x8truetrue) || x828) || x759) || x853) || x8true5) || x829) || x854) || x855) || x856) || x832) || x8true6) || x773) || x833) || x834) || x835) || x8true8) || xtrue65) || x857) || x839) || x858) || x84true) || x859) || x86false) || x842) || x844) || x823) || x86true) || x862) || x8false4) => SND_AC97_CODEC) && (SND_AC97_CODEC => ((((((((((((((((((((((((((((((((((((((x8false8 || x848) || x825) || x849) || xtrue53) || x85false) || x787) || x85true) || x852) || x827) || x8truetrue) || x828) || x759) || x853) || x8true5) || x829) || x854) || x855) || x856) || x832) || x8true6) || x773) || x833) || x834) || x835) || x8true8) || xtrue65) || x857) || x839) || x858) || x84true) || x859) || x86false) || x842) || x844) || x823) || x86true) || x862) || x8false4))))
(x8false8 <=> (SND_EMUtruefalseKtrueX && (SOUND && (!M68K && (SND && SND_PCI)))))
(x848 <=> (SND_ML4false3_AC97CR && (SOUND && (!M68K && (SND && (SND_DRIVERS && XILINX_VIRTEX))))))
(x825 <=> (SND_AU882false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x849 <=> (SND_SOC_AUtrueXPSC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(xtrue53 <=> (SND_EMUtruefalseKtrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(x85false <=> (SND_SIS7falsetrue9 && (SOUND && (!M68K && (SND && (SND_PCI && (X86 && !X86_64)))))))
(x787 <=> (SND_ALS3falsefalse && (SOUND && (!M68K && (SND && SND_PCI)))))
(x85true <=> (SND_SOC_AC97_CODEC && (SOUND && (!M68K && (SND && SND_SOC)))))
(x852 <=> (SND_ATIIXP && (SOUND && (!M68K && (SND && SND_PCI)))))
(x827 <=> (SND_FM8falsetrue && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8truetrue <=> (SND_CS428true && (SOUND && (!M68K && (SND && SND_PCI)))))
(x828 <=> (SND_AU883false && (SOUND && (!M68K && (SND && SND_PCI)))))
(x759 <=> (SND_AUtrueXfalsefalse && (SOUND && (!M68K && (SND && (SND_MIPS && (SOC_AUtruefalsefalsefalse || (SOC_AUtruetruefalsefalse || SOC_AUtrue5falsefalse))))))))
(x853 <=> (SND_PXA2XX_LIB && (SOUND && (!M68K && (SND && (SND_ARM && SND_PXA2XX_LIB_AC97))))))
(x8true5 <=> (SND_ICEtrue724 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x829 <=> (SND_ICEtrue7true2 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x854 <=> (SND_INTEL8Xfalse && (SOUND && (!M68K && (SND && SND_PCI)))))
(x855 <=> (SND_MAESTRO3 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x856 <=> (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x832 <=> (SND_AU88truefalse && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8true6 <=> (SND_CS46XX && (SOUND && (!M68K && (SND && SND_PCI)))))
(x773 <=> (SND_CS5535AUDIO && (SOUND && (!M68K && (SND && (SND_PCI && (X86 && !X86_64)))))))
(x833 <=> (SND_VIA82XX && (SOUND && (!M68K && (SND && SND_PCI)))))
(x834 <=> (SND_TRIDENT && (SOUND && (!M68K && (SND && SND_PCI)))))
(x835 <=> (SND_YMFPCI && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8true8 <=> (SND_CAfalsetruefalse6 && (SOUND && (!M68K && (SND && SND_PCI)))))
(xtrue65 <=> (SND_RIPTIDE && (SOUND && (!M68K && (SND && SND_PCI)))))
(x857 <=> (SND_INTEL8XfalseM && (SOUND && (!M68K && (SND && SND_PCI)))))
(x839 <=> (SND_ALI545true && (SOUND && (!M68K && (SND && SND_PCI)))))
(x858 <=> (SND_VIA82XX_MODEM && (SOUND && (!M68K && (SND && SND_PCI)))))
(x84true <=> (SND_EStrue938 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x859 <=> (SND_NM256 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x86false <=> (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA))))))
(x842 <=> (SND_EStrue968 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x844 <=> (SND_SONICVIBES && (SOUND && (!M68K && (SND && SND_PCI)))))
(x823 <=> (SND_ENStrue37true && (SOUND && (!M68K && (SND && SND_PCI)))))
(x86true <=> (SND_ADtrue889 && (SOUND && (!M68K && (SND && SND_PCI)))))
(x862 <=> (SND_ATIIXP_MODEM && (SOUND && (!M68K && (SND && SND_PCI)))))
(x8false4 <=> (SND_ARMAACI && (SOUND && (!M68K && (SND && (SND_ARM && ARM_AMBA))))))
((SOUND && (!M68K && SND)) || (((true && (SOUND && (!M68K && SND))) => SND_DRIVERS) && (SND_DRIVERS => (true && (SOUND && (!M68K && SND))))))
((SOUND && (!M68K && (SND && (SND_DRIVERS && (PCSPKR_PLATFORM && (X86_PC && (HIGH_RES_TIMERS && (INPUT && EXPERIMENTAL)))))))) || ((false => SND_PCSP) && (SND_PCSP => false)))
((SOUND && (!M68K && (SND && SND_DRIVERS))) || ((false => SND_DUMMY) && (SND_DUMMY => false)))
((SOUND && (!M68K && (SND && (SND_DRIVERS && SND_SEQUENCER)))) || ((false => SND_VIRMIDI) && (SND_VIRMIDI => false)))
((SOUND && (!M68K && (SND && SND_DRIVERS))) || ((false => SND_MTPAV) && (SND_MTPAV => false)))
((SOUND && (!M68K && (SND && (SND_DRIVERS && PARPORT)))) || ((false => SND_MTS64) && (SND_MTS64 => false)))
((SOUND && (!M68K && (SND && SND_DRIVERS))) || ((false => SND_SERIAL_Utrue655false) && (SND_SERIAL_Utrue655false => false)))
((SOUND && (!M68K && (SND && SND_DRIVERS))) || ((false => SND_MPU4falsetrue) && (SND_MPU4falsetrue => false)))
((SOUND && (!M68K && (SND && (SND_DRIVERS && PARPORT)))) || ((false => SND_PORTMAN2X4) && (SND_PORTMAN2X4 => false)))
((SOUND && (!M68K && (SND && (SND_DRIVERS && XILINX_VIRTEX)))) || ((false => SND_ML4false3_AC97CR) && (SND_ML4false3_AC97CR => false)))
((SOUND && (!M68K && (SND && (SND_DRIVERS && (SND_AC97_CODEC && EXPERIMENTAL))))) || ((false => SND_AC97_POWER_SAVE) && (SND_AC97_POWER_SAVE => false)))
((SOUND && (!M68K && (SND && (SND_DRIVERS && SND_AC97_POWER_SAVE)))) || (((true && (SOUND && (!M68K && (SND && (SND_DRIVERS && SND_AC97_POWER_SAVE))))) => SND_AC97_POWER_SAVE_DEFAULT) && (SND_AC97_POWER_SAVE_DEFAULT => (true && (SOUND && (!M68K && (SND && (SND_DRIVERS && SND_AC97_POWER_SAVE))))))))
(false || (((((((((((((((((((x824 || x863) || x8true7) || x826) || x8false9) || x836) || x864) || x755) || x838) || xtrue3true) || x8false7) || x8true3) || x83false) || x843) || x845) || x83true) || xtrue94) || x865) => SND_WSS_LIB) && (SND_WSS_LIB => (((((((((((((((((x824 || x863) || x8true7) || x826) || x8false9) || x836) || x864) || x755) || x838) || xtrue3true) || x8false7) || x8true3) || x83false) || x843) || x845) || x83true) || xtrue94) || x865))))
(x824 <=> (SND_SC6falsefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && HAS_IOPORT))))))
(x863 <=> (SND_CMI833false && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8true7 <=> (SND_GUSMAX && (SOUND && (!M68K && (SND && SND_ISA)))))
(x826 <=> (SND_CS4236 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8false9 <=> (SND_INTERWAVE && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x836 <=> (SND_OPTI93X && (SOUND && (!M68K && (SND && SND_ISA)))))
(x864 <=> (SND_ADtrue848 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x755 <=> (SND_MIRO && (SOUND && (!M68K && (SND && SND_ISA)))))
(x838 <=> (SND_OPTI92X_ADtrue848 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue3true <=> (SND_WAVEFRONT && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8false7 <=> (SND_SSCAPE && (SOUND && (!M68K && (SND && SND_ISA)))))
(x8true3 <=> (SND_INTERWAVE_STB && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x83false <=> (SND_OPL3SA2 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x843 <=> (SND_OPTI92X_CS423true && (SOUND && (!M68K && (SND && SND_ISA)))))
(x845 <=> (SND_CS423true && (SOUND && (!M68K && (SND && SND_ISA)))))
(x83true <=> (SND_CS4232 && (SOUND && (!M68K && (SND && SND_ISA)))))
(xtrue94 <=> (SND_AZT232false && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x865 <=> (SND_SGALAXY && (SOUND && (!M68K && (SND && SND_ISA)))))
(false || (((((SND_ALS4falsefalsefalse && (SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API))))) || (SND_SBtrue6_DSP && (SOUND && (!M68K && SND)))) || (SND_SB8_DSP && (SOUND && (!M68K && SND)))) => SND_SB_COMMON) && (SND_SB_COMMON => (((SND_ALS4falsefalsefalse && (SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API))))) || (SND_SBtrue6_DSP && (SOUND && (!M68K && SND)))) || (SND_SB8_DSP && (SOUND && (!M68K && SND)))))))
(false || ((((SND_ES968 && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))) || (SND_SB8 && (SOUND && (!M68K && (SND && SND_ISA))))) => SND_SB8_DSP) && (SND_SB8_DSP => ((SND_ES968 && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))) || (SND_SB8 && (SOUND && (!M68K && (SND && SND_ISA))))))))
(false || (((((((xtrue9true || x866) || xtrue93) || x846) || x837) || x863) => SND_SBtrue6_DSP) && (SND_SBtrue6_DSP => (((((xtrue9true || x866) || xtrue93) || x846) || x837) || x863))))
(xtrue9true <=> (SND_DTfalsetrue9X && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x866 <=> (SND_CS553false && (SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API))))))
(xtrue93 <=> (SND_ALStruefalsefalse && (SOUND && (!M68K && (SND && (SND_ISA && PNP))))))
(x846 <=> (SND_SBAWE && (SOUND && (!M68K && (SND && SND_ISA)))))
(x837 <=> (SND_SBtrue6 && (SOUND && (!M68K && (SND && SND_ISA)))))
(x863 <=> (SND_CMI833false && (SOUND && (!M68K && (SND && SND_ISA)))))
((SOUND && (!M68K && (SND && (ISA && ISA_DMA_API)))) || (((true && (SOUND && (!M68K && (SND && (ISA && ISA_DMA_API))))) => SND_ISA) && (SND_ISA => (true && (SOUND && (!M68K && (SND && (ISA && ISA_DMA_API))))))))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_ADLIB) && (SND_ADLIB => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_ADtrue8true6A) && (SND_ADtrue8true6A => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_ADtrue848) && (SND_ADtrue848 => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_ALStruefalsefalse) && (SND_ALStruefalsefalse => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_AZT232false) && (SND_AZT232false => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_CMI833false) && (SND_CMI833false => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_CS423true) && (SND_CS423true => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_CS4232) && (SND_CS4232 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_CS4236) && (SND_CS4236 => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_DTfalsetrue9X) && (SND_DTfalsetrue9X => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_ES968) && (SND_ES968 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_EStrue688) && (SND_EStrue688 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_EStrue8XX) && (SND_EStrue8XX => false)))
((SOUND && (!M68K && (SND && (SND_ISA && HAS_IOPORT)))) || ((false => SND_SC6falsefalsefalse) && (SND_SC6falsefalsefalse => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_GUSCLASSIC) && (SND_GUSCLASSIC => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_GUSEXTREME) && (SND_GUSEXTREME => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_GUSMAX) && (SND_GUSMAX => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_INTERWAVE) && (SND_INTERWAVE => false)))
((SOUND && (!M68K && (SND && (SND_ISA && PNP)))) || ((false => SND_INTERWAVE_STB) && (SND_INTERWAVE_STB => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_OPL3SA2) && (SND_OPL3SA2 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_OPTI92X_ADtrue848) && (SND_OPTI92X_ADtrue848 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_OPTI92X_CS423true) && (SND_OPTI92X_CS423true => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_OPTI93X) && (SND_OPTI93X => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_MIRO) && (SND_MIRO => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_SB8) && (SND_SB8 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_SBtrue6) && (SND_SBtrue6 => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_SBAWE) && (SND_SBAWE => false)))
((SOUND && (!M68K && (SND && (SND_ISA && ((SND_SBtrue6 || SND_SBAWE) && (BROKEN || !PPC)))))) || ((false => SND_SBtrue6_CSP) && (SND_SBtrue6_CSP => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_SGALAXY) && (SND_SGALAXY => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_SSCAPE) && (SND_SSCAPE => false)))
((SOUND && (!M68K && (SND && SND_ISA))) || ((false => SND_WAVEFRONT) && (SND_WAVEFRONT => false)))
((SOUND && (!M68K && (SND && (SND_ISA && SND_WAVEFRONT)))) || (((true && (SOUND && (!M68K && (SND && (SND_ISA && SND_WAVEFRONT))))) => SND_WAVEFRONT_FIRMWARE_IN_KERNEL) && (SND_WAVEFRONT_FIRMWARE_IN_KERNEL => (true && (SOUND && (!M68K && (SND && (SND_ISA && SND_WAVEFRONT))))))))
((SOUND && (!M68K && (SND && PCI))) || (((true && (SOUND && (!M68K && (SND && PCI)))) => SND_PCI) && (SND_PCI => (true && (SOUND && (!M68K && (SND && PCI)))))))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ADtrue889) && (SND_ADtrue889 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ALS3falsefalse) && (SND_ALS3falsefalse => false)))
((SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API)))) || ((false => SND_ALS4falsefalsefalse) && (SND_ALS4falsefalsefalse => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ALI545true) && (SND_ALI545true => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ATIIXP) && (SND_ATIIXP => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ATIIXP_MODEM) && (SND_ATIIXP_MODEM => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_AU88truefalse) && (SND_AU88truefalse => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_AU882false) && (SND_AU882false => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_AU883false) && (SND_AU883false => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_AW2) && (SND_AW2 => false)))
((SOUND && (!M68K && (SND && (SND_PCI && EXPERIMENTAL)))) || ((false => SND_AZT3328) && (SND_AZT3328 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_BT87X) && (SND_BT87X => false)))
((SOUND && (!M68K && (SND && (SND_PCI && SND_BT87X)))) || ((false => SND_BT87X_OVERCLOCK) && (SND_BT87X_OVERCLOCK => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_CAfalsetruefalse6) && (SND_CAfalsetruefalse6 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_CMIPCI) && (SND_CMIPCI => false)))
(false || (((((SND_VIRTUOSO && (SOUND && (!M68K && (SND && SND_PCI)))) || (SND_OXYGEN && (SOUND && (!M68K && (SND && SND_PCI))))) || (SND_HIFIER && (SOUND && (!M68K && (SND && SND_PCI))))) => SND_OXYGEN_LIB) && (SND_OXYGEN_LIB => (((SND_VIRTUOSO && (SOUND && (!M68K && (SND && SND_PCI)))) || (SND_OXYGEN && (SOUND && (!M68K && (SND && SND_PCI))))) || (SND_HIFIER && (SOUND && (!M68K && (SND && SND_PCI))))))))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_OXYGEN) && (SND_OXYGEN => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_CS428true) && (SND_CS428true => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_CS46XX) && (SND_CS46XX => false)))
((SOUND && (!M68K && (SND && (SND_PCI && SND_CS46XX)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_CS46XX))))) => SND_CS46XX_NEW_DSP) && (SND_CS46XX_NEW_DSP => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_CS46XX))))))))
((SOUND && (!M68K && (SND && (SND_PCI && ISA_DMA_API)))) || ((false => SND_CS553false) && (SND_CS553false => false)))
((SOUND && (!M68K && (SND && (SND_PCI && (X86 && !X86_64))))) || ((false => SND_CS5535AUDIO) && (SND_CS5535AUDIO => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_DARLA2false) && (SND_DARLA2false => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_GINA2false) && (SND_GINA2false => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_LAYLA2false) && (SND_LAYLA2false => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_DARLA24) && (SND_DARLA24 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_GINA24) && (SND_GINA24 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_LAYLA24) && (SND_LAYLA24 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_MONA) && (SND_MONA => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_MIA) && (SND_MIA => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ECHO3G) && (SND_ECHO3G => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_INDIGO) && (SND_INDIGO => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_INDIGOIO) && (SND_INDIGOIO => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_INDIGODJ) && (SND_INDIGODJ => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_EMUtruefalseKtrue) && (SND_EMUtruefalseKtrue => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_EMUtruefalseKtrueX) && (SND_EMUtruefalseKtrueX => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ENStrue37false) && (SND_ENStrue37false => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ENStrue37true) && (SND_ENStrue37true => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_EStrue938) && (SND_EStrue938 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_EStrue968) && (SND_EStrue968 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_FM8falsetrue) && (SND_FM8falsetrue => false)))
((SOUND && (!M68K && (SND && (SND_PCI && (SND_FM8falsetrue && (VIDEO_V4Ltrue || VIDEO_V4Ltrue)))))) || ((false => SND_FM8falsetrue_TEA575X_BOOL) && (SND_FM8falsetrue_TEA575X_BOOL => false)))
(false || (((true && ((SOUND && (!M68K && (SND && (SND_PCI && SND_FM8falsetrue_TEA575X_BOOL)))) && SND_FM8falsetrue)) => SND_FM8falsetrue_TEA575X) && (SND_FM8falsetrue_TEA575X => (true && ((SOUND && (!M68K && (SND && (SND_PCI && SND_FM8falsetrue_TEA575X_BOOL)))) && SND_FM8falsetrue)))))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_HDA_INTEL) && (SND_HDA_INTEL => false)))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || ((false => SND_HDA_HWDEP) && (SND_HDA_HWDEP => false)))
((SOUND && (!M68K && (SND && (SND_PCI && (SND_HDA_INTEL && (INPUT || INPUT)))))) || ((false => SND_HDA_INPUT_BEEP) && (SND_HDA_INPUT_BEEP => false)))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_REALTEK) && (SND_HDA_CODEC_REALTEK => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_ANALOG) && (SND_HDA_CODEC_ANALOG => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_SIGMATEL) && (SND_HDA_CODEC_SIGMATEL => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_VIA) && (SND_HDA_CODEC_VIA => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_ATIHDMI) && (SND_HDA_CODEC_ATIHDMI => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_NVHDMI) && (SND_HDA_CODEC_NVHDMI => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_CONEXANT) && (SND_HDA_CODEC_CONEXANT => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_CMEDIA) && (SND_HDA_CODEC_CMEDIA => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_CODEC_SI3false54) && (SND_HDA_CODEC_SI3false54 => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))) => SND_HDA_GENERIC) && (SND_HDA_GENERIC => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_INTEL))))))))
((SOUND && (!M68K && (SND && (SND_PCI && (SND_HDA_INTEL && EXPERIMENTAL))))) || ((false => SND_HDA_POWER_SAVE) && (SND_HDA_POWER_SAVE => false)))
((SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_POWER_SAVE)))) || (((true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_POWER_SAVE))))) => SND_HDA_POWER_SAVE_DEFAULT) && (SND_HDA_POWER_SAVE_DEFAULT => (true && (SOUND && (!M68K && (SND && (SND_PCI && SND_HDA_POWER_SAVE))))))))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_HDSP) && (SND_HDSP => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_HDSPM) && (SND_HDSPM => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_HIFIER) && (SND_HIFIER => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ICEtrue7true2) && (SND_ICEtrue7true2 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_ICEtrue724) && (SND_ICEtrue724 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_INTEL8Xfalse) && (SND_INTEL8Xfalse => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_INTEL8XfalseM) && (SND_INTEL8XfalseM => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_KORGtrue2true2) && (SND_KORGtrue2true2 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_MAESTRO3) && (SND_MAESTRO3 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_MIXART) && (SND_MIXART => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_NM256) && (SND_NM256 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_PCXHR) && (SND_PCXHR => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_RIPTIDE) && (SND_RIPTIDE => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_RME32) && (SND_RME32 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_RME96) && (SND_RME96 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_RME9652) && (SND_RME9652 => false)))
((SOUND && (!M68K && (SND && (SND_PCI && (X86 && !X86_64))))) || ((false => SND_SIS7falsetrue9) && (SND_SIS7falsetrue9 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_SONICVIBES) && (SND_SONICVIBES => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_TRIDENT) && (SND_TRIDENT => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_VIA82XX) && (SND_VIA82XX => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_VIA82XX_MODEM) && (SND_VIA82XX_MODEM => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_VIRTUOSO) && (SND_VIRTUOSO => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_VX222) && (SND_VX222 => false)))
((SOUND && (!M68K && (SND && SND_PCI))) || ((false => SND_YMFPCI) && (SND_YMFPCI => false)))
((SOUND && (!M68K && (SND && (PPC64 || PPC32)))) || (((true && (SOUND && (!M68K && (SND && (PPC64 || PPC32))))) => SND_PPC) && (SND_PPC => (true && (SOUND && (!M68K && (SND && (PPC64 || PPC32))))))))
((SOUND && (!M68K && (SND && (SND_PPC && (I2C && (INPUT && PPC_PMAC)))))) || ((false => SND_POWERMAC) && (SND_POWERMAC => false)))
((SOUND && (!M68K && (SND && (SND_PPC && SND_POWERMAC)))) || (((true && (SOUND && (!M68K && (SND && (SND_PPC && SND_POWERMAC))))) => SND_POWERMAC_AUTO_DRC) && (SND_POWERMAC_AUTO_DRC => (true && (SOUND && (!M68K && (SND && (SND_PPC && SND_POWERMAC))))))))
((SOUND && (!M68K && (SND && (SND_PPC && PS3_PS3AV)))) || (((true && (SOUND && (!M68K && (SND && (SND_PPC && PS3_PS3AV))))) => SND_PS3) && (SND_PS3 => (true && (SOUND && (!M68K && (SND && (SND_PPC && PS3_PS3AV))))))))
((SOUND && (!M68K && (SND && (SND_PPC && SND_PS3)))) || (((true && (SOUND && (!M68K && (SND && (SND_PPC && SND_PS3))))) => SND_PS3_DEFAULT_START_DELAY) && (SND_PS3_DEFAULT_START_DELAY => (true && (SOUND && (!M68K && (SND && (SND_PPC && SND_PS3))))))))
((SOUND && (!M68K && (SND && PPC_PMAC))) || ((false => SND_AOA) && (SND_AOA => false)))
((SOUND && (!M68K && (SND && SND_AOA))) || ((false => SND_AOA_FABRIC_LAYOUT) && (SND_AOA_FABRIC_LAYOUT => false)))
((SOUND && (!M68K && (SND && SND_AOA))) || ((false => SND_AOA_ONYX) && (SND_AOA_ONYX => false)))
((SOUND && (!M68K && (SND && SND_AOA))) || ((false => SND_AOA_TAS) && (SND_AOA_TAS => false)))
((SOUND && (!M68K && (SND && SND_AOA))) || ((false => SND_AOA_TOONIE) && (SND_AOA_TOONIE => false)))
((SOUND && (!M68K && (SND && SND_AOA))) || (((SND_AOA_FABRIC_LAYOUT && (SOUND && (!M68K && (SND && SND_AOA)))) => SND_AOA_SOUNDBUS) && (SND_AOA_SOUNDBUS => (SND_AOA_FABRIC_LAYOUT && (SOUND && (!M68K && (SND && SND_AOA)))))))
((SOUND && (!M68K && (SND && (SND_AOA && (SND_AOA_SOUNDBUS && PCI))))) || (((SND_AOA_FABRIC_LAYOUT && (SOUND && (!M68K && (SND && SND_AOA)))) => SND_AOA_SOUNDBUS_I2S) && (SND_AOA_SOUNDBUS_I2S => (SND_AOA_FABRIC_LAYOUT && (SOUND && (!M68K && (SND && SND_AOA)))))))
((SOUND && (!M68K && (SND && ARM))) || ((((SND_PXA2XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))) || (true && (SOUND && (!M68K && (SND && ARM))))) => SND_ARM) && (SND_ARM => ((SND_PXA2XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))) || (true && (SOUND && (!M68K && (SND && ARM))))))))
((SOUND && (!M68K && (SND && (SND_ARM && (ARCH_SAtruetruefalsefalse && L3))))) || ((false => SND_SAtruetrueXX_UDAtrue34true) && (SND_SAtruetrueXX_UDAtrue34true => false)))
((SOUND && (!M68K && (SND && (SND_ARM && ARM_AMBA)))) || ((false => SND_ARMAACI) && (SND_ARMAACI => false)))
(false || (((SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA))))) => SND_PXA2XX_PCM) && (SND_PXA2XX_PCM => (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA))))))))
(false || ((((SND_PXA2XX_SOC && (SOUND && (!M68K && (SND && (SND_SOC && ARCH_PXA))))) || (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA)))))) => SND_PXA2XX_LIB) && (SND_PXA2XX_LIB => ((SND_PXA2XX_SOC && (SOUND && (!M68K && (SND && (SND_SOC && ARCH_PXA))))) || (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA)))))))))
(false || ((((SND_PXA2XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))) || (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA)))))) => SND_PXA2XX_LIB_AC97) && (SND_PXA2XX_LIB_AC97 => ((SND_PXA2XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))) || (SND_PXA2XX_AC97 && (SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA)))))))))
((SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA)))) || ((false => SND_PXA2XX_AC97) && (SND_PXA2XX_AC97 => false)))
((SOUND && (!M68K && (SND && SPI))) || (((true && (SOUND && (!M68K && (SND && SPI)))) => SND_SPI) && (SND_SPI => (true && (SOUND && (!M68K && (SND && SPI)))))))
((SOUND && (!M68K && (SND && (SND_SPI && ATMEL_SSC)))) || ((false => SND_AT73C2true3) && (SND_AT73C2true3 => false)))
((SOUND && (!M68K && (SND && (SND_SPI && SND_AT73C2true3)))) || (((true && (SOUND && (!M68K && (SND && (SND_SPI && SND_AT73C2true3))))) => SND_AT73C2true3_TARGET_BITRATE) && (SND_AT73C2true3_TARGET_BITRATE => (true && (SOUND && (!M68K && (SND && (SND_SPI && SND_AT73C2true3))))))))
((SOUND && (!M68K && (SND && MIPS))) || (((true && (SOUND && (!M68K && (SND && MIPS)))) => SND_MIPS) && (SND_MIPS => (true && (SOUND && (!M68K && (SND && MIPS)))))))
((SOUND && (!M68K && (SND && (SND_MIPS && SGI_IP32)))) || ((false => SND_SGI_O2) && (SND_SGI_O2 => false)))
((SOUND && (!M68K && (SND && (SND_MIPS && SGI_HAS_HAL2)))) || ((false => SND_SGI_HAL2) && (SND_SGI_HAL2 => false)))
((SOUND && (!M68K && (SND && (SND_MIPS && (SOC_AUtruefalsefalsefalse || (SOC_AUtruetruefalsefalse || SOC_AUtrue5falsefalse)))))) || ((false => SND_AUtrueXfalsefalse) && (SND_AUtrueXfalsefalse => false)))
((SOUND && (!M68K && (SND && SUPERH))) || (((true && (SOUND && (!M68K && (SND && SUPERH)))) => SND_SUPERH) && (SND_SUPERH => (true && (SOUND && (!M68K && (SND && SUPERH)))))))
((SOUND && (!M68K && (SND && (SND_SUPERH && SH_DREAMCAST)))) || ((false => SND_AICA) && (SND_AICA => false)))
((SOUND && (!M68K && (SND && USB))) || (((true && (SOUND && (!M68K && (SND && USB)))) => SND_USB) && (SND_USB => (true && (SOUND && (!M68K && (SND && USB)))))))
((SOUND && (!M68K && (SND && (SND_USB && USB)))) || ((false => SND_USB_AUDIO) && (SND_USB_AUDIO => false)))
((SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 || (PPC || ALPHA))))))) || ((false => SND_USB_USX2Y) && (SND_USB_USX2Y => false)))
((SOUND && (!M68K && (SND && (SND_USB && USB)))) || ((false => SND_USB_CAIAQ) && (SND_USB_CAIAQ => false)))
((SOUND && (!M68K && (SND && (SND_USB && (USB && (SND_USB_CAIAQ && (INPUT || INPUT))))))) || ((false => SND_USB_CAIAQ_INPUT) && (SND_USB_CAIAQ_INPUT => false)))
((SOUND && (!M68K && (SND && (SND_USB && (USB && (X86 && EXPERIMENTAL)))))) || ((false => SND_USB_UStrue22L) && (SND_USB_UStrue22L => false)))
((SOUND && (!M68K && (SND && PCMCIA))) || (((true && (SOUND && (!M68K && (SND && PCMCIA)))) => SND_PCMCIA) && (SND_PCMCIA => (true && (SOUND && (!M68K && (SND && PCMCIA)))))))
((SOUND && (!M68K && (SND && (SND_PCMCIA && PCMCIA)))) || ((false => SND_VXPOCKET) && (SND_VXPOCKET => false)))
((SOUND && (!M68K && (SND && (SND_PCMCIA && PCMCIA)))) || ((false => SND_PDAUDIOCF) && (SND_PDAUDIOCF => false)))
((SOUND && (!M68K && (SND && SPARC))) || (((true && (SOUND && (!M68K && (SND && SPARC)))) => SND_SPARC) && (SND_SPARC => (true && (SOUND && (!M68K && (SND && SPARC)))))))
((SOUND && (!M68K && (SND && (SND_SPARC && SBUS)))) || ((false => SND_SUN_AMD793false) && (SND_SUN_AMD793false => false)))
((SOUND && (!M68K && (SND && SND_SPARC))) || ((false => SND_SUN_CS423true) && (SND_SUN_CS423true => false)))
((SOUND && (!M68K && (SND && (SND_SPARC && SBUS)))) || ((false => SND_SUN_DBRI) && (SND_SUN_DBRI => false)))
((SOUND && (!M68K && (SND && GSC))) || (((true && (SOUND && (!M68K && (SND && GSC)))) => SND_GSC) && (SND_GSC => (true && (SOUND && (!M68K && (SND && GSC)))))))
((SOUND && (!M68K && (SND && SND_GSC))) || ((false => SND_HARMONY) && (SND_HARMONY => false)))
((SOUND && (!M68K && SND)) || ((false => SND_SOC) && (SND_SOC => false)))
(false || ((((((x867 || x849) || x868) || x869) || x87false) => SND_SOC_AC97_BUS) && (SND_SOC_AC97_BUS => ((((x867 || x849) || x868) || x869) || x87false))))
(x867 <=> (SND_PXA2XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x849 <=> (SND_SOC_AUtrueXPSC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x868 <=> (SND_S3C2443_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x869 <=> (SND_SOC_SH4_HAC && (SOUND && (!M68K && (SND && (SND_SOC && SUPERH))))))
(x87false <=> (SND_BF5XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
((SOUND && (!M68K && (SND && (AVR32 && SND_SOC)))) || ((false => SND_AT32_SOC) && (SND_AT32_SOC => false)))
(false || (((SND_AT32_SOC_PLAYPAQ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_AT32_SOC && BOARD_PLAYPAQ)))))) => SND_AT32_SOC_SSC) && (SND_AT32_SOC_SSC => (SND_AT32_SOC_PLAYPAQ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_AT32_SOC && BOARD_PLAYPAQ)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_AT32_SOC && BOARD_PLAYPAQ))))) || ((false => SND_AT32_SOC_PLAYPAQ) && (SND_AT32_SOC_PLAYPAQ => false)))
((SOUND && (!M68K && (SND && (SND_SOC && SND_AT32_SOC_PLAYPAQ)))) || ((false => SND_AT32_SOC_PLAYPAQ_SLAVE) && (SND_AT32_SOC_PLAYPAQ_SLAVE => false)))
((SOUND && (!M68K && (SND && (SND_SOC && ARCH_AT9true)))) || ((false => SND_AT9true_SOC) && (SND_AT9true_SOC => false)))
(false || ((false => SND_AT9true_SOC_SSC) && (SND_AT9true_SOC_SSC => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SOC_AUtrue2falsefalse || SOC_AUtrue55false))))) || ((false => SND_SOC_AUtrueXPSC) && (SND_SOC_AUtrueXPSC => false)))
(false || ((false => SND_SOC_AUtrueXPSC_I2S) && (SND_SOC_AUtrueXPSC_I2S => false)))
(false || (((SND_SOC_SAMPLE_PSC_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_AUtrueXPSC))))) => SND_SOC_AUtrueXPSC_AC97) && (SND_SOC_AUtrueXPSC_AC97 => (SND_SOC_SAMPLE_PSC_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_AUtrueXPSC))))))))
((SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_AUtrueXPSC)))) || ((false => SND_SOC_SAMPLE_PSC_AC97) && (SND_SOC_SAMPLE_PSC_AC97 => false)))
((SOUND && (!M68K && (SND && (SND_SOC && ARCH_PXA)))) || ((false => SND_PXA2XX_SOC) && (SND_PXA2XX_SOC => false)))
((SOUND && (!M68K && (SND && (SND_ARM && ARCH_PXA)))) || ((false => SND_PXA2XX_AC97) && (SND_PXA2XX_AC97 => false)))
(false || (((((SND_PXA2XX_SOC_EM_X27false && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_EM_X27false)))))) || (SND_PXA2XX_SOC_TOSA && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && (MACH_TOSA && MFD_TC6393XB)))))))) || (SND_PXA2XX_SOC_E8falsefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_E8falsefalse))))))) => SND_PXA2XX_SOC_AC97) && (SND_PXA2XX_SOC_AC97 => (((SND_PXA2XX_SOC_EM_X27false && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_EM_X27false)))))) || (SND_PXA2XX_SOC_TOSA && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && (MACH_TOSA && MFD_TC6393XB)))))))) || (SND_PXA2XX_SOC_E8falsefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_E8falsefalse))))))))))
(false || (((((SND_PXA2XX_SOC_SPITZ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_Cxxfalsefalse)))))) || (SND_PXA2XX_SOC_POODLE && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_POODLE))))))) || (SND_PXA2XX_SOC_CORGI && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_C7xx))))))) => SND_PXA2XX_SOC_I2S) && (SND_PXA2XX_SOC_I2S => (((SND_PXA2XX_SOC_SPITZ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_Cxxfalsefalse)))))) || (SND_PXA2XX_SOC_POODLE && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_POODLE))))))) || (SND_PXA2XX_SOC_CORGI && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_C7xx))))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_C7xx))))) || ((false => SND_PXA2XX_SOC_CORGI) && (SND_PXA2XX_SOC_CORGI => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_Cxxfalsefalse))))) || ((false => SND_PXA2XX_SOC_SPITZ) && (SND_PXA2XX_SOC_SPITZ => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_POODLE))))) || ((false => SND_PXA2XX_SOC_POODLE) && (SND_PXA2XX_SOC_POODLE => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && (MACH_TOSA && MFD_TC6393XB)))))) || ((false => SND_PXA2XX_SOC_TOSA) && (SND_PXA2XX_SOC_TOSA => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_E8falsefalse))))) || ((false => SND_PXA2XX_SOC_E8falsefalse) && (SND_PXA2XX_SOC_E8falsefalse => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_EM_X27false))))) || ((false => SND_PXA2XX_SOC_EM_X27false) && (SND_PXA2XX_SOC_EM_X27false => false)))
((SOUND && (!M68K && (SND && (SND_SOC && ARCH_S3C24truefalse)))) || ((false => SND_S3C24XX_SOC) && (SND_S3C24XX_SOC => false)))
(false || (((SND_S3C24XX_SOC_NEOtrue973_WM8753 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_NEOtrue973_GTAfalsetrue)))))) => SND_S3C24XX_SOC_I2S) && (SND_S3C24XX_SOC_I2S => (SND_S3C24XX_SOC_NEOtrue973_WM8753 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_NEOtrue973_GTAfalsetrue)))))))))
(false || ((false => SND_S3C24true2_SOC_I2S) && (SND_S3C24true2_SOC_I2S => false)))
(false || ((((SND_S3C24XX_SOC_LN244falseSBC_ALC65false && (SOUND && (!M68K && (SND && (SND_SOC && SND_S3C24XX_SOC))))) || (SND_S3C24XX_SOC_SMDK2443_WM97truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_SMDK2443))))))) => SND_S3C2443_SOC_AC97) && (SND_S3C2443_SOC_AC97 => ((SND_S3C24XX_SOC_LN244falseSBC_ALC65false && (SOUND && (!M68K && (SND && (SND_SOC && SND_S3C24XX_SOC))))) || (SND_S3C24XX_SOC_SMDK2443_WM97truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_SMDK2443))))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_NEOtrue973_GTAfalsetrue))))) || ((false => SND_S3C24XX_SOC_NEOtrue973_WM8753) && (SND_S3C24XX_SOC_NEOtrue973_WM8753 => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_SMDK2443))))) || ((false => SND_S3C24XX_SOC_SMDK2443_WM97truefalse) && (SND_S3C24XX_SOC_SMDK2443_WM97truefalse => false)))
((SOUND && (!M68K && (SND && (SND_SOC && SND_S3C24XX_SOC)))) || ((false => SND_S3C24XX_SOC_LN244falseSBC_ALC65false) && (SND_S3C24XX_SOC_LN244falseSBC_ALC65false => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SUPERH && (CPU_SUBTYPE_SH776false && SH_DMABRG)))))) || ((false => SND_SOC_PCM_SH776false) && (SND_SOC_PCM_SH776false => false)))
(false || (((SND_SH776false_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && (SUPERH && (CPU_SUBTYPE_SH776false && SND_SOC_PCM_SH776false))))))) => SND_SOC_SH4_HAC) && (SND_SOC_SH4_HAC => (SND_SH776false_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && (SUPERH && (CPU_SUBTYPE_SH776false && SND_SOC_PCM_SH776false))))))))))
(false || ((false => SND_SOC_SH4_SSI) && (SND_SOC_SH4_SSI => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SUPERH && (CPU_SUBTYPE_SH776false && SND_SOC_PCM_SH776false)))))) || ((false => SND_SH776false_AC97) && (SND_SH776false_AC97 => false)))
(false || (((SND_SOC_MPC52falsefalse_I2S && (SOUND && (!M68K && (SND && (SND_SOC && (PPC_MPC52xx && PPC_BESTCOMM)))))) => SND_SOC_OF_SIMPLE) && (SND_SOC_OF_SIMPLE => (SND_SOC_MPC52falsefalse_I2S && (SOUND && (!M68K && (SND && (SND_SOC && (PPC_MPC52xx && PPC_BESTCOMM)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && MPC86truefalse_HPCD)))) || (((true && (SOUND && (!M68K && (SND && (SND_SOC && (MPC86truefalse_HPCD && MPC86truefalse)))))) => SND_SOC_MPC86truefalse) && (SND_SOC_MPC86truefalse => (true && (SOUND && (!M68K && (SND && (SND_SOC && (MPC86truefalse_HPCD && MPC86truefalse)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_MPC86truefalse)))) || (((true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_SOC_MPC86truefalse && MPC86truefalse_HPCD)))))) => SND_SOC_MPC86truefalse_HPCD) && (SND_SOC_MPC86truefalse_HPCD => (true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_SOC_MPC86truefalse && MPC86truefalse_HPCD)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (PPC_MPC52xx && PPC_BESTCOMM))))) || ((false => SND_SOC_MPC52falsefalse_I2S) && (SND_SOC_MPC52falsefalse_I2S => false)))
((SOUND && (!M68K && (SND && (SND_SOC && ARCH_DAVINCI)))) || ((false => SND_DAVINCI_SOC) && (SND_DAVINCI_SOC => false)))
(false || (((SND_DAVINCI_SOC_EVM && (SOUND && (!M68K && (SND && (SND_SOC && (SND_DAVINCI_SOC && MACH_DAVINCI_EVM)))))) => SND_DAVINCI_SOC_I2S) && (SND_DAVINCI_SOC_I2S => (SND_DAVINCI_SOC_EVM && (SOUND && (!M68K && (SND && (SND_SOC && (SND_DAVINCI_SOC && MACH_DAVINCI_EVM)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_DAVINCI_SOC && MACH_DAVINCI_EVM))))) || ((false => SND_DAVINCI_SOC_EVM) && (SND_DAVINCI_SOC_EVM => false)))
((SOUND && (!M68K && (SND && (ARCH_OMAP && SND_SOC)))) || ((false => SND_OMAP_SOC) && (SND_OMAP_SOC => false)))
(false || ((((SND_OMAP_SOC_OSK59true2 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_OMAP_OSK)))))) || (SND_OMAP_SOC_N8truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_NOKIA_N8truefalse))))))) => SND_OMAP_SOC_MCBSP) && (SND_OMAP_SOC_MCBSP => ((SND_OMAP_SOC_OSK59true2 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_OMAP_OSK)))))) || (SND_OMAP_SOC_N8truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_NOKIA_N8truefalse))))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_NOKIA_N8truefalse))))) || ((false => SND_OMAP_SOC_N8truefalse) && (SND_OMAP_SOC_N8truefalse => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_OMAP_OSK))))) || ((false => SND_OMAP_SOC_OSK59true2) && (SND_OMAP_SOC_OSK59true2 => false)))
((SOUND && (!M68K && (SND && (BLACKFIN && SND_SOC)))) || ((false => SND_BF5XX_I2S) && (SND_BF5XX_I2S => false)))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S)))) || ((false => SND_BF5XX_SOC_SSM26false2) && (SND_BF5XX_SOC_SSM26false2 => false)))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S)))) || ((false => SND_BF5XX_SOC_AD733truetrue) && (SND_BF5XX_SOC_AD733truetrue => false)))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_SOC_AD733truetrue)))) || (((true && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_SOC_AD733truetrue))))) => SND_BFIN_AD733truetrue_SE) && (SND_BFIN_AD733truetrue_SE => (true && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_SOC_AD733truetrue))))))))
((SOUND && (!M68K && (SND && (BLACKFIN && SND_SOC)))) || ((false => SND_BF5XX_AC97) && (SND_BF5XX_AC97 => false)))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97)))) || (((true && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97))))) => SND_MMAP_SUPPORT) && (SND_MMAP_SUPPORT => (true && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97))))))))
(false || ((((SND_BF5XX_SOC_I2S && (SOUND && (!M68K && (SND && SND_SOC)))) || (SND_BF5XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC))))) => SND_BF5XX_SOC_SPORT) && (SND_BF5XX_SOC_SPORT => ((SND_BF5XX_SOC_I2S && (SOUND && (!M68K && (SND && SND_SOC)))) || (SND_BF5XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC))))))))
(false || ((((SND_BF5XX_SOC_AD733truetrue && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))) || (SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S)))))) => SND_BF5XX_SOC_I2S) && (SND_BF5XX_SOC_I2S => ((SND_BF5XX_SOC_AD733truetrue && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))) || (SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S)))))))))
(false || (((SND_BF5XX_SOC_ADtrue98false && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97))))) => SND_BF5XX_SOC_AC97) && (SND_BF5XX_SOC_AC97 => (SND_BF5XX_SOC_ADtrue98false && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97))))))))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97)))) || ((false => SND_BF5XX_SOC_ADtrue98false) && (SND_BF5XX_SOC_ADtrue98false => false)))
((SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_I2S || SND_BF5XX_AC97))))) || (((true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_I2S || SND_BF5XX_AC97)))))) => SND_BF5XX_SPORT_NUM) && (SND_BF5XX_SPORT_NUM => (true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_I2S || SND_BF5XX_AC97)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97)))) || (((true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_AC97 && BFIN548_EZKIT)))))) => SND_BF5XX_HAVE_COLD_RESET) && (SND_BF5XX_HAVE_COLD_RESET => (true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_AC97 && BFIN548_EZKIT)))))))))
((SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_HAVE_COLD_RESET)))) || ((((true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_HAVE_COLD_RESET && BFIN548_EZKIT)))))) || ((true && !(SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_HAVE_COLD_RESET && BFIN548_EZKIT)))))) && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_HAVE_COLD_RESET && BFIN537_STAMP))))))) => SND_BF5XX_RESET_GPIO_NUM) && (SND_BF5XX_RESET_GPIO_NUM => ((true && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_HAVE_COLD_RESET && BFIN548_EZKIT)))))) || ((true && !(SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_HAVE_COLD_RESET && BFIN548_EZKIT)))))) && (SOUND && (!M68K && (SND && (SND_SOC && (SND_BF5XX_HAVE_COLD_RESET && BFIN537_STAMP))))))))))
((SOUND && (!M68K && (SND && (SND_SOC && I2C)))) || ((false => SND_SOC_ALL_CODECS) && (SND_SOC_ALL_CODECS => false)))
(false || ((((((SND_SH776false_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && (SUPERH && (CPU_SUBTYPE_SH776false && SND_SOC_PCM_SH776false))))))) || (SND_S3C24XX_SOC_LN244falseSBC_ALC65false && (SOUND && (!M68K && (SND && (SND_SOC && SND_S3C24XX_SOC)))))) || (SND_SOC_SAMPLE_PSC_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_AUtrueXPSC)))))) || (SND_S3C24XX_SOC_SMDK2443_WM97truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_SMDK2443))))))) => SND_SOC_AC97_CODEC) && (SND_SOC_AC97_CODEC => ((((SND_SH776false_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && (SUPERH && (CPU_SUBTYPE_SH776false && SND_SOC_PCM_SH776false))))))) || (SND_S3C24XX_SOC_LN244falseSBC_ALC65false && (SOUND && (!M68K && (SND && (SND_SOC && SND_S3C24XX_SOC)))))) || (SND_SOC_SAMPLE_PSC_AC97 && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_AUtrueXPSC)))))) || (SND_S3C24XX_SOC_SMDK2443_WM97truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_SMDK2443))))))))))
(false || (((SND_BF5XX_SOC_ADtrue98false && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97))))) => SND_SOC_ADtrue98false) && (SND_SOC_ADtrue98false => (SND_BF5XX_SOC_ADtrue98false && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_AC97))))))))
(false || ((((SND_BF5XX_SOC_AD733truetrue && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))) || (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C)))))) => SND_SOC_AD733truetrue) && (SND_SOC_AD733truetrue => ((SND_BF5XX_SOC_AD733truetrue && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S))))) || (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C)))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_AK4535) && (SND_SOC_AK4535 => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_SOC_MPC86truefalse_HPCD && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_MPC86truefalse)))))) => SND_SOC_CS427false) && (SND_SOC_CS427false => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_SOC_MPC86truefalse_HPCD && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_MPC86truefalse)))))))))
(false || ((false => SND_SOC_CS427false_HWMUTE) && (SND_SOC_CS427false_HWMUTE => false)))
(false || (((SND_SOC_MPC86truefalse_HPCD && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_MPC86truefalse))))) => SND_SOC_CS427false_VD33_ERRATA) && (SND_SOC_CS427false_VD33_ERRATA => (SND_SOC_MPC86truefalse_HPCD && (SOUND && (!M68K && (SND && (SND_SOC && SND_SOC_MPC86truefalse))))))))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S)))))) => SND_SOC_SSM26false2) && (SND_SOC_SSM26false2 => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_BF5XX_SOC_SSM26false2 && (SOUND && (!M68K && (SND && (SND_SOC && SND_BF5XX_I2S)))))))))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_OMAP_SOC_OSK59true2 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_OMAP_OSK))))))) => SND_SOC_TLV32falseAIC23) && (SND_SOC_TLV32falseAIC23 => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_OMAP_SOC_OSK59true2 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_OMAP_OSK))))))))))
((SOUND && (!M68K && (SND && (SND_SOC && (SPI && SND_SOC_OF_SIMPLE))))) || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_TLV32falseAIC26) && (SND_SOC_TLV32falseAIC26 => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || (((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_DAVINCI_SOC_EVM && (SOUND && (!M68K && (SND && (SND_SOC && (SND_DAVINCI_SOC && MACH_DAVINCI_EVM))))))) || (SND_OMAP_SOC_N8truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_NOKIA_N8truefalse))))))) => SND_SOC_TLV32falseAIC3X) && (SND_SOC_TLV32falseAIC3X => (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_DAVINCI_SOC_EVM && (SOUND && (!M68K && (SND && (SND_SOC && (SND_DAVINCI_SOC && MACH_DAVINCI_EVM))))))) || (SND_OMAP_SOC_N8truefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_OMAP_SOC && MACH_NOKIA_N8truefalse))))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_UDAtrue38false) && (SND_SOC_UDAtrue38false => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_AT32_SOC_PLAYPAQ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_AT32_SOC && BOARD_PLAYPAQ))))))) => SND_SOC_WM85truefalse) && (SND_SOC_WM85truefalse => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_AT32_SOC_PLAYPAQ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_AT32_SOC && BOARD_PLAYPAQ))))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_WM858false) && (SND_SOC_WM858false => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || (((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_PXA2XX_SOC_POODLE && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_POODLE))))))) || (SND_PXA2XX_SOC_CORGI && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_C7xx))))))) => SND_SOC_WM873true) && (SND_SOC_WM873true => (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_PXA2XX_SOC_POODLE && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_POODLE))))))) || (SND_PXA2XX_SOC_CORGI && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_C7xx))))))))))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_PXA2XX_SOC_SPITZ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_Cxxfalsefalse))))))) => SND_SOC_WM875false) && (SND_SOC_WM875false => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_PXA2XX_SOC_SPITZ && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && PXA_SHARP_Cxxfalsefalse))))))))))
(false || ((((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_S3C24XX_SOC_NEOtrue973_WM8753 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_NEOtrue973_GTAfalsetrue))))))) => SND_SOC_WM8753) && (SND_SOC_WM8753 => ((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) || (SND_S3C24XX_SOC_NEOtrue973_WM8753 && (SOUND && (!M68K && (SND && (SND_SOC && (SND_S3C24XX_SOC && MACH_NEOtrue973_GTAfalsetrue))))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_WM89falsefalse) && (SND_SOC_WM89falsefalse => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_WM89false3) && (SND_SOC_WM89false3 => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_WM897true) && (SND_SOC_WM897true => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || (((SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))) => SND_SOC_WM899false) && (SND_SOC_WM899false => (SND_SOC_ALL_CODECS && (SOUND && (!M68K && (SND && (SND_SOC && I2C))))))))
(false || (((((SND_PXA2XX_SOC_EM_X27false && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_EM_X27false)))))) || (SND_PXA2XX_SOC_TOSA && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && (MACH_TOSA && MFD_TC6393XB)))))))) || (SND_PXA2XX_SOC_E8falsefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_E8falsefalse))))))) => SND_SOC_WM97true2) && (SND_SOC_WM97true2 => (((SND_PXA2XX_SOC_EM_X27false && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_EM_X27false)))))) || (SND_PXA2XX_SOC_TOSA && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && (MACH_TOSA && MFD_TC6393XB)))))))) || (SND_PXA2XX_SOC_E8falsefalse && (SOUND && (!M68K && (SND && (SND_SOC && (SND_PXA2XX_SOC && MACH_E8falsefalse))))))))))
(false || ((false => SND_SOC_WM97true3) && (SND_SOC_WM97true3 => false)))
((SOUND && !M68K) || ((false => SOUND_PRIME) && (SOUND_PRIME => false)))
((SOUND && (!M68K && (SOUND_PRIME && SIBYTE_SWARM))) || ((false => SOUND_BCM_CS4297A) && (SOUND_BCM_CS4297A => false)))
((SOUND && (!M68K && (SOUND_PRIME && X86_VISWS))) || ((false => SOUND_VWSND) && (SOUND_VWSND => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOC_AUtrue55false || SOC_AUtrue2falsefalse)))) || ((false => SOUND_AUtrue55false_AC97) && (SOUND_AUtrue55false_AC97 => false)))
((SOUND && (!M68K && (SOUND_PRIME && (((true && true) || !STANDALONE) && ISA)))) || ((false => SOUND_MSNDCLAS) && (SOUND_MSNDCLAS => false)))
(false || (((true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_MSNDCLAS && !STANDALONE))))) => MSNDCLAS_HAVE_BOOT) && (MSNDCLAS_HAVE_BOOT => (true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_MSNDCLAS && !STANDALONE))))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))) => MSNDCLAS_INIT_FILE) && (MSNDCLAS_INIT_FILE => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))) => MSNDCLAS_PERM_FILE) && (MSNDCLAS_PERM_FILE => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))) => MSNDCLAS_IRQ) && (MSNDCLAS_IRQ => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) || (((true && ((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) && Dfalsefalsefalsefalse)) => MSNDCLAS_MEM) && (MSNDCLAS_MEM => (true && ((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) && Dfalsefalsefalsefalse)))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))) => MSNDCLAS_IO) && (MSNDCLAS_IO => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDCLAS)))))))
((SOUND && (!M68K && (SOUND_PRIME && (((true && true) || !STANDALONE) && ISA)))) || ((false => SOUND_MSNDPIN) && (SOUND_MSNDPIN => false)))
(false || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))) => MSNDPIN_HAVE_BOOT) && (MSNDPIN_HAVE_BOOT => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))) => MSNDPIN_INIT_FILE) && (MSNDPIN_INIT_FILE => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))) => MSNDPIN_PERM_FILE) && (MSNDPIN_PERM_FILE => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))) => MSNDPIN_IRQ) && (MSNDPIN_IRQ => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || (((true && ((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) && Dfalsefalsefalsefalse)) => MSNDPIN_MEM) && (MSNDPIN_MEM => (true && ((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) && Dfalsefalsefalsefalse)))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))) => MSNDPIN_IO) && (MSNDPIN_IO => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN)))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || ((false => MSNDPIN_DIGITAL) && (MSNDPIN_DIGITAL => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_MSNDPIN))) || ((false => MSNDPIN_NONPNP) && (MSNDPIN_NONPNP => false)))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_CFG) && (MSNDPIN_CFG => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_MPU_IO) && (MSNDPIN_MPU_IO => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_MPU_IRQ) && (MSNDPIN_MPU_IRQ => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_IDE_IOfalse) && (MSNDPIN_IDE_IOfalse => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_IDE_IOtrue) && (MSNDPIN_IDE_IOtrue => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_IDE_IRQ) && (MSNDPIN_IDE_IRQ => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))) => MSNDPIN_JOYSTICK_IO) && (MSNDPIN_JOYSTICK_IO => (true && (SOUND && (!M68K && (SOUND_PRIME && MSNDPIN_NONPNP)))))))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_MSNDPIN || SOUND_MSNDCLAS)))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_MSNDPIN || SOUND_MSNDCLAS))))) => MSND_FIFOSIZE) && (MSND_FIFOSIZE => (true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_MSNDPIN || SOUND_MSNDCLAS))))))))
((SOUND && (!M68K && (SOUND_PRIME && (ISA_DMA_API && VIRT_TO_BUS)))) || ((false => SOUND_OSS) && (SOUND_OSS => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_TRACEINIT) && (SOUND_TRACEINIT => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_DMAP) && (SOUND_DMAP => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_SSCAPE) && (SOUND_SSCAPE => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_VMIDI) && (SOUND_VMIDI => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_TRIX) && (SOUND_TRIX => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && (SOUND_TRIX && !STANDALONE))))) || ((false => TRIX_HAVE_BOOT) && (TRIX_HAVE_BOOT => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && TRIX_HAVE_BOOT)))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && TRIX_HAVE_BOOT))))) => TRIX_BOOT_FILE) && (TRIX_BOOT_FILE => (true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && TRIX_HAVE_BOOT))))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_MSS) && (SOUND_MSS => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_MPU4falsetrue) && (SOUND_MPU4falsetrue => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_PAS) && (SOUND_PAS => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SOUND_PAS)))) || ((false => PAS_JOYSTICK) && (PAS_JOYSTICK => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_PSS) && (SOUND_PSS => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SOUND_PSS)))) || ((false => PSS_MIXER) && (PSS_MIXER => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && (SOUND_PSS && !STANDALONE))))) || ((false => PSS_HAVE_BOOT) && (PSS_HAVE_BOOT => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && PSS_HAVE_BOOT)))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && PSS_HAVE_BOOT))))) => PSS_BOOT_FILE) && (PSS_BOOT_FILE => (true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && PSS_HAVE_BOOT))))))))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_SB) && (SOUND_SB => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_YM38true2) && (SOUND_YM38true2 => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_UART685false) && (SOUND_UART685false => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_OSS))) || ((false => SOUND_AEDSPtrue6) && (SOUND_AEDSPtrue6 => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SOUND_AEDSPtrue6)))) || ((false => SC66falsefalse) && (SC66falsefalse => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse)))) || ((false => SC66falsefalse_JOY) && (SC66falsefalse_JOY => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse)))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse))))) => SC66falsefalse_CDROM) && (SC66falsefalse_CDROM => (true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse))))))))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse)))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse))))) => SC66falsefalse_CDROMBASE) && (SC66falsefalse_CDROMBASE => (true && (SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SC66falsefalse))))))))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && (ARM && (ARCH_ACORN || ARCH_CLPS75falsefalse)))))) || ((false => SOUND_VIDC) && (SOUND_VIDC => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && (ARM && ARCH_NETWINDER))))) || ((false => SOUND_WAVEARTIST) && (SOUND_WAVEARTIST => false)))
((SOUND && (!M68K && (SOUND_PRIME && (SOUND_OSS && SOUND_SB)))) || ((false => SOUND_KAHLUA) && (SOUND_KAHLUA => false)))
((SOUND && (!M68K && (SOUND_PRIME && CPU_SH3))) || ((false => SOUND_SH_DAC_AUDIO) && (SOUND_SH_DAC_AUDIO => false)))
((SOUND && (!M68K && (SOUND_PRIME && SOUND_SH_DAC_AUDIO))) || (((true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_SH_DAC_AUDIO)))) => SOUND_SH_DAC_AUDIO_CHANNEL) && (SOUND_SH_DAC_AUDIO_CHANNEL => (true && (SOUND && (!M68K && (SOUND_PRIME && SOUND_SH_DAC_AUDIO)))))))
(false || ((((((((x87true || x785) || x849) || x87false) || x867) || x868) || x869) => AC97_BUS) && (AC97_BUS => ((((((x87true || x785) || x849) || x87false) || x867) || x868) || x869))))
(x87true <=> (SND_SOC && (SOUND && (!M68K && (SND && SND_SOC_AC97_BUS)))))
(x785 <=> (SND_AC97_CODEC && (SOUND && (!M68K && SND))))
(x849 <=> (SND_SOC_AUtrueXPSC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x87false <=> (SND_BF5XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x867 <=> (SND_PXA2XX_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x868 <=> (SND_S3C2443_SOC_AC97 && (SOUND && (!M68K && (SND && SND_SOC)))))
(x869 <=> (SND_SOC_SH4_HAC && (SOUND && (!M68K && (SND && (SND_SOC && SUPERH))))))
(INPUT || (((true && INPUT) => HID_SUPPORT) && (HID_SUPPORT => (true && INPUT))))
((HID_SUPPORT && INPUT) || (((((USB_HID && (HID_SUPPORT && (USB && INPUT))) || (BT_HIDP && (NET && (BT && (BT_L2CAP && INPUT))))) || (true && (HID_SUPPORT && INPUT))) => HID) && (HID => (((USB_HID && (HID_SUPPORT && (USB && INPUT))) || (BT_HIDP && (NET && (BT && (BT_L2CAP && INPUT))))) || (true && (HID_SUPPORT && INPUT))))))
((HID_SUPPORT && HID) || (((true && (HID_SUPPORT && (HID && !EMBEDDED))) => HID_DEBUG) && (HID_DEBUG => (true && (HID_SUPPORT && (HID && !EMBEDDED))))))
((HID_SUPPORT && HID) || ((false => HIDRAW) && (HIDRAW => false)))
((HID_SUPPORT && (USB && INPUT)) || (((true && (HID_SUPPORT && (USB && INPUT))) => USB_HID) && (USB_HID => (true && (HID_SUPPORT && (USB && INPUT))))))
(HID_SUPPORT || ((false => HID_PID) && (HID_PID => false)))
((HID_SUPPORT && USB_HID) || ((false => USB_HIDDEV) && (USB_HIDDEV => false)))
((HID_SUPPORT && (true && (USB && INPUT))) || ((false => USB_KBD) && (USB_KBD => false)))
((HID_SUPPORT && (true && (USB && INPUT))) || ((false => USB_MOUSE) && (USB_MOUSE => false)))
((HID_SUPPORT && HID) || (((true && (HID_SUPPORT && HID)) => HID_COMPAT) && (HID_COMPAT => (true && (HID_SUPPORT && HID)))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_A4TECH) && (HID_A4TECH => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && ((USB_HID || BT_HIDP) && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && (USB_HID || BT_HIDP)))) => HID_APPLE) && (HID_APPLE => (true && (HID_SUPPORT && (HID && (USB_HID || BT_HIDP)))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_BELKIN) && (HID_BELKIN => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_BRIGHT) && (HID_BRIGHT => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_CHERRY) && (HID_CHERRY => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_CHICONY) && (HID_CHICONY => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_CYPRESS) && (HID_CYPRESS => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_DELL) && (HID_DELL => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_EZKEY) && (HID_EZKEY => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_GYRATION) && (HID_GYRATION => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_LOGITECH) && (HID_LOGITECH => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && HID_LOGITECH)) || ((false => LOGITECH_FF) && (LOGITECH_FF => false)))
((HID_SUPPORT && (HID && HID_LOGITECH)) || ((false => LOGIRUMBLEPAD2_FF) && (LOGIRUMBLEPAD2_FF => false)))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_MICROSOFT) && (HID_MICROSOFT => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_MONTEREY) && (HID_MONTEREY => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_PANTHERLORD) && (HID_PANTHERLORD => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && HID_PANTHERLORD)) || ((false => PANTHERLORD_FF) && (PANTHERLORD_FF => false)))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_PETALYNX) && (HID_PETALYNX => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_SAMSUNG) && (HID_SAMSUNG => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_SONY) && (HID_SONY => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && (USB_HID && EMBEDDED))) || (((true && (HID_SUPPORT && (HID && USB_HID))) => HID_SUNPLUS) && (HID_SUNPLUS => (true && (HID_SUPPORT && (HID && USB_HID))))))
((HID_SUPPORT && (HID && USB_HID)) || ((false => THRUSTMASTER_FF) && (THRUSTMASTER_FF => false)))
((HID_SUPPORT && (HID && USB_HID)) || ((false => ZEROPLUS_FF) && (ZEROPLUS_FF => false)))
(HAS_IOMEM || (((true && HAS_IOMEM) => USB_SUPPORT) && (USB_SUPPORT => (true && HAS_IOMEM))))
(false || (((((((x872 || x873) || x874) || x875) || x876) || x877) => USB_ARCH_HAS_HCD) && (USB_ARCH_HAS_HCD => (((((x872 || x873) || x874) || x875) || x876) || x877))))
(x872 <=> (true && (USB_SUPPORT && USB_ARCH_HAS_OHCI)))
(x873 <=> (true && (USB_SUPPORT && USB_ARCH_HAS_EHCI)))
(x874 <=> (true && (USB_SUPPORT && (PCMCIA && !M32R))))
(x875 <=> (true && (USB_SUPPORT && ARM)))
(x876 <=> (true && (USB_SUPPORT && SUPERH)))
(x877 <=> ((((((true && !(USB_SUPPORT && USB_ARCH_HAS_OHCI)) && !(USB_SUPPORT && USB_ARCH_HAS_EHCI)) && !(USB_SUPPORT && (PCMCIA && !M32R))) && !(USB_SUPPORT && ARM)) && !(USB_SUPPORT && SUPERH)) && (USB_SUPPORT && PCI)))
(false || ((((((((((((((((((x878 || x879) || x88false) || x88true) || x882) || x883) || x884) || x885) || x886) || x887) || x888) || x889) || x89false) || x89true) || x892) || x893) || x894) => USB_ARCH_HAS_OHCI) && (USB_ARCH_HAS_OHCI => ((((((((((((((((x878 || x879) || x88false) || x88true) || x882) || x883) || x884) || x885) || x886) || x887) || x888) || x889) || x89false) || x89true) || x892) || x893) || x894))))
(x878 <=> (true && (USB_SUPPORT && SAtruetruetruetrue)))
(x879 <=> (true && (USB_SUPPORT && ARCH_OMAP)))
(x88false <=> (true && (USB_SUPPORT && ARCH_LH7A4false4)))
(x88true <=> (true && (USB_SUPPORT && ARCH_S3C24truefalse)))
(x882 <=> (true && (USB_SUPPORT && PXA27x)))
(x883 <=> (true && (USB_SUPPORT && PXA3xx)))
(x884 <=> (true && (USB_SUPPORT && ARCH_EP93XX)))
(x885 <=> (true && (USB_SUPPORT && ARCH_AT9true)))
(x886 <=> (true && (USB_SUPPORT && (ARCH_PNX4falsefalse8 && I2C))))
(x887 <=> (true && (USB_SUPPORT && MFD_TC6393XB)))
(x888 <=> (true && (USB_SUPPORT && STBfalse3xxx)))
(x889 <=> (true && (USB_SUPPORT && PPC_MPC52xx)))
(x89false <=> (true && (USB_SUPPORT && SOC_AUtrueXfalsefalse)))
(x89true <=> (true && (USB_SUPPORT && CPU_SUBTYPE_SH772false)))
(x892 <=> (true && (USB_SUPPORT && CPU_SUBTYPE_SH772true)))
(x893 <=> (true && (USB_SUPPORT && CPU_SUBTYPE_SH7763)))
(x894 <=> (((((((((((((((((true && !(USB_SUPPORT && SAtruetruetruetrue)) && !(USB_SUPPORT && ARCH_OMAP)) && !(USB_SUPPORT && ARCH_LH7A4false4)) && !(USB_SUPPORT && ARCH_S3C24truefalse)) && !(USB_SUPPORT && PXA27x)) && !(USB_SUPPORT && PXA3xx)) && !(USB_SUPPORT && ARCH_EP93XX)) && !(USB_SUPPORT && ARCH_AT9true)) && !(USB_SUPPORT && (ARCH_PNX4falsefalse8 && I2C))) && !(USB_SUPPORT && MFD_TC6393XB)) && !(USB_SUPPORT && STBfalse3xxx)) && !(USB_SUPPORT && PPC_MPC52xx)) && !(USB_SUPPORT && SOC_AUtrueXfalsefalse)) && !(USB_SUPPORT && CPU_SUBTYPE_SH772false)) && !(USB_SUPPORT && CPU_SUBTYPE_SH772true)) && !(USB_SUPPORT && CPU_SUBTYPE_SH7763)) && (USB_SUPPORT && PCI)))
(false || ((((((true && (USB_SUPPORT && PPC_83xx)) || (true && (USB_SUPPORT && SOC_AUtrue2falsefalse))) || (true && (USB_SUPPORT && ARCH_IXP4XX))) || ((((true && !(USB_SUPPORT && PPC_83xx)) && !(USB_SUPPORT && SOC_AUtrue2falsefalse)) && !(USB_SUPPORT && ARCH_IXP4XX)) && (USB_SUPPORT && PCI))) => USB_ARCH_HAS_EHCI) && (USB_ARCH_HAS_EHCI => ((((true && (USB_SUPPORT && PPC_83xx)) || (true && (USB_SUPPORT && SOC_AUtrue2falsefalse))) || (true && (USB_SUPPORT && ARCH_IXP4XX))) || ((((true && !(USB_SUPPORT && PPC_83xx)) && !(USB_SUPPORT && SOC_AUtrue2falsefalse)) && !(USB_SUPPORT && ARCH_IXP4XX)) && (USB_SUPPORT && PCI))))))
((USB_SUPPORT && USB_ARCH_HAS_HCD) || (((((((((((((((x895 || x896) || x897) || x898) || x899) || x9falsefalse) || x9falsetrue) || x9false2) || x9false3) || x9false4) || x9false5) || x9false6) || x9false7) || x9false8) => USB) && (USB => (((((((((((((x895 || x896) || x897) || x898) || x899) || x9falsefalse) || x9falsetrue) || x9false2) || x9false3) || x9false4) || x9false5) || x9false6) || x9false7) || x9false8))))
(x895 <=> (TOUCHSCREEN_USB_COMPOSITE && (!S39false && (INPUT && (INPUT_TOUCHSCREEN && USB_ARCH_HAS_HCD)))))
(x896 <=> (INPUT_YEALINK && (!S39false && (INPUT && (INPUT_MISC && (EXPERIMENTAL && USB_ARCH_HAS_HCD))))))
(x897 <=> (INPUT_CMtruefalse9 && (!S39false && (INPUT && (INPUT_MISC && (EXPERIMENTAL && USB_ARCH_HAS_HCD))))))
(x898 <=> (TABLET_USB_AIPTEK && (!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD)))))
(x899 <=> (INPUT_ATI_REMOTE && (!S39false && (INPUT && (INPUT_MISC && USB_ARCH_HAS_HCD)))))
(x9falsefalse <=> (INPUT_KEYSPAN_REMOTE && (!S39false && (INPUT && (INPUT_MISC && (EXPERIMENTAL && USB_ARCH_HAS_HCD))))))
(x9falsetrue <=> (INPUT_POWERMATE && (!S39false && (INPUT && (INPUT_MISC && USB_ARCH_HAS_HCD)))))
(x9false2 <=> (TABLET_USB_WACOM && (!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD)))))
(x9false3 <=> (TABLET_USB_ACECAD && (!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD)))))
(x9false4 <=> (TABLET_USB_KBTAB && (!S39false && (INPUT && (INPUT_TABLET && USB_ARCH_HAS_HCD)))))
(x9false5 <=> (JOYSTICK_XPAD && (!S39false && (INPUT && (INPUT_JOYSTICK && USB_ARCH_HAS_HCD)))))
(x9false6 <=> (MOUSE_BCM5974 && (!S39false && (INPUT && (INPUT_MOUSE && USB_ARCH_HAS_HCD)))))
(x9false7 <=> (INPUT_ATI_REMOTE2 && (!S39false && (INPUT && (INPUT_MISC && USB_ARCH_HAS_HCD)))))
(x9false8 <=> (MOUSE_APPLETOUCH && (!S39false && (INPUT && (INPUT_MOUSE && USB_ARCH_HAS_HCD)))))
((USB_SUPPORT && USB) || ((false => USB_DEBUG) && (USB_DEBUG => false)))
((USB_SUPPORT && USB) || ((false => USB_ANNOUNCE_NEW_DEVICES) && (USB_ANNOUNCE_NEW_DEVICES => false)))
((USB_SUPPORT && USB) || ((false => USB_DEVICEFS) && (USB_DEVICEFS => false)))
((USB_SUPPORT && USB) || (((true && (USB_SUPPORT && USB)) => USB_DEVICE_CLASS) && (USB_DEVICE_CLASS => (true && (USB_SUPPORT && USB)))))
((USB_SUPPORT && USB) || ((false => USB_DYNAMIC_MINORS) && (USB_DYNAMIC_MINORS => false)))
((USB_SUPPORT && (USB && PM)) || (((USB_OTG && (USB_SUPPORT && (USB && EXPERIMENTAL))) => USB_SUSPEND) && (USB_SUSPEND => (USB_OTG && (USB_SUPPORT && (USB && EXPERIMENTAL))))))
((true && (USB_GADGET_OMAP && (ARCH_OMAP_OTG && USB_OHCI_HCD))) || ((((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_HDRC_HCD && (USB_SUPPORT && (USB_MUSB_HDRC && ((USB_MUSB_HOST || USB_MUSB_OTG) && USB_GADGET_MUSB_HDRC))))) => USB_OTG) && (USB_OTG => ((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_HDRC_HCD && (USB_SUPPORT && (USB_MUSB_HDRC && ((USB_MUSB_HOST || USB_MUSB_OTG) && USB_GADGET_MUSB_HDRC))))))))
((USB_SUPPORT && (USB_OTG || EMBEDDED)) || (((true && (USB_SUPPORT && ((USB_OTG || EMBEDDED) && USB_OTG))) => USB_OTG_WHITELIST) && (USB_OTG_WHITELIST => (true && (USB_SUPPORT && ((USB_OTG || EMBEDDED) && USB_OTG))))))
((USB_SUPPORT && (USB_OTG || EMBEDDED)) || ((false => USB_OTG_BLACKLIST_HUB) && (USB_OTG_BLACKLIST_HUB => false)))
((USB_SUPPORT && USB) || (((true && (USB_SUPPORT && USB)) => USB_MON) && (USB_MON => (true && (USB_SUPPORT && USB)))))
((USB_SUPPORT && (EXPERIMENTAL && USB)) || ((((USB_WHCI_HCD && (USB_SUPPORT && (EXPERIMENTAL && (PCI && USB)))) || (USB_HWA_HCD && (USB_SUPPORT && (EXPERIMENTAL && USB)))) => USB_WUSB) && (USB_WUSB => ((USB_WHCI_HCD && (USB_SUPPORT && (EXPERIMENTAL && (PCI && USB)))) || (USB_HWA_HCD && (USB_SUPPORT && (EXPERIMENTAL && USB)))))))
((USB_SUPPORT && USB) || ((false => USB_WUSB_CBAF) && (USB_WUSB_CBAF => false)))
((USB_SUPPORT && USB_WUSB_CBAF) || ((false => USB_WUSB_CBAF_DEBUG) && (USB_WUSB_CBAF_DEBUG => false)))
((USB_SUPPORT && USB) || ((false => USB_C67Xfalsefalse_HCD) && (USB_C67Xfalsefalse_HCD => false)))
((USB_SUPPORT && (USB && USB_ARCH_HAS_EHCI)) || ((false => USB_EHCI_HCD) && (USB_EHCI_HCD => false)))
((USB_SUPPORT && USB_EHCI_HCD) || (((USB_EHCI_FSL && (USB_SUPPORT && (USB_EHCI_HCD && FSL_SOC))) => USB_EHCI_ROOT_HUB_TT) && (USB_EHCI_ROOT_HUB_TT => (USB_EHCI_FSL && (USB_SUPPORT && (USB_EHCI_HCD && FSL_SOC))))))
((USB_SUPPORT && (USB_EHCI_HCD && EXPERIMENTAL)) || ((false => USB_EHCI_TT_NEWSCHED) && (USB_EHCI_TT_NEWSCHED => false)))
(false || (((true && (USB_SUPPORT && (USB_EHCI_HCD && (PPC_CELLEB || (PPC_PS3 || (44falseEPX || ARCH_IXP4XX)))))) => USB_EHCI_BIG_ENDIAN_MMIO) && (USB_EHCI_BIG_ENDIAN_MMIO => (true && (USB_SUPPORT && (USB_EHCI_HCD && (PPC_CELLEB || (PPC_PS3 || (44falseEPX || ARCH_IXP4XX)))))))))
(false || (((true && (USB_SUPPORT && (USB_EHCI_HCD && (44falseEPX || ARCH_IXP4XX)))) => USB_EHCI_BIG_ENDIAN_DESC) && (USB_EHCI_BIG_ENDIAN_DESC => (true && (USB_SUPPORT && (USB_EHCI_HCD && (44falseEPX || ARCH_IXP4XX)))))))
((USB_SUPPORT && (USB_EHCI_HCD && FSL_SOC)) || ((false => USB_EHCI_FSL) && (USB_EHCI_FSL => false)))
((USB_SUPPORT && (USB_EHCI_HCD && PPC_OF)) || (((true && (USB_SUPPORT && (USB_EHCI_HCD && PPC_OF))) => USB_EHCI_HCD_PPC_OF) && (USB_EHCI_HCD_PPC_OF => (true && (USB_SUPPORT && (USB_EHCI_HCD && PPC_OF))))))
((USB_SUPPORT && USB) || ((false => USB_ISPtruetrue6X_HCD) && (USB_ISPtruetrue6X_HCD => false)))
((USB_SUPPORT && (USB && (EXPERIMENTAL && (PCI || PPC_OF)))) || ((false => USB_ISPtrue76false_HCD) && (USB_ISPtrue76false_HCD => false)))
((USB_SUPPORT && (USB && USB_ARCH_HAS_OHCI)) || ((false => USB_OHCI_HCD) && (USB_OHCI_HCD => false)))
((USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx))) || (((true && (USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx)))) => USB_OHCI_HCD_PPC_SOC) && (USB_OHCI_HCD_PPC_SOC => (true && (USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx)))))))
((USB_SUPPORT && (USB_OHCI_HCD && PPC_OF)) || (((true && (USB_SUPPORT && (USB_OHCI_HCD && PPC_OF))) => USB_OHCI_HCD_PPC_OF) && (USB_OHCI_HCD_PPC_OF => (true && (USB_SUPPORT && (USB_OHCI_HCD && PPC_OF))))))
((USB_SUPPORT && USB_OHCI_HCD_PPC_OF) || (((true && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) => USB_OHCI_HCD_PPC_OF_BE) && (USB_OHCI_HCD_PPC_OF_BE => (true && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)))))
((USB_SUPPORT && USB_OHCI_HCD_PPC_OF) || ((false => USB_OHCI_HCD_PPC_OF_LE) && (USB_OHCI_HCD_PPC_OF_LE => false)))
((USB_SUPPORT && (USB_OHCI_HCD && (PCI && (STBfalse3xxx || (PPC_MPC52xx || USB_OHCI_HCD_PPC_OF))))) || (((true && (USB_SUPPORT && (USB_OHCI_HCD && (PCI && (STBfalse3xxx || (PPC_MPC52xx || USB_OHCI_HCD_PPC_OF)))))) => USB_OHCI_HCD_PCI) && (USB_OHCI_HCD_PCI => (true && (USB_SUPPORT && (USB_OHCI_HCD && (PCI && (STBfalse3xxx || (PPC_MPC52xx || USB_OHCI_HCD_PPC_OF)))))))))
((USB_SUPPORT && (USB_OHCI_HCD && ((SSB || SSB) && EXPERIMENTAL))) || ((false => USB_OHCI_HCD_SSB) && (USB_OHCI_HCD_SSB => false)))
(false || ((((USB_OHCI_HCD_PPC_OF_BE && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) || (USB_OHCI_HCD_PPC_SOC && (USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx))))) => USB_OHCI_BIG_ENDIAN_DESC) && (USB_OHCI_BIG_ENDIAN_DESC => ((USB_OHCI_HCD_PPC_OF_BE && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) || (USB_OHCI_HCD_PPC_SOC && (USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx))))))))
(false || ((((USB_OHCI_HCD_PPC_OF_BE && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) || (USB_OHCI_HCD_PPC_SOC && (USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx))))) => USB_OHCI_BIG_ENDIAN_MMIO) && (USB_OHCI_BIG_ENDIAN_MMIO => ((USB_OHCI_HCD_PPC_OF_BE && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) || (USB_OHCI_HCD_PPC_SOC && (USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx))))))))
(false || (((((USB_OHCI_HCD_PPC_OF_LE && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) || (USB_OHCI_HCD_PCI && (USB_SUPPORT && (USB_OHCI_HCD && (PCI && (STBfalse3xxx || (PPC_MPC52xx || USB_OHCI_HCD_PPC_OF))))))) || (((true && !(USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx)))) && !true) && (USB_SUPPORT && USB_OHCI_HCD))) => USB_OHCI_LITTLE_ENDIAN) && (USB_OHCI_LITTLE_ENDIAN => (((USB_OHCI_HCD_PPC_OF_LE && (USB_SUPPORT && USB_OHCI_HCD_PPC_OF)) || (USB_OHCI_HCD_PCI && (USB_SUPPORT && (USB_OHCI_HCD && (PCI && (STBfalse3xxx || (PPC_MPC52xx || USB_OHCI_HCD_PPC_OF))))))) || (((true && !(USB_SUPPORT && (USB_OHCI_HCD && (STBfalse3xxx || PPC_MPC52xx)))) && !true) && (USB_SUPPORT && USB_OHCI_HCD))))))
((USB_SUPPORT && (USB && PCI)) || ((false => USB_UHCI_HCD) && (USB_UHCI_HCD => false)))
((USB_SUPPORT && (USB && USB_FTDI_ELAN)) || (((true && (USB_SUPPORT && (USB && USB_FTDI_ELAN))) => USB_Utrue32_HCD) && (USB_Utrue32_HCD => (true && (USB_SUPPORT && (USB && USB_FTDI_ELAN))))))
((USB_SUPPORT && USB) || ((false => USB_SL8truetrue_HCD) && (USB_SL8truetrue_HCD => false)))
((USB_SUPPORT && (USB_SL8truetrue_HCD && PCMCIA)) || ((false => USB_SL8truetrue_CS) && (USB_SL8truetrue_CS => false)))
((USB_SUPPORT && USB) || ((false => USB_R8A66597_HCD) && (USB_R8A66597_HCD => false)))
((USB_SUPPORT && (USB_R8A66597_HCD && (CPU_SUBTYPE_SH7366 || CPU_SUBTYPE_SH7723))) || ((false => SUPERH_ON_CHIP_R8A66597) && (SUPERH_ON_CHIP_R8A66597 => false)))
((USB_SUPPORT && (EXPERIMENTAL && (PCI && USB))) || ((false => USB_WHCI_HCD) && (USB_WHCI_HCD => false)))
((USB_SUPPORT && (EXPERIMENTAL && USB)) || ((false => USB_HWA_HCD) && (USB_HWA_HCD => false)))
((USB_SUPPORT && ((USB || USB_GADGET) && (HAVE_CLK && !SUPERH))) || ((false => USB_MUSB_HDRC) && (USB_MUSB_HDRC => false)))
(false || (((((true && (USB_SUPPORT && (USB_MUSB_HDRC && ARCH_DAVINCI))) || (true && (USB_SUPPORT && (USB_MUSB_HDRC && ARCH_OMAP243false)))) || (true && (USB_SUPPORT && (USB_MUSB_HDRC && ARCH_OMAP34XX)))) => USB_MUSB_SOC) && (USB_MUSB_SOC => (((true && (USB_SUPPORT && (USB_MUSB_HDRC && ARCH_DAVINCI))) || (true && (USB_SUPPORT && (USB_MUSB_HDRC && ARCH_OMAP243false)))) || (true && (USB_SUPPORT && (USB_MUSB_HDRC && ARCH_OMAP34XX)))))))
((USB_SUPPORT && (USB_MUSB_HDRC && !USB_MUSB_SOC)) || (((true && (USB_SUPPORT && (USB_MUSB_HDRC && !USB_MUSB_SOC))) => USB_TUSB6falsetruefalse) && (USB_TUSB6falsetruefalse => (true && (USB_SUPPORT && (USB_MUSB_HDRC && !USB_MUSB_SOC))))))
((true && USB) || ((false => USB_MUSB_HOST) && (USB_MUSB_HOST => false)))
((true && USB_GADGET) || ((false => USB_MUSB_PERIPHERAL) && (USB_MUSB_PERIPHERAL => false)))
((true && (USB && (USB_GADGET && (PM && EXPERIMENTAL)))) || ((false => USB_MUSB_OTG) && (USB_MUSB_OTG => false)))
((true && (USB_MUSB_HDRC && (USB_MUSB_PERIPHERAL || USB_MUSB_OTG))) || ((((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_PERIPHERAL && (true && USB_GADGET))) => USB_GADGET_MUSB_HDRC) && (USB_GADGET_MUSB_HDRC => ((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_PERIPHERAL && (true && USB_GADGET))))))
(false || (((true && (USB_SUPPORT && (USB_MUSB_HDRC && (USB_MUSB_HOST || USB_MUSB_OTG)))) => USB_MUSB_HDRC_HCD) && (USB_MUSB_HDRC_HCD => (true && (USB_SUPPORT && (USB_MUSB_HDRC && (USB_MUSB_HOST || USB_MUSB_OTG)))))))
((USB_SUPPORT && USB_MUSB_HDRC) || (((true && (USB_SUPPORT && (USB_MUSB_HDRC && USB_TUSB6falsetruefalse))) => MUSB_PIO_ONLY) && (MUSB_PIO_ONLY => (true && (USB_SUPPORT && (USB_MUSB_HDRC && USB_TUSB6falsetruefalse))))))
(false || (((true && ((USB_SUPPORT && (USB_MUSB_HDRC && !MUSB_PIO_ONLY)) && (ARCH_OMAP243false || ARCH_OMAP34XX))) => USB_INVENTRA_DMA) && (USB_INVENTRA_DMA => (true && ((USB_SUPPORT && (USB_MUSB_HDRC && !MUSB_PIO_ONLY)) && (ARCH_OMAP243false || ARCH_OMAP34XX))))))
(false || (((true && ((USB_SUPPORT && (USB_MUSB_HDRC && !MUSB_PIO_ONLY)) && ARCH_DAVINCI)) => USB_TI_CPPI_DMA) && (USB_TI_CPPI_DMA => (true && ((USB_SUPPORT && (USB_MUSB_HDRC && !MUSB_PIO_ONLY)) && ARCH_DAVINCI)))))
(false || (((true && (USB_SUPPORT && (USB_MUSB_HDRC && (!MUSB_PIO_ONLY && (USB_TUSB6falsetruefalse && ARCH_OMAP))))) => USB_TUSB_OMAP_DMA) && (USB_TUSB_OMAP_DMA => (true && (USB_SUPPORT && (USB_MUSB_HDRC && (!MUSB_PIO_ONLY && (USB_TUSB6falsetruefalse && ARCH_OMAP))))))))
((USB_SUPPORT && USB_MUSB_HDRC) || ((false => USB_MUSB_DEBUG) && (USB_MUSB_DEBUG => false)))
((USB_SUPPORT && USB) || ((false => USB_ACM) && (USB_ACM => false)))
((USB_SUPPORT && USB) || ((false => USB_PRINTER) && (USB_PRINTER => false)))
((USB_SUPPORT && USB) || ((false => USB_WDM) && (USB_WDM => false)))
((USB_SUPPORT && USB) || ((false => USB_TMC) && (USB_TMC => false)))
((USB_SUPPORT && (USB && SCSI)) || ((false => USB_STORAGE) && (USB_STORAGE => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_DEBUG) && (USB_STORAGE_DEBUG => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_DATAFAB) && (USB_STORAGE_DATAFAB => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_FREECOM) && (USB_STORAGE_FREECOM => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_ISD2falsefalse) && (USB_STORAGE_ISD2falsefalse => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_DPCM) && (USB_STORAGE_DPCM => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_USBAT) && (USB_STORAGE_USBAT => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_SDDRfalse9) && (USB_STORAGE_SDDRfalse9 => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_SDDR55) && (USB_STORAGE_SDDR55 => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_JUMPSHOT) && (USB_STORAGE_JUMPSHOT => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_ALAUDA) && (USB_STORAGE_ALAUDA => false)))
((USB_SUPPORT && (USB_STORAGE && (INPUT || INPUT))) || ((false => USB_STORAGE_ONETOUCH) && (USB_STORAGE_ONETOUCH => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_KARMA) && (USB_STORAGE_KARMA => false)))
((USB_SUPPORT && USB_STORAGE) || ((false => USB_STORAGE_CYPRESS_ATACB) && (USB_STORAGE_CYPRESS_ATACB => false)))
((USB_SUPPORT && USB) || ((false => USB_LIBUSUAL) && (USB_LIBUSUAL => false)))
((USB_SUPPORT && USB) || ((false => USB_MDC8falsefalse) && (USB_MDC8falsefalse => false)))
((USB_SUPPORT && (USB && SCSI)) || ((false => USB_MICROTEK) && (USB_MICROTEK => false)))
((USB_SUPPORT && (USB && PARPORT)) || ((false => USB_USS72false) && (USB_USS72false => false)))
((USB_SUPPORT && USB) || ((false => USB_SERIAL) && (USB_SERIAL => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_CONSOLE) && (USB_SERIAL_CONSOLE => false)))
((USB_SUPPORT && USB_SERIAL) || ((((((USB_SERIAL_XIRCOM && (USB_SUPPORT && USB_SERIAL)) || (USB_SERIAL_WHITEHEAT && (USB_SUPPORT && USB_SERIAL))) || (USB_SERIAL_KEYSPAN && (USB_SUPPORT && USB_SERIAL))) || (USB_SERIAL_KEYSPAN_PDA && (USB_SUPPORT && USB_SERIAL))) => USB_EZUSB) && (USB_EZUSB => ((((USB_SERIAL_XIRCOM && (USB_SUPPORT && USB_SERIAL)) || (USB_SERIAL_WHITEHEAT && (USB_SUPPORT && USB_SERIAL))) || (USB_SERIAL_KEYSPAN && (USB_SUPPORT && USB_SERIAL))) || (USB_SERIAL_KEYSPAN_PDA && (USB_SUPPORT && USB_SERIAL))))))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_GENERIC) && (USB_SERIAL_GENERIC => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_AIRCABLE) && (USB_SERIAL_AIRCABLE => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_ARK3truetrue6) && (USB_SERIAL_ARK3truetrue6 => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_BELKIN) && (USB_SERIAL_BELKIN => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_CH34true) && (USB_SERIAL_CH34true => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_WHITEHEAT) && (USB_SERIAL_WHITEHEAT => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_DIGI_ACCELEPORT) && (USB_SERIAL_DIGI_ACCELEPORT => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_CP2truefalsetrue) && (USB_SERIAL_CP2truefalsetrue => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_CYPRESS_M8) && (USB_SERIAL_CYPRESS_M8 => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_EMPEG) && (USB_SERIAL_EMPEG => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_FTDI_SIO) && (USB_SERIAL_FTDI_SIO => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_FUNSOFT) && (USB_SERIAL_FUNSOFT => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_VISOR) && (USB_SERIAL_VISOR => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_IPAQ) && (USB_SERIAL_IPAQ => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_IR) && (USB_SERIAL_IR => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_EDGEPORT) && (USB_SERIAL_EDGEPORT => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_EDGEPORT_TI) && (USB_SERIAL_EDGEPORT_TI => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_GARMIN) && (USB_SERIAL_GARMIN => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_IPW) && (USB_SERIAL_IPW => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_IUU) && (USB_SERIAL_IUU => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_KEYSPAN_PDA) && (USB_SERIAL_KEYSPAN_PDA => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_KEYSPAN) && (USB_SERIAL_KEYSPAN => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_MPR) && (USB_SERIAL_KEYSPAN_MPR => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USA28) && (USB_SERIAL_KEYSPAN_USA28 => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USA28X) && (USB_SERIAL_KEYSPAN_USA28X => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USA28XA) && (USB_SERIAL_KEYSPAN_USA28XA => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USA28XB) && (USB_SERIAL_KEYSPAN_USA28XB => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USAtrue9) && (USB_SERIAL_KEYSPAN_USAtrue9 => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USAtrue8X) && (USB_SERIAL_KEYSPAN_USAtrue8X => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USAtrue9W) && (USB_SERIAL_KEYSPAN_USAtrue9W => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USAtrue9QW) && (USB_SERIAL_KEYSPAN_USAtrue9QW => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USAtrue9QI) && (USB_SERIAL_KEYSPAN_USAtrue9QI => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USA49W) && (USB_SERIAL_KEYSPAN_USA49W => false)))
((USB_SUPPORT && (USB_SERIAL && (USB_SERIAL_KEYSPAN && FIRMWARE_IN_KERNEL))) || ((false => USB_SERIAL_KEYSPAN_USA49WLC) && (USB_SERIAL_KEYSPAN_USA49WLC => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_KLSI) && (USB_SERIAL_KLSI => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_KOBIL_SCT) && (USB_SERIAL_KOBIL_SCT => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_MCT_U232) && (USB_SERIAL_MCT_U232 => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_MOS772false) && (USB_SERIAL_MOS772false => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_MOS784false) && (USB_SERIAL_MOS784false => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_MOTOROLA) && (USB_SERIAL_MOTOROLA => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_NAVMAN) && (USB_SERIAL_NAVMAN => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_PL23false3) && (USB_SERIAL_PL23false3 => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_OTI6858) && (USB_SERIAL_OTI6858 => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_SPCP8X5) && (USB_SERIAL_SPCP8X5 => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_HP4X) && (USB_SERIAL_HP4X => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_SAFE) && (USB_SERIAL_SAFE => false)))
((USB_SUPPORT && (USB_SERIAL && USB_SERIAL_SAFE)) || ((false => USB_SERIAL_SAFE_PADDED) && (USB_SERIAL_SAFE_PADDED => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_SIERRAWIRELESS) && (USB_SERIAL_SIERRAWIRELESS => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_TI) && (USB_SERIAL_TI => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_CYBERJACK) && (USB_SERIAL_CYBERJACK => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_XIRCOM) && (USB_SERIAL_XIRCOM => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_OPTION) && (USB_SERIAL_OPTION => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_OMNINET) && (USB_SERIAL_OMNINET => false)))
((USB_SUPPORT && USB_SERIAL) || ((false => USB_SERIAL_DEBUG) && (USB_SERIAL_DEBUG => false)))
((USB_SUPPORT && USB) || ((false => USB_EMI62) && (USB_EMI62 => false)))
((USB_SUPPORT && USB) || ((false => USB_EMI26) && (USB_EMI26 => false)))
((USB_SUPPORT && USB) || ((false => USB_ADUTUX) && (USB_ADUTUX => false)))
((USB_SUPPORT && USB) || ((false => USB_SEVSEG) && (USB_SEVSEG => false)))
((USB_SUPPORT && USB) || ((false => USB_RIO5falsefalse) && (USB_RIO5falsefalse => false)))
((USB_SUPPORT && USB) || ((false => USB_LEGOTOWER) && (USB_LEGOTOWER => false)))
((USB_SUPPORT && USB) || ((false => USB_LCD) && (USB_LCD => false)))
((USB_SUPPORT && USB) || ((false => USB_BERRY_CHARGE) && (USB_BERRY_CHARGE => false)))
((USB_SUPPORT && USB) || ((false => USB_LED) && (USB_LED => false)))
((USB_SUPPORT && USB) || ((false => USB_CYPRESS_CY7C63) && (USB_CYPRESS_CY7C63 => false)))
((USB_SUPPORT && USB) || ((false => USB_CYTHERM) && (USB_CYTHERM => false)))
((USB_SUPPORT && USB) || ((false => USB_PHIDGET) && (USB_PHIDGET => false)))
((USB_SUPPORT && USB_PHIDGET) || ((false => USB_PHIDGETKIT) && (USB_PHIDGETKIT => false)))
((USB_SUPPORT && USB_PHIDGET) || ((false => USB_PHIDGETMOTORCONTROL) && (USB_PHIDGETMOTORCONTROL => false)))
((USB_SUPPORT && USB_PHIDGET) || ((false => USB_PHIDGETSERVO) && (USB_PHIDGETSERVO => false)))
((USB_SUPPORT && USB) || ((false => USB_IDMOUSE) && (USB_IDMOUSE => false)))
((USB_SUPPORT && USB) || (((true && (USB_SUPPORT && USB)) => USB_FTDI_ELAN) && (USB_FTDI_ELAN => (true && (USB_SUPPORT && USB)))))
((USB_SUPPORT && USB) || ((false => USB_APPLEDISPLAY) && (USB_APPLEDISPLAY => false)))
((USB_SUPPORT && (USB && USB_EHCI_HCD)) || ((false => USB_SISUSBVGA) && (USB_SISUSBVGA => false)))
((USB_SUPPORT && (VT && USB_SISUSBVGA)) || ((false => USB_SISUSBVGA_CON) && (USB_SISUSBVGA_CON => false)))
((USB_SUPPORT && USB) || ((false => USB_LD) && (USB_LD => false)))
((USB_SUPPORT && USB) || ((false => USB_TRANCEVIBRATOR) && (USB_TRANCEVIBRATOR => false)))
((USB_SUPPORT && USB) || ((false => USB_IOWARRIOR) && (USB_IOWARRIOR => false)))
((USB_SUPPORT && (USB && USB_DEVICEFS)) || ((false => USB_TEST) && (USB_TEST => false)))
((USB_SUPPORT && USB) || ((false => USB_ISIGHTFW) && (USB_ISIGHTFW => false)))
((USB_SUPPORT && USB) || ((false => USB_VST) && (USB_VST => false)))
((USB_SUPPORT && (USB && ATM)) || ((false => USB_ATM) && (USB_ATM => false)))
((USB_SUPPORT && USB_ATM) || ((false => USB_SPEEDTOUCH) && (USB_SPEEDTOUCH => false)))
((USB_SUPPORT && USB_ATM) || ((false => USB_CXACRU) && (USB_CXACRU => false)))
((USB_SUPPORT && USB_ATM) || ((false => USB_UEAGLEATM) && (USB_UEAGLEATM => false)))
((USB_SUPPORT && USB_ATM) || ((false => USB_XUSBATM) && (USB_XUSBATM => false)))
(USB_SUPPORT || ((false => USB_GADGET) && (USB_GADGET => false)))
((USB_SUPPORT && (USB_GADGET && DEBUG_KERNEL)) || ((false => USB_GADGET_DEBUG) && (USB_GADGET_DEBUG => false)))
((USB_SUPPORT && (USB_GADGET && PROC_FS)) || ((false => USB_GADGET_DEBUG_FILES) && (USB_GADGET_DEBUG_FILES => false)))
((USB_SUPPORT && (USB_GADGET && DEBUG_FS)) || ((false => USB_GADGET_DEBUG_FS) && (USB_GADGET_DEBUG_FS => false)))
((USB_SUPPORT && USB_GADGET) || (((true && (USB_SUPPORT && USB_GADGET)) => USB_GADGET_VBUS_DRAW) && (USB_GADGET_VBUS_DRAW => (true && (USB_SUPPORT && USB_GADGET)))))
(false || ((((((((((((((((x9false9 || x9truefalse) || x9truetrue) || x9true2) || x9true3) || x9true4) || x9true5) || x9true6) || x9true7) || x9true8) || x9true9) || x92false) || x92true) || x922) || x923) => USB_GADGET_SELECTED) && (USB_GADGET_SELECTED => ((((((((((((((x9false9 || x9truefalse) || x9truetrue) || x9true2) || x9true3) || x9true4) || x9true5) || x9true6) || x9true7) || x9true8) || x9true9) || x92false) || x92true) || x922) || x923))))
(x9false9 <=> (USB_FSL_QE && (true && USB_GADGET_FSL_QE)))
(x9truefalse <=> (USB_GADGET_AT9true && (true && (ARCH_AT9true && (!ARCH_AT9trueSAM9RL && !ARCH_AT9trueCAP9)))))
(x9truetrue <=> (USB_AMD5536UDC && (true && USB_GADGET_AMD5536UDC)))
(x9true2 <=> (USB_S3C24truefalse && (true && USB_GADGET_S3C24truefalse)))
(x9true3 <=> (USB_M66592 && (true && USB_GADGET_M66592)))
(x9true4 <=> (USB_OMAP && (true && USB_GADGET_OMAP)))
(x9true5 <=> (USB_GOKU && (true && USB_GADGET_GOKU)))
(x9true6 <=> (USB_ATMEL_USBA && (true && USB_GADGET_ATMEL_USBA)))
(x9true7 <=> (USB_GADGET_MUSB_HDRC && (true && (USB_MUSB_HDRC && (USB_MUSB_PERIPHERAL || USB_MUSB_OTG)))))
(x9true8 <=> (USB_LH7A4falseX && (true && USB_GADGET_LH7A4falseX)))
(x9true9 <=> (USB_NET228false && (true && USB_GADGET_NET228false)))
(x92false <=> (USB_FSL_USB2 && (true && USB_GADGET_FSL_USB2)))
(x92true <=> (USB_DUMMY_HCD && (true && USB_GADGET_DUMMY_HCD)))
(x922 <=> (USB_PXA25X && (true && USB_GADGET_PXA25X)))
(x923 <=> (USB_PXA27X && (true && USB_GADGET_PXA27X)))
((true && (ARCH_AT9true && (!ARCH_AT9trueSAM9RL && !ARCH_AT9trueCAP9))) || ((false => USB_GADGET_AT9true) && (USB_GADGET_AT9true => false)))
(false || (((true && ((true && USB_GADGET_AT9true) && USB_GADGET)) => USB_AT9true) && (USB_AT9true => (true && ((true && USB_GADGET_AT9true) && USB_GADGET)))))
((true && (AVR32 || (ARCH_AT9trueCAP9 || ARCH_AT9trueSAM9RL))) || ((false => USB_GADGET_ATMEL_USBA) && (USB_GADGET_ATMEL_USBA => false)))
(false || (((true && ((true && USB_GADGET_ATMEL_USBA) && USB_GADGET)) => USB_ATMEL_USBA) && (USB_ATMEL_USBA => (true && ((true && USB_GADGET_ATMEL_USBA) && USB_GADGET)))))
((true && FSL_SOC) || ((false => USB_GADGET_FSL_USB2) && (USB_GADGET_FSL_USB2 => false)))
(false || (((true && ((true && USB_GADGET_FSL_USB2) && USB_GADGET)) => USB_FSL_USB2) && (USB_FSL_USB2 => (true && ((true && USB_GADGET_FSL_USB2) && USB_GADGET)))))
((true && ARCH_LH7A4falseX) || ((false => USB_GADGET_LH7A4falseX) && (USB_GADGET_LH7A4falseX => false)))
(false || (((true && ((true && USB_GADGET_LH7A4falseX) && USB_GADGET)) => USB_LH7A4falseX) && (USB_LH7A4falseX => (true && ((true && USB_GADGET_LH7A4falseX) && USB_GADGET)))))
((true && ARCH_OMAP) || ((false => USB_GADGET_OMAP) && (USB_GADGET_OMAP => false)))
(false || (((true && ((true && USB_GADGET_OMAP) && USB_GADGET)) => USB_OMAP) && (USB_OMAP => (true && ((true && USB_GADGET_OMAP) && USB_GADGET)))))
((true && (USB_GADGET_OMAP && (ARCH_OMAP_OTG && USB_OHCI_HCD))) || ((((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_HDRC_HCD && (USB_SUPPORT && (USB_MUSB_HDRC && ((USB_MUSB_HOST || USB_MUSB_OTG) && USB_GADGET_MUSB_HDRC))))) => USB_OTG) && (USB_OTG => ((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_HDRC_HCD && (USB_SUPPORT && (USB_MUSB_HDRC && ((USB_MUSB_HOST || USB_MUSB_OTG) && USB_GADGET_MUSB_HDRC))))))))
((true && ((ARCH_PXA && PXA25x) || ARCH_IXP4XX)) || ((false => USB_GADGET_PXA25X) && (USB_GADGET_PXA25X => false)))
(false || (((true && ((true && USB_GADGET_PXA25X) && USB_GADGET)) => USB_PXA25X) && (USB_PXA25X => (true && ((true && USB_GADGET_PXA25X) && USB_GADGET)))))
(false || (((((((true && !(true && (USB_GADGET_PXA25X && USB_ETH_RNDIS))) && !true) && (true && (USB_GADGET_PXA25X && USB_ZERO))) || (((true && !(true && (USB_GADGET_PXA25X && USB_ETH_RNDIS))) && !true) && (true && (USB_GADGET_PXA25X && USB_ETH)))) || (((true && !(true && (USB_GADGET_PXA25X && USB_ETH_RNDIS))) && !true) && (true && (USB_GADGET_PXA25X && USB_G_SERIAL)))) => USB_PXA25X_SMALL) && (USB_PXA25X_SMALL => (((((true && !(true && (USB_GADGET_PXA25X && USB_ETH_RNDIS))) && !true) && (true && (USB_GADGET_PXA25X && USB_ZERO))) || (((true && !(true && (USB_GADGET_PXA25X && USB_ETH_RNDIS))) && !true) && (true && (USB_GADGET_PXA25X && USB_ETH)))) || (((true && !(true && (USB_GADGET_PXA25X && USB_ETH_RNDIS))) && !true) && (true && (USB_GADGET_PXA25X && USB_G_SERIAL)))))))
((true && (ARCH_PXA && PXA27x)) || ((false => USB_GADGET_PXA27X) && (USB_GADGET_PXA27X => false)))
(false || (((true && ((true && USB_GADGET_PXA27X) && USB_GADGET)) => USB_PXA27X) && (USB_PXA27X => (true && ((true && USB_GADGET_PXA27X) && USB_GADGET)))))
((true && ARCH_S3C24truefalse) || ((false => USB_GADGET_S3C24truefalse) && (USB_GADGET_S3C24truefalse => false)))
(false || (((true && ((true && USB_GADGET_S3C24truefalse) && USB_GADGET)) => USB_S3C24truefalse) && (USB_S3C24truefalse => (true && ((true && USB_GADGET_S3C24truefalse) && USB_GADGET)))))
((true && USB_GADGET_S3C24truefalse) || ((false => USB_S3C24truefalse_DEBUG) && (USB_S3C24truefalse_DEBUG => false)))
((true && (USB_MUSB_HDRC && (USB_MUSB_PERIPHERAL || USB_MUSB_OTG))) || ((((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_PERIPHERAL && (true && USB_GADGET))) => USB_GADGET_MUSB_HDRC) && (USB_GADGET_MUSB_HDRC => ((USB_MUSB_OTG && (true && (USB && (USB_GADGET && (PM && EXPERIMENTAL))))) || (USB_MUSB_PERIPHERAL && (true && USB_GADGET))))))
(true || ((false => USB_GADGET_M66592) && (USB_GADGET_M66592 => false)))
(false || (((true && ((true && USB_GADGET_M66592) && USB_GADGET)) => USB_M66592) && (USB_M66592 => (true && ((true && USB_GADGET_M66592) && USB_GADGET)))))
((true && (USB_GADGET_M66592 && CPU_SUBTYPE_SH7722)) || ((false => SUPERH_BUILT_IN_M66592) && (SUPERH_BUILT_IN_M66592 => false)))
((true && PCI) || ((false => USB_GADGET_AMD5536UDC) && (USB_GADGET_AMD5536UDC => false)))
(false || (((true && ((true && USB_GADGET_AMD5536UDC) && USB_GADGET)) => USB_AMD5536UDC) && (USB_AMD5536UDC => (true && ((true && USB_GADGET_AMD5536UDC) && USB_GADGET)))))
((true && (FSL_SOC && (QUICC_ENGINE || CPM))) || ((false => USB_GADGET_FSL_QE) && (USB_GADGET_FSL_QE => false)))
(false || (((true && ((true && USB_GADGET_FSL_QE) && USB_GADGET)) => USB_FSL_QE) && (USB_FSL_QE => (true && ((true && USB_GADGET_FSL_QE) && USB_GADGET)))))
((true && PCI) || ((false => USB_GADGET_NET228false) && (USB_GADGET_NET228false => false)))
(false || (((true && ((true && USB_GADGET_NET228false) && USB_GADGET)) => USB_NET228false) && (USB_NET228false => (true && ((true && USB_GADGET_NET228false) && USB_GADGET)))))
((true && PCI) || ((false => USB_GADGET_GOKU) && (USB_GADGET_GOKU => false)))
(false || (((true && ((true && USB_GADGET_GOKU) && USB_GADGET)) => USB_GOKU) && (USB_GOKU => (true && ((true && USB_GADGET_GOKU) && USB_GADGET)))))
((true && (USB || (USB && USB_GADGET))) || ((false => USB_GADGET_DUMMY_HCD) && (USB_GADGET_DUMMY_HCD => false)))
(false || (((true && ((true && USB_GADGET_DUMMY_HCD) && USB_GADGET)) => USB_DUMMY_HCD) && (USB_DUMMY_HCD => (true && ((true && USB_GADGET_DUMMY_HCD) && USB_GADGET)))))
(false || ((((((((x924 || x9true7) || x925) || x926) || x927) || x928) || x929) => USB_GADGET_DUALSPEED) && (USB_GADGET_DUALSPEED => ((((((x924 || x9true7) || x925) || x926) || x927) || x928) || x929))))
(x924 <=> (USB_GADGET_M66592 && true))
(x9true7 <=> (USB_GADGET_MUSB_HDRC && (true && (USB_MUSB_HDRC && (USB_MUSB_PERIPHERAL || USB_MUSB_OTG)))))
(x925 <=> (USB_GADGET_ATMEL_USBA && (true && (AVR32 || (ARCH_AT9trueCAP9 || ARCH_AT9trueSAM9RL)))))
(x926 <=> (USB_GADGET_FSL_USB2 && (true && FSL_SOC)))
(x927 <=> (USB_GADGET_NET228false && (true && PCI)))
(x928 <=> (USB_GADGET_DUMMY_HCD && (true && (USB || (USB && USB_GADGET)))))
(x929 <=> (USB_GADGET_AMD5536UDC && (true && PCI)))
(true || ((false => USB_ZERO) && (USB_ZERO => false)))
((true && (USB_ZERO && USB_OTG)) || ((false => USB_ZERO_HNPTEST) && (USB_ZERO_HNPTEST => false)))
((true && NET) || ((false => USB_ETH) && (USB_ETH => false)))
((true && USB_ETH) || (((true && (true && USB_ETH)) => USB_ETH_RNDIS) && (USB_ETH_RNDIS => (true && (true && USB_ETH)))))
((true && EXPERIMENTAL) || ((false => USB_GADGETFS) && (USB_GADGETFS => false)))
((true && BLOCK) || ((false => USB_FILE_STORAGE) && (USB_FILE_STORAGE => false)))
((true && USB_FILE_STORAGE) || ((false => USB_FILE_STORAGE_TEST) && (USB_FILE_STORAGE_TEST => false)))
(true || ((false => USB_G_SERIAL) && (USB_G_SERIAL => false)))
((true && (SND && EXPERIMENTAL)) || ((false => USB_MIDI_GADGET) && (USB_MIDI_GADGET => false)))
(true || ((false => USB_G_PRINTER) && (USB_G_PRINTER => false)))
((true && NET) || ((false => USB_CDC_COMPOSITE) && (USB_CDC_COMPOSITE => false)))
((EXPERIMENTAL && PCI) || (((USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))) => UWB) && (UWB => (USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))))))
((UWB && USB) || (((USB_HWA_HCD && (USB_SUPPORT && (EXPERIMENTAL && USB))) => UWB_HWA) && (UWB_HWA => (USB_HWA_HCD && (USB_SUPPORT && (EXPERIMENTAL && USB))))))
((UWB && PCI) || (((USB_WHCI_HCD && (USB_SUPPORT && (EXPERIMENTAL && (PCI && USB)))) => UWB_WHCI) && (UWB_WHCI => (USB_WHCI_HCD && (USB_SUPPORT && (EXPERIMENTAL && (PCI && USB)))))))
((UWB && NET) || ((false => UWB_WLP) && (UWB_WLP => false)))
((UWB && UWB_HWA) || ((false => UWB_Itrue48falseU) && (UWB_Itrue48falseU => false)))
((UWB && (UWB_Itrue48falseU && (UWB_WLP && NET))) || ((false => UWB_Itrue48falseU_WLP) && (UWB_Itrue48falseU_WLP => false)))
(HAS_IOMEM || ((false => MMC) && (MMC => false)))
(MMC || ((false => MMC_DEBUG) && (MMC_DEBUG => false)))
(MMC || ((false => MMC_UNSAFE_RESUME) && (MMC_UNSAFE_RESUME => false)))
((MMC && BLOCK) || (((true && (MMC && BLOCK)) => MMC_BLOCK) && (MMC_BLOCK => (true && (MMC && BLOCK)))))
((MMC && MMC_BLOCK) || (((true && (MMC && MMC_BLOCK)) => MMC_BLOCK_BOUNCE) && (MMC_BLOCK_BOUNCE => (true && (MMC && MMC_BLOCK)))))
(MMC || ((false => SDIO_UART) && (SDIO_UART => false)))
(MMC || ((false => MMC_TEST) && (MMC_TEST => false)))
((MMC && ARM_AMBA) || ((false => MMC_ARMMMCI) && (MMC_ARMMMCI => false)))
((MMC && ARCH_PXA) || ((false => MMC_PXA) && (MMC_PXA => false)))
((MMC && HAS_DMA) || ((false => MMC_SDHCI) && (MMC_SDHCI => false)))
((MMC && (MMC_SDHCI && PCI)) || ((false => MMC_SDHCI_PCI) && (MMC_SDHCI_PCI => false)))
((MMC && MMC_SDHCI_PCI) || ((false => MMC_RICOH_MMC) && (MMC_RICOH_MMC => false)))
((MMC && ARCH_OMAP) || ((false => MMC_OMAP) && (MMC_OMAP => false)))
((MMC && ISA_DMA_API) || ((false => MMC_WBSD) && (MMC_WBSD => false)))
((MMC && SOC_AUtrue2falsefalse) || ((false => MMC_AUtrueX) && (MMC_AUtrueX => false)))
((MMC && ARCH_AT9true) || ((false => MMC_AT9true) && (MMC_AT9true => false)))
((MMC && AVR32) || ((false => MMC_ATMELMCI) && (MMC_ATMELMCI => false)))
((MMC && (MMC_ATMELMCI && (DMA_ENGINE && EXPERIMENTAL))) || ((false => MMC_ATMELMCI_DMA) && (MMC_ATMELMCI_DMA => false)))
((MMC && ARCH_IMX) || ((false => MMC_IMX) && (MMC_IMX => false)))
((MMC && (EXPERIMENTAL && PCI)) || ((false => MMC_TIFM_SD) && (MMC_TIFM_SD => false)))
((MMC && (SPI_MASTER && (!HIGHMEM && HAS_DMA))) || ((false => MMC_SPI) && (MMC_SPI => false)))
((MMC && ARCH_S3C24truefalse) || ((false => MMC_S3C) && (MMC_S3C => false)))
((MMC && (EXPERIMENTAL && (PCI && PCMCIA))) || ((false => MMC_SDRICOH_CS) && (MMC_SDRICOH_CS => false)))
((MMC && MFD_TMIO) || ((false => MMC_TMIO) && (MMC_TMIO => false)))
(true || ((false => MEMSTICK) && (MEMSTICK => false)))
(MEMSTICK || ((false => MEMSTICK_DEBUG) && (MEMSTICK_DEBUG => false)))
(MEMSTICK || ((false => MEMSTICK_UNSAFE_RESUME) && (MEMSTICK_UNSAFE_RESUME => false)))
((MEMSTICK && BLOCK) || ((false => MSPRO_BLOCK) && (MSPRO_BLOCK => false)))
((MEMSTICK && (EXPERIMENTAL && PCI)) || ((false => MEMSTICK_TIFM_MS) && (MEMSTICK_TIFM_MS => false)))
((MEMSTICK && (EXPERIMENTAL && PCI)) || ((false => MEMSTICK_JMICRON_38X) && (MEMSTICK_JMICRON_38X => false)))
(true || ((((((((x337 || x736) || x34false) || x93false) || x93true) || x932) || x933) => NEW_LEDS) && (NEW_LEDS => ((((((x337 || x736) || x34false) || x93false) || x93true) || x932) || x933))))
(x337 <=> (SENSORS_APPLESMC && (HWMON && (INPUT && X86))))
(x736 <=> (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))))
(x34false <=> (INPUT_WISTRON_BTNS && (!S39false && (INPUT && (INPUT_MISC && (X86 && !X86_64))))))
(x93false <=> (MAC8false2truetrue_LEDS && (NET && (WIRELESS && MAC8false2truetrue))))
(x93true <=> (ATH9K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && WLAN_8false2truetrue))))))
(x932 <=> (ATH5K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(x933 <=> (ADB_PMU_LED && (MACINTOSH_DRIVERS && ADB_PMU)))
(NEW_LEDS || (((((((((x337 || x736) || x34false) || x93true) || x934) || x932) || x935) || x933) => LEDS_CLASS) && (LEDS_CLASS => (((((((x337 || x736) || x34false) || x93true) || x934) || x932) || x935) || x933))))
(x337 <=> (SENSORS_APPLESMC && (HWMON && (INPUT && X86))))
(x736 <=> (THINKPAD_ACPI && (MISC_DEVICES && (X86 && ACPI))))
(x34false <=> (INPUT_WISTRON_BTNS && (!S39false && (INPUT && (INPUT_MISC && (X86 && !X86_64))))))
(x93true <=> (ATH9K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && WLAN_8false2truetrue))))))
(x934 <=> (IWL3945 && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWL3945_LEDS))))))))
(x932 <=> (ATH5K && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(x935 <=> (IWLCORE && (NETDEVICES && (!S39false && (PCI && (MAC8false2truetrue && (WLAN_8false2truetrue && (EXPERIMENTAL && IWLWIFI_LEDS))))))))
(x933 <=> (ADB_PMU_LED && (MACINTOSH_DRIVERS && ADB_PMU)))
((NEW_LEDS && (LEDS_CLASS && ATMEL_PWM)) || ((false => LEDS_ATMEL_PWM) && (LEDS_ATMEL_PWM => false)))
((NEW_LEDS && (LEDS_CLASS && SHARP_LOCOMO)) || ((false => LEDS_LOCOMO) && (LEDS_LOCOMO => false)))
((NEW_LEDS && (LEDS_CLASS && ARCH_S3C24truefalse)) || ((false => LEDS_S3C24XX) && (LEDS_S3C24XX => false)))
((NEW_LEDS && (LEDS_CLASS && MACH_AMS_DELTA)) || ((false => LEDS_AMS_DELTA) && (LEDS_AMS_DELTA => false)))
((NEW_LEDS && (LEDS_CLASS && SCx2falsefalse_GPIO)) || ((false => LEDS_NET48XX) && (LEDS_NET48XX => false)))
((NEW_LEDS && (LEDS_CLASS && MACH_FSG)) || ((false => LEDS_FSG) && (LEDS_FSG => false)))
((NEW_LEDS && (LEDS_CLASS && SCx2falsefalse_GPIO)) || ((false => LEDS_WRAP) && (LEDS_WRAP => false)))
((NEW_LEDS && (LEDS_CLASS && ARCH_Htrue94false)) || ((false => LEDS_Htrue94false) && (LEDS_Htrue94false => false)))
((NEW_LEDS && (LEDS_CLASS && MIPS_COBALT)) || ((false => LEDS_COBALT_QUBE) && (LEDS_COBALT_QUBE => false)))
((NEW_LEDS && (LEDS_CLASS && MIPS_COBALT)) || ((false => LEDS_COBALT_RAQ) && (LEDS_COBALT_RAQ => false)))
((NEW_LEDS && (LEDS_CLASS && SPARC64)) || ((false => LEDS_SUNFIRE) && (LEDS_SUNFIRE => false)))
((NEW_LEDS && (LEDS_CLASS && SH_HP6XX)) || ((false => LEDS_HP6XX) && (LEDS_HP6XX => false)))
((NEW_LEDS && (LEDS_CLASS && (I2C && (INPUT && EXPERIMENTAL)))) || ((false => LEDS_PCA9532) && (LEDS_PCA9532 => false)))
((NEW_LEDS && (LEDS_CLASS && GENERIC_GPIO)) || ((false => LEDS_GPIO) && (LEDS_GPIO => false)))
((NEW_LEDS && (LEDS_CLASS && ACPI)) || ((false => LEDS_HP_DISK) && (LEDS_HP_DISK => false)))
((NEW_LEDS && (LEDS_CLASS && (X86 && (SERIO_I8false42 && (DMI && EXPERIMENTAL))))) || ((false => LEDS_CLEVO_MAIL) && (LEDS_CLEVO_MAIL => false)))
((NEW_LEDS && (LEDS_CLASS && I2C)) || ((false => LEDS_PCA955X) && (LEDS_PCA955X => false)))
((NEW_LEDS && (LEDS_CLASS && PMIC_DA9false3X)) || ((false => LEDS_DA9false3X) && (LEDS_DA9false3X => false)))
(NEW_LEDS || ((((((ADB_PMU_LED_IDE && (MACINTOSH_DRIVERS && ADB_PMU_LED)) || (LEDS_COBALT_RAQ && (NEW_LEDS && (LEDS_CLASS && MIPS_COBALT)))) || (LEDS_SUNFIRE && (NEW_LEDS && (LEDS_CLASS && SPARC64)))) || (MAC8false2truetrue_LEDS && (NET && (WIRELESS && MAC8false2truetrue)))) => LEDS_TRIGGERS) && (LEDS_TRIGGERS => ((((ADB_PMU_LED_IDE && (MACINTOSH_DRIVERS && ADB_PMU_LED)) || (LEDS_COBALT_RAQ && (NEW_LEDS && (LEDS_CLASS && MIPS_COBALT)))) || (LEDS_SUNFIRE && (NEW_LEDS && (LEDS_CLASS && SPARC64)))) || (MAC8false2truetrue_LEDS && (NET && (WIRELESS && MAC8false2truetrue)))))))
((NEW_LEDS && LEDS_TRIGGERS) || ((false => LEDS_TRIGGER_TIMER) && (LEDS_TRIGGER_TIMER => false)))
((NEW_LEDS && (LEDS_TRIGGERS && IDE_GD_ATA)) || (((ADB_PMU_LED_IDE && (MACINTOSH_DRIVERS && ADB_PMU_LED)) => LEDS_TRIGGER_IDE_DISK) && (LEDS_TRIGGER_IDE_DISK => (ADB_PMU_LED_IDE && (MACINTOSH_DRIVERS && ADB_PMU_LED)))))
((NEW_LEDS && LEDS_TRIGGERS) || ((false => LEDS_TRIGGER_HEARTBEAT) && (LEDS_TRIGGER_HEARTBEAT => false)))
((NEW_LEDS && LEDS_TRIGGERS) || ((false => LEDS_TRIGGER_BACKLIGHT) && (LEDS_TRIGGER_BACKLIGHT => false)))
((NEW_LEDS && LEDS_TRIGGERS) || ((false => LEDS_TRIGGER_DEFAULT_ON) && (LEDS_TRIGGER_DEFAULT_ON => false)))
(true || ((false => ACCESSIBILITY) && (ACCESSIBILITY => false)))
((ACCESSIBILITY && (VT && SERIAL_CORE_CONSOLE)) || ((false => AtruetrueY_BRAILLE_CONSOLE) && (AtruetrueY_BRAILLE_CONSOLE => false)))
(((PCI || BROKEN) && HAS_IOMEM) || ((false => INFINIBAND) && (INFINIBAND => false)))
(INFINIBAND || ((false => INFINIBAND_USER_MAD) && (INFINIBAND_USER_MAD => false)))
(INFINIBAND || ((false => INFINIBAND_USER_ACCESS) && (INFINIBAND_USER_ACCESS => false)))
(false || (((true && (INFINIBAND && INFINIBAND_USER_ACCESS)) => INFINIBAND_USER_MEM) && (INFINIBAND_USER_MEM => (true && (INFINIBAND && INFINIBAND_USER_ACCESS)))))
(false || (((true && (INFINIBAND && INET)) => INFINIBAND_ADDR_TRANS) && (INFINIBAND_ADDR_TRANS => (true && (INFINIBAND && INET)))))
((INFINIBAND && PCI) || ((false => INFINIBAND_MTHCA) && (INFINIBAND_MTHCA => false)))
((INFINIBAND && (INFINIBAND_MTHCA && EMBEDDED)) || (((true && (INFINIBAND && INFINIBAND_MTHCA)) => INFINIBAND_MTHCA_DEBUG) && (INFINIBAND_MTHCA_DEBUG => (true && (INFINIBAND && INFINIBAND_MTHCA)))))
((INFINIBAND && (a64BIT && NET)) || ((false => INFINIBAND_IPATH) && (INFINIBAND_IPATH => false)))
((INFINIBAND && IBMEBUS) || ((false => INFINIBAND_EHCA) && (INFINIBAND_EHCA => false)))
((INFINIBAND && (PCI && INET)) || ((false => INFINIBAND_AMSOtruetruefalsefalse) && (INFINIBAND_AMSOtruetruefalsefalse => false)))
((INFINIBAND && INFINIBAND_AMSOtruetruefalsefalse) || ((false => INFINIBAND_AMSOtruetruefalsefalse_DEBUG) && (INFINIBAND_AMSOtruetruefalsefalse_DEBUG => false)))
((INFINIBAND && (CHELSIO_T3 && INET)) || ((false => INFINIBAND_CXGB3) && (INFINIBAND_CXGB3 => false)))
((INFINIBAND && INFINIBAND_CXGB3) || ((false => INFINIBAND_CXGB3_DEBUG) && (INFINIBAND_CXGB3_DEBUG => false)))
(INFINIBAND || ((false => MLX4_INFINIBAND) && (MLX4_INFINIBAND => false)))
((PCI && (INET && INFINIBAND)) || ((false => INFINIBAND_NES) && (INFINIBAND_NES => false)))
((INFINIBAND && INFINIBAND_NES) || ((false => INFINIBAND_NES_DEBUG) && (INFINIBAND_NES_DEBUG => false)))
((INFINIBAND && (NETDEVICES && (INET && (IPV6 || !IPV6)))) || ((false => INFINIBAND_IPOIB) && (INFINIBAND_IPOIB => false)))
((INFINIBAND && INFINIBAND_IPOIB) || ((false => INFINIBAND_IPOIB_CM) && (INFINIBAND_IPOIB_CM => false)))
((INFINIBAND && (INFINIBAND_IPOIB && EMBEDDED)) || (((true && (INFINIBAND && INFINIBAND_IPOIB)) => INFINIBAND_IPOIB_DEBUG) && (INFINIBAND_IPOIB_DEBUG => (true && (INFINIBAND && INFINIBAND_IPOIB)))))
((INFINIBAND && INFINIBAND_IPOIB_DEBUG) || ((false => INFINIBAND_IPOIB_DEBUG_DATA) && (INFINIBAND_IPOIB_DEBUG_DATA => false)))
((INFINIBAND && SCSI) || ((false => INFINIBAND_SRP) && (INFINIBAND_SRP => false)))
((INFINIBAND && (SCSI && INET)) || ((false => INFINIBAND_ISER) && (INFINIBAND_ISER => false)))
((HAS_IOMEM && (EXPERIMENTAL && (X86 || PPC))) || ((false => EDAC) && (EDAC => false)))
(EDAC || ((false => EDAC_DEBUG) && (EDAC_DEBUG => false)))
(EDAC || (((true && EDAC) => EDAC_MM_EDAC) && (EDAC_MM_EDAC => (true && EDAC))))
((EDAC && (EDAC_MM_EDAC && (PCI && X86_32))) || ((false => EDAC_AMD76X) && (EDAC_AMD76X => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86_32))) || ((false => EDAC_E7XXX) && (EDAC_E7XXX => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && (X86 && HOTPLUG)))) || ((false => EDAC_E752X) && (EDAC_E752X => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && (X86_32 && BROKEN)))) || ((false => EDAC_I82443BXGX) && (EDAC_I82443BXGX => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86_32))) || ((false => EDAC_I82875P) && (EDAC_I82875P => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86))) || ((false => EDAC_I82975X) && (EDAC_I82975X => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86))) || ((false => EDAC_I3falsefalsefalse) && (EDAC_I3falsefalsefalse => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86))) || ((false => EDAC_X38) && (EDAC_X38 => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86_32))) || ((false => EDAC_I8286false) && (EDAC_I8286false => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && X86_32))) || ((false => EDAC_R826falsefalse) && (EDAC_R826falsefalse => false)))
((EDAC && (EDAC_MM_EDAC && (X86 && PCI))) || ((false => EDAC_I5falsefalsefalse) && (EDAC_I5falsefalsefalse => false)))
((EDAC && (EDAC_MM_EDAC && (X86 && PCI))) || ((false => EDAC_I5truefalsefalse) && (EDAC_I5truefalsefalse => false)))
((EDAC && (EDAC_MM_EDAC && (FSL_SOC && MPC85xx))) || ((false => EDAC_MPC85XX) && (EDAC_MPC85XX => false)))
((EDAC && (EDAC_MM_EDAC && MV64X6false)) || ((false => EDAC_MV64X6false) && (EDAC_MV64X6false => false)))
((EDAC && (EDAC_MM_EDAC && (PCI && PPC_PASEMI))) || ((false => EDAC_PASEMI) && (EDAC_PASEMI => false)))
((EDAC && (EDAC_MM_EDAC && PPC_CELL_NATIVE)) || ((false => EDAC_CELL) && (EDAC_CELL => false)))
(false || (((RTC_CLASS && !S39false) => RTC_LIB) && (RTC_LIB => (RTC_CLASS && !S39false))))
(!S39false || ((false => RTC_CLASS) && (RTC_CLASS => false)))
(RTC_CLASS || (((true && RTC_CLASS) => RTC_HCTOSYS) && (RTC_HCTOSYS => (true && RTC_CLASS))))
((RTC_CLASS && RTC_HCTOSYS) || (((true && (RTC_CLASS && RTC_HCTOSYS)) => RTC_HCTOSYS_DEVICE) && (RTC_HCTOSYS_DEVICE => (true && (RTC_CLASS && RTC_HCTOSYS)))))
(RTC_CLASS || ((false => RTC_DEBUG) && (RTC_DEBUG => false)))
((RTC_CLASS && SYSFS) || (((true && ((RTC_CLASS && SYSFS) && RTC_CLASS)) => RTC_INTF_SYSFS) && (RTC_INTF_SYSFS => (true && ((RTC_CLASS && SYSFS) && RTC_CLASS)))))
((RTC_CLASS && PROC_FS) || (((true && ((RTC_CLASS && PROC_FS) && RTC_CLASS)) => RTC_INTF_PROC) && (RTC_INTF_PROC => (true && ((RTC_CLASS && PROC_FS) && RTC_CLASS)))))
(RTC_CLASS || (((true && (RTC_CLASS && RTC_CLASS)) => RTC_INTF_DEV) && (RTC_INTF_DEV => (true && (RTC_CLASS && RTC_CLASS)))))
((RTC_CLASS && RTC_INTF_DEV) || ((false => RTC_INTF_DEV_UIE_EMUL) && (RTC_INTF_DEV_UIE_EMUL => false)))
(RTC_CLASS || ((false => RTC_DRV_TEST) && (RTC_DRV_TEST => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_DStrue3false7) && (RTC_DRV_DStrue3false7 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_DStrue374) && (RTC_DRV_DStrue374 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_DStrue672) && (RTC_DRV_DStrue672 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_MAX69falsefalse) && (RTC_DRV_MAX69falsefalse => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_RS5C372) && (RTC_DRV_RS5C372 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_ISLtrue2false8) && (RTC_DRV_ISLtrue2false8 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_Xtrue2false5) && (RTC_DRV_Xtrue2false5 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_PCF8563) && (RTC_DRV_PCF8563 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_PCF8583) && (RTC_DRV_PCF8583 => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_M4trueT8false) && (RTC_DRV_M4trueT8false => false)))
((RTC_CLASS && (I2C && RTC_DRV_M4trueT8false)) || ((false => RTC_DRV_M4trueT8false_WDT) && (RTC_DRV_M4trueT8false_WDT => false)))
((RTC_CLASS && (I2C && MENELAUS)) || ((false => RTC_DRV_TWL9233false) && (RTC_DRV_TWL9233false => false)))
((I2C && (RTC_CLASS && TWL4false3false_CORE)) || ((false => RTC_DRV_TWL4false3false) && (RTC_DRV_TWL4false3false => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_S3539falseA) && (RTC_DRV_S3539falseA => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_FM3true3false) && (RTC_DRV_FM3true3false => false)))
((RTC_CLASS && I2C) || ((false => RTC_DRV_RX858true) && (RTC_DRV_RX858true => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_M4trueT94) && (RTC_DRV_M4trueT94 => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_DStrue3false5) && (RTC_DRV_DStrue3false5 => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_DStrue39false) && (RTC_DRV_DStrue39false => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_MAX69false2) && (RTC_DRV_MAX69false2 => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_R97falsetrue) && (RTC_DRV_R97falsetrue => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_RS5C348) && (RTC_DRV_RS5C348 => false)))
((RTC_CLASS && SPI_MASTER) || ((false => RTC_DRV_DS3234) && (RTC_DRV_DS3234 => false)))
((RTC_CLASS && (X86 || (ALPHA || (ARM || (M32R || (ATARI || (PPC || (MIPS || SPARC64)))))))) || (((true && (RTC_CLASS && ((X86 || (ALPHA || (ARM || (M32R || (ATARI || (PPC || (MIPS || SPARC64))))))) && X86))) => RTC_DRV_CMOS) && (RTC_DRV_CMOS => (true && (RTC_CLASS && ((X86 || (ALPHA || (ARM || (M32R || (ATARI || (PPC || (MIPS || SPARC64))))))) && X86))))))
((RTC_CLASS && SNI_RM) || ((false => RTC_DRV_DStrue2true6) && (RTC_DRV_DStrue2true6 => false)))
(RTC_CLASS || ((false => RTC_DRV_DStrue286) && (RTC_DRV_DStrue286 => false)))
((RTC_CLASS && SH_SECUREEDGE54truefalse) || ((false => RTC_DRV_DStrue3false2) && (RTC_DRV_DStrue3false2 => false)))
(RTC_CLASS || ((false => RTC_DRV_DStrue5truetrue) && (RTC_DRV_DStrue5truetrue => false)))
(RTC_CLASS || ((false => RTC_DRV_DStrue553) && (RTC_DRV_DStrue553 => false)))
(RTC_CLASS || ((false => RTC_DRV_DStrue742) && (RTC_DRV_DStrue742 => false)))
(RTC_CLASS || ((false => RTC_DRV_STKtrue7TA8) && (RTC_DRV_STKtrue7TA8 => false)))
(RTC_CLASS || ((false => RTC_DRV_M48T86) && (RTC_DRV_M48T86 => false)))
(RTC_CLASS || ((false => RTC_DRV_M48T35) && (RTC_DRV_M48T35 => false)))
(RTC_CLASS || ((false => RTC_DRV_M48T59) && (RTC_DRV_M48T59 => false)))
(RTC_CLASS || ((false => RTC_DRV_BQ48false2) && (RTC_DRV_BQ48false2 => false)))
(RTC_CLASS || ((false => RTC_DRV_V3false2false) && (RTC_DRV_V3false2false => false)))
((RTC_CLASS && MFD_WM835false) || ((false => RTC_DRV_WM835false) && (RTC_DRV_WM835false => false)))
((RTC_CLASS && (ARCH_OMAPtrue5XX || (ARCH_OMAPtrue6XX || ARCH_OMAP73false))) || ((false => RTC_DRV_OMAP) && (RTC_DRV_OMAP => false)))
((RTC_CLASS && ARCH_S3C24truefalse) || ((false => RTC_DRV_S3C) && (RTC_DRV_S3C => false)))
((RTC_CLASS && ARCH_EP93XX) || ((false => RTC_DRV_EP93XX) && (RTC_DRV_EP93XX => false)))
((RTC_CLASS && (ARCH_SAtruetruefalsefalse || ARCH_PXA)) || ((false => RTC_DRV_SAtruetruefalsefalse) && (RTC_DRV_SAtruetruefalsefalse => false)))
((RTC_CLASS && SUPERH) || ((false => RTC_DRV_SH) && (RTC_DRV_SH => false)))
((RTC_CLASS && CPU_VR4trueXX) || ((false => RTC_DRV_VR4trueXX) && (RTC_DRV_VR4trueXX => false)))
((RTC_CLASS && ARM_AMBA) || ((false => RTC_DRV_PLfalse3false) && (RTC_DRV_PLfalse3false => false)))
((RTC_CLASS && ARM_AMBA) || ((false => RTC_DRV_PLfalse3true) && (RTC_DRV_PLfalse3true => false)))
((RTC_CLASS && PLATFORM_AT32AP) || ((false => RTC_DRV_AT32AP7falsefalseX) && (RTC_DRV_AT32AP7falsefalseX => false)))
((RTC_CLASS && (ARCH_AT9trueRM92falsefalse || ARCH_AT9trueSAM9RL)) || ((false => RTC_DRV_AT9trueRM92falsefalse) && (RTC_DRV_AT9trueRM92falsefalse => false)))
((RTC_CLASS && (ARCH_AT9true && (!ARCH_AT9trueRM92falsefalse && !ARCH_AT9trueX4false))) || ((false => RTC_DRV_AT9trueSAM9) && (RTC_DRV_AT9trueSAM9 => false)))
((RTC_CLASS && (RTC_DRV_AT9trueSAM9 && ARCH_AT9trueSAM9263)) || (((true && (RTC_CLASS && RTC_DRV_AT9trueSAM9)) => RTC_DRV_AT9trueSAM9_RTT) && (RTC_DRV_AT9trueSAM9_RTT => (true && (RTC_CLASS && RTC_DRV_AT9trueSAM9)))))
((RTC_CLASS && RTC_DRV_AT9trueSAM9) || (((true && (RTC_CLASS && RTC_DRV_AT9trueSAM9)) => RTC_DRV_AT9trueSAM9_GPBR) && (RTC_DRV_AT9trueSAM9_GPBR => (true && (RTC_CLASS && RTC_DRV_AT9trueSAM9)))))
((RTC_CLASS && (BLACKFIN && !BF56true)) || ((false => RTC_DRV_BFIN) && (RTC_DRV_BFIN => false)))
((RTC_CLASS && SH_LANDISK) || ((false => RTC_DRV_RS5C3true3) && (RTC_DRV_RS5C3true3 => false)))
((RTC_CLASS && PARISC) || ((false => RTC_DRV_PARISC) && (RTC_DRV_PARISC => false)))
((RTC_CLASS && PPC) || ((false => RTC_DRV_PPC) && (RTC_DRV_PPC => false)))
((RTC_CLASS && SPARC64) || ((false => RTC_DRV_SUN4V) && (RTC_DRV_SUN4V => false)))
((RTC_CLASS && SPARC64) || ((false => RTC_DRV_STARFIRE) && (RTC_DRV_STARFIRE => false)))
((!HIGHMEM64G && HAS_DMA) || ((false => DMADEVICES) && (DMADEVICES => false)))
((DMADEVICES && (PCI && X86)) || ((false => INTEL_IOATDMA) && (INTEL_IOATDMA => false)))
((DMADEVICES && (ARCH_IOP32X || (ARCH_IOP33X || ARCH_IOPtrue3XX))) || ((false => INTEL_IOP_ADMA) && (INTEL_IOP_ADMA => false)))
((DMADEVICES && AVR32) || (((true && (DMADEVICES && (AVR32 && CPU_AT32AP7falsefalsefalse))) => DW_DMAC) && (DW_DMAC => (true && (DMADEVICES && (AVR32 && CPU_AT32AP7falsefalsefalse))))))
((DMADEVICES && FSL_SOC) || ((false => FSL_DMA) && (FSL_DMA => false)))
((DMADEVICES && PLAT_ORION) || ((false => MV_XOR) && (MV_XOR => false)))
(false || ((((((x936 || x937) || x938) || x939) || x94false) => DMA_ENGINE) && (DMA_ENGINE => ((((x936 || x937) || x938) || x939) || x94false))))
(x936 <=> (INTEL_IOATDMA && (DMADEVICES && (PCI && X86))))
(x937 <=> (DW_DMAC && (DMADEVICES && AVR32)))
(x938 <=> (INTEL_IOP_ADMA && (DMADEVICES && (ARCH_IOP32X || (ARCH_IOP33X || ARCH_IOPtrue3XX)))))
(x939 <=> (MV_XOR && (DMADEVICES && PLAT_ORION)))
(x94false <=> (FSL_DMA && (DMADEVICES && FSL_SOC)))
((DMADEVICES && (DMA_ENGINE && NET)) || (((true && ((DMADEVICES && (DMA_ENGINE && NET)) && (INTEL_IOATDMA || FSL_DMA))) => NET_DMA) && (NET_DMA => (true && ((DMADEVICES && (DMA_ENGINE && NET)) && (INTEL_IOATDMA || FSL_DMA))))))
((DMADEVICES && DMA_ENGINE) || ((false => DMATEST) && (DMATEST => false)))
(false || (((INTEL_IOATDMA && (DMADEVICES && (PCI && X86))) => DCA) && (DCA => (INTEL_IOATDMA && (DMADEVICES && (PCI && X86))))))
(PARPORT || ((false => AUXDISPLAY) && (AUXDISPLAY => false)))
((AUXDISPLAY && (PARPORT && PARPORT_PC)) || ((false => KSfalsetruefalse8) && (KSfalsetruefalse8 => false)))
((AUXDISPLAY && (PARPORT && KSfalsetruefalse8)) || (((true && (AUXDISPLAY && (PARPORT && KSfalsetruefalse8))) => KSfalsetruefalse8_PORT) && (KSfalsetruefalse8_PORT => (true && (AUXDISPLAY && (PARPORT && KSfalsetruefalse8))))))
((AUXDISPLAY && (PARPORT && KSfalsetruefalse8)) || (((true && (AUXDISPLAY && (PARPORT && KSfalsetruefalse8))) => KSfalsetruefalse8_DELAY) && (KSfalsetruefalse8_DELAY => (true && (AUXDISPLAY && (PARPORT && KSfalsetruefalse8))))))
((AUXDISPLAY && (PARPORT && (X86 && (FB && KSfalsetruefalse8)))) || ((false => CFAGtrue2864B) && (CFAGtrue2864B => false)))
((AUXDISPLAY && (PARPORT && CFAGtrue2864B)) || (((true && (AUXDISPLAY && (PARPORT && CFAGtrue2864B))) => CFAGtrue2864B_RATE) && (CFAGtrue2864B_RATE => (true && (AUXDISPLAY && (PARPORT && CFAGtrue2864B))))))
(!S39false || ((false => UIO) && (UIO => false)))
((UIO && PCI) || ((false => UIO_CIF) && (UIO_CIF => false)))
(UIO || ((false => UIO_PDRV) && (UIO_PDRV => false)))
(UIO || ((false => UIO_PDRV_GENIRQ) && (UIO_PDRV_GENIRQ => false)))
(UIO || ((false => UIO_SMX) && (UIO_SMX => false)))
(UIO || ((false => UIO_SERCOS3) && (UIO_SERCOS3 => false)))
(XEN || (((true && XEN) => XEN_BALLOON) && (XEN_BALLOON => (true && XEN))))
(XEN_BALLOON || (((true && XEN_BALLOON) => XEN_SCRUB_PAGES) && (XEN_SCRUB_PAGES => (true && XEN_BALLOON))))
(true || ((false => STAGING) && (STAGING => false)))
(STAGING || (((true && STAGING) => STAGING_EXCLUDE_BUILD) && (STAGING_EXCLUDE_BUILD => (true && STAGING))))
((STAGING && (!STAGING_EXCLUDE_BUILD && (NETDEV_truefalsefalsefalse && PCI))) || ((false => ETtrue3trueX) && (ETtrue3trueX => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && ETtrue3trueX)) || ((false => ETtrue3trueX_DEBUG) && (ETtrue3trueX_DEBUG => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (PCI && (X86 && NETDEV_truefalsefalsefalse)))) || ((false => SLICOSS) && (SLICOSS => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (PCI && (NETDEV_truefalsefalsefalsefalse && X86)))) || ((false => SXG) && (SXG => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && PCI)) || ((false => ME4falsefalsefalse) && (ME4falsefalsefalse => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND)))))) || ((false => VIDEO_GO7falsefalse7) && (VIDEO_GO7falsefalse7 => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_GO7falsefalse7 && USB))) || ((false => VIDEO_GO7falsefalse7_USB) && (VIDEO_GO7falsefalse7_USB => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (USB && (NET && EXPERIMENTAL)))) || ((false => USB_IP_COMMON) && (USB_IP_COMMON => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && USB_IP_COMMON)) || ((false => USB_IP_VHCI_HCD) && (USB_IP_VHCI_HCD => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && USB_IP_COMMON)) || ((false => USB_IP_HOST) && (USB_IP_HOST => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (MAC8false2truetrue && (WLAN_8false2truetrue && (USB && (EXPERIMENTAL && !4KSTACKS)))))) || ((false => W35UND) && (W35UND => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (WLAN_8false2truetrue && USB))) || ((false => PRISM2_USB) && (PRISM2_USB => false)))
((STAGING && !STAGING_EXCLUDE_BUILD) || ((false => ECHO) && (ECHO => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (WLAN_8false2truetrue && USB))) || ((false => USB_ATMEL) && (USB_ATMEL => false)))
((STAGING && (!STAGING_EXCLUDE_BUILD && (PCI && UIO))) || ((false => POCH) && (POCH => false)))
(!IA64 || ((false => EDD) && (EDD => false)))
(EDD || ((false => EDD_OFF) && (EDD_OFF => false)))
(EMBEDDED || (((true && (true && (X86_64 || X86_32))) => FIRMWARE_MEMMAP) && (FIRMWARE_MEMMAP => (true && (true && (X86_64 || X86_32))))))
(EFI || ((false => EFI_VARS) && (EFI_VARS => false)))
((ACPI && (EFI && IA64)) || (((true && (ACPI && (EFI && IA64))) => EFI_PCDP) && (EFI_PCDP => (true && (ACPI && (EFI && IA64))))))
(X86 || ((false => DELL_RBU) && (DELL_RBU => false)))
(X86 || ((false => DCDBAS) && (DCDBAS => false)))
(DMI || (((true && DMI) => DMIID) && (DMIID => (true && DMI))))
(X86 || ((false => ISCSI_IBFT_FIND) && (ISCSI_IBFT_FIND => false)))
(ISCSI_IBFT_FIND || ((false => ISCSI_IBFT) && (ISCSI_IBFT => false)))
(BLOCK || ((false => EXT2_FS) && (EXT2_FS => false)))
((BLOCK && EXT2_FS) || ((false => EXT2_FS_XATTR) && (EXT2_FS_XATTR => false)))
((BLOCK && EXT2_FS_XATTR) || ((false => EXT2_FS_POSIX_ACL) && (EXT2_FS_POSIX_ACL => false)))
((BLOCK && EXT2_FS_XATTR) || ((false => EXT2_FS_SECURITY) && (EXT2_FS_SECURITY => false)))
((BLOCK && (EXT2_FS && MMU)) || ((false => EXT2_FS_XIP) && (EXT2_FS_XIP => false)))
(BLOCK || ((false => EXT3_FS) && (EXT3_FS => false)))
((BLOCK && EXT3_FS) || (((true && (BLOCK && EXT3_FS)) => EXT3_FS_XATTR) && (EXT3_FS_XATTR => (true && (BLOCK && EXT3_FS)))))
((BLOCK && EXT3_FS_XATTR) || ((false => EXT3_FS_POSIX_ACL) && (EXT3_FS_POSIX_ACL => false)))
((BLOCK && EXT3_FS_XATTR) || ((false => EXT3_FS_SECURITY) && (EXT3_FS_SECURITY => false)))
(BLOCK || ((false => EXT4_FS) && (EXT4_FS => false)))
((BLOCK && EXT4_FS) || ((false => EXT4DEV_COMPAT) && (EXT4DEV_COMPAT => false)))
((BLOCK && EXT4_FS) || (((true && (BLOCK && EXT4_FS)) => EXT4_FS_XATTR) && (EXT4_FS_XATTR => (true && (BLOCK && EXT4_FS)))))
((BLOCK && EXT4_FS_XATTR) || ((false => EXT4_FS_POSIX_ACL) && (EXT4_FS_POSIX_ACL => false)))
((BLOCK && EXT4_FS_XATTR) || ((false => EXT4_FS_SECURITY) && (EXT4_FS_SECURITY => false)))
(false || (((true && (BLOCK && EXT2_FS_XIP)) => FS_XIP) && (FS_XIP => (true && (BLOCK && EXT2_FS_XIP)))))
(false || ((((EXT3_FS && BLOCK) || (OCFS2_COMPAT_JBD && (BLOCK && OCFS2_FS))) => JBD) && (JBD => ((EXT3_FS && BLOCK) || (OCFS2_COMPAT_JBD && (BLOCK && OCFS2_FS))))))
((BLOCK && (JBD && DEBUG_FS)) || ((false => JBD_DEBUG) && (JBD_DEBUG => false)))
(false || ((((OCFS2_FS && (BLOCK && (NET && SYSFS))) || (EXT4_FS && BLOCK)) => JBD2) && (JBD2 => ((OCFS2_FS && (BLOCK && (NET && SYSFS))) || (EXT4_FS && BLOCK)))))
((BLOCK && (JBD2 && DEBUG_FS)) || ((false => JBD2_DEBUG) && (JBD2_DEBUG => false)))
(false || ((((((true && (BLOCK && (EXT2_FS && EXT2_FS_XATTR))) || (true && (BLOCK && (EXT3_FS && EXT3_FS_XATTR)))) || (true && (BLOCK && (EXT4_FS && EXT4_FS_XATTR)))) || ((((true && !(BLOCK && (EXT2_FS && EXT2_FS_XATTR))) && !(BLOCK && (EXT3_FS && EXT3_FS_XATTR))) && !(BLOCK && (EXT4_FS && EXT4_FS_XATTR))) && (BLOCK && (EXT2_FS_XATTR || (EXT3_FS_XATTR || EXT4_FS_XATTR))))) => FS_MBCACHE) && (FS_MBCACHE => ((((true && (BLOCK && (EXT2_FS && EXT2_FS_XATTR))) || (true && (BLOCK && (EXT3_FS && EXT3_FS_XATTR)))) || (true && (BLOCK && (EXT4_FS && EXT4_FS_XATTR)))) || ((((true && !(BLOCK && (EXT2_FS && EXT2_FS_XATTR))) && !(BLOCK && (EXT3_FS && EXT3_FS_XATTR))) && !(BLOCK && (EXT4_FS && EXT4_FS_XATTR))) && (BLOCK && (EXT2_FS_XATTR || (EXT3_FS_XATTR || EXT4_FS_XATTR))))))))
(BLOCK || ((false => REISERFS_FS) && (REISERFS_FS => false)))
((BLOCK && REISERFS_FS) || ((false => REISERFS_CHECK) && (REISERFS_CHECK => false)))
((BLOCK && (REISERFS_FS && PROC_FS)) || ((false => REISERFS_PROC_INFO) && (REISERFS_PROC_INFO => false)))
((BLOCK && REISERFS_FS) || ((false => REISERFS_FS_XATTR) && (REISERFS_FS_XATTR => false)))
((BLOCK && REISERFS_FS_XATTR) || ((false => REISERFS_FS_POSIX_ACL) && (REISERFS_FS_POSIX_ACL => false)))
((BLOCK && REISERFS_FS_XATTR) || ((false => REISERFS_FS_SECURITY) && (REISERFS_FS_SECURITY => false)))
(BLOCK || ((false => JFS_FS) && (JFS_FS => false)))
((BLOCK && JFS_FS) || ((false => JFS_POSIX_ACL) && (JFS_POSIX_ACL => false)))
((BLOCK && JFS_FS) || ((false => JFS_SECURITY) && (JFS_SECURITY => false)))
((BLOCK && JFS_FS) || ((false => JFS_DEBUG) && (JFS_DEBUG => false)))
((BLOCK && JFS_FS) || ((false => JFS_STATISTICS) && (JFS_STATISTICS => false)))
(false || (((((((((((x94true || x942) || x943) || x944) || x945) || x946) || x947) || x948) || x949) || x95false) => FS_POSIX_ACL) && (FS_POSIX_ACL => (((((((((x94true || x942) || x943) || x944) || x945) || x946) || x947) || x948) || x949) || x95false))))
(x94true <=> (REISERFS_FS_POSIX_ACL && (BLOCK && REISERFS_FS_XATTR)))
(x942 <=> (GFS2_FS && (BLOCK && (EXPERIMENTAL && (a64BIT || (LSF && LBD))))))
(x943 <=> (EXT2_FS_POSIX_ACL && (BLOCK && EXT2_FS_XATTR)))
(x944 <=> (EXT3_FS_POSIX_ACL && (BLOCK && EXT3_FS_XATTR)))
(x945 <=> (NFS_ACL_SUPPORT && NETWORK_FILESYSTEMS))
(x946 <=> (NFSD_V4 && (NETWORK_FILESYSTEMS && (NFSD && (PROC_FS && EXPERIMENTAL)))))
(x947 <=> (GENERIC_ACL && true))
(x948 <=> (JFFS2_FS_POSIX_ACL && JFFS2_FS_XATTR))
(x949 <=> (JFS_POSIX_ACL && (BLOCK && JFS_FS)))
(x95false <=> (EXT4_FS_POSIX_ACL && (BLOCK && EXT4_FS_XATTR)))
((BLOCK && EMBEDDED) || (((true && BLOCK) => FILE_LOCKING) && (FILE_LOCKING => (true && BLOCK))))
(BLOCK || ((false => XFS_FS) && (XFS_FS => false)))
((BLOCK && XFS_FS) || ((false => XFS_QUOTA) && (XFS_QUOTA => false)))
((BLOCK && XFS_FS) || ((false => XFS_POSIX_ACL) && (XFS_POSIX_ACL => false)))
((BLOCK && XFS_FS) || ((false => XFS_RT) && (XFS_RT => false)))
((BLOCK && (XFS_FS && EXPERIMENTAL)) || ((false => XFS_DEBUG) && (XFS_DEBUG => false)))
((BLOCK && (EXPERIMENTAL && (a64BIT || (LSF && LBD)))) || ((false => GFS2_FS) && (GFS2_FS => false)))
((BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && (IPV6 || !IPV6)))))) || ((false => GFS2_FS_LOCKING_DLM) && (GFS2_FS_LOCKING_DLM => false)))
((BLOCK && (NET && SYSFS)) || ((false => OCFS2_FS) && (OCFS2_FS => false)))
((BLOCK && OCFS2_FS) || (((true && (BLOCK && OCFS2_FS)) => OCFS2_FS_O2CB) && (OCFS2_FS_O2CB => (true && (BLOCK && OCFS2_FS)))))
((BLOCK && (OCFS2_FS && DLM)) || (((true && (BLOCK && (OCFS2_FS && DLM))) => OCFS2_FS_USERSPACE_CLUSTER) && (OCFS2_FS_USERSPACE_CLUSTER => (true && (BLOCK && (OCFS2_FS && DLM))))))
((BLOCK && OCFS2_FS) || (((true && (BLOCK && OCFS2_FS)) => OCFS2_FS_STATS) && (OCFS2_FS_STATS => (true && (BLOCK && OCFS2_FS)))))
((BLOCK && OCFS2_FS) || (((true && (BLOCK && OCFS2_FS)) => OCFS2_DEBUG_MASKLOG) && (OCFS2_DEBUG_MASKLOG => (true && (BLOCK && OCFS2_FS)))))
((BLOCK && OCFS2_FS) || ((false => OCFS2_DEBUG_FS) && (OCFS2_DEBUG_FS => false)))
((BLOCK && OCFS2_FS) || ((false => OCFS2_COMPAT_JBD) && (OCFS2_COMPAT_JBD => false)))
(true || (((true && true) => DNOTIFY) && (DNOTIFY => (true && true))))
(true || (((true && true) => INOTIFY) && (INOTIFY => (true && true))))
(INOTIFY || (((true && INOTIFY) => INOTIFY_USER) && (INOTIFY_USER => (true && INOTIFY))))
(true || ((false => QUOTA) && (QUOTA => false)))
((QUOTA && NET) || ((false => QUOTA_NETLINK_INTERFACE) && (QUOTA_NETLINK_INTERFACE => false)))
(QUOTA || (((true && QUOTA) => PRINT_QUOTA_WARNING) && (PRINT_QUOTA_WARNING => (true && QUOTA))))
(QUOTA || ((false => QFMT_Vtrue) && (QFMT_Vtrue => false)))
(QUOTA || ((false => QFMT_V2) && (QFMT_V2 => false)))
(false || (((true && (XFS_QUOTA || QUOTA)) => QUOTACTL) && (QUOTACTL => (true && (XFS_QUOTA || QUOTA)))))
(true || ((false => AUTOFS_FS) && (AUTOFS_FS => false)))
(true || ((false => AUTOFS4_FS) && (AUTOFS4_FS => false)))
(true || ((false => FUSE_FS) && (FUSE_FS => false)))
(false || (((TMPFS_POSIX_ACL && TMPFS) => GENERIC_ACL) && (GENERIC_ACL => (TMPFS_POSIX_ACL && TMPFS))))
(BLOCK || ((false => ISO966false_FS) && (ISO966false_FS => false)))
((BLOCK && ISO966false_FS) || ((false => JOLIET) && (JOLIET => false)))
((BLOCK && ISO966false_FS) || ((false => ZISOFS) && (ZISOFS => false)))
(BLOCK || ((false => UDF_FS) && (UDF_FS => false)))
(false || (((true && (BLOCK && ((UDF_FS && NLS) || (UDF_FS && NLS)))) => UDF_NLS) && (UDF_NLS => (true && (BLOCK && ((UDF_FS && NLS) || (UDF_FS && NLS)))))))
(false || ((((VFAT_FS && BLOCK) || (MSDOS_FS && BLOCK)) => FAT_FS) && (FAT_FS => ((VFAT_FS && BLOCK) || (MSDOS_FS && BLOCK)))))
(BLOCK || ((false => MSDOS_FS) && (MSDOS_FS => false)))
(BLOCK || ((false => VFAT_FS) && (VFAT_FS => false)))
((BLOCK && (MSDOS_FS || VFAT_FS)) || (((true && (BLOCK && (MSDOS_FS || VFAT_FS))) => FAT_DEFAULT_CODEPAGE) && (FAT_DEFAULT_CODEPAGE => (true && (BLOCK && (MSDOS_FS || VFAT_FS))))))
((BLOCK && VFAT_FS) || (((true && (BLOCK && VFAT_FS)) => FAT_DEFAULT_IOCHARSET) && (FAT_DEFAULT_IOCHARSET => (true && (BLOCK && VFAT_FS)))))
(BLOCK || ((false => NTFS_FS) && (NTFS_FS => false)))
((BLOCK && NTFS_FS) || ((false => NTFS_DEBUG) && (NTFS_DEBUG => false)))
((BLOCK && NTFS_FS) || ((false => NTFS_RW) && (NTFS_RW => false)))
(EMBEDDED || (((true && true) => PROC_FS) && (PROC_FS => (true && true))))
((PROC_FS && (MMU && !ARM)) || ((false => PROC_KCORE) && (PROC_KCORE => false)))
((PROC_FS && CRASH_DUMP) || (((true && (PROC_FS && CRASH_DUMP)) => PROC_VMCORE) && (PROC_VMCORE => (true && (PROC_FS && CRASH_DUMP)))))
((PROC_FS && EMBEDDED) || (((true && PROC_FS) => PROC_SYSCTL) && (PROC_SYSCTL => (true && PROC_FS))))
((PROC_FS && (MMU && EMBEDDED)) || (((true && (PROC_FS && MMU)) => PROC_PAGE_MONITOR) && (PROC_PAGE_MONITOR => (true && (PROC_FS && MMU)))))
(EMBEDDED || (((true && true) => SYSFS) && (SYSFS => (true && true))))
(true || ((false => TMPFS) && (TMPFS => false)))
(TMPFS || ((false => TMPFS_POSIX_ACL) && (TMPFS_POSIX_ACL => false)))
((X86 || (IA64 || (PPC64 || (SPARC64 || ((SUPERH && MMU) || ((S39false && a64BIT) || BROKEN)))))) || ((false => HUGETLBFS) && (HUGETLBFS => false)))
(false || (((true && (true && HUGETLBFS)) => HUGETLB_PAGE) && (HUGETLB_PAGE => (true && (true && HUGETLBFS)))))
(SYSFS || ((((((OCFS2_FS && (BLOCK && (NET && SYSFS))) || (NETCONSOLE_DYNAMIC && (NETDEVICES && (NETCONSOLE && (SYSFS && EXPERIMENTAL))))) || (DLM && (EXPERIMENTAL && (INET && (SYSFS && (IPV6 || !IPV6)))))) || (GFS2_FS_LOCKING_DLM && (BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && (IPV6 || !IPV6)))))))) => CONFIGFS_FS) && (CONFIGFS_FS => ((((OCFS2_FS && (BLOCK && (NET && SYSFS))) || (NETCONSOLE_DYNAMIC && (NETDEVICES && (NETCONSOLE && (SYSFS && EXPERIMENTAL))))) || (DLM && (EXPERIMENTAL && (INET && (SYSFS && (IPV6 || !IPV6)))))) || (GFS2_FS_LOCKING_DLM && (BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && (IPV6 || !IPV6)))))))))))
((BLOCK && EXPERIMENTAL) || ((false => ADFS_FS) && (ADFS_FS => false)))
(ADFS_FS || ((false => ADFS_FS_RW) && (ADFS_FS_RW => false)))
((BLOCK && EXPERIMENTAL) || ((false => AFFS_FS) && (AFFS_FS => false)))
((EXPERIMENTAL && (KEYS && (CRYPTO && NET))) || ((false => ECRYPT_FS) && (ECRYPT_FS => false)))
((BLOCK && EXPERIMENTAL) || ((false => HFS_FS) && (HFS_FS => false)))
(BLOCK || ((false => HFSPLUS_FS) && (HFSPLUS_FS => false)))
((BLOCK && EXPERIMENTAL) || ((false => BEFS_FS) && (BEFS_FS => false)))
(BEFS_FS || ((false => BEFS_DEBUG) && (BEFS_DEBUG => false)))
((BLOCK && EXPERIMENTAL) || ((false => BFS_FS) && (BFS_FS => false)))
((BLOCK && EXPERIMENTAL) || ((false => EFS_FS) && (EFS_FS => false)))
(MTD || ((false => JFFS2_FS) && (JFFS2_FS => false)))
(JFFS2_FS || (((true && JFFS2_FS) => JFFS2_FS_DEBUG) && (JFFS2_FS_DEBUG => (true && JFFS2_FS))))
(JFFS2_FS || (((true && JFFS2_FS) => JFFS2_FS_WRITEBUFFER) && (JFFS2_FS_WRITEBUFFER => (true && JFFS2_FS))))
(JFFS2_FS_WRITEBUFFER || ((false => JFFS2_FS_WBUF_VERIFY) && (JFFS2_FS_WBUF_VERIFY => false)))
((JFFS2_FS && EXPERIMENTAL) || ((false => JFFS2_SUMMARY) && (JFFS2_SUMMARY => false)))
((JFFS2_FS && EXPERIMENTAL) || ((false => JFFS2_FS_XATTR) && (JFFS2_FS_XATTR => false)))
(JFFS2_FS_XATTR || (((true && JFFS2_FS_XATTR) => JFFS2_FS_POSIX_ACL) && (JFFS2_FS_POSIX_ACL => (true && JFFS2_FS_XATTR))))
(JFFS2_FS_XATTR || (((true && JFFS2_FS_XATTR) => JFFS2_FS_SECURITY) && (JFFS2_FS_SECURITY => (true && JFFS2_FS_XATTR))))
(JFFS2_FS || ((false => JFFS2_COMPRESSION_OPTIONS) && (JFFS2_COMPRESSION_OPTIONS => false)))
((JFFS2_FS && JFFS2_COMPRESSION_OPTIONS) || (((true && JFFS2_FS) => JFFS2_ZLIB) && (JFFS2_ZLIB => (true && JFFS2_FS))))
((JFFS2_FS && JFFS2_COMPRESSION_OPTIONS) || ((false => JFFS2_LZO) && (JFFS2_LZO => false)))
((JFFS2_FS && JFFS2_COMPRESSION_OPTIONS) || (((true && JFFS2_FS) => JFFS2_RTIME) && (JFFS2_RTIME => (true && JFFS2_FS))))
((JFFS2_FS && JFFS2_COMPRESSION_OPTIONS) || ((false => JFFS2_RUBIN) && (JFFS2_RUBIN => false)))
(true || ((false => JFFS2_CMODE_NONE) && (JFFS2_CMODE_NONE => false)))
(true || ((false => JFFS2_CMODE_PRIORITY) && (JFFS2_CMODE_PRIORITY => false)))
(true || ((false => JFFS2_CMODE_SIZE) && (JFFS2_CMODE_SIZE => false)))
(true || ((false => JFFS2_CMODE_FAVOURLZO) && (JFFS2_CMODE_FAVOURLZO => false)))
(MTD_UBI || ((false => UBIFS_FS) && (UBIFS_FS => false)))
(UBIFS_FS || ((false => UBIFS_FS_XATTR) && (UBIFS_FS_XATTR => false)))
(UBIFS_FS || ((false => UBIFS_FS_ADVANCED_COMPR) && (UBIFS_FS_ADVANCED_COMPR => false)))
((UBIFS_FS && UBIFS_FS_ADVANCED_COMPR) || (((true && UBIFS_FS) => UBIFS_FS_LZO) && (UBIFS_FS_LZO => (true && UBIFS_FS))))
((UBIFS_FS && UBIFS_FS_ADVANCED_COMPR) || (((true && UBIFS_FS) => UBIFS_FS_ZLIB) && (UBIFS_FS_ZLIB => (true && UBIFS_FS))))
(UBIFS_FS || ((false => UBIFS_FS_DEBUG) && (UBIFS_FS_DEBUG => false)))
(UBIFS_FS_DEBUG || (((true && UBIFS_FS_DEBUG) => UBIFS_FS_DEBUG_MSG_LVL) && (UBIFS_FS_DEBUG_MSG_LVL => (true && UBIFS_FS_DEBUG))))
(UBIFS_FS_DEBUG || ((false => UBIFS_FS_DEBUG_CHKS) && (UBIFS_FS_DEBUG_CHKS => false)))
(BLOCK || ((false => CRAMFS) && (CRAMFS => false)))
(BLOCK || ((false => VXFS_FS) && (VXFS_FS => false)))
(BLOCK || ((false => MINIX_FS) && (MINIX_FS => false)))
(BLOCK || ((false => OMFS_FS) && (OMFS_FS => false)))
(BLOCK || ((false => HPFS_FS) && (HPFS_FS => false)))
(BLOCK || ((false => QNX4FS_FS) && (QNX4FS_FS => false)))
((QNX4FS_FS && (EXPERIMENTAL && BROKEN)) || ((false => QNX4FS_RW) && (QNX4FS_RW => false)))
(BLOCK || ((false => ROMFS_FS) && (ROMFS_FS => false)))
(BLOCK || ((false => SYSV_FS) && (SYSV_FS => false)))
(BLOCK || ((false => UFS_FS) && (UFS_FS => false)))
((UFS_FS && EXPERIMENTAL) || ((false => UFS_FS_WRITE) && (UFS_FS_WRITE => false)))
(UFS_FS || ((false => UFS_DEBUG) && (UFS_DEBUG => false)))
(NET || (((true && NET) => NETWORK_FILESYSTEMS) && (NETWORK_FILESYSTEMS => (true && NET))))
((NETWORK_FILESYSTEMS && INET) || ((false => NFS_FS) && (NFS_FS => false)))
((NETWORK_FILESYSTEMS && NFS_FS) || ((false => NFS_V3) && (NFS_V3 => false)))
((NETWORK_FILESYSTEMS && NFS_V3) || ((false => NFS_V3_ACL) && (NFS_V3_ACL => false)))
((NETWORK_FILESYSTEMS && (NFS_FS && EXPERIMENTAL)) || ((false => NFS_V4) && (NFS_V4 => false)))
((NETWORK_FILESYSTEMS && (NFS_FS && IP_PNP)) || ((false => ROOT_NFS) && (ROOT_NFS => false)))
((NETWORK_FILESYSTEMS && INET) || ((false => NFSD) && (NFSD => false)))
(false || (((NFSD_V3_ACL && (NETWORK_FILESYSTEMS && NFSD_V3)) => NFSD_V2_ACL) && (NFSD_V2_ACL => (NFSD_V3_ACL && (NETWORK_FILESYSTEMS && NFSD_V3)))))
((NETWORK_FILESYSTEMS && NFSD) || (((NFSD_V4 && (NETWORK_FILESYSTEMS && (NFSD && (PROC_FS && EXPERIMENTAL)))) => NFSD_V3) && (NFSD_V3 => (NFSD_V4 && (NETWORK_FILESYSTEMS && (NFSD && (PROC_FS && EXPERIMENTAL)))))))
((NETWORK_FILESYSTEMS && NFSD_V3) || ((false => NFSD_V3_ACL) && (NFSD_V3_ACL => false)))
((NETWORK_FILESYSTEMS && (NFSD && (PROC_FS && EXPERIMENTAL))) || ((false => NFSD_V4) && (NFSD_V4 => false)))
(false || ((((NFSD && (NETWORK_FILESYSTEMS && INET)) || (NFS_FS && (NETWORK_FILESYSTEMS && INET))) => LOCKD) && (LOCKD => ((NFSD && (NETWORK_FILESYSTEMS && INET)) || (NFS_FS && (NETWORK_FILESYSTEMS && INET))))))
(false || (((true && (NETWORK_FILESYSTEMS && (NFSD_V3 || NFS_V3))) => LOCKD_V4) && (LOCKD_V4 => (true && (NETWORK_FILESYSTEMS && (NFSD_V3 || NFS_V3))))))
(false || (((NFSD && (NETWORK_FILESYSTEMS && INET)) => EXPORTFS) && (EXPORTFS => (NFSD && (NETWORK_FILESYSTEMS && INET)))))
(false || ((((NFS_FS && (NETWORK_FILESYSTEMS && (INET && NFS_V3_ACL))) || (NFSD && (NETWORK_FILESYSTEMS && (INET && NFSD_V2_ACL)))) => NFS_ACL_SUPPORT) && (NFS_ACL_SUPPORT => ((NFS_FS && (NETWORK_FILESYSTEMS && (INET && NFS_V3_ACL))) || (NFSD && (NETWORK_FILESYSTEMS && (INET && NFSD_V2_ACL)))))))
(false || (((true && (NETWORK_FILESYSTEMS && (NFSD || NFS_FS))) => NFS_COMMON) && (NFS_COMMON => (true && (NETWORK_FILESYSTEMS && (NFSD || NFS_FS))))))
(false || ((((NFSD && (NETWORK_FILESYSTEMS && INET)) || (NFS_FS && (NETWORK_FILESYSTEMS && INET))) => SUNRPC) && (SUNRPC => ((NFSD && (NETWORK_FILESYSTEMS && INET)) || (NFS_FS && (NETWORK_FILESYSTEMS && INET))))))
(false || ((((RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))) || (RPCSEC_GSS_KRB5 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL)))) => SUNRPC_GSS) && (SUNRPC_GSS => ((RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))) || (RPCSEC_GSS_KRB5 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL)))))))
(false || (((true && ((NETWORK_FILESYSTEMS && (SUNRPC && (INFINIBAND && EXPERIMENTAL))) && (SUNRPC && INFINIBAND))) => SUNRPC_XPRT_RDMA) && (SUNRPC_XPRT_RDMA => (true && ((NETWORK_FILESYSTEMS && (SUNRPC && (INFINIBAND && EXPERIMENTAL))) && (SUNRPC && INFINIBAND))))))
((NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL)) || ((false => SUNRPC_REGISTER_V4) && (SUNRPC_REGISTER_V4 => false)))
((NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL)) || ((((NFS_V4 && (NETWORK_FILESYSTEMS && (NFS_FS && EXPERIMENTAL))) || (NFSD_V4 && (NETWORK_FILESYSTEMS && (NFSD && (PROC_FS && EXPERIMENTAL))))) => RPCSEC_GSS_KRB5) && (RPCSEC_GSS_KRB5 => ((NFS_V4 && (NETWORK_FILESYSTEMS && (NFS_FS && EXPERIMENTAL))) || (NFSD_V4 && (NETWORK_FILESYSTEMS && (NFSD && (PROC_FS && EXPERIMENTAL))))))))
((NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL)) || ((false => RPCSEC_GSS_SPKM3) && (RPCSEC_GSS_SPKM3 => false)))
((NETWORK_FILESYSTEMS && INET) || ((false => SMB_FS) && (SMB_FS => false)))
((NETWORK_FILESYSTEMS && SMB_FS) || ((false => SMB_NLS_DEFAULT) && (SMB_NLS_DEFAULT => false)))
((NETWORK_FILESYSTEMS && SMB_NLS_DEFAULT) || (((true && (NETWORK_FILESYSTEMS && SMB_NLS_DEFAULT)) => SMB_NLS_REMOTE) && (SMB_NLS_REMOTE => (true && (NETWORK_FILESYSTEMS && SMB_NLS_DEFAULT)))))
((NETWORK_FILESYSTEMS && INET) || ((false => CIFS) && (CIFS => false)))
((NETWORK_FILESYSTEMS && CIFS) || ((false => CIFS_STATS) && (CIFS_STATS => false)))
((NETWORK_FILESYSTEMS && CIFS_STATS) || ((false => CIFS_STATS2) && (CIFS_STATS2 => false)))
((NETWORK_FILESYSTEMS && CIFS) || ((false => CIFS_WEAK_PW_HASH) && (CIFS_WEAK_PW_HASH => false)))
((NETWORK_FILESYSTEMS && (CIFS && KEYS)) || ((false => CIFS_UPCALL) && (CIFS_UPCALL => false)))
((NETWORK_FILESYSTEMS && CIFS) || ((false => CIFS_XATTR) && (CIFS_XATTR => false)))
((NETWORK_FILESYSTEMS && CIFS_XATTR) || ((false => CIFS_POSIX) && (CIFS_POSIX => false)))
((NETWORK_FILESYSTEMS && CIFS) || ((false => CIFS_DEBUG2) && (CIFS_DEBUG2 => false)))
((NETWORK_FILESYSTEMS && (CIFS && EXPERIMENTAL)) || ((false => CIFS_EXPERIMENTAL) && (CIFS_EXPERIMENTAL => false)))
((NETWORK_FILESYSTEMS && (CIFS_EXPERIMENTAL && KEYS)) || ((false => CIFS_DFS_UPCALL) && (CIFS_DFS_UPCALL => false)))
((NETWORK_FILESYSTEMS && (!IPX || INET)) || ((false => NCP_FS) && (NCP_FS => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_PACKET_SIGNING) && (NCPFS_PACKET_SIGNING => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_IOCTL_LOCKING) && (NCPFS_IOCTL_LOCKING => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_STRONG) && (NCPFS_STRONG => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_NFS_NS) && (NCPFS_NFS_NS => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_OS2_NS) && (NCPFS_OS2_NS => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_SMALLDOS) && (NCPFS_SMALLDOS => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_NLS) && (NCPFS_NLS => false)))
((NETWORK_FILESYSTEMS && NCP_FS) || ((false => NCPFS_EXTRAS) && (NCPFS_EXTRAS => false)))
((NETWORK_FILESYSTEMS && INET) || ((false => CODA_FS) && (CODA_FS => false)))
((NETWORK_FILESYSTEMS && (INET && EXPERIMENTAL)) || ((false => AFS_FS) && (AFS_FS => false)))
((NETWORK_FILESYSTEMS && AFS_FS) || ((false => AFS_DEBUG) && (AFS_DEBUG => false)))
((NETWORK_FILESYSTEMS && (INET && (NET_9P && EXPERIMENTAL))) || ((false => 9P_FS) && (9P_FS => false)))
(BLOCK || ((false => PARTITION_ADVANCED) && (PARTITION_ADVANCED => false)))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && ARCH_ACORN)) => ACORN_PARTITION) && (ACORN_PARTITION => (true && (BLOCK && ARCH_ACORN)))))
((BLOCK && (ACORN_PARTITION && PARTITION_ADVANCED)) || (((true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))) => ACORN_PARTITION_CUMANA) && (ACORN_PARTITION_CUMANA => (true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))))))
((BLOCK && (ACORN_PARTITION && PARTITION_ADVANCED)) || (((true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))) => ACORN_PARTITION_EESOX) && (ACORN_PARTITION_EESOX => (true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))))))
((BLOCK && (ACORN_PARTITION && PARTITION_ADVANCED)) || (((true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))) => ACORN_PARTITION_ICS) && (ACORN_PARTITION_ICS => (true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))))))
((BLOCK && (ACORN_PARTITION && PARTITION_ADVANCED)) || (((true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))) => ACORN_PARTITION_ADFS) && (ACORN_PARTITION_ADFS => (true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))))))
((BLOCK && (ACORN_PARTITION && PARTITION_ADVANCED)) || (((true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))) => ACORN_PARTITION_POWERTEC) && (ACORN_PARTITION_POWERTEC => (true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))))))
((BLOCK && (ACORN_PARTITION && PARTITION_ADVANCED)) || (((true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))) => ACORN_PARTITION_RISCIX) && (ACORN_PARTITION_RISCIX => (true && (BLOCK && (ACORN_PARTITION && ARCH_ACORN))))))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && ALPHA)) => OSF_PARTITION) && (OSF_PARTITION => (true && (BLOCK && ALPHA)))))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && (AMIGA || AFFS_FS))) => AMIGA_PARTITION) && (AMIGA_PARTITION => (true && (BLOCK && (AMIGA || AFFS_FS))))))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && ATARI)) => ATARI_PARTITION) && (ATARI_PARTITION => (true && (BLOCK && ATARI)))))
((BLOCK && (PARTITION_ADVANCED && S39false)) || ((false => IBM_PARTITION) && (IBM_PARTITION => false)))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && (MAC || PPC_PMAC))) => MAC_PARTITION) && (MAC_PARTITION => (true && (BLOCK && (MAC || PPC_PMAC))))))
((BLOCK && PARTITION_ADVANCED) || (((true && BLOCK) => MSDOS_PARTITION) && (MSDOS_PARTITION => (true && BLOCK))))
((BLOCK && (PARTITION_ADVANCED && MSDOS_PARTITION)) || ((false => BSD_DISKLABEL) && (BSD_DISKLABEL => false)))
((BLOCK && (PARTITION_ADVANCED && MSDOS_PARTITION)) || ((false => MINIX_SUBPARTITION) && (MINIX_SUBPARTITION => false)))
((BLOCK && (PARTITION_ADVANCED && MSDOS_PARTITION)) || ((false => SOLARIS_X86_PARTITION) && (SOLARIS_X86_PARTITION => false)))
((BLOCK && (PARTITION_ADVANCED && MSDOS_PARTITION)) || ((false => UNIXWARE_DISKLABEL) && (UNIXWARE_DISKLABEL => false)))
((BLOCK && PARTITION_ADVANCED) || ((false => LDM_PARTITION) && (LDM_PARTITION => false)))
((BLOCK && LDM_PARTITION) || ((false => LDM_DEBUG) && (LDM_DEBUG => false)))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && DEFAULT_SGI_PARTITION)) => SGI_PARTITION) && (SGI_PARTITION => (true && (BLOCK && DEFAULT_SGI_PARTITION)))))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && MACH_DECSTATION)) => ULTRIX_PARTITION) && (ULTRIX_PARTITION => (true && (BLOCK && MACH_DECSTATION)))))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && (SPARC || (SUN3 || SUN3X)))) => SUN_PARTITION) && (SUN_PARTITION => (true && (BLOCK && (SPARC || (SUN3 || SUN3X)))))))
((BLOCK && PARTITION_ADVANCED) || ((false => KARMA_PARTITION) && (KARMA_PARTITION => false)))
((BLOCK && PARTITION_ADVANCED) || ((false => EFI_PARTITION) && (EFI_PARTITION => false)))
((BLOCK && PARTITION_ADVANCED) || (((true && (BLOCK && VME)) => SYSV68_PARTITION) && (SYSV68_PARTITION => (true && (BLOCK && VME)))))
(true || (((((((((((x95true || x952) || x953) || x954) || x955) || x956) || x957) || x958) || x959) || x96false) => NLS) && (NLS => (((((((((x95true || x952) || x953) || x954) || x955) || x956) || x957) || x958) || x959) || x96false))))
(x95true <=> (HFSPLUS_FS && BLOCK))
(x952 <=> (BEFS_FS && (BLOCK && EXPERIMENTAL)))
(x953 <=> (HFS_FS && (BLOCK && EXPERIMENTAL)))
(x954 <=> (NCPFS_NLS && (NETWORK_FILESYSTEMS && NCP_FS)))
(x955 <=> (CIFS && (NETWORK_FILESYSTEMS && INET)))
(x956 <=> (SMB_FS && (NETWORK_FILESYSTEMS && INET)))
(x957 <=> (FAT_FS && BLOCK))
(x958 <=> (NTFS_FS && BLOCK))
(x959 <=> (JFS_FS && BLOCK))
(x96false <=> (JOLIET && (BLOCK && ISO966false_FS)))
(NLS || (((true && NLS) => NLS_DEFAULT) && (NLS_DEFAULT => (true && NLS))))
(NLS || ((false => NLS_CODEPAGE_437) && (NLS_CODEPAGE_437 => false)))
(NLS || ((false => NLS_CODEPAGE_737) && (NLS_CODEPAGE_737 => false)))
(NLS || ((false => NLS_CODEPAGE_775) && (NLS_CODEPAGE_775 => false)))
(NLS || ((false => NLS_CODEPAGE_85false) && (NLS_CODEPAGE_85false => false)))
(NLS || ((false => NLS_CODEPAGE_852) && (NLS_CODEPAGE_852 => false)))
(NLS || ((false => NLS_CODEPAGE_855) && (NLS_CODEPAGE_855 => false)))
(NLS || ((false => NLS_CODEPAGE_857) && (NLS_CODEPAGE_857 => false)))
(NLS || ((false => NLS_CODEPAGE_86false) && (NLS_CODEPAGE_86false => false)))
(NLS || ((false => NLS_CODEPAGE_86true) && (NLS_CODEPAGE_86true => false)))
(NLS || ((false => NLS_CODEPAGE_862) && (NLS_CODEPAGE_862 => false)))
(NLS || ((false => NLS_CODEPAGE_863) && (NLS_CODEPAGE_863 => false)))
(NLS || ((false => NLS_CODEPAGE_864) && (NLS_CODEPAGE_864 => false)))
(NLS || ((false => NLS_CODEPAGE_865) && (NLS_CODEPAGE_865 => false)))
(NLS || ((false => NLS_CODEPAGE_866) && (NLS_CODEPAGE_866 => false)))
(NLS || ((false => NLS_CODEPAGE_869) && (NLS_CODEPAGE_869 => false)))
(NLS || ((false => NLS_CODEPAGE_936) && (NLS_CODEPAGE_936 => false)))
(NLS || ((false => NLS_CODEPAGE_95false) && (NLS_CODEPAGE_95false => false)))
(NLS || ((false => NLS_CODEPAGE_932) && (NLS_CODEPAGE_932 => false)))
(NLS || ((false => NLS_CODEPAGE_949) && (NLS_CODEPAGE_949 => false)))
(NLS || ((false => NLS_CODEPAGE_874) && (NLS_CODEPAGE_874 => false)))
(NLS || ((false => NLS_ISO8859_8) && (NLS_ISO8859_8 => false)))
(NLS || ((false => NLS_CODEPAGE_true25false) && (NLS_CODEPAGE_true25false => false)))
(NLS || ((false => NLS_CODEPAGE_true25true) && (NLS_CODEPAGE_true25true => false)))
(NLS || ((false => NLS_ASCII) && (NLS_ASCII => false)))
(NLS || ((false => NLS_ISO8859_true) && (NLS_ISO8859_true => false)))
(NLS || ((false => NLS_ISO8859_2) && (NLS_ISO8859_2 => false)))
(NLS || ((false => NLS_ISO8859_3) && (NLS_ISO8859_3 => false)))
(NLS || ((false => NLS_ISO8859_4) && (NLS_ISO8859_4 => false)))
(NLS || ((false => NLS_ISO8859_5) && (NLS_ISO8859_5 => false)))
(NLS || ((false => NLS_ISO8859_6) && (NLS_ISO8859_6 => false)))
(NLS || ((false => NLS_ISO8859_7) && (NLS_ISO8859_7 => false)))
(NLS || ((false => NLS_ISO8859_9) && (NLS_ISO8859_9 => false)))
(NLS || ((false => NLS_ISO8859_true3) && (NLS_ISO8859_true3 => false)))
(NLS || ((false => NLS_ISO8859_true4) && (NLS_ISO8859_true4 => false)))
(NLS || ((false => NLS_ISO8859_true5) && (NLS_ISO8859_true5 => false)))
(NLS || ((false => NLS_KOI8_R) && (NLS_KOI8_R => false)))
(NLS || ((false => NLS_KOI8_U) && (NLS_KOI8_U => false)))
(NLS || (((HFSPLUS_FS && BLOCK) => NLS_UTF8) && (NLS_UTF8 => (HFSPLUS_FS && BLOCK))))
((EXPERIMENTAL && (INET && (SYSFS && (IPV6 || !IPV6)))) || (((GFS2_FS_LOCKING_DLM && (BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && (IPV6 || !IPV6))))))) => DLM) && (DLM => (GFS2_FS_LOCKING_DLM && (BLOCK && (GFS2_FS && (SYSFS && (NET && (INET && (IPV6 || !IPV6))))))))))
(DLM || ((false => DLM_DEBUG) && (DLM_DEBUG => false)))
(false || (((true && true) => TRACE_IRQFLAGS_SUPPORT) && (TRACE_IRQFLAGS_SUPPORT => (true && true))))
(PRINTK || ((false => PRINTK_TIME) && (PRINTK_TIME => false)))
(true || (((true && true) => ENABLE_WARN_DEPRECATED) && (ENABLE_WARN_DEPRECATED => (true && true))))
(true || (((true && true) => ENABLE_MUST_CHECK) && (ENABLE_MUST_CHECK => (true && true))))
(true || ((((true && !a64BIT) || ((true && !a64BIT) && a64BIT)) => FRAME_WARN) && (FRAME_WARN => ((true && !a64BIT) || ((true && !a64BIT) && a64BIT)))))
(!UML || (((KGDB_SERIAL_CONSOLE && KGDB) => MAGIC_SYSRQ) && (MAGIC_SYSRQ => (KGDB_SERIAL_CONSOLE && KGDB))))
(true || (((true && X86) => UNUSED_SYMBOLS) && (UNUSED_SYMBOLS => (true && X86))))
(SYSFS || ((((((((x96true || x962) || x963) || x964) || x965) || x966) || x967) => DEBUG_FS) && (DEBUG_FS => ((((((x96true || x962) || x963) || x964) || x965) || x966) || x967))))
(x96true <=> (KVM_TRACE && (VIRTUALIZATION && (KVM && (MARKERS && SYSFS)))))
(x962 <=> (RCU_TRACE && PREEMPT_RCU))
(x963 <=> (BLK_DEV_IO_TRACE && (BLOCK && SYSFS)))
(x964 <=> (UBIFS_FS_DEBUG && UBIFS_FS))
(x965 <=> (X86_PTDUMP && DEBUG_KERNEL))
(x966 <=> (TRACING && true))
(x967 <=> (MTD_UBI_DEBUG && (MTD && (SYSFS && MTD_UBI))))
(!UML || ((false => HEADERS_CHECK) && (HEADERS_CHECK => false)))
(UNDEFINED || ((false => DEBUG_SECTION_MISMATCH) && (DEBUG_SECTION_MISMATCH => false)))
(true || ((false => DEBUG_KERNEL) && (DEBUG_KERNEL => false)))
((DEBUG_KERNEL && GENERIC_HARDIRQS) || ((false => DEBUG_SHIRQ) && (DEBUG_SHIRQ => false)))
((DEBUG_KERNEL && !S39false) || (((true && (DEBUG_KERNEL && !S39false)) => DETECT_SOFTLOCKUP) && (DETECT_SOFTLOCKUP => (true && (DEBUG_KERNEL && !S39false)))))
(DETECT_SOFTLOCKUP || ((false => BOOTPARAM_SOFTLOCKUP_PANIC) && (BOOTPARAM_SOFTLOCKUP_PANIC => false)))
(false || ((((true && (DETECT_SOFTLOCKUP && !BOOTPARAM_SOFTLOCKUP_PANIC)) || ((true && !(DETECT_SOFTLOCKUP && !BOOTPARAM_SOFTLOCKUP_PANIC)) && (DETECT_SOFTLOCKUP && BOOTPARAM_SOFTLOCKUP_PANIC))) => BOOTPARAM_SOFTLOCKUP_PANIC_VALUE) && (BOOTPARAM_SOFTLOCKUP_PANIC_VALUE => ((true && (DETECT_SOFTLOCKUP && !BOOTPARAM_SOFTLOCKUP_PANIC)) || ((true && !(DETECT_SOFTLOCKUP && !BOOTPARAM_SOFTLOCKUP_PANIC)) && (DETECT_SOFTLOCKUP && BOOTPARAM_SOFTLOCKUP_PANIC))))))
((DEBUG_KERNEL && PROC_FS) || ((((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) || (true && (DEBUG_KERNEL && PROC_FS))) => SCHED_DEBUG) && (SCHED_DEBUG => ((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) || (true && (DEBUG_KERNEL && PROC_FS))))))
((DEBUG_KERNEL && PROC_FS) || (((LATENCYTOP && HAVE_LATENCYTOP_SUPPORT) => SCHEDSTATS) && (SCHEDSTATS => (LATENCYTOP && HAVE_LATENCYTOP_SUPPORT))))
((DEBUG_KERNEL && PROC_FS) || ((false => TIMER_STATS) && (TIMER_STATS => false)))
(DEBUG_KERNEL || ((false => DEBUG_OBJECTS) && (DEBUG_OBJECTS => false)))
(DEBUG_OBJECTS || ((false => DEBUG_OBJECTS_SELFTEST) && (DEBUG_OBJECTS_SELFTEST => false)))
(DEBUG_OBJECTS || ((false => DEBUG_OBJECTS_FREE) && (DEBUG_OBJECTS_FREE => false)))
(DEBUG_OBJECTS || ((false => DEBUG_OBJECTS_TIMERS) && (DEBUG_OBJECTS_TIMERS => false)))
((DEBUG_KERNEL && SLAB) || ((false => DEBUG_SLAB) && (DEBUG_SLAB => false)))
(DEBUG_SLAB || ((false => DEBUG_SLAB_LEAK) && (DEBUG_SLAB_LEAK => false)))
((SLUB && SLUB_DEBUG) || ((false => SLUB_DEBUG_ON) && (SLUB_DEBUG_ON => false)))
((SLUB && (SLUB_DEBUG && SYSFS)) || ((false => SLUB_STATS) && (SLUB_STATS => false)))
((DEBUG_KERNEL && (PREEMPT && (TRACE_IRQFLAGS_SUPPORT || PPC64))) || (((true && (DEBUG_KERNEL && (PREEMPT && (TRACE_IRQFLAGS_SUPPORT || PPC64)))) => DEBUG_PREEMPT) && (DEBUG_PREEMPT => (true && (DEBUG_KERNEL && (PREEMPT && (TRACE_IRQFLAGS_SUPPORT || PPC64)))))))
((DEBUG_KERNEL && RT_MUTEXES) || ((false => DEBUG_RT_MUTEXES) && (DEBUG_RT_MUTEXES => false)))
(false || (((true && DEBUG_RT_MUTEXES) => DEBUG_PI_LIST) && (DEBUG_PI_LIST => (true && DEBUG_RT_MUTEXES))))
((DEBUG_KERNEL && RT_MUTEXES) || ((false => RT_MUTEX_TESTER) && (RT_MUTEX_TESTER => false)))
(DEBUG_KERNEL || (((((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (DEBUG_LOCK_ALLOC && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) => DEBUG_SPINLOCK) && (DEBUG_SPINLOCK => (((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (DEBUG_LOCK_ALLOC && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))))))
(DEBUG_KERNEL || (((((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (DEBUG_LOCK_ALLOC && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) => DEBUG_MUTEXES) && (DEBUG_MUTEXES => (((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (DEBUG_LOCK_ALLOC && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))))))
((DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))) || ((((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) => DEBUG_LOCK_ALLOC) && (DEBUG_LOCK_ALLOC => ((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))))))
((DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))) || ((false => PROVE_LOCKING) && (PROVE_LOCKING => false)))
(false || (((((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (DEBUG_LOCK_ALLOC && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) => LOCKDEP) && (LOCKDEP => (((LOCK_STAT && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))) || (PROVE_LOCKING && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))) || (DEBUG_LOCK_ALLOC && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))))))))
((DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT))) || ((false => LOCK_STAT) && (LOCK_STAT => false)))
((DEBUG_KERNEL && LOCKDEP) || ((false => DEBUG_LOCKDEP) && (DEBUG_LOCKDEP => false)))
(false || ((((IRQSOFF_TRACER && (TRACE_IRQFLAGS_SUPPORT && (GENERIC_TIME && DEBUG_KERNEL))) || (true && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && PROVE_LOCKING)))) => TRACE_IRQFLAGS) && (TRACE_IRQFLAGS => ((IRQSOFF_TRACER && (TRACE_IRQFLAGS_SUPPORT && (GENERIC_TIME && DEBUG_KERNEL))) || (true && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && PROVE_LOCKING)))))))
(DEBUG_KERNEL || ((false => DEBUG_SPINLOCK_SLEEP) && (DEBUG_SPINLOCK_SLEEP => false)))
(DEBUG_KERNEL || ((false => DEBUG_LOCKING_API_SELFTESTS) && (DEBUG_LOCKING_API_SELFTESTS => false)))
(false || ((((((x968 || x969) || x97false) || x97true) || x972) => STACKTRACE) && (STACKTRACE => ((((x968 || x969) || x97false) || x97true) || x972))))
(x968 <=> (LATENCYTOP && HAVE_LATENCYTOP_SUPPORT))
(x969 <=> (LOCKDEP && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)))))
(x97false <=> (STACK_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)))
(x97true <=> (TRACING && STACKTRACE_SUPPORT))
(x972 <=> (FAULT_INJECTION_STACKTRACE_FILTER && (FAULT_INJECTION_DEBUG_FS && (STACKTRACE_SUPPORT && !X86_64))))
(DEBUG_KERNEL || ((false => DEBUG_KOBJECT) && (DEBUG_KOBJECT => false)))
((DEBUG_KERNEL && HIGHMEM) || ((false => DEBUG_HIGHMEM) && (DEBUG_HIGHMEM => false)))
((BUG && ((ARM || (AVR32 || (M32R || (M68K || (SPARC32 || (SPARC64 || (FRV || (SUPERH || (GENERIC_BUG || (BLACKFIN || MNtruefalse3falsefalse)))))))))) && (DEBUG_KERNEL && EMBEDDED))) || (((true && ((BUG && (ARM || (AVR32 || (M32R || (M68K || (SPARC32 || (SPARC64 || (FRV || (SUPERH || (GENERIC_BUG || (BLACKFIN || MNtruefalse3falsefalse))))))))))) && !EMBEDDED)) => DEBUG_BUGVERBOSE) && (DEBUG_BUGVERBOSE => (true && ((BUG && (ARM || (AVR32 || (M32R || (M68K || (SPARC32 || (SPARC64 || (FRV || (SUPERH || (GENERIC_BUG || (BLACKFIN || MNtruefalse3falsefalse))))))))))) && !EMBEDDED)))))
(DEBUG_KERNEL || ((false => DEBUG_INFO) && (DEBUG_INFO => false)))
(DEBUG_KERNEL || ((false => DEBUG_VM) && (DEBUG_VM => false)))
((DEBUG_KERNEL && X86) || ((false => DEBUG_VIRTUAL) && (DEBUG_VIRTUAL => false)))
(DEBUG_KERNEL || ((false => DEBUG_WRITECOUNT) && (DEBUG_WRITECOUNT => false)))
(EMBEDDED || (((true && (true && !EMBEDDED)) => DEBUG_MEMORY_INIT) && (DEBUG_MEMORY_INIT => (true && (true && !EMBEDDED)))))
(DEBUG_KERNEL || ((false => DEBUG_LIST) && (DEBUG_LIST => false)))
(DEBUG_KERNEL || ((false => DEBUG_SG) && (DEBUG_SG => false)))
((DEBUG_KERNEL && (X86 || (CRIS || (M68K || (M68KNOMMU || (FRV || (UML || (S39false || (AVR32 || (SUPERH || (BLACKFIN || MNtruefalse3falsefalse))))))))))) || ((((((x973 || x974) || x975) || x976) || x977) => FRAME_POINTER) && (FRAME_POINTER => ((((x973 || x974) || x975) || x976) || x977))))
(x973 <=> (FUNCTION_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)))
(x974 <=> (LATENCYTOP && (HAVE_LATENCYTOP_SUPPORT && (!MIPS && !PPC))))
(x975 <=> (FAULT_INJECTION_STACKTRACE_FILTER && (FAULT_INJECTION_DEBUG_FS && (STACKTRACE_SUPPORT && (!X86_64 && !PPC)))))
(x976 <=> (LOCKDEP && (DEBUG_KERNEL && (TRACE_IRQFLAGS_SUPPORT && (STACKTRACE_SUPPORT && (LOCKDEP_SUPPORT && (!X86 && (!MIPS && !PPC))))))))
(x977 <=> (true && (DEBUG_KERNEL && ((X86 || (CRIS || (M68K || (M68KNOMMU || (FRV || (UML || (S39false || (AVR32 || (SUPERH || (BLACKFIN || MNtruefalse3falsefalse)))))))))) && (DEBUG_INFO && UML)))))
((DEBUG_KERNEL && (PRINTK && GENERIC_CALIBRATE_DELAY)) || ((false => BOOT_PRINTK_DELAY) && (BOOT_PRINTK_DELAY => false)))
(DEBUG_KERNEL || ((false => RCU_TORTURE_TEST) && (RCU_TORTURE_TEST => false)))
(RCU_TORTURE_TEST || ((false => RCU_TORTURE_TEST_RUNNABLE) && (RCU_TORTURE_TEST_RUNNABLE => false)))
(CLASSIC_RCU || ((false => RCU_CPU_STALL_DETECTOR) && (RCU_CPU_STALL_DETECTOR => false)))
((DEBUG_KERNEL && KPROBES) || ((false => KPROBES_SANITY_TEST) && (KPROBES_SANITY_TEST => false)))
(DEBUG_KERNEL || ((false => BACKTRACE_SELF_TEST) && (BACKTRACE_SELF_TEST => false)))
((DEBUG_KERNEL && BLOCK) || ((false => DEBUG_BLOCK_EXT_DEVT) && (DEBUG_BLOCK_EXT_DEVT => false)))
((DEBUG_KERNEL && (KPROBES && BLOCK)) || ((false => LKDTM) && (LKDTM => false)))
(DEBUG_KERNEL || ((false => FAULT_INJECTION) && (FAULT_INJECTION => false)))
(FAULT_INJECTION || ((false => FAILSLAB) && (FAILSLAB => false)))
(FAULT_INJECTION || ((false => FAIL_PAGE_ALLOC) && (FAIL_PAGE_ALLOC => false)))
((FAULT_INJECTION && BLOCK) || ((false => FAIL_MAKE_REQUEST) && (FAIL_MAKE_REQUEST => false)))
((FAULT_INJECTION && BLOCK) || ((false => FAIL_IO_TIMEOUT) && (FAIL_IO_TIMEOUT => false)))
((FAULT_INJECTION && (SYSFS && DEBUG_FS)) || ((false => FAULT_INJECTION_DEBUG_FS) && (FAULT_INJECTION_DEBUG_FS => false)))
((FAULT_INJECTION_DEBUG_FS && (STACKTRACE_SUPPORT && !X86_64)) || ((false => FAULT_INJECTION_STACKTRACE_FILTER) && (FAULT_INJECTION_STACKTRACE_FILTER => false)))
(HAVE_LATENCYTOP_SUPPORT || ((false => LATENCYTOP) && (LATENCYTOP => false)))
(SYSCTL_SYSCALL || ((false => SYSCTL_SYSCALL_CHECK) && (SYSCTL_SYSCALL_CHECK => false)))
(false || (((TRACING && true) => NOP_TRACER) && (NOP_TRACER => (TRACING && true))))
(false || (((X86 && true) => HAVE_FUNCTION_TRACER) && (HAVE_FUNCTION_TRACER => (X86 && true))))
(false || (((X86 && true) => HAVE_DYNAMIC_FTRACE) && (HAVE_DYNAMIC_FTRACE => (X86 && true))))
(false || (((X86 && true) => HAVE_FTRACE_MCOUNT_RECORD) && (HAVE_FTRACE_MCOUNT_RECORD => (X86 && true))))
(false || (((((IRQSOFF_TRACER && (TRACE_IRQFLAGS_SUPPORT && (GENERIC_TIME && DEBUG_KERNEL))) || (PREEMPT_TRACER && (GENERIC_TIME && (PREEMPT && DEBUG_KERNEL)))) || (SCHED_TRACER && DEBUG_KERNEL)) => TRACER_MAX_TRACE) && (TRACER_MAX_TRACE => (((IRQSOFF_TRACER && (TRACE_IRQFLAGS_SUPPORT && (GENERIC_TIME && DEBUG_KERNEL))) || (PREEMPT_TRACER && (GENERIC_TIME && (PREEMPT && DEBUG_KERNEL)))) || (SCHED_TRACER && DEBUG_KERNEL)))))
(false || (((TRACING && true) => RING_BUFFER) && (RING_BUFFER => (TRACING && true))))
(false || (((((((((x973 || x978) || x979) || x98false) || x98true) || x982) || x983) || x984) => TRACING) && (TRACING => (((((((x973 || x978) || x979) || x98false) || x98true) || x982) || x983) || x984))))
(x973 <=> (FUNCTION_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)))
(x978 <=> (PREEMPT_TRACER && (GENERIC_TIME && (PREEMPT && DEBUG_KERNEL))))
(x979 <=> (SCHED_TRACER && DEBUG_KERNEL))
(x98false <=> (IRQSOFF_TRACER && (TRACE_IRQFLAGS_SUPPORT && (GENERIC_TIME && DEBUG_KERNEL))))
(x98true <=> (MMIOTRACE && (DEBUG_KERNEL && PCI)))
(x982 <=> (BOOT_TRACER && DEBUG_KERNEL))
(x983 <=> (CONTEXT_SWITCH_TRACER && DEBUG_KERNEL))
(x984 <=> (SYSPROF_TRACER && X86))
((HAVE_FUNCTION_TRACER && DEBUG_KERNEL) || (((STACK_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)) => FUNCTION_TRACER) && (FUNCTION_TRACER => (STACK_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)))))
((TRACE_IRQFLAGS_SUPPORT && (GENERIC_TIME && DEBUG_KERNEL)) || ((false => IRQSOFF_TRACER) && (IRQSOFF_TRACER => false)))
((GENERIC_TIME && (PREEMPT && DEBUG_KERNEL)) || ((false => PREEMPT_TRACER) && (PREEMPT_TRACER => false)))
(X86 || ((false => SYSPROF_TRACER) && (SYSPROF_TRACER => false)))
(DEBUG_KERNEL || ((false => SCHED_TRACER) && (SCHED_TRACER => false)))
(DEBUG_KERNEL || (((((FUNCTION_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)) || (BOOT_TRACER && DEBUG_KERNEL)) || (SCHED_TRACER && DEBUG_KERNEL)) => CONTEXT_SWITCH_TRACER) && (CONTEXT_SWITCH_TRACER => (((FUNCTION_TRACER && (HAVE_FUNCTION_TRACER && DEBUG_KERNEL)) || (BOOT_TRACER && DEBUG_KERNEL)) || (SCHED_TRACER && DEBUG_KERNEL)))))
(DEBUG_KERNEL || ((false => BOOT_TRACER) && (BOOT_TRACER => false)))
((HAVE_FUNCTION_TRACER && DEBUG_KERNEL) || ((false => STACK_TRACER) && (STACK_TRACER => false)))
((FUNCTION_TRACER && (HAVE_DYNAMIC_FTRACE && DEBUG_KERNEL)) || (((true && (FUNCTION_TRACER && (HAVE_DYNAMIC_FTRACE && DEBUG_KERNEL))) => DYNAMIC_FTRACE) && (DYNAMIC_FTRACE => (true && (FUNCTION_TRACER && (HAVE_DYNAMIC_FTRACE && DEBUG_KERNEL))))))
(false || (((true && (DYNAMIC_FTRACE && HAVE_FTRACE_MCOUNT_RECORD)) => FTRACE_MCOUNT_RECORD) && (FTRACE_MCOUNT_RECORD => (true && (DYNAMIC_FTRACE && HAVE_FTRACE_MCOUNT_RECORD)))))
(false || (((FTRACE_STARTUP_TEST && (TRACING && (DEBUG_KERNEL && !BOOT_TRACER))) => FTRACE_SELFTEST) && (FTRACE_SELFTEST => (FTRACE_STARTUP_TEST && (TRACING && (DEBUG_KERNEL && !BOOT_TRACER))))))
((TRACING && (DEBUG_KERNEL && !BOOT_TRACER)) || ((false => FTRACE_STARTUP_TEST) && (FTRACE_STARTUP_TEST => false)))
((PCI && X86) || ((false => PROVIDE_OHCItrue394_DMA_INIT) && (PROVIDE_OHCItrue394_DMA_INIT => false)))
(FIREWIRE_OHCI || ((false => FIREWIRE_OHCI_REMOTE_DMA) && (FIREWIRE_OHCI_REMOTE_DMA => false)))
(HEADERS_CHECK || ((false => BUILD_DOCSRC) && (BUILD_DOCSRC => false)))
(PRINTK || ((false => DYNAMIC_PRINTK_DEBUG) && (DYNAMIC_PRINTK_DEBUG => false)))
(true || ((false => SAMPLES) && (SAMPLES => false)))
((SAMPLES && (MARKERS && (true && true))) || ((false => SAMPLE_MARKERS) && (SAMPLE_MARKERS => false)))
((SAMPLES && (TRACEPOINTS && (true && true))) || ((false => SAMPLE_TRACEPOINTS) && (SAMPLE_TRACEPOINTS => false)))
(SAMPLES || ((false => SAMPLE_KOBJECT) && (SAMPLE_KOBJECT => false)))
((SAMPLES && (KPROBES && (true && true))) || ((false => SAMPLE_KPROBES) && (SAMPLE_KPROBES => false)))
((SAMPLES && (SAMPLE_KPROBES && KRETPROBES)) || (((true && (SAMPLES && (SAMPLE_KPROBES && KRETPROBES))) => SAMPLE_KRETPROBES) && (SAMPLE_KRETPROBES => (true && (SAMPLES && (SAMPLE_KPROBES && KRETPROBES))))))
(false || (((X86 && !X86_VOYAGER) => HAVE_ARCH_KGDB) && (HAVE_ARCH_KGDB => (X86 && !X86_VOYAGER))))
((HAVE_ARCH_KGDB && (DEBUG_KERNEL && EXPERIMENTAL)) || ((false => KGDB) && (KGDB => false)))
(KGDB || (((true && KGDB) => KGDB_SERIAL_CONSOLE) && (KGDB_SERIAL_CONSOLE => (true && KGDB))))
(KGDB || ((false => KGDB_TESTS) && (KGDB_TESTS => false)))
((KGDB && KGDB_TESTS) || ((false => KGDB_TESTS_ON_BOOT) && (KGDB_TESTS_ON_BOOT => false)))
((KGDB && KGDB_TESTS_ON_BOOT) || (((true && (KGDB && KGDB_TESTS_ON_BOOT)) => KGDB_TESTS_BOOT_STRING) && (KGDB_TESTS_BOOT_STRING => (true && (KGDB && KGDB_TESTS_ON_BOOT)))))
(true || ((false => STRICT_DEVMEM) && (STRICT_DEVMEM => false)))
(true || (((true && true) => X86_VERBOSE_BOOTUP) && (X86_VERBOSE_BOOTUP => (true && true))))
(EMBEDDED || (((true && true) => EARLY_PRINTK) && (EARLY_PRINTK => (true && true))))
((EARLY_PRINTK && PCI) || ((false => EARLY_PRINTK_DBGP) && (EARLY_PRINTK_DBGP => false)))
(DEBUG_KERNEL || ((false => DEBUG_STACKOVERFLOW) && (DEBUG_STACKOVERFLOW => false)))
(DEBUG_KERNEL || ((false => DEBUG_STACK_USAGE) && (DEBUG_STACK_USAGE => false)))
(DEBUG_KERNEL || ((false => DEBUG_PAGEALLOC) && (DEBUG_PAGEALLOC => false)))
((DEBUG_KERNEL && X86_SMP) || ((false => DEBUG_PER_CPU_MAPS) && (DEBUG_PER_CPU_MAPS => false)))
(DEBUG_KERNEL || ((false => X86_PTDUMP) && (X86_PTDUMP => false)))
(DEBUG_KERNEL || (((true && DEBUG_KERNEL) => DEBUG_RODATA) && (DEBUG_RODATA => (true && DEBUG_KERNEL))))
((DEBUG_KERNEL && (EXPERIMENTAL && X86_64)) || ((false => DIRECT_GBPAGES) && (DIRECT_GBPAGES => false)))
(DEBUG_RODATA || ((false => DEBUG_RODATA_TEST) && (DEBUG_RODATA_TEST => false)))
((DEBUG_KERNEL && (true && true)) || ((false => DEBUG_NX_TEST) && (DEBUG_NX_TEST => false)))
(X86_32 || ((false => 4KSTACKS) && (4KSTACKS => false)))
((X86_32 && EMBEDDED) || (((true && X86_32) => DOUBLEFAULT) && (DOUBLEFAULT => (true && X86_32))))
((GART_IOMMU && (DEBUG_KERNEL && X86_64)) || ((false => IOMMU_DEBUG) && (IOMMU_DEBUG => false)))
((DEBUG_KERNEL && IOMMU_DEBUG) || ((false => IOMMU_LEAK) && (IOMMU_LEAK => false)))
(false || (((MMIOTRACE && (DEBUG_KERNEL && PCI)) => MMIOTRACE_HOOKS) && (MMIOTRACE_HOOKS => (MMIOTRACE && (DEBUG_KERNEL && PCI)))))
((DEBUG_KERNEL && PCI) || ((false => MMIOTRACE) && (MMIOTRACE => false)))
((MMIOTRACE && (true && true)) || ((false => MMIOTRACE_TEST) && (MMIOTRACE_TEST => false)))
(false || (((true && true) => IO_DELAY_TYPE_falseX8false) && (IO_DELAY_TYPE_falseX8false => (true && true))))
(false || (((true && true) => IO_DELAY_TYPE_falseXED) && (IO_DELAY_TYPE_falseXED => (true && true))))
(false || (((true && true) => IO_DELAY_TYPE_UDELAY) && (IO_DELAY_TYPE_UDELAY => (true && true))))
(false || (((true && true) => IO_DELAY_TYPE_NONE) && (IO_DELAY_TYPE_NONE => (true && true))))
(true || ((false => IO_DELAY_falseX8false) && (IO_DELAY_falseX8false => false)))
(true || ((false => IO_DELAY_falseXED) && (IO_DELAY_falseXED => false)))
(true || ((false => IO_DELAY_UDELAY) && (IO_DELAY_UDELAY => false)))
(true || ((false => IO_DELAY_NONE) && (IO_DELAY_NONE => false)))
(false || ((((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))) => DEFAULT_IO_DELAY_TYPE) && (DEFAULT_IO_DELAY_TYPE => ((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))))))
(false || ((((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))) => DEFAULT_IO_DELAY_TYPE) && (DEFAULT_IO_DELAY_TYPE => ((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))))))
(false || ((((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))) => DEFAULT_IO_DELAY_TYPE) && (DEFAULT_IO_DELAY_TYPE => ((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))))))
(false || ((((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))) => DEFAULT_IO_DELAY_TYPE) && (DEFAULT_IO_DELAY_TYPE => ((((true && (IO_DELAY_falseX8false && IO_DELAY_TYPE_falseX8false)) || ((true && !IO_DELAY_falseX8false) && (IO_DELAY_falseXED && IO_DELAY_TYPE_falseXED))) || (((true && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_UDELAY && IO_DELAY_TYPE_UDELAY))) || ((((true && !IO_DELAY_UDELAY) && !IO_DELAY_falseXED) && !IO_DELAY_falseX8false) && (IO_DELAY_NONE && IO_DELAY_TYPE_NONE))))))
((DEBUG_KERNEL && DEBUG_FS) || ((false => DEBUG_BOOT_PARAMS) && (DEBUG_BOOT_PARAMS => false)))
(DEBUG_KERNEL || ((false => CPA_DEBUG) && (CPA_DEBUG => false)))
(true || ((false => OPTIMIZE_INLINING) && (OPTIMIZE_INLINING => false)))
(true || (((AF_RXRPC && (NET && (INET && EXPERIMENTAL))) => KEYS) && (KEYS => (AF_RXRPC && (NET && (INET && EXPERIMENTAL))))))
(KEYS || ((false => KEYS_DEBUG_PROC_KEYS) && (KEYS_DEBUG_PROC_KEYS => false)))
(SYSFS || ((false => SECURITY) && (SECURITY => false)))
(true || (((TCG_TPM && (HAS_IOMEM && EXPERIMENTAL)) => SECURITYFS) && (SECURITYFS => (TCG_TPM && (HAS_IOMEM && EXPERIMENTAL)))))
(SECURITY || ((false => SECURITY_NETWORK) && (SECURITY_NETWORK => false)))
((XFRM && SECURITY_NETWORK) || ((false => SECURITY_NETWORK_XFRM) && (SECURITY_NETWORK_XFRM => false)))
(true || ((false => SECURITY_FILE_CAPABILITIES) && (SECURITY_FILE_CAPABILITIES => false)))
((USB && SECURITY) || ((false => SECURITY_ROOTPLUG) && (SECURITY_ROOTPLUG => false)))
(SECURITY || (((true && SECURITY) => SECURITY_DEFAULT_MMAP_MIN_ADDR) && (SECURITY_DEFAULT_MMAP_MIN_ADDR => (true && SECURITY))))
((SECURITY_NETWORK && (AUDIT && (NET && INET))) || ((false => SECURITY_SELINUX) && (SECURITY_SELINUX => false)))
(SECURITY_SELINUX || ((false => SECURITY_SELINUX_BOOTPARAM) && (SECURITY_SELINUX_BOOTPARAM => false)))
(SECURITY_SELINUX_BOOTPARAM || (((true && SECURITY_SELINUX_BOOTPARAM) => SECURITY_SELINUX_BOOTPARAM_VALUE) && (SECURITY_SELINUX_BOOTPARAM_VALUE => (true && SECURITY_SELINUX_BOOTPARAM))))
(SECURITY_SELINUX || ((false => SECURITY_SELINUX_DISABLE) && (SECURITY_SELINUX_DISABLE => false)))
(SECURITY_SELINUX || (((true && SECURITY_SELINUX) => SECURITY_SELINUX_DEVELOP) && (SECURITY_SELINUX_DEVELOP => (true && SECURITY_SELINUX))))
(SECURITY_SELINUX || (((true && SECURITY_SELINUX) => SECURITY_SELINUX_AVC_STATS) && (SECURITY_SELINUX_AVC_STATS => (true && SECURITY_SELINUX))))
(SECURITY_SELINUX || (((true && SECURITY_SELINUX) => SECURITY_SELINUX_CHECKREQPROT_VALUE) && (SECURITY_SELINUX_CHECKREQPROT_VALUE => (true && SECURITY_SELINUX))))
(SECURITY_SELINUX || ((false => SECURITY_SELINUX_ENABLE_SECMARK_DEFAULT) && (SECURITY_SELINUX_ENABLE_SECMARK_DEFAULT => false)))
(SECURITY_SELINUX || ((false => SECURITY_SELINUX_POLICYDB_VERSION_MAX) && (SECURITY_SELINUX_POLICYDB_VERSION_MAX => false)))
(SECURITY_SELINUX_POLICYDB_VERSION_MAX || (((true && SECURITY_SELINUX_POLICYDB_VERSION_MAX) => SECURITY_SELINUX_POLICYDB_VERSION_MAX_VALUE) && (SECURITY_SELINUX_POLICYDB_VERSION_MAX_VALUE => (true && SECURITY_SELINUX_POLICYDB_VERSION_MAX))))
((NETLABEL && SECURITY_NETWORK) || ((false => SECURITY_SMACK) && (SECURITY_SMACK => false)))
(false || (((ASYNC_XOR && true) => XOR_BLOCKS) && (XOR_BLOCKS => (ASYNC_XOR && true))))
(false || ((((((x985 || x938) || x939) || x986) || x987) => ASYNC_CORE) && (ASYNC_CORE => ((((x985 || x938) || x939) || x986) || x987))))
(x985 <=> (ASYNC_XOR && true))
(x938 <=> (INTEL_IOP_ADMA && (DMADEVICES && (ARCH_IOP32X || (ARCH_IOP33X || ARCH_IOPtrue3XX)))))
(x939 <=> (MV_XOR && (DMADEVICES && PLAT_ORION)))
(x986 <=> (ASYNC_MEMCPY && true))
(x987 <=> (ASYNC_MEMSET && true))
(false || (((MD_RAID456 && (MD && BLK_DEV_MD)) => ASYNC_MEMCPY) && (ASYNC_MEMCPY => (MD_RAID456 && (MD && BLK_DEV_MD)))))
(false || (((MD_RAID456 && (MD && BLK_DEV_MD)) => ASYNC_XOR) && (ASYNC_XOR => (MD_RAID456 && (MD && BLK_DEV_MD)))))
(false || ((false => ASYNC_MEMSET) && (ASYNC_MEMSET => false)))
(true || ((((((((((((((((((((((((((((x988 || x98) || x989) || x99false) || x47) || xtruefalsefalse) || x99true) || xtruefalsetrue) || x992) || x48) || x993) || x994) || xtruefalse7) || x995) || x996) || x997) || x998) || x5true) || xtruetrue3) || x999) || xtruefalsefalsefalse) || xtruefalsefalsetrue) || xtruefalsefalse2) || xtruefalsefalse3) || xtruefalsefalse4) || x57) || x58) => CRYPTO) && (CRYPTO => ((((((((((((((((((((((((((x988 || x98) || x989) || x99false) || x47) || xtruefalsefalse) || x99true) || xtruefalsetrue) || x992) || x48) || x993) || x994) || xtruefalse7) || x995) || x996) || x997) || x998) || x5true) || xtruetrue3) || x999) || xtruefalsefalsefalse) || xtruefalsefalsetrue) || xtruefalsefalse2) || xtruefalsefalse3) || xtruefalsefalse4) || x57) || x58))))
(x988 <=> (IP_SCTP && (NET && (INET && (EXPERIMENTAL && (IPV6 || !IPV6))))))
(x98 <=> (IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))))
(x989 <=> (PPP_MPPE && (NETDEVICES && (PPP && EXPERIMENTAL))))
(x99false <=> (UBIFS_FS && (MTD_UBI && UBIFS_FS_LZO)))
(x47 <=> (XFRM_IPCOMP && NET))
(xtruefalsefalse <=> (HERMES && (NETDEVICES && (!S39false && ((PPC_PMAC || (PCI || PCMCIA)) && WLAN_8false2truetrue)))))
(x99true <=> (RXKAD && (NET && AF_RXRPC)))
(xtruefalsetrue <=> (AIRO_CS && (NETDEVICES && (!S39false && (PCMCIA && ((BROKEN || !M32R) && WLAN_8false2truetrue))))))
(x992 <=> (UBIFS_FS && (MTD_UBI && UBIFS_FS_ADVANCED_COMPR)))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(x993 <=> (AF_RXRPC && (NET && (INET && EXPERIMENTAL))))
(x994 <=> (UBIFS_FS && (MTD_UBI && UBIFS_FS_ZLIB)))
(xtruefalse7 <=> (AIRO && (NETDEVICES && (!S39false && (ISA_DMA_API && (WLAN_8false2truetrue && (PCI || BROKEN)))))))
(x995 <=> (BLK_DEV_CRYPTOLOOP && (BLK_DEV && BLK_DEV_LOOP)))
(x996 <=> (IEEE8false2truetrue_CRYPT_WEP && (NET && (WIRELESS && IEEE8false2truetrue))))
(x997 <=> (DM_CRYPT && (MD && BLK_DEV_DM)))
(x998 <=> (XFRM && NET))
(x5true <=> (INET6_AH && (NET && (INET && IPV6))))
(xtruetrue3 <=> (MAC8false2truetrue && (NET && WIRELESS)))
(x999 <=> (RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(xtruefalsefalsefalse <=> (TCP_MD5SIG && (NET && (INET && EXPERIMENTAL))))
(xtruefalsefalsetrue <=> (USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))))
(xtruefalsefalse2 <=> (RPCSEC_GSS_KRB5 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(xtruefalsefalse3 <=> (ISCSI_TCP && (SCSI_LOWLEVEL && (SCSI && INET))))
(xtruefalsefalse4 <=> (IEEE8false2truetrue_CRYPT_CCMP && (NET && (WIRELESS && IEEE8false2truetrue))))
(x57 <=> (INET_AH && (NET && INET)))
(x58 <=> (INET_ESP && (NET && INET)))
(CRYPTO || (((CRYPTO_ANSI_CPRNG && CRYPTO) => CRYPTO_FIPS) && (CRYPTO_FIPS => (CRYPTO_ANSI_CPRNG && CRYPTO))))
(false || ((((((((((((((((((((((((((((((((((((((((((((((((xtruefalsefalse5 || xtruefalsefalse6) || xtruefalsefalse7) || xtruefalsefalse8) || xtruefalsefalse9) || xtruefalsetruefalse) || xtruefalsetruetrue) || xtruefalsetrue2) || x467) || xtruefalsetrue3) || xtruefalsetrue4) || xtruefalsetrue5) || xtruefalsetrue6) || xtruefalsetrue7) || xtruefalsetrue8) || xtruefalsetrue9) || xtruefalse2false) || xtruefalse2true) || xtruefalse22) || xtruefalse23) || xtruefalse24) || xtruefalse25) || xtruefalse26) || xtruefalse27) || xtruefalse28) || xtruefalse29) || xtruefalse3false) || xtruefalse3true) || xtruefalse32) || xtruefalse33) || xtruefalse34) || xtruefalse35) || xtruefalse36) || xtruefalse37) || xtruefalse38) || xtruefalse39) || xtruefalse4false) || xtruefalse4true) || xtruefalse42) || xtruefalse43) || xtruefalse44) || xtruefalse45) || xtruefalse46) || xtruefalse47) || xtruefalse48) || xtruefalse49) || xtruefalse5false) => CRYPTO_ALGAPI) && (CRYPTO_ALGAPI => ((((((((((((((((((((((((((((((((((((((((((((((xtruefalsefalse5 || xtruefalsefalse6) || xtruefalsefalse7) || xtruefalsefalse8) || xtruefalsefalse9) || xtruefalsetruefalse) || xtruefalsetruetrue) || xtruefalsetrue2) || x467) || xtruefalsetrue3) || xtruefalsetrue4) || xtruefalsetrue5) || xtruefalsetrue6) || xtruefalsetrue7) || xtruefalsetrue8) || xtruefalsetrue9) || xtruefalse2false) || xtruefalse2true) || xtruefalse22) || xtruefalse23) || xtruefalse24) || xtruefalse25) || xtruefalse26) || xtruefalse27) || xtruefalse28) || xtruefalse29) || xtruefalse3false) || xtruefalse3true) || xtruefalse32) || xtruefalse33) || xtruefalse34) || xtruefalse35) || xtruefalse36) || xtruefalse37) || xtruefalse38) || xtruefalse39) || xtruefalse4false) || xtruefalse4true) || xtruefalse42) || xtruefalse43) || xtruefalse44) || xtruefalse45) || xtruefalse46) || xtruefalse47) || xtruefalse48) || xtruefalse49) || xtruefalse5false))))
(xtruefalsefalse5 <=> (CRYPTO_LZO && CRYPTO))
(xtruefalsefalse6 <=> (CRYPTO_CAST6 && CRYPTO))
(xtruefalsefalse7 <=> (CRYPTO_RNG && CRYPTO))
(xtruefalsefalse8 <=> (CRYPTO_WP5true2 && CRYPTO))
(xtruefalsefalse9 <=> (CRYPTO_AES_586 && (CRYPTO && ((X86 || UML_X86) && !a64BIT))))
(xtruefalsetruefalse <=> (CRYPTO_TGRtrue92 && CRYPTO))
(xtruefalsetruetrue <=> (CRYPTO_BLOWFISH && CRYPTO))
(xtruefalsetrue2 <=> (CRYPTO_TEA && CRYPTO))
(x467 <=> (CRYPTO_DEV_TALITOS && (CRYPTO && (CRYPTO_HW && FSL_SOC))))
(xtruefalsetrue3 <=> (CRYPTO_FCRYPT && CRYPTO))
(xtruefalsetrue4 <=> (CRYPTO_BLKCIPHER && CRYPTO))
(xtruefalsetrue5 <=> (CRYPTO_ARC4 && CRYPTO))
(xtruefalsetrue6 <=> (CRYPTO_SHA5true2 && CRYPTO))
(xtruefalsetrue7 <=> (CRYPTO_KHAZAD && CRYPTO))
(xtruefalsetrue8 <=> (CRYPTO_ANUBIS && CRYPTO))
(xtruefalsetrue9 <=> (CRYPTO_DES_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse2false <=> (CRYPTO_TWOFISH_586 && (CRYPTO && ((X86 || UML_X86) && !a64BIT))))
(xtruefalse2true <=> (CRYPTO_DEV_PADLOCK && (CRYPTO && (CRYPTO_HW && (X86_32 && !UML)))))
(xtruefalse22 <=> (CRYPTO_TWOFISH_X86_64 && (CRYPTO && ((X86 || UML_X86) && a64BIT))))
(xtruefalse23 <=> (CRYPTO_SEED && CRYPTO))
(xtruefalse24 <=> (CRYPTO_SHA256 && CRYPTO))
(xtruefalse25 <=> (CRYPTO_MICHAEL_MIC && CRYPTO))
(xtruefalse26 <=> (CRYPTO_MD4 && CRYPTO))
(xtruefalse27 <=> (CRYPTO_SHAtrue_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse28 <=> (CRYPTO_SHA5true2_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse29 <=> (CRYPTO_AES_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse3false <=> (CRYPTO_DEV_GEODE && (CRYPTO && (CRYPTO_HW && (X86_32 && PCI)))))
(xtruefalse3true <=> (CRYPTO_NULL && CRYPTO))
(xtruefalse32 <=> (CRYPTO_SERPENT && CRYPTO))
(xtruefalse33 <=> (CRYPTO_RMDtrue6false && CRYPTO))
(xtruefalse34 <=> (CRYPTO_AES_X86_64 && (CRYPTO && ((X86 || UML_X86) && a64BIT))))
(xtruefalse35 <=> (CRYPTO_DEFLATE && CRYPTO))
(xtruefalse36 <=> (CRYPTO_MD5 && CRYPTO))
(xtruefalse37 <=> (CRYPTO_SHAtrue && CRYPTO))
(xtruefalse38 <=> (CRYPTO_RMD32false && CRYPTO))
(xtruefalse39 <=> (CRYPTO_CAST5 && CRYPTO))
(xtruefalse4false <=> (CRYPTO_RMDtrue28 && CRYPTO))
(xtruefalse4true <=> (CRYPTO_CAMELLIA && CRYPTO))
(xtruefalse42 <=> (CRYPTO_DEV_IXP4XX && (CRYPTO && (CRYPTO_HW && ARCH_IXP4XX))))
(xtruefalse43 <=> (CRYPTO_AEAD && CRYPTO))
(xtruefalse44 <=> (CRYPTO_DES && CRYPTO))
(xtruefalse45 <=> (CRYPTO_SHA256_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse46 <=> (CRYPTO_DEV_HIFN_795X && (CRYPTO && (CRYPTO_HW && PCI))))
(xtruefalse47 <=> (CRYPTO_RMD256 && CRYPTO))
(xtruefalse48 <=> (CRYPTO_TWOFISH && CRYPTO))
(xtruefalse49 <=> (CRYPTO_AES && CRYPTO))
(xtruefalse5false <=> (CRYPTO_HASH && CRYPTO))
(false || ((((((xtruefalse5true || xtruefalse52) || xtruefalse53) || xtruefalse54) || xtruefalse55) => CRYPTO_ALGAPI2) && (CRYPTO_ALGAPI2 => ((((xtruefalse5true || xtruefalse52) || xtruefalse53) || xtruefalse54) || xtruefalse55))))
(xtruefalse5true <=> (CRYPTO_AEAD2 && CRYPTO))
(xtruefalse52 <=> (CRYPTO_ALGAPI && CRYPTO))
(xtruefalse53 <=> (CRYPTO_RNG2 && CRYPTO))
(xtruefalse54 <=> (CRYPTO_HASH2 && CRYPTO))
(xtruefalse55 <=> (CRYPTO_BLKCIPHER2 && CRYPTO))
(false || ((((((CRYPTO_AUTHENC && CRYPTO) || (CRYPTO_GCM && CRYPTO)) || (CRYPTO_CCM && CRYPTO)) || (CRYPTO_SEQIV && CRYPTO)) => CRYPTO_AEAD) && (CRYPTO_AEAD => ((((CRYPTO_AUTHENC && CRYPTO) || (CRYPTO_GCM && CRYPTO)) || (CRYPTO_CCM && CRYPTO)) || (CRYPTO_SEQIV && CRYPTO)))))
(false || ((((CRYPTO_AEAD && CRYPTO) || (CRYPTO_MANAGER2 && CRYPTO)) => CRYPTO_AEAD2) && (CRYPTO_AEAD2 => ((CRYPTO_AEAD && CRYPTO) || (CRYPTO_MANAGER2 && CRYPTO)))))
(false || ((((((((((((((((((((((((xtruefalse56 || xtruefalse57) || xtruefalse58) || x99true) || xtruefalsetrue3) || xtruefalse59) || xtruefalse6false) || xtruefalse6true) || xtruefalsetrue9) || xtruefalse42) || xtruefalse62) || xtruefalse63) || xtruefalse64) || xtruefalse65) || xtruefalse66) || xtruefalse46) || xtruefalsefalsetrue) || xtruefalse67) || xtruefalse68) || xtruefalse29) || xtruefalse3false) || xtruefalse69) || xtruefalse3true) => CRYPTO_BLKCIPHER) && (CRYPTO_BLKCIPHER => ((((((((((((((((((((((xtruefalse56 || xtruefalse57) || xtruefalse58) || x99true) || xtruefalsetrue3) || xtruefalse59) || xtruefalse6false) || xtruefalse6true) || xtruefalsetrue9) || xtruefalse42) || xtruefalse62) || xtruefalse63) || xtruefalse64) || xtruefalse65) || xtruefalse66) || xtruefalse46) || xtruefalsefalsetrue) || xtruefalse67) || xtruefalse68) || xtruefalse29) || xtruefalse3false) || xtruefalse69) || xtruefalse3true))))
(xtruefalse56 <=> (CRYPTO_LRW && (CRYPTO && EXPERIMENTAL)))
(xtruefalse57 <=> (CRYPTO_CBC && CRYPTO))
(xtruefalse58 <=> (CRYPTO_CTR && CRYPTO))
(x99true <=> (RXKAD && (NET && AF_RXRPC)))
(xtruefalsetrue3 <=> (CRYPTO_FCRYPT && CRYPTO))
(xtruefalse59 <=> (CRYPTO_XTS && (CRYPTO && EXPERIMENTAL)))
(xtruefalse6false <=> (CRYPTO_CRYPTD && CRYPTO))
(xtruefalse6true <=> (CRYPTO_DEV_PADLOCK_AES && (CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK))))
(xtruefalsetrue9 <=> (CRYPTO_DES_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse42 <=> (CRYPTO_DEV_IXP4XX && (CRYPTO && (CRYPTO_HW && ARCH_IXP4XX))))
(xtruefalse62 <=> (CRYPTO_ECB && CRYPTO))
(xtruefalse63 <=> (CRYPTO_SALSA2false_X86_64 && (CRYPTO && ((X86 || UML_X86) && (a64BIT && EXPERIMENTAL)))))
(xtruefalse64 <=> (CRYPTO_AUTHENC && CRYPTO))
(xtruefalse65 <=> (CRYPTO_SALSA2false_586 && (CRYPTO && ((X86 || UML_X86) && (!a64BIT && EXPERIMENTAL)))))
(xtruefalse66 <=> (CRYPTO_SEQIV && CRYPTO))
(xtruefalse46 <=> (CRYPTO_DEV_HIFN_795X && (CRYPTO && (CRYPTO_HW && PCI))))
(xtruefalsefalsetrue <=> (USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))))
(xtruefalse67 <=> (CRYPTO_CTS && CRYPTO))
(xtruefalse68 <=> (CRYPTO_SALSA2false && (CRYPTO && EXPERIMENTAL)))
(xtruefalse29 <=> (CRYPTO_AES_S39false && (CRYPTO && (CRYPTO_HW && S39false))))
(xtruefalse3false <=> (CRYPTO_DEV_GEODE && (CRYPTO && (CRYPTO_HW && (X86_32 && PCI)))))
(xtruefalse69 <=> (CRYPTO_PCBC && CRYPTO))
(xtruefalse3true <=> (CRYPTO_NULL && CRYPTO))
(false || ((((CRYPTO_BLKCIPHER && CRYPTO) || (CRYPTO_MANAGER2 && CRYPTO)) => CRYPTO_BLKCIPHER2) && (CRYPTO_BLKCIPHER2 => ((CRYPTO_BLKCIPHER && CRYPTO) || (CRYPTO_MANAGER2 && CRYPTO)))))
(false || (((((((xtruefalse7false || xtruefalse64) || xtruefalse7true) || xtruefalse72) || xtruefalse73) || xtruefalse6false) => CRYPTO_HASH) && (CRYPTO_HASH => (((((xtruefalse7false || xtruefalse64) || xtruefalse7true) || xtruefalse72) || xtruefalse73) || xtruefalse6false))))
(xtruefalse7false <=> (CRYPTO_CRC32C_INTEL && (CRYPTO && X86)))
(xtruefalse64 <=> (CRYPTO_AUTHENC && CRYPTO))
(xtruefalse7true <=> (CRYPTO_HMAC && CRYPTO))
(xtruefalse72 <=> (CRYPTO_XCBC && (CRYPTO && EXPERIMENTAL)))
(xtruefalse73 <=> (CRYPTO_CRC32C && CRYPTO))
(xtruefalse6false <=> (CRYPTO_CRYPTD && CRYPTO))
(false || ((((CRYPTO_MANAGER2 && CRYPTO) || (CRYPTO_HASH && CRYPTO)) => CRYPTO_HASH2) && (CRYPTO_HASH2 => ((CRYPTO_MANAGER2 && CRYPTO) || (CRYPTO_HASH && CRYPTO)))))
(false || ((((CRYPTO_ANSI_CPRNG && CRYPTO) || (CRYPTO_SEQIV && CRYPTO)) => CRYPTO_RNG) && (CRYPTO_RNG => ((CRYPTO_ANSI_CPRNG && CRYPTO) || (CRYPTO_SEQIV && CRYPTO)))))
(false || ((((CRYPTO_RNG && CRYPTO) || (CRYPTO_BLKCIPHER2 && CRYPTO)) => CRYPTO_RNG2) && (CRYPTO_RNG2 => ((CRYPTO_RNG && CRYPTO) || (CRYPTO_BLKCIPHER2 && CRYPTO)))))
(CRYPTO || ((((((((((((((xtruefalse56 || xtruefalse57) || xtruefalse58) || xtruefalse64) || xtruefalse7true) || xtruefalse72) || x99true) || xtruefalsefalsetrue) || xtruefalse6false) || xtruefalse59) || xtruefalse74) || xtruefalse69) || xtruefalse62) => CRYPTO_MANAGER) && (CRYPTO_MANAGER => ((((((((((((xtruefalse56 || xtruefalse57) || xtruefalse58) || xtruefalse64) || xtruefalse7true) || xtruefalse72) || x99true) || xtruefalsefalsetrue) || xtruefalse6false) || xtruefalse59) || xtruefalse74) || xtruefalse69) || xtruefalse62))))
(xtruefalse56 <=> (CRYPTO_LRW && (CRYPTO && EXPERIMENTAL)))
(xtruefalse57 <=> (CRYPTO_CBC && CRYPTO))
(xtruefalse58 <=> (CRYPTO_CTR && CRYPTO))
(xtruefalse64 <=> (CRYPTO_AUTHENC && CRYPTO))
(xtruefalse7true <=> (CRYPTO_HMAC && CRYPTO))
(xtruefalse72 <=> (CRYPTO_XCBC && (CRYPTO && EXPERIMENTAL)))
(x99true <=> (RXKAD && (NET && AF_RXRPC)))
(xtruefalsefalsetrue <=> (USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))))
(xtruefalse6false <=> (CRYPTO_CRYPTD && CRYPTO))
(xtruefalse59 <=> (CRYPTO_XTS && (CRYPTO && EXPERIMENTAL)))
(xtruefalse74 <=> (CRYPTO_TEST && (CRYPTO && (true && true))))
(xtruefalse69 <=> (CRYPTO_PCBC && CRYPTO))
(xtruefalse62 <=> (CRYPTO_ECB && CRYPTO))
(false || ((((CRYPTO_MANAGER && CRYPTO) || (true && (CRYPTO && (CRYPTO_MANAGER || (!CRYPTO_MANAGER && CRYPTO_ALGAPI))))) => CRYPTO_MANAGER2) && (CRYPTO_MANAGER2 => ((CRYPTO_MANAGER && CRYPTO) || (true && (CRYPTO && (CRYPTO_MANAGER || (!CRYPTO_MANAGER && CRYPTO_ALGAPI))))))))
((CRYPTO && EXPERIMENTAL) || (((((CRYPTO_LRW && (CRYPTO && EXPERIMENTAL)) || (CRYPTO_GCM && CRYPTO)) || (CRYPTO_XTS && (CRYPTO && EXPERIMENTAL))) => CRYPTO_GFtrue28MUL) && (CRYPTO_GFtrue28MUL => (((CRYPTO_LRW && (CRYPTO && EXPERIMENTAL)) || (CRYPTO_GCM && CRYPTO)) || (CRYPTO_XTS && (CRYPTO && EXPERIMENTAL))))))
(CRYPTO || ((false => CRYPTO_NULL) && (CRYPTO_NULL => false)))
(CRYPTO || ((false => CRYPTO_CRYPTD) && (CRYPTO_CRYPTD => false)))
(CRYPTO || ((((((CRYPTO_DEV_TALITOS && (CRYPTO && (CRYPTO_HW && FSL_SOC))) || (CRYPTO_DEV_IXP4XX && (CRYPTO && (CRYPTO_HW && ARCH_IXP4XX)))) || (INET_ESP && (NET && INET))) || (INET6_ESP && (NET && (INET && IPV6)))) => CRYPTO_AUTHENC) && (CRYPTO_AUTHENC => ((((CRYPTO_DEV_TALITOS && (CRYPTO && (CRYPTO_HW && FSL_SOC))) || (CRYPTO_DEV_IXP4XX && (CRYPTO && (CRYPTO_HW && ARCH_IXP4XX)))) || (INET_ESP && (NET && INET))) || (INET6_ESP && (NET && (INET && IPV6)))))))
((CRYPTO && (true && true)) || ((false => CRYPTO_TEST) && (CRYPTO_TEST => false)))
(CRYPTO || ((false => CRYPTO_CCM) && (CRYPTO_CCM => false)))
(CRYPTO || ((false => CRYPTO_GCM) && (CRYPTO_GCM => false)))
(CRYPTO || (((CRYPTO_CTR && CRYPTO) => CRYPTO_SEQIV) && (CRYPTO_SEQIV => (CRYPTO_CTR && CRYPTO))))
(CRYPTO || ((((((((x999 || x48) || xtruefalsefalse2) || xtruefalsefalsetrue) || x995) || x997) || x58) => CRYPTO_CBC) && (CRYPTO_CBC => ((((((x999 || x48) || xtruefalsefalse2) || xtruefalsefalsetrue) || x995) || x997) || x58))))
(x999 <=> (RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(xtruefalsefalse2 <=> (RPCSEC_GSS_KRB5 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(xtruefalsefalsetrue <=> (USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))))
(x995 <=> (BLK_DEV_CRYPTOLOOP && (BLK_DEV && BLK_DEV_LOOP)))
(x997 <=> (DM_CRYPT && (MD && BLK_DEV_DM)))
(x58 <=> (INET_ESP && (NET && INET)))
(CRYPTO || ((((CRYPTO_GCM && CRYPTO) || (CRYPTO_CCM && CRYPTO)) => CRYPTO_CTR) && (CRYPTO_CTR => ((CRYPTO_GCM && CRYPTO) || (CRYPTO_CCM && CRYPTO)))))
(CRYPTO || ((false => CRYPTO_CTS) && (CRYPTO_CTS => false)))
(CRYPTO || ((((((IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))) || (PPP_MPPE && (NETDEVICES && (PPP && EXPERIMENTAL)))) || (MAC8false2truetrue && (NET && WIRELESS))) || (IEEE8false2truetrue_CRYPT_WEP && (NET && (WIRELESS && IEEE8false2truetrue)))) => CRYPTO_ECB) && (CRYPTO_ECB => ((((IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))) || (PPP_MPPE && (NETDEVICES && (PPP && EXPERIMENTAL)))) || (MAC8false2truetrue && (NET && WIRELESS))) || (IEEE8false2truetrue_CRYPT_WEP && (NET && (WIRELESS && IEEE8false2truetrue)))))))
((CRYPTO && EXPERIMENTAL) || ((false => CRYPTO_LRW) && (CRYPTO_LRW => false)))
(CRYPTO || (((RXKAD && (NET && AF_RXRPC)) => CRYPTO_PCBC) && (CRYPTO_PCBC => (RXKAD && (NET && AF_RXRPC)))))
((CRYPTO && EXPERIMENTAL) || ((false => CRYPTO_XTS) && (CRYPTO_XTS => false)))
(CRYPTO || ((((((x988 || x57) || x58) || x48) || x5true) => CRYPTO_HMAC) && (CRYPTO_HMAC => ((((x988 || x57) || x58) || x48) || x5true))))
(x988 <=> (IP_SCTP && (NET && (INET && (EXPERIMENTAL && (IPV6 || !IPV6))))))
(x57 <=> (INET_AH && (NET && INET)))
(x58 <=> (INET_ESP && (NET && INET)))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(x5true <=> (INET6_AH && (NET && (INET && IPV6))))
((CRYPTO && EXPERIMENTAL) || ((false => CRYPTO_XCBC) && (CRYPTO_XCBC => false)))
(CRYPTO || (((ISCSI_TCP && (SCSI_LOWLEVEL && (SCSI && INET))) => CRYPTO_CRC32C) && (CRYPTO_CRC32C => (ISCSI_TCP && (SCSI_LOWLEVEL && (SCSI && INET))))))
((CRYPTO && X86) || ((false => CRYPTO_CRC32C_INTEL) && (CRYPTO_CRC32C_INTEL => false)))
(CRYPTO || ((false => CRYPTO_MD4) && (CRYPTO_MD4 => false)))
(CRYPTO || ((((((((((x999 || xtruefalsefalsefalse) || x48) || xtruefalsefalse2) || xtruefalsefalse3) || xtruefalse75) || x57) || x58) || x5true) => CRYPTO_MD5) && (CRYPTO_MD5 => ((((((((x999 || xtruefalsefalsefalse) || x48) || xtruefalsefalse2) || xtruefalsefalse3) || xtruefalse75) || x57) || x58) || x5true))))
(x999 <=> (RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(xtruefalsefalsefalse <=> (TCP_MD5SIG && (NET && (INET && EXPERIMENTAL))))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(xtruefalsefalse2 <=> (RPCSEC_GSS_KRB5 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(xtruefalsefalse3 <=> (ISCSI_TCP && (SCSI_LOWLEVEL && (SCSI && INET))))
(xtruefalse75 <=> (IP_SCTP && (NET && (INET && (EXPERIMENTAL && ((IPV6 || !IPV6) && SCTP_HMAC_MD5))))))
(x57 <=> (INET_AH && (NET && INET)))
(x58 <=> (INET_ESP && (NET && INET)))
(x5true <=> (INET6_AH && (NET && (INET && IPV6))))
(CRYPTO || ((((IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))) || (HERMES && (NETDEVICES && (!S39false && ((PPC_PMAC || (PCI || PCMCIA)) && WLAN_8false2truetrue))))) => CRYPTO_MICHAEL_MIC) && (CRYPTO_MICHAEL_MIC => ((IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))) || (HERMES && (NETDEVICES && (!S39false && ((PPC_PMAC || (PCI || PCMCIA)) && WLAN_8false2truetrue))))))))
(CRYPTO || ((false => CRYPTO_RMDtrue28) && (CRYPTO_RMDtrue28 => false)))
(CRYPTO || ((false => CRYPTO_RMDtrue6false) && (CRYPTO_RMDtrue6false => false)))
(CRYPTO || ((false => CRYPTO_RMD256) && (CRYPTO_RMD256 => false)))
(CRYPTO || ((false => CRYPTO_RMD32false) && (CRYPTO_RMD32false => false)))
(CRYPTO || ((((((((x988 || x989) || xtruefalse76) || x48) || x57) || x58) || x5true) => CRYPTO_SHAtrue) && (CRYPTO_SHAtrue => ((((((x988 || x989) || xtruefalse76) || x48) || x57) || x58) || x5true))))
(x988 <=> (IP_SCTP && (NET && (INET && (EXPERIMENTAL && (IPV6 || !IPV6))))))
(x989 <=> (PPP_MPPE && (NETDEVICES && (PPP && EXPERIMENTAL))))
(xtruefalse76 <=> (CRYPTO_DEV_PADLOCK_SHA && (CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK))))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(x57 <=> (INET_AH && (NET && INET)))
(x58 <=> (INET_ESP && (NET && INET)))
(x5true <=> (INET6_AH && (NET && (INET && IPV6))))
(CRYPTO || (((CRYPTO_DEV_PADLOCK_SHA && (CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK))) => CRYPTO_SHA256) && (CRYPTO_SHA256 => (CRYPTO_DEV_PADLOCK_SHA && (CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK))))))
(CRYPTO || ((false => CRYPTO_SHA5true2) && (CRYPTO_SHA5true2 => false)))
(CRYPTO || ((false => CRYPTO_TGRtrue92) && (CRYPTO_TGRtrue92 => false)))
(CRYPTO || ((false => CRYPTO_WP5true2) && (CRYPTO_WP5true2 => false)))
(CRYPTO || (((((((((xtruetrue3 || xtruefalsefalse9) || xtruefalse34) || xtruefalsetrue) || xtruefalsefalsetrue) || xtruefalse6true) || xtruefalse77) || xtruefalsefalse4) => CRYPTO_AES) && (CRYPTO_AES => (((((((xtruetrue3 || xtruefalsefalse9) || xtruefalse34) || xtruefalsetrue) || xtruefalsefalsetrue) || xtruefalse6true) || xtruefalse77) || xtruefalsefalse4))))
(xtruetrue3 <=> (MAC8false2truetrue && (NET && WIRELESS)))
(xtruefalsefalse9 <=> (CRYPTO_AES_586 && (CRYPTO && ((X86 || UML_X86) && !a64BIT))))
(xtruefalse34 <=> (CRYPTO_AES_X86_64 && (CRYPTO && ((X86 || UML_X86) && a64BIT))))
(xtruefalsetrue <=> (AIRO_CS && (NETDEVICES && (!S39false && (PCMCIA && ((BROKEN || !M32R) && WLAN_8false2truetrue))))))
(xtruefalsefalsetrue <=> (USB_WUSB && (USB_SUPPORT && (EXPERIMENTAL && USB))))
(xtruefalse6true <=> (CRYPTO_DEV_PADLOCK_AES && (CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK))))
(xtruefalse77 <=> (CRYPTO_ANSI_CPRNG && CRYPTO))
(xtruefalsefalse4 <=> (IEEE8false2truetrue_CRYPT_CCMP && (NET && (WIRELESS && IEEE8false2truetrue))))
((CRYPTO && ((X86 || UML_X86) && !a64BIT)) || ((false => CRYPTO_AES_586) && (CRYPTO_AES_586 => false)))
((CRYPTO && ((X86 || UML_X86) && a64BIT)) || ((false => CRYPTO_AES_X86_64) && (CRYPTO_AES_X86_64 => false)))
(CRYPTO || ((false => CRYPTO_ANUBIS) && (CRYPTO_ANUBIS => false)))
(CRYPTO || (((((PPP_MPPE && (NETDEVICES && (PPP && EXPERIMENTAL))) || (MAC8false2truetrue && (NET && WIRELESS))) || (IEEE8false2truetrue_CRYPT_WEP && (NET && (WIRELESS && IEEE8false2truetrue)))) => CRYPTO_ARC4) && (CRYPTO_ARC4 => (((PPP_MPPE && (NETDEVICES && (PPP && EXPERIMENTAL))) || (MAC8false2truetrue && (NET && WIRELESS))) || (IEEE8false2truetrue_CRYPT_WEP && (NET && (WIRELESS && IEEE8false2truetrue)))))))
(CRYPTO || ((false => CRYPTO_BLOWFISH) && (CRYPTO_BLOWFISH => false)))
(CRYPTO || ((false => CRYPTO_CAMELLIA) && (CRYPTO_CAMELLIA => false)))
(CRYPTO || (((RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))) => CRYPTO_CAST5) && (CRYPTO_CAST5 => (RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))))
(CRYPTO || ((false => CRYPTO_CAST6) && (CRYPTO_CAST6 => false)))
(CRYPTO || (((((((x999 || xtruefalse46) || xtruefalse42) || x58) || x48) || xtruefalsefalse2) => CRYPTO_DES) && (CRYPTO_DES => (((((x999 || xtruefalse46) || xtruefalse42) || x58) || x48) || xtruefalsefalse2))))
(x999 <=> (RPCSEC_GSS_SPKM3 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(xtruefalse46 <=> (CRYPTO_DEV_HIFN_795X && (CRYPTO && (CRYPTO_HW && PCI))))
(xtruefalse42 <=> (CRYPTO_DEV_IXP4XX && (CRYPTO && (CRYPTO_HW && ARCH_IXP4XX))))
(x58 <=> (INET_ESP && (NET && INET)))
(x48 <=> (INET6_ESP && (NET && (INET && IPV6))))
(xtruefalsefalse2 <=> (RPCSEC_GSS_KRB5 && (NETWORK_FILESYSTEMS && (SUNRPC && EXPERIMENTAL))))
(CRYPTO || (((RXKAD && (NET && AF_RXRPC)) => CRYPTO_FCRYPT) && (CRYPTO_FCRYPT => (RXKAD && (NET && AF_RXRPC)))))
(CRYPTO || ((false => CRYPTO_KHAZAD) && (CRYPTO_KHAZAD => false)))
((CRYPTO && EXPERIMENTAL) || ((false => CRYPTO_SALSA2false) && (CRYPTO_SALSA2false => false)))
((CRYPTO && ((X86 || UML_X86) && (!a64BIT && EXPERIMENTAL))) || ((false => CRYPTO_SALSA2false_586) && (CRYPTO_SALSA2false_586 => false)))
((CRYPTO && ((X86 || UML_X86) && (a64BIT && EXPERIMENTAL))) || ((false => CRYPTO_SALSA2false_X86_64) && (CRYPTO_SALSA2false_X86_64 => false)))
(CRYPTO || ((false => CRYPTO_SEED) && (CRYPTO_SEED => false)))
(CRYPTO || ((false => CRYPTO_SERPENT) && (CRYPTO_SERPENT => false)))
(CRYPTO || ((false => CRYPTO_TEA) && (CRYPTO_TEA => false)))
(CRYPTO || ((false => CRYPTO_TWOFISH) && (CRYPTO_TWOFISH => false)))
(false || (((((CRYPTO_TWOFISH_X86_64 && (CRYPTO && ((X86 || UML_X86) && a64BIT))) || (CRYPTO_TWOFISH && CRYPTO)) || (CRYPTO_TWOFISH_586 && (CRYPTO && ((X86 || UML_X86) && !a64BIT)))) => CRYPTO_TWOFISH_COMMON) && (CRYPTO_TWOFISH_COMMON => (((CRYPTO_TWOFISH_X86_64 && (CRYPTO && ((X86 || UML_X86) && a64BIT))) || (CRYPTO_TWOFISH && CRYPTO)) || (CRYPTO_TWOFISH_586 && (CRYPTO && ((X86 || UML_X86) && !a64BIT)))))))
((CRYPTO && ((X86 || UML_X86) && !a64BIT)) || ((false => CRYPTO_TWOFISH_586) && (CRYPTO_TWOFISH_586 => false)))
((CRYPTO && ((X86 || UML_X86) && a64BIT)) || ((false => CRYPTO_TWOFISH_X86_64) && (CRYPTO_TWOFISH_X86_64 => false)))
(CRYPTO || ((((XFRM_IPCOMP && NET) || (UBIFS_FS && (MTD_UBI && UBIFS_FS_ZLIB))) => CRYPTO_DEFLATE) && (CRYPTO_DEFLATE => ((XFRM_IPCOMP && NET) || (UBIFS_FS && (MTD_UBI && UBIFS_FS_ZLIB))))))
(CRYPTO || (((UBIFS_FS && (MTD_UBI && UBIFS_FS_LZO)) => CRYPTO_LZO) && (CRYPTO_LZO => (UBIFS_FS && (MTD_UBI && UBIFS_FS_LZO)))))
(CRYPTO || ((false => CRYPTO_ANSI_CPRNG) && (CRYPTO_ANSI_CPRNG => false)))
(CRYPTO || (((true && CRYPTO) => CRYPTO_HW) && (CRYPTO_HW => (true && CRYPTO))))
((CRYPTO && (CRYPTO_HW && (X86_32 && !UML))) || ((false => CRYPTO_DEV_PADLOCK) && (CRYPTO_DEV_PADLOCK => false)))
((CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK)) || ((false => CRYPTO_DEV_PADLOCK_AES) && (CRYPTO_DEV_PADLOCK_AES => false)))
((CRYPTO && (CRYPTO_HW && CRYPTO_DEV_PADLOCK)) || ((false => CRYPTO_DEV_PADLOCK_SHA) && (CRYPTO_DEV_PADLOCK_SHA => false)))
((CRYPTO && (CRYPTO_HW && (X86_32 && PCI))) || ((false => CRYPTO_DEV_GEODE) && (CRYPTO_DEV_GEODE => false)))
((CRYPTO && (CRYPTO_HW && S39false)) || ((false => ZCRYPT) && (ZCRYPT => false)))
((CRYPTO && (CRYPTO_HW && ZCRYPT)) || (((ZCRYPT && (CRYPTO && (CRYPTO_HW && (S39false && ZCRYPT)))) => ZCRYPT_MONOLITHIC) && (ZCRYPT_MONOLITHIC => (ZCRYPT && (CRYPTO && (CRYPTO_HW && (S39false && ZCRYPT)))))))
((CRYPTO && (CRYPTO_HW && S39false)) || ((false => CRYPTO_SHAtrue_S39false) && (CRYPTO_SHAtrue_S39false => false)))
((CRYPTO && (CRYPTO_HW && S39false)) || ((false => CRYPTO_SHA256_S39false) && (CRYPTO_SHA256_S39false => false)))
((CRYPTO && (CRYPTO_HW && S39false)) || ((false => CRYPTO_SHA5true2_S39false) && (CRYPTO_SHA5true2_S39false => false)))
((CRYPTO && (CRYPTO_HW && S39false)) || ((false => CRYPTO_DES_S39false) && (CRYPTO_DES_S39false => false)))
((CRYPTO && (CRYPTO_HW && S39false)) || ((false => CRYPTO_AES_S39false) && (CRYPTO_AES_S39false => false)))
((CRYPTO && (CRYPTO_HW && S39false)) || (((true && (CRYPTO && (CRYPTO_HW && S39false))) => S39false_PRNG) && (S39false_PRNG => (true && (CRYPTO && (CRYPTO_HW && S39false))))))
((CRYPTO && (CRYPTO_HW && PCI)) || ((false => CRYPTO_DEV_HIFN_795X) && (CRYPTO_DEV_HIFN_795X => false)))
((CRYPTO && (CRYPTO_HW && CRYPTO_DEV_HIFN_795X)) || ((false => CRYPTO_DEV_HIFN_795X_RNG) && (CRYPTO_DEV_HIFN_795X_RNG => false)))
((CRYPTO && (CRYPTO_HW && FSL_SOC)) || ((false => CRYPTO_DEV_TALITOS) && (CRYPTO_DEV_TALITOS => false)))
((CRYPTO && (CRYPTO_HW && ARCH_IXP4XX)) || ((false => CRYPTO_DEV_IXP4XX) && (CRYPTO_DEV_IXP4XX => false)))
(false || (((X86 && ((X86_32 && (!X86_VOYAGER && (!X86_VISWS && !X86_NUMAQ))) || X86_64)) => HAVE_KVM) && (HAVE_KVM => (X86 && ((X86_32 && (!X86_VOYAGER && (!X86_VISWS && !X86_NUMAQ))) || X86_64)))))
((HAVE_KVM || X86) || (((true && (HAVE_KVM || X86)) => VIRTUALIZATION) && (VIRTUALIZATION => (true && (HAVE_KVM || X86)))))
((VIRTUALIZATION && (HAVE_KVM && PCI)) || ((false => KVM) && (KVM => false)))
((VIRTUALIZATION && KVM) || ((false => KVM_INTEL) && (KVM_INTEL => false)))
((VIRTUALIZATION && KVM) || ((false => KVM_AMD) && (KVM_AMD => false)))
((VIRTUALIZATION && (KVM && (MARKERS && SYSFS))) || ((false => KVM_TRACE) && (KVM_TRACE => false)))
((VIRTUALIZATION && (X86_32 && (EXPERIMENTAL && (!X86_PAE && (FUTEX && !X86_VOYAGER))))) || ((false => LGUEST) && (LGUEST => false)))
(false || (((((VIRTIO_PCI && (VIRTUALIZATION && (PCI && EXPERIMENTAL))) || (LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER))))) || (VIRTIO_BALLOON && VIRTUALIZATION)) => VIRTIO) && (VIRTIO => (((VIRTIO_PCI && (VIRTUALIZATION && (PCI && EXPERIMENTAL))) || (LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER))))) || (VIRTIO_BALLOON && VIRTUALIZATION)))))
(false || (((((VIRTIO_PCI && (VIRTUALIZATION && (PCI && EXPERIMENTAL))) || (LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER))))) || (VIRTIO_BALLOON && VIRTUALIZATION)) => VIRTIO_RING) && (VIRTIO_RING => (((VIRTIO_PCI && (VIRTUALIZATION && (PCI && EXPERIMENTAL))) || (LGUEST_GUEST && (PARAVIRT_GUEST && (X86_32 && (!X86_PAE && !X86_VOYAGER))))) || (VIRTIO_BALLOON && VIRTUALIZATION)))))
((VIRTUALIZATION && (PCI && EXPERIMENTAL)) || ((false => VIRTIO_PCI) && (VIRTIO_PCI => false)))
(VIRTUALIZATION || ((false => VIRTIO_BALLOON) && (VIRTIO_BALLOON => false)))
(false || (((((((((((((x6true4 || xtruefalse78) || xtruefalse79) || x7false2) || xtruefalse8false) || xtruefalse8true) || xtruefalse82) || xtruefalse83) || x6true9) || xtruefalse84) || xtruefalse85) || xtruefalse86) => BITREVERSE) && (BITREVERSE => (((((((((((x6true4 || xtruefalse78) || xtruefalse79) || x7false2) || xtruefalse8false) || xtruefalse8true) || xtruefalse82) || xtruefalse83) || x6true9) || xtruefalse84) || xtruefalse85) || xtruefalse86))))
(x6true4 <=> (FB_RIVA && (HAS_IOMEM && (FB && PCI))))
(xtruefalse78 <=> (BT_HCIUART_BCSP && (NET && (BT && BT_HCIUART))))
(xtruefalse79 <=> (ATM_AMBASSADOR && (ATM_DRIVERS && (NETDEVICES && (ATM && (PCI && VIRT_TO_BUS))))))
(x7false2 <=> (FB_TGA && (HAS_IOMEM && (FB && (ALPHA || TC)))))
(xtruefalse8false <=> (RTC_DRV_S3539falseA && (RTC_CLASS && I2C)))
(xtruefalse8true <=> (CARDMAN_4falsefalsefalse && (HOTPLUG && PCMCIA)))
(xtruefalse82 <=> (ISDN_DRV_GIGASET && (ISDN && ISDN_I4L)))
(xtruefalse83 <=> (CRC32 && true))
(x6true9 <=> (FB_NVIDIA && (HAS_IOMEM && (FB && PCI))))
(xtruefalse84 <=> (HISAX_ST548true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (USB && EXPERIMENTAL))))))
(xtruefalse85 <=> (MTD_NAND_RTC_FROM4 && (MTD && (MTD_NAND && SH_SOLUTION_ENGINE))))
(xtruefalse86 <=> (SKFP && (NETDEVICES && (FDDI && PCI))))
(false || (((X86_CPU && true) => GENERIC_FIND_FIRST_BIT) && (GENERIC_FIND_FIRST_BIT => (X86_CPU && true))))
(false || (((X86_CPU && true) => GENERIC_FIND_NEXT_BIT) && (GENERIC_FIND_NEXT_BIT => (X86_CPU && true))))
(true || (((((((((((xtruefalse87 || xtruefalse88) || xtruefalse82) || xtruefalse89) || xtruefalse9false) || xtruefalse9true) || xtruefalse92) || x3true6) || xtruefalse93) || xtruefalse84) => CRC_CCITT) && (CRC_CCITT => (((((((((xtruefalse87 || xtruefalse88) || xtruefalse82) || xtruefalse89) || xtruefalse9false) || xtruefalse9true) || xtruefalse92) || x3true6) || xtruefalse93) || xtruefalse84))))
(xtruefalse87 <=> (BAYCOM_SER_HDX && (NET && (HAMRADIO && (AX25 && !S39false)))))
(xtruefalse88 <=> (ISDN_DRV_HISAX && (ISDN && ISDN_I4L)))
(xtruefalse82 <=> (ISDN_DRV_GIGASET && (ISDN && ISDN_I4L)))
(xtruefalse89 <=> (BAYCOM_PAR && (NET && (HAMRADIO && (PARPORT && AX25)))))
(xtruefalse9false <=> (PPP_ASYNC && (NETDEVICES && PPP)))
(xtruefalse9true <=> (BAYCOM_EPP && (NET && (HAMRADIO && (PARPORT && (AX25 && !a64BIT))))))
(xtruefalse92 <=> (IRDA && (NET && !S39false)))
(x3true6 <=> (VIA_VELOCITY && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruefalse93 <=> (BAYCOM_SER_FDX && (NET && (HAMRADIO && (AX25 && !S39false)))))
(xtruefalse84 <=> (HISAX_ST548true && (ISDN && (ISDN_I4L && (ISDN_DRV_HISAX && (USB && EXPERIMENTAL))))))
(true || ((((((Wtrue_SLAVE_DS2433_CRC && (Wtrue && Wtrue_SLAVE_DS2433)) || (MKISS && (NET && (HAMRADIO && AX25)))) || (EXT4_FS && BLOCK)) || (UBIFS_FS && MTD_UBI)) => CRCtrue6) && (CRCtrue6 => ((((Wtrue_SLAVE_DS2433_CRC && (Wtrue && Wtrue_SLAVE_DS2433)) || (MKISS && (NET && (HAMRADIO && AX25)))) || (EXT4_FS && BLOCK)) || (UBIFS_FS && MTD_UBI)))))
(true || (((BLK_DEV_SD && (SCSI && BLK_DEV_INTEGRITY)) => CRC_TtruefalseDIF) && (CRC_TtruefalseDIF => (BLK_DEV_SD && (SCSI && BLK_DEV_INTEGRITY)))))
(true || (((((((xtruefalse94 || xtruefalse95) || x2false2) || xtruefalse96) || xtruefalse97) || xtruefalse98) => CRC_ITU_T) && (CRC_ITU_T => (((((xtruefalse94 || xtruefalse95) || x2false2) || xtruefalse96) || xtruefalse97) || xtruefalse98))))
(xtruefalse94 <=> (FIREWIRE && ((PCI || BROKEN) && EXPERIMENTAL)))
(xtruefalse95 <=> (MMC_SPI && (MMC && (SPI_MASTER && (!HIGHMEM && HAS_DMA)))))
(x2false2 <=> (RT6truePCI && (NETDEVICES && (!S39false && (RT2Xfalsefalse && PCI)))))
(xtruefalse96 <=> (UDF_FS && BLOCK))
(xtruefalse97 <=> (OMFS_FS && BLOCK))
(xtruefalse98 <=> (RT73USB && (NETDEVICES && (!S39false && (RT2Xfalsefalse && USB)))))
(true || ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((xtruefalse99 || x28false) || xtruetruefalsefalse) || xtruetruefalsetrue) || xtruetruefalse2) || xtruefalse9) || xtruetrue3) || xtruetruefalse3) || x3falsetrue) || xtruetruefalse4) || xtruetruefalse5) || xtruetruefalse6) || xtruetruefalse7) || x3false5) || x62) || x3false6) || x3false7) || xtruetruefalse8) || xtruetruefalse9) || x3true4) || xtruetruetruefalse) || xtruetruetruetrue) || x3true7) || xtruetruetrue2) || x942) || x323) || xtruetruetrue3) || xtruetruetrue4) || x2falsetrue) || x569) || x29true) || xtruetruetrue5) || xtruefalse5) || x572) || xtruetruetrue6) || xtruetruetrue7) || xtruetruetrue8) || xtruetruetrue9) || x299) || x289) || xtruetrue2false) || x3false4) || x6true) || x3truetrue) || xtruetrue2true) || xtruetrue22) || xtruetrue23) || xtruetrue24) || xtruetrue25) || xtruetrue26) || xtruetrue27) || x327) || xtruetrue28) || xtruetrue29) || xtruetrue3false) || xtruetrue3true) || x292) || x293) || xtruetrue32) || xtruetrue33) || x297) || xtruetrue34) || x298) || xtruetrue35) || xtruetrue36) || xtruetrue37) || x288) || xtruetrue38) || xtruetrue39) || xtruetrue4false) || xtruetrue4true) || x277) || xtruetrue42) || x3false8) || x3truefalse) || xtruetrue43) || x3true5) || xtruetrue44) || x996) || xtruetrue45) || x3true9) || xtruetrue46) || xtruetrue47) || xtruetrue48) || xtruetrue49) || xtruetrue5false) || xtruetrue5true) || x98) || x276) || xtruetrue52) || xtruetrue53) || xtruetrue54) || xtruetrue55) || xtruetrue56) || xtruetrue57) || xtruetrue58) || xtruetrue59) || x3falsefalse) || xtruetrue6false) || x3false2) || xtruetrue6true) || xtruetrue62) || xtruetrue63) || xtruetrue64) || xtruetrue65) || xtruetrue66) || xtruetrue67) || xtruetrue68) || x3false9) || xtruetrue69) || xtruetrue7false) || x3true6) || xtruetrue7true) || xtruetrue72) || x32true) || xtruetrue73) || xtruetrue74) || xtruetrue75) || xtruetrue76) || xtruetrue77) || x469) => CRC32) && (CRC32 => ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((xtruefalse99 || x28false) || xtruetruefalsefalse) || xtruetruefalsetrue) || xtruetruefalse2) || xtruefalse9) || xtruetrue3) || xtruetruefalse3) || x3falsetrue) || xtruetruefalse4) || xtruetruefalse5) || xtruetruefalse6) || xtruetruefalse7) || x3false5) || x62) || x3false6) || x3false7) || xtruetruefalse8) || xtruetruefalse9) || x3true4) || xtruetruetruefalse) || xtruetruetruetrue) || x3true7) || xtruetruetrue2) || x942) || x323) || xtruetruetrue3) || xtruetruetrue4) || x2falsetrue) || x569) || x29true) || xtruetruetrue5) || xtruefalse5) || x572) || xtruetruetrue6) || xtruetruetrue7) || xtruetruetrue8) || xtruetruetrue9) || x299) || x289) || xtruetrue2false) || x3false4) || x6true) || x3truetrue) || xtruetrue2true) || xtruetrue22) || xtruetrue23) || xtruetrue24) || xtruetrue25) || xtruetrue26) || xtruetrue27) || x327) || xtruetrue28) || xtruetrue29) || xtruetrue3false) || xtruetrue3true) || x292) || x293) || xtruetrue32) || xtruetrue33) || x297) || xtruetrue34) || x298) || xtruetrue35) || xtruetrue36) || xtruetrue37) || x288) || xtruetrue38) || xtruetrue39) || xtruetrue4false) || xtruetrue4true) || x277) || xtruetrue42) || x3false8) || x3truefalse) || xtruetrue43) || x3true5) || xtruetrue44) || x996) || xtruetrue45) || x3true9) || xtruetrue46) || xtruetrue47) || xtruetrue48) || xtruetrue49) || xtruetrue5false) || xtruetrue5true) || x98) || x276) || xtruetrue52) || xtruetrue53) || xtruetrue54) || xtruetrue55) || xtruetrue56) || xtruetrue57) || xtruetrue58) || xtruetrue59) || x3falsefalse) || xtruetrue6false) || x3false2) || xtruetrue6true) || xtruetrue62) || xtruetrue63) || xtruetrue64) || xtruetrue65) || xtruetrue66) || xtruetrue67) || xtruetrue68) || x3false9) || xtruetrue69) || xtruetrue7false) || x3true6) || xtruetrue7true) || xtruetrue72) || x32true) || xtruetrue73) || xtruetrue74) || xtruetrue75) || xtruetrue76) || xtruetrue77) || x469))))
(xtruefalse99 <=> (USB_NET_DM96falsetrue && (NETDEVICES && (USB && (NET && USB_USBNET)))))
(x28false <=> (SH_ETH && (NETDEVICES && (NET_ETHERNET && (SUPERH && (CPU_SUBTYPE_SH77truefalse || (CPU_SUBTYPE_SH77true2 || (CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH76true9))))))))
(xtruetruefalsefalse <=> (EL2 && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && ISA)))))
(xtruetruefalsetrue <=> (JFFS2_FS && MTD))
(xtruetruefalse2 <=> (IBM_NEW_EMAC && (NETDEVICES && (NET_ETHERNET && PPC_DCR))))
(xtruefalse9 <=> (PCMCIA_ATMEL && (NETDEVICES && (!S39false && (ATMEL && PCMCIA)))))
(xtruetrue3 <=> (MAC8false2truetrue && (NET && WIRELESS)))
(xtruetruefalse3 <=> (SUNBMAC && (NETDEVICES && (NET_ETHERNET && (SBUS && EXPERIMENTAL)))))
(x3falsetrue <=> (JME && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetruefalse4 <=> (JBD2 && BLOCK))
(xtruetruefalse5 <=> (TULIP && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI)))))
(xtruetruefalse6 <=> (DM9truefalse2 && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI)))))
(xtruetruefalse7 <=> (NE2_MCA && (NETDEVICES && (NET_ETHERNET && MCA_LEGACY))))
(x3false5 <=> (WINBOND_84false && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI)))))
(x62 <=> (SFC && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x3false6 <=> (R6false4false && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x3false7 <=> (ATLtrue && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetruefalse8 <=> (ULI526X && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && PCI)))))
(xtruetruefalse9 <=> (USB_ATM && (USB_SUPPORT && (USB && ATM))))
(x3true4 <=> (AMD8truetruetrue_ETH && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetruetruefalse <=> (NE32truefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (EISA && EXPERIMENTAL))))))
(xtruetruetruetrue <=> (DVB_TTUSB_DEC && (HAS_IOMEM && (DVB_CAPTURE_DRIVERS && (DVB_CORE && (USB && INPUT))))))
(x3true7 <=> (FEALNX && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetruetrue2 <=> (ULTRA && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && ISA)))))
(x942 <=> (GFS2_FS && (BLOCK && (EXPERIMENTAL && (a64BIT || (LSF && LBD))))))
(x323 <=> (SUNDANCE && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetruetrue3 <=> (HPLAN_PLUS && (NETDEVICES && (NET_ETHERNET && NET_ISA))))
(xtruetruetrue4 <=> (SKGE && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x2falsetrue <=> (ADM82truetrue && (NETDEVICES && (!S39false && (MAC8false2truetrue && (PCI && (WLAN_8false2truetrue && EXPERIMENTAL)))))))
(x569 <=> (VIDEO_GO7falsefalse7 && (STAGING && (!STAGING_EXCLUDE_BUILD && (VIDEO_DEV && (PCI && (I2C && (INPUT && SND))))))))
(x29true <=> (8true39TOO && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetruetrue5 <=> (OCFS2_FS && (BLOCK && (NET && SYSFS))))
(xtruefalse5 <=> (ATMEL && (NETDEVICES && (!S39false && ((PCI || PCMCIA) && WLAN_8false2truetrue)))))
(x572 <=> (VIDEO_SAA7true34 && (HAS_IOMEM && (VIDEO_CAPTURE_DRIVERS && (VIDEO_V4L2 && (VIDEO_DEV && (PCI && (I2C && INPUT))))))))
(xtruetruetrue6 <=> (NE2falsefalsefalse && (NETDEVICES && (NET_ETHERNET && (NET_ISA || ((Q4false && (true && true)) || (M32R || MACH_TX49XX)))))))
(xtruetruetrue7 <=> (MACE && (NETDEVICES && (NET_ETHERNET && (PPC_PMAC && PPC32)))))
(xtruetruetrue8 <=> (ULTRAMCA && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && MCA)))))
(xtruetruetrue9 <=> (NATSEMI && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x299 <=> (AX88796 && (NETDEVICES && (NET_ETHERNET && (ARM || (MIPS || SUPERH))))))
(x289 <=> (MIPS_AUtrueXfalsefalse_ENET && (NETDEVICES && (NET_ETHERNET && SOC_AUtrueXfalsefalse))))
(xtruetrue2false <=> (E2truefalsefalse && (NETDEVICES && (NET_ETHERNET && NET_ISA))))
(x3false4 <=> (SGI_IOC3_ETH && (NETDEVICES && (NET_ETHERNET && (PCI && SGI_IP27)))))
(x6true <=> (MYRItruefalseGE && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && (PCI && INET)))))
(x3truetrue <=> (PCNET32 && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetrue2true <=> (USB_CATC && (NETDEVICES && (USB && (NET && EXPERIMENTAL)))))
(xtruetrue22 <=> (PCMCIA_FMVJtrue8X && (NETDEVICES && (NET_PCMCIA && PCMCIA))))
(xtruetrue23 <=> (SUNQE && (NETDEVICES && (NET_ETHERNET && SBUS))))
(xtruetrue24 <=> (EWRK3 && (NETDEVICES && (NET_ETHERNET && NET_ISA))))
(xtruetrue25 <=> (DEPCA && (NETDEVICES && (NET_ETHERNET && (ISA || (EISA || MCA))))))
(xtruetrue26 <=> (HPLANCE && (NETDEVICES && (NET_ETHERNET && DIO))))
(xtruetrue27 <=> (USB_NET_AX88true7X && (NETDEVICES && (USB && (NET && USB_USBNET)))))
(x327 <=> (VIA_RHINE && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetrue28 <=> (TYPHOON && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_3COM && PCI)))))
(xtruetrue29 <=> (BNX2 && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetrue3false <=> (USB_NET_SMSC95XX && (NETDEVICES && (USB && (NET && USB_USBNET)))))
(xtruetrue3true <=> (BMAC && (NETDEVICES && (NET_ETHERNET && (PPC_PMAC && PPC32)))))
(x292 <=> (ATL2 && (NETDEVICES && (NET_ETHERNET && PCI))))
(x293 <=> (EPICtruefalsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetrue32 <=> (FRAMEBUFFER_CONSOLE && (HAS_IOMEM && (VT && FB))))
(xtruetrue33 <=> (WD8falsex3 && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && ISA)))))
(x297 <=> (SIS9falsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(xtruetrue34 <=> (A2false65 && (NETDEVICES && (NET_ETHERNET && ZORRO))))
(x298 <=> (PCMCIA_SMC9trueC92 && (NETDEVICES && (NET_PCMCIA && PCMCIA))))
(xtruetrue35 <=> (CASSINI && (NETDEVICES && (NET_ETHERNET && PCI))))
(xtruetrue36 <=> (ULTRA32 && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && EISA)))))
(xtruetrue37 <=> (ES32truefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (EISA && EXPERIMENTAL))))))
(x288 <=> (FEC_MPC52xx && (NETDEVICES && (NET_ETHERNET && (PPC_MPC52xx && PPC_BESTCOMM)))))
(xtruetrue38 <=> (SKY2 && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetrue39 <=> (LNE39false && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (EISA && EXPERIMENTAL))))))
(xtruetrue4false <=> (DE4X5 && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && (PCI || EISA))))))
(xtruetrue4true <=> (NE2K_PCI && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x277 <=> (BFIN_MAC && (NETDEVICES && (NET_ETHERNET && (BF526 || (BF527 || (BF536 || BF537)))))))
(xtruetrue42 <=> (MAC839false && (NETDEVICES && (NET_ETHERNET && MAC))))
(x3false8 <=> (ADAPTEC_STARFIRE && (NETDEVICES && (NET_ETHERNET && (NET_PCI && PCI)))))
(x3truefalse <=> (SMC9trueX && (NETDEVICES && (NET_ETHERNET && (ARM || (REDWOOD_5 || (REDWOOD_6 || (M32R || (SUPERH || (MIPS || (BLACKFIN || MNtruefalse3falsefalse)))))))))))
(xtruetrue43 <=> (APNE && (NETDEVICES && (NET_ETHERNET && AMIGA_PCMCIA))))
(x3true5 <=> (R8true69 && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetrue44 <=> (HPLAN && (NETDEVICES && (NET_ETHERNET && NET_ISA))))
(x996 <=> (IEEE8false2truetrue_CRYPT_WEP && (NET && (WIRELESS && IEEE8false2truetrue))))
(xtruetrue45 <=> (CHELSIO_Ttrue && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI))))
(x3true9 <=> (DM9falsefalsefalse && (NETDEVICES && (NET_ETHERNET && (ARM || (BLACKFIN || MIPS))))))
(xtruetrue46 <=> (MTD_UBI && MTD))
(xtruetrue47 <=> (MVMEtrue47_NET && (NETDEVICES && (NET_ETHERNET && MVMEtrue47))))
(xtruetrue48 <=> (ZORRO839false && (NETDEVICES && (NET_ETHERNET && ZORRO))))
(xtruetrue49 <=> (YELLOWFIN && (NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL)))))
(xtruetrue5false <=> (ENC28J6false && (NETDEVICES && (EXPERIMENTAL && (SPI && NET_ETHERNET)))))
(xtruetrue5true <=> (DVB_CORE && (HAS_IOMEM && (NET && INET))))
(x98 <=> (IEEE8false2truetrue_CRYPT_TKIP && (NET && (WIRELESS && IEEE8false2truetrue))))
(x276 <=> (GIANFAR && (NETDEVICES && (NETDEV_truefalsefalsefalse && FSL_SOC))))
(xtruetrue52 <=> (BT_BNEP && (NET && (BT && BT_L2CAP))))
(xtruetrue53 <=> (SUNLANCE && (NETDEVICES && (NET_ETHERNET && SBUS))))
(xtruetrue54 <=> (DE2truefalse4X && (NETDEVICES && (NET_ETHERNET && (NET_TULIP && (PCI && EXPERIMENTAL))))))
(xtruetrue55 <=> (PCMCIA_PCNET && (NETDEVICES && (NET_PCMCIA && PCMCIA))))
(xtruetrue56 <=> (ATtrue7falsefalse && (NETDEVICES && (NET_ETHERNET && ((ISA || MCA_LEGACY) && EXPERIMENTAL)))))
(xtruetrue57 <=> (HAPPYMEAL && (NETDEVICES && (NET_ETHERNET && (SBUS || PCI)))))
(xtruetrue58 <=> (MACMACE && (NETDEVICES && (NET_ETHERNET && MAC))))
(xtruetrue59 <=> (DL2K && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(x3falsefalse <=> (8true39CP && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && EXPERIMENTAL))))))
(xtruetrue6false <=> (SC92false3true && (NETDEVICES && (NET_ETHERNET && (NET_PCI && (PCI && EXPERIMENTAL))))))
(x3false2 <=> (SIStrue9false && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetrue6true <=> (MCS_FIR && (NET && (IRDA && (USB && EXPERIMENTAL)))))
(xtruetrue62 <=> (HYDRA && (NETDEVICES && (NET_ETHERNET && ZORRO))))
(xtruetrue63 <=> (DECLANCE && (NETDEVICES && (NET_ETHERNET && MACH_DECSTATION))))
(xtruetrue64 <=> (ARM_AM79C96trueA && (NETDEVICES && (NET_ETHERNET && (ARM && ARCH_EBSAtruetruefalse)))))
(xtruetrue65 <=> (SUNGEM && (NETDEVICES && (NET_ETHERNET && PCI))))
(xtruetrue66 <=> (PCMCIA && PCCARD))
(xtruetrue67 <=> (SIGMATEL_FIR && (NET && (IRDA && (USB && EXPERIMENTAL)))))
(xtruetrue68 <=> (USB_NET_ZAURUS && (NETDEVICES && (USB && (NET && USB_USBNET)))))
(x3false9 <=> (ATLtrueE && (NETDEVICES && (NETDEV_truefalsefalsefalse && (PCI && EXPERIMENTAL)))))
(xtruetrue69 <=> (SMC9true94 && (NETDEVICES && (NET_ETHERNET && (NET_VENDOR_SMC && (ISA || (MAC && BROKEN)))))))
(xtruetrue7false <=> (TUN && NETDEVICES))
(x3true6 <=> (VIA_VELOCITY && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetrue7true <=> (UBIFS_FS && MTD_UBI))
(xtruetrue72 <=> (STNIC && (NETDEVICES && (NET_ETHERNET && SUPERH))))
(x32true <=> (SMC9truetrueX && (NETDEVICES && (NET_ETHERNET && (ARM || SUPERH)))))
(xtruetrue73 <=> (ARM_ETHERH && (NETDEVICES && (NET_ETHERNET && (ARM && ARCH_ACORN)))))
(xtruetrue74 <=> (AC32falsefalse && (NETDEVICES && (NET_ETHERNET && (NET_PCI && ((ISA || EISA) && EXPERIMENTAL))))))
(xtruetrue75 <=> (ATP && (NETDEVICES && (NET_ETHERNET && (NET_POCKET && (PARPORT && X86))))))
(xtruetrue76 <=> (EFI_PARTITION && (BLOCK && PARTITION_ADVANCED)))
(xtruetrue77 <=> (P54_USB && (NETDEVICES && (!S39false && (P54_COMMON && USB)))))
(x469 <=> (true && true))
(true || (((MMC_SPI && (MMC && (SPI_MASTER && (!HIGHMEM && HAS_DMA)))) => CRC7) && (CRC7 => (MMC_SPI && (MMC && (SPI_MASTER && (!HIGHMEM && HAS_DMA)))))))
(true || ((((((x988 || x63) || xtruefalse73) || xtruetrue78) || xtruetrue79) => LIBCRC32C) && (LIBCRC32C => ((((x988 || x63) || xtruefalse73) || xtruetrue78) || xtruetrue79))))
(x988 <=> (IP_SCTP && (NET && (INET && (EXPERIMENTAL && (IPV6 || !IPV6))))))
(x63 <=> (INFINIBAND_NES && (PCI && (INET && INFINIBAND))))
(xtruefalse73 <=> (CRYPTO_CRC32C && CRYPTO))
(xtruetrue78 <=> (NF_NAT_PROTO_SCTP && (NET && (INET && (NETFILTER && (IP_NF_IPTABLES && (NF_NAT && NF_CT_PROTO_SCTP)))))))
(xtruetrue79 <=> (BNX2X && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI))))
(false || (((true && (AUDIT && !AUDIT_ARCH)) => AUDIT_GENERIC) && (AUDIT_GENERIC => (true && (AUDIT && !AUDIT_ARCH)))))
(false || (((((((((xtruetrue29 || xtruetrue8false) || xtruefalse35) || xtruetrue8true) || xtruetrue82) || xtruetrue79) || xtruetrue83) || xtruetrue84) => ZLIB_INFLATE) && (ZLIB_INFLATE => (((((((xtruetrue29 || xtruetrue8false) || xtruefalse35) || xtruetrue8true) || xtruetrue82) || xtruetrue79) || xtruetrue83) || xtruetrue84))))
(xtruetrue29 <=> (BNX2 && (NETDEVICES && (NETDEV_truefalsefalsefalse && PCI))))
(xtruetrue8false <=> (PPP_DEFLATE && (NETDEVICES && PPP)))
(xtruefalse35 <=> (CRYPTO_DEFLATE && CRYPTO))
(xtruetrue8true <=> (CRAMFS && BLOCK))
(xtruetrue82 <=> (BINFMT_ZFLAT && BINFMT_FLAT))
(xtruetrue79 <=> (BNX2X && (NETDEVICES && (NETDEV_truefalsefalsefalsefalse && PCI))))
(xtruetrue83 <=> (ZISOFS && (BLOCK && ISO966false_FS)))
(xtruetrue84 <=> (JFFS2_ZLIB && JFFS2_FS))
(false || (((((PPP_DEFLATE && (NETDEVICES && PPP)) || (CRYPTO_DEFLATE && CRYPTO)) || (JFFS2_ZLIB && JFFS2_FS)) => ZLIB_DEFLATE) && (ZLIB_DEFLATE => (((PPP_DEFLATE && (NETDEVICES && PPP)) || (CRYPTO_DEFLATE && CRYPTO)) || (JFFS2_ZLIB && JFFS2_FS)))))
(false || ((((CRYPTO_LZO && CRYPTO) || (JFFS2_LZO && JFFS2_FS)) => LZO_COMPRESS) && (LZO_COMPRESS => ((CRYPTO_LZO && CRYPTO) || (JFFS2_LZO && JFFS2_FS)))))
(false || ((((CRYPTO_LZO && CRYPTO) || (JFFS2_LZO && JFFS2_FS)) => LZO_DECOMPRESS) && (LZO_DECOMPRESS => ((CRYPTO_LZO && CRYPTO) || (JFFS2_LZO && JFFS2_FS)))))
(false || ((((SGI_XP && (MISC_DEVICES && (NET && ((IA64_GENERIC || (IA64_SGI_SN2 || (IA64_SGI_UV || X86_64))) && (SMP && (IA64_GENERIC || IA64_SGI_SN2)))))) || (INFINIBAND_CXGB3 && (INFINIBAND && (CHELSIO_T3 && INET)))) => GENERIC_ALLOCATOR) && (GENERIC_ALLOCATOR => ((SGI_XP && (MISC_DEVICES && (NET && ((IA64_GENERIC || (IA64_SGI_SN2 || (IA64_SGI_UV || X86_64))) && (SMP && (IA64_GENERIC || IA64_SGI_SN2)))))) || (INFINIBAND_CXGB3 && (INFINIBAND && (CHELSIO_T3 && INET)))))))
(false || (((((MTD_NAND_CAFE && (MTD && (MTD_NAND && PCI))) || (MTD_NAND_DISKONCHIP && (MTD && (MTD_NAND && EXPERIMENTAL)))) || (MTD_NAND_RTC_FROM4 && (MTD && (MTD_NAND && SH_SOLUTION_ENGINE)))) => REED_SOLOMON) && (REED_SOLOMON => (((MTD_NAND_CAFE && (MTD && (MTD_NAND && PCI))) || (MTD_NAND_DISKONCHIP && (MTD && (MTD_NAND && EXPERIMENTAL)))) || (MTD_NAND_RTC_FROM4 && (MTD && (MTD_NAND && SH_SOLUTION_ENGINE)))))))
(false || ((false => REED_SOLOMON_ENC8) && (REED_SOLOMON_ENC8 => false)))
(false || (((MTD_NAND_RTC_FROM4 && (MTD && (MTD_NAND && SH_SOLUTION_ENGINE))) => REED_SOLOMON_DEC8) && (REED_SOLOMON_DEC8 => (MTD_NAND_RTC_FROM4 && (MTD && (MTD_NAND && SH_SOLUTION_ENGINE))))))
(false || ((false => REED_SOLOMON_ENCtrue6) && (REED_SOLOMON_ENCtrue6 => false)))
(false || ((((MTD_NAND_CAFE && (MTD && (MTD_NAND && PCI))) || (MTD_NAND_DISKONCHIP && (MTD && (MTD_NAND && EXPERIMENTAL)))) => REED_SOLOMON_DECtrue6) && (REED_SOLOMON_DECtrue6 => ((MTD_NAND_CAFE && (MTD && (MTD_NAND && PCI))) || (MTD_NAND_DISKONCHIP && (MTD && (MTD_NAND && EXPERIMENTAL)))))))
(false || (((((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NF_CONNTRACK_AMANDA && (NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))) => TEXTSEARCH) && (TEXTSEARCH => (((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NF_CONNTRACK_AMANDA && (NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))))))
(false || (((((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NF_CONNTRACK_AMANDA && (NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))) => TEXTSEARCH_KMP) && (TEXTSEARCH_KMP => (((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NF_CONNTRACK_AMANDA && (NET && (INET && (NETFILTER && (NF_CONNTRACK && NETFILTER_ADVANCED)))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))))))
(false || ((((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))) => TEXTSEARCH_BM) && (TEXTSEARCH_BM => ((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))))))
(false || ((((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))) => TEXTSEARCH_FSM) && (TEXTSEARCH_FSM => ((NETFILTER_XT_MATCH_STRING && (NET && (INET && (NETFILTER && (NETFILTER_XTABLES && NETFILTER_ADVANCED))))) || (NET_EMATCH_TEXT && (NET && (NET_SCHED && NET_EMATCH)))))))
(false || (((RT_MUTEXES && true) => PLIST) && (PLIST => (RT_MUTEXES && true))))
(false || (((true && !NO_IOMEM) => HAS_IOMEM) && (HAS_IOMEM => (true && !NO_IOMEM))))
(false || (((true && (HAS_IOMEM && !NO_IOPORT)) => HAS_IOPORT) && (HAS_IOPORT => (true && (HAS_IOMEM && !NO_IOPORT)))))
(false || (((true && !NO_DMA) => HAS_DMA) && (HAS_DMA => (true && !NO_DMA))))
(false || (((((((((x258 || x252) || x34false) || x24true) || xtruetrue85) || xtruetrue86) || xtruetrue87) || x344) => CHECK_SIGNATURE) && (CHECK_SIGNATURE => (((((((x258 || x252) || x34false) || x24true) || xtruetrue85) || xtruetrue86) || xtruetrue87) || x344))))
(x258 <=> (SCSI_DTC328false && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x252 <=> (SCSI_Ttrue28 && (SCSI_LOWLEVEL && (ISA && SCSI))))
(x34false <=> (INPUT_WISTRON_BTNS && (!S39false && (INPUT && (INPUT_MISC && (X86 && !X86_64))))))
(x24true <=> (SCSI_AHAtrue52X && (SCSI_LOWLEVEL && (ISA && (SCSI && !a64BIT)))))
(xtruetrue85 <=> (SCSI_FUTURE_DOMAIN && (SCSI_LOWLEVEL && ((ISA || PCI) && SCSI))))
(xtruetrue86 <=> (SCSI_7falsefalsefalseFASST && (SCSI_LOWLEVEL && (ISA && (SCSI && ISA_DMA_API)))))
(xtruetrue87 <=> (BLK_DEV_XD && (BLK_DEV && (ISA && ISA_DMA_API))))
(x344 <=> (INPUT_APANEL && (!S39false && (INPUT && (INPUT_MISC && (X86 && (I2C && LEDS_CLASS)))))))
(false || ((false => HAVE_LMB) && (HAVE_LMB => false)))
(a64BIT => true)
(X86_32 => true)
(X86_64 => true)
(X86 => true)
(ARCH_DEFCONFIG => true)
(GENERIC_TIME => true)
(GENERIC_CMOS_UPDATE => true)
(CLOCKSOURCE_WATCHDOG => true)
(GENERIC_CLOCKEVENTS => true)
(GENERIC_CLOCKEVENTS_BROADCAST => true)
(LOCKDEP_SUPPORT => true)
(STACKTRACE_SUPPORT => true)
(HAVE_LATENCYTOP_SUPPORT => true)
(FAST_CMPXCHG_LOCAL => true)
(MMU => true)
(ZONE_DMA => true)
(SBUS => true)
(GENERIC_ISA_DMA => true)
(GENERIC_IOMAP => true)
(GENERIC_BUG => true)
(GENERIC_HWEIGHT => true)
(GENERIC_GPIO => true)
(ARCH_MAY_HAVE_PC_FDC => true)
(RWSEM_GENERIC_SPINLOCK => true)
(RWSEM_XCHGADD_ALGORITHM => true)
(ARCH_HAS_CPU_IDLE_WAIT => true)
(GENERIC_CALIBRATE_DELAY => true)
(GENERIC_TIME_VSYSCALL => true)
(ARCH_HAS_CPU_RELAX => true)
(ARCH_HAS_DEFAULT_IDLE => true)
(ARCH_HAS_CACHE_LINE_SIZE => true)
(HAVE_SETUP_PER_CPU_AREA => true)
(HAVE_CPUMASK_OF_CPU_MAP => true)
(ARCH_HIBERNATION_POSSIBLE => true)
(ARCH_SUSPEND_POSSIBLE => true)
(ZONE_DMA32 => true)
(ARCH_POPULATES_NODE_MAP => true)
(AUDIT_ARCH => true)
(ARCH_SUPPORTS_OPTIMIZED_INLINING => true)
(GENERIC_HARDIRQS => true)
(GENERIC_IRQ_PROBE => true)
(GENERIC_PENDING_IRQ => true)
(X86_SMP => true)
(USE_GENERIC_SMP_HELPERS => true)
(X86_32_SMP => true)
(X86_64_SMP => true)
(X86_HT => true)
(X86_BIOS_REBOOT => true)
(X86_TRAMPOLINE => true)
(KTIME_SCALAR => true)
(ARCH => true)
(KERNELVERSION => true)
(DEFCONFIG_LIST => true)
(EXPERIMENTAL => true)
(BROKEN => true)
(BROKEN_ON_SMP => true)
(LOCK_KERNEL => true)
(INIT_ENV_ARG_LIMIT => true)
(LOCALVERSION => true)
(LOCALVERSION_AUTO => true)
(SWAP => true)
(SYSVIPC => true)
(SYSVIPC_SYSCTL => true)
(POSIX_MQUEUE => true)
(BSD_PROCESS_ACCT => true)
(BSD_PROCESS_ACCT_V3 => true)
(TASKSTATS => true)
(TASK_DELAY_ACCT => true)
(TASK_XACCT => true)
(TASK_IO_ACCOUNTING => true)
(AUDIT => true)
(AUDITSYSCALL => true)
(AUDIT_TREE => true)
(IKCONFIG => true)
(IKCONFIG_PROC => true)
(LOG_BUF_SHIFT => true)
(CGROUPS => true)
(CGROUP_DEBUG => true)
(CGROUP_NS => true)
(CGROUP_FREEZER => true)
(CGROUP_DEVICE => true)
(CPUSETS => true)
(HAVE_UNSTABLE_SCHED_CLOCK => true)
(GROUP_SCHED => true)
(FAIR_GROUP_SCHED => true)
(RT_GROUP_SCHED => true)
(USER_SCHED => true)
(CGROUP_SCHED => true)
(CGROUP_CPUACCT => true)
(RESOURCE_COUNTERS => true)
(MM_OWNER => true)
(CGROUP_MEM_RES_CTLR => true)
(SYSFS_DEPRECATED => true)
(SYSFS_DEPRECATED_V2 => true)
(PROC_PID_CPUSET => true)
(RELAY => true)
(NAMESPACES => true)
(UTS_NS => true)
(IPC_NS => true)
(USER_NS => true)
(PID_NS => true)
(BLK_DEV_INITRD => true)
(INITRAMFS_SOURCE => true)
(INITRAMFS_ROOT_UID => true)
(INITRAMFS_ROOT_GID => true)
(CC_OPTIMIZE_FOR_SIZE => true)
(SYSCTL => true)
(EMBEDDED => true)
(UIDtrue6 => true)
(SYSCTL_SYSCALL => true)
(KALLSYMS => true)
(KALLSYMS_ALL => true)
(KALLSYMS_EXTRA_PASS => true)
(HOTPLUG => true)
(PRINTK => true)
(BUG => true)
(ELF_CORE => true)
(PCSPKR_PLATFORM => true)
(COMPAT_BRK => true)
(BASE_FULL => true)
(FUTEX => true)
(ANON_INODES => true)
(EPOLL => true)
(SIGNALFD => true)
(TIMERFD => true)
(EVENTFD => true)
(SHMEM => true)
(AIO => true)
(VM_EVENT_COUNTERS => true)
(PCI_QUIRKS => true)
(SLUB_DEBUG => true)
(SLAB => true)
(SLUB => true)
(SLOB => true)
(PROFILING => true)
(TRACEPOINTS => true)
(MARKERS => true)
(OPROFILE => true)
(OPROFILE_IBS => true)
(HAVE_OPROFILE => true)
(KPROBES => true)
(HAVE_EFFICIENT_UNALIGNED_ACCESS => true)
(HAVE_SYSCALL_WRAPPERS => true)
(KRETPROBES => true)
(HAVE_IOREMAP_PROT => true)
(HAVE_KPROBES => true)
(HAVE_KRETPROBES => true)
(HAVE_ARCH_TRACEHOOK => true)
(HAVE_DMA_ATTRS => true)
(USE_GENERIC_SMP_HELPERS => true)
(HAVE_CLK => true)
(HAVE_GENERIC_DMA_COHERENT => true)
(SLABINFO => true)
(RT_MUTEXES => true)
(TINY_SHMEM => true)
(BASE_SMALL => true)
(MODULES => true)
(MODULE_FORCE_LOAD => true)
(MODULE_UNLOAD => true)
(MODULE_FORCE_UNLOAD => true)
(MODVERSIONS => true)
(MODULE_SRCVERSION_ALL => true)
(KMOD => true)
(STOP_MACHINE => true)
(BLOCK => true)
(LBD => true)
(BLK_DEV_IO_TRACE => true)
(LSF => true)
(BLK_DEV_BSG => true)
(BLK_DEV_INTEGRITY => true)
(BLOCK_COMPAT => true)
(IOSCHED_NOOP => true)
(IOSCHED_AS => true)
(IOSCHED_DEADLINE => true)
(IOSCHED_CFQ => true)
(DEFAULT_AS => true)
(DEFAULT_DEADLINE => true)
(DEFAULT_CFQ => true)
(DEFAULT_NOOP => true)
(DEFAULT_IOSCHED => true)
(PREEMPT_NOTIFIERS => true)
(CLASSIC_RCU => true)
(FREEZER => true)
(TICK_ONESHOT => true)
(NO_HZ => true)
(HIGH_RES_TIMERS => true)
(GENERIC_CLOCKEVENTS_BUILD => true)
(SMP => true)
(X86_HAS_BOOT_CPU_ID => true)
(X86_FIND_SMP_CONFIG => true)
(X86_MPPARSE => true)
(X86_MPPARSE => true)
(X86_PC => true)
(X86_ELAN => true)
(X86_VOYAGER => true)
(X86_GENERICARCH => true)
(X86_NUMAQ => true)
(X86_SUMMIT => true)
(X86_ES7falsefalsefalse => true)
(X86_BIGSMP => true)
(X86_VSMP => true)
(X86_VISWS => true)
(X86_RDC32trueX => true)
(SCHED_NO_NO_OMIT_FRAME_POINTER => true)
(PARAVIRT_GUEST => true)
(XEN => true)
(XEN_MAX_DOMAIN_MEMORY => true)
(XEN_SAVE_RESTORE => true)
(XEN_DEBUG_FS => true)
(VMI => true)
(KVM_CLOCK => true)
(KVM_GUEST => true)
(LGUEST_GUEST => true)
(PARAVIRT => true)
(PARAVIRT_CLOCK => true)
(PARAVIRT_DEBUG => true)
(MEMTEST => true)
(X86_SUMMIT_NUMA => true)
(X86_CYCLONE_TIMER => true)
(ES7falsefalsefalse_CLUSTERED_APIC => true)
(M386 => true)
(M486 => true)
(M586 => true)
(M586TSC => true)
(M586MMX => true)
(M686 => true)
(MPENTIUMII => true)
(MPENTIUMIII => true)
(MPENTIUMM => true)
(MPENTIUM4 => true)
(MK6 => true)
(MK7 => true)
(MK8 => true)
(MCRUSOE => true)
(MEFFICEON => true)
(MWINCHIPC6 => true)
(MWINCHIP3D => true)
(MGEODEGXtrue => true)
(MGEODE_LX => true)
(MCYRIXIII => true)
(MVIAC3_2 => true)
(MVIAC7 => true)
(MPSC => true)
(MCORE2 => true)
(GENERIC_CPU => true)
(X86_GENERIC => true)
(X86_CPU => true)
(X86_Ltrue_CACHE_BYTES => true)
(X86_INTERNODE_CACHE_BYTES => true)
(X86_CMPXCHG => true)
(X86_Ltrue_CACHE_SHIFT => true)
(X86_XADD => true)
(X86_PPRO_FENCE => true)
(X86_FfalsefalseF_BUG => true)
(X86_WP_WORKS_OK => true)
(X86_INVLPG => true)
(X86_BSWAP => true)
(X86_POPAD_OK => true)
(X86_ALIGNMENT_true6 => true)
(X86_INTEL_USERCOPY => true)
(X86_USE_PPRO_CHECKSUM => true)
(X86_USE_3DNOW => true)
(X86_OOSTORE => true)
(X86_P6_NOP => true)
(X86_TSC => true)
(X86_CMPXCHG64 => true)
(X86_CMOV => true)
(X86_MINIMUM_CPU_FAMILY => true)
(X86_DEBUGCTLMSR => true)
(PROCESSOR_SELECT => true)
(CPU_SUP_INTEL => true)
(CPU_SUP_CYRIX_32 => true)
(CPU_SUP_AMD => true)
(CPU_SUP_CENTAUR_32 => true)
(CPU_SUP_CENTAUR_64 => true)
(CPU_SUP_TRANSMETA_32 => true)
(CPU_SUP_UMC_32 => true)
(X86_DS => true)
(X86_PTRACE_BTS => true)
(HPET_TIMER => true)
(HPET_EMULATE_RTC => true)
(DMI => true)
(GART_IOMMU => true)
(CALGARY_IOMMU => true)
(CALGARY_IOMMU_ENABLED_BY_DEFAULT => true)
(AMD_IOMMU => true)
(SWIOTLB => true)
(IOMMU_HELPER => true)
(MAXSMP => true)
(NR_CPUS => true)
(SCHED_SMT => true)
(SCHED_MC => true)
(PREEMPT_NONE => true)
(PREEMPT_VOLUNTARY => true)
(PREEMPT => true)
(PREEMPT_RCU => true)
(RCU_TRACE => true)
(X86_UP_APIC => true)
(X86_UP_IOAPIC => true)
(X86_LOCAL_APIC => true)
(X86_IO_APIC => true)
(X86_VISWS_APIC => true)
(X86_MCE => true)
(X86_MCE_INTEL => true)
(X86_MCE_AMD => true)
(X86_MCE_NONFATAL => true)
(X86_MCE_P4THERMAL => true)
(VM86 => true)
(TOSHIBA => true)
(I8K => true)
(X86_REBOOTFIXUPS => true)
(MICROCODE => true)
(MICROCODE_INTEL => true)
(MICROCODE_AMD => true)
(MICROCODE_OLD_INTERFACE => true)
(X86_MSR => true)
(X86_CPUID => true)
(NOHIGHMEM => true)
(HIGHMEM4G => true)
(HIGHMEM64G => true)
(VMSPLIT_3G => true)
(VMSPLIT_3G_OPT => true)
(VMSPLIT_2G => true)
(VMSPLIT_2G_OPT => true)
(VMSPLIT_trueG => true)
(PAGE_OFFSET => true)
(HIGHMEM => true)
(X86_PAE => true)
(ARCH_PHYS_ADDR_T_64BIT => true)
(NUMA => true)
(K8_NUMA => true)
(X86_64_ACPI_NUMA => true)
(NODES_SPAN_OTHER_NODES => true)
(NUMA_EMU => true)
(NODES_SHIFT => true)
(HAVE_ARCH_BOOTMEM_NODE => true)
(ARCH_HAVE_MEMORY_PRESENT => true)
(NEED_NODE_MEMMAP_SIZE => true)
(HAVE_ARCH_ALLOC_REMAP => true)
(ARCH_FLATMEM_ENABLE => true)
(ARCH_DISCONTIGMEM_ENABLE => true)
(ARCH_DISCONTIGMEM_DEFAULT => true)
(ARCH_SPARSEMEM_DEFAULT => true)
(ARCH_SPARSEMEM_ENABLE => true)
(ARCH_SELECT_MEMORY_MODEL => true)
(ARCH_MEMORY_PROBE => true)
(SELECT_MEMORY_MODEL => true)
(FLATMEM_MANUAL => true)
(DISCONTIGMEM_MANUAL => true)
(SPARSEMEM_MANUAL => true)
(DISCONTIGMEM => true)
(SPARSEMEM => true)
(FLATMEM => true)
(FLAT_NODE_MEM_MAP => true)
(NEED_MULTIPLE_NODES => true)
(HAVE_MEMORY_PRESENT => true)
(SPARSEMEM_STATIC => true)
(SPARSEMEM_EXTREME => true)
(SPARSEMEM_VMEMMAP_ENABLE => true)
(SPARSEMEM_VMEMMAP => true)
(MEMORY_HOTPLUG => true)
(MEMORY_HOTPLUG_SPARSE => true)
(MEMORY_HOTREMOVE => true)
(PAGEFLAGS_EXTENDED => true)
(SPLIT_PTLOCK_CPUS => true)
(MIGRATION => true)
(RESOURCES_64BIT => true)
(PHYS_ADDR_T_64BIT => true)
(ZONE_DMA_FLAG => true)
(BOUNCE => true)
(NR_QUICK => true)
(VIRT_TO_BUS => true)
(UNEVICTABLE_LRU => true)
(MMU_NOTIFIER => true)
(HIGHPTE => true)
(X86_CHECK_BIOS_CORRUPTION => true)
(X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK => true)
(X86_RESERVE_LOW_64K => true)
(MATH_EMULATION => true)
(MTRR => true)
(MTRR_SANITIZER => true)
(MTRR_SANITIZER_ENABLE_DEFAULT => true)
(MTRR_SANITIZER_SPARE_REG_NR_DEFAULT => true)
(X86_PAT => true)
(EFI => true)
(SECCOMP => true)
(CC_STACKPROTECTOR => true)
(CC_STACKPROTECTOR_ALL => true)
(HZ_truefalsefalse => true)
(HZ_25false => true)
(HZ_3falsefalse => true)
(HZ_truefalsefalsefalse => true)
(HZ => true)
(SCHED_HRTICK => true)
(KEXEC => true)
(CRASH_DUMP => true)
(KEXEC_JUMP => true)
(PHYSICAL_START => true)
(RELOCATABLE => true)
(PHYSICAL_ALIGN => true)
(HOTPLUG_CPU => true)
(COMPAT_VDSO => true)
(CMDLINE_BOOL => true)
(CMDLINE => true)
(CMDLINE_OVERRIDE => true)
(ARCH_ENABLE_MEMORY_HOTPLUG => true)
(HAVE_ARCH_EARLY_PFN_TO_NID => true)
(ARCH_HIBERNATION_HEADER => true)
(PM => true)
(PM_DEBUG => true)
(PM_VERBOSE => true)
(CAN_PM_TRACE => true)
(PM_TRACE => true)
(PM_TRACE_RTC => true)
(PM_SLEEP_SMP => true)
(PM_SLEEP => true)
(SUSPEND => true)
(PM_TEST_SUSPEND => true)
(SUSPEND_FREEZER => true)
(HIBERNATION => true)
(PM_STD_PARTITION => true)
(APM_EMULATION => true)
(ACPI => true)
(ACPI_SLEEP => true)
(ACPI_PROCFS => true)
(ACPI_PROCFS_POWER => true)
(ACPI_SYSFS_POWER => true)
(ACPI_PROC_EVENT => true)
(ACPI_AC => true)
(ACPI_BATTERY => true)
(ACPI_BUTTON => true)
(ACPI_VIDEO => true)
(ACPI_FAN => true)
(ACPI_DOCK => true)
(ACPI_PROCESSOR => true)
(ACPI_HOTPLUG_CPU => true)
(ACPI_THERMAL => true)
(ACPI_NUMA => true)
(ACPI_WMI => true)
(ACPI_ASUS => true)
(ACPI_TOSHIBA => true)
(ACPI_CUSTOM_DSDT_FILE => true)
(ACPI_CUSTOM_DSDT => true)
(ACPI_BLACKLIST_YEAR => true)
(ACPI_DEBUG => true)
(ACPI_DEBUG_FUNC_TRACE => true)
(ACPI_PCI_SLOT => true)
(ACPI_SYSTEM => true)
(X86_PM_TIMER => true)
(ACPI_CONTAINER => true)
(ACPI_HOTPLUG_MEMORY => true)
(ACPI_SBS => true)
(X86_APM_BOOT => true)
(APM => true)
(APM_IGNORE_USER_SUSPEND => true)
(APM_DO_ENABLE => true)
(APM_CPU_IDLE => true)
(APM_DISPLAY_BLANK => true)
(APM_ALLOW_INTS => true)
(APM_REAL_MODE_POWER_OFF => true)
(CPU_FREQ => true)
(CPU_FREQ_TABLE => true)
(CPU_FREQ_DEBUG => true)
(CPU_FREQ_STAT => true)
(CPU_FREQ_STAT_DETAILS => true)
(CPU_FREQ_DEFAULT_GOV_PERFORMANCE => true)
(CPU_FREQ_DEFAULT_GOV_POWERSAVE => true)
(CPU_FREQ_DEFAULT_GOV_USERSPACE => true)
(CPU_FREQ_DEFAULT_GOV_ONDEMAND => true)
(CPU_FREQ_DEFAULT_GOV_CONSERVATIVE => true)
(CPU_FREQ_GOV_PERFORMANCE => true)
(CPU_FREQ_GOV_POWERSAVE => true)
(CPU_FREQ_GOV_USERSPACE => true)
(CPU_FREQ_GOV_ONDEMAND => true)
(CPU_FREQ_GOV_CONSERVATIVE => true)
(X86_ACPI_CPUFREQ => true)
(ELAN_CPUFREQ => true)
(SC52false_CPUFREQ => true)
(X86_POWERNOW_K6 => true)
(X86_POWERNOW_K7 => true)
(X86_POWERNOW_K7_ACPI => true)
(X86_POWERNOW_K8 => true)
(X86_POWERNOW_K8_ACPI => true)
(X86_GX_SUSPMOD => true)
(X86_SPEEDSTEP_CENTRINO => true)
(X86_SPEEDSTEP_CENTRINO_TABLE => true)
(X86_SPEEDSTEP_ICH => true)
(X86_SPEEDSTEP_SMI => true)
(X86_P4_CLOCKMOD => true)
(X86_CPUFREQ_NFORCE2 => true)
(X86_LONGRUN => true)
(X86_LONGHAUL => true)
(X86_E_POWERSAVER => true)
(X86_ACPI_CPUFREQ_PROC_INTF => true)
(X86_SPEEDSTEP_LIB => true)
(X86_SPEEDSTEP_RELAXED_CAP_CHECK => true)
(CPU_IDLE => true)
(CPU_IDLE_GOV_LADDER => true)
(CPU_IDLE_GOV_MENU => true)
(I73falsefalse_IDLE_IOAT_CHANNEL => true)
(I73falsefalse_IDLE => true)
(PCI => true)
(PCI_GOBIOS => true)
(PCI_GOMMCONFIG => true)
(PCI_GODIRECT => true)
(PCI_GOOLPC => true)
(PCI_GOANY => true)
(PCI_BIOS => true)
(PCI_DIRECT => true)
(PCI_MMCONFIG => true)
(PCI_OLPC => true)
(PCI_DOMAINS => true)
(PCI_MMCONFIG => true)
(DMAR => true)
(DMAR_GFX_WA => true)
(DMAR_FLOPPY_WA => true)
(INTR_REMAP => true)
(PCIEPORTBUS => true)
(HOTPLUG_PCI_PCIE => true)
(PCIEAER => true)
(PCIEASPM => true)
(PCIEASPM_DEBUG => true)
(ARCH_SUPPORTS_MSI => true)
(PCI_MSI => true)
(PCI_LEGACY => true)
(PCI_DEBUG => true)
(HT_IRQ => true)
(ISA_DMA_API => true)
(ISA => true)
(EISA => true)
(EISA_VLB_PRIMING => true)
(EISA_PCI_EISA => true)
(EISA_VIRTUAL_ROOT => true)
(EISA_NAMES => true)
(MCA => true)
(MCA_LEGACY => true)
(MCA_PROC_FS => true)
(SCx2falsefalse => true)
(SCx2falsefalseHR_TIMER => true)
(GEODE_MFGPT_TIMER => true)
(OLPC => true)
(K8_NB => true)
(PCCARD => true)
(PCMCIA_DEBUG => true)
(PCMCIA => true)
(PCMCIA_LOAD_CIS => true)
(PCMCIA_IOCTL => true)
(CARDBUS => true)
(YENTA => true)
(YENTA_O2 => true)
(YENTA_RICOH => true)
(YENTA_TI => true)
(YENTA_ENE_TUNE => true)
(YENTA_TOSHIBA => true)
(PD6729 => true)
(I82false92 => true)
(I82365 => true)
(TCIC => true)
(PCMCIA_M8XX => true)
(PCMCIA_AUtrueXfalsefalse => true)
(PCMCIA_SAtruetruefalsefalse => true)
(PCMCIA_SAtruetruetruetrue => true)
(PCMCIA_PXA2XX => true)
(PCMCIA_PROBE => true)
(M32R_PCC => true)
(M32R_CFC => true)
(M32R_CFC_NUM => true)
(PCMCIA_VRC4true7true => true)
(PCMCIA_VRC4true73 => true)
(OMAP_CF => true)
(BFIN_CFPCMCIA => true)
(AT9true_CF => true)
(ELECTRA_CF => true)
(PCCARD_NONSTATIC => true)
(PCCARD_IODYN => true)
(HOTPLUG_PCI => true)
(HOTPLUG_PCI_FAKE => true)
(HOTPLUG_PCI_COMPAQ => true)
(HOTPLUG_PCI_COMPAQ_NVRAM => true)
(HOTPLUG_PCI_IBM => true)
(HOTPLUG_PCI_ACPI => true)
(HOTPLUG_PCI_ACPI_IBM => true)
(HOTPLUG_PCI_CPCI => true)
(HOTPLUG_PCI_CPCI_ZT555false => true)
(HOTPLUG_PCI_CPCI_GENERIC => true)
(HOTPLUG_PCI_SHPC => true)
(HOTPLUG_PCI_RPA => true)
(HOTPLUG_PCI_RPA_DLPAR => true)
(HOTPLUG_PCI_SGI => true)
(BINFMT_ELF => true)
(COMPAT_BINFMT_ELF => true)
(BINFMT_ELF_FDPIC => true)
(CORE_DUMP_DEFAULT_ELF_HEADERS => true)
(BINFMT_FLAT => true)
(BINFMT_ZFLAT => true)
(BINFMT_SHARED_FLAT => true)
(HAVE_AOUT => true)
(BINFMT_AOUT => true)
(OSF4_COMPAT => true)
(BINFMT_EM86 => true)
(BINFMT_SOM => true)
(BINFMT_MISC => true)
(IA32_EMULATION => true)
(IA32_AOUT => true)
(COMPAT => true)
(COMPAT_FOR_U64_ALIGNMENT => true)
(SYSVIPC_COMPAT => true)
(HAVE_ATOMIC_IOMAP => true)
(NET => true)
(NET_NS => true)
(PACKET => true)
(PACKET_MMAP => true)
(UNIX => true)
(XFRM => true)
(XFRM_USER => true)
(XFRM_SUB_POLICY => true)
(XFRM_MIGRATE => true)
(XFRM_STATISTICS => true)
(XFRM_IPCOMP => true)
(NET_KEY => true)
(NET_KEY_MIGRATE => true)
(IUCV => true)
(AFIUCV => true)
(INET => true)
(IP_MULTICAST => true)
(IP_ADVANCED_ROUTER => true)
(ASK_IP_FIB_HASH => true)
(IP_FIB_TRIE => true)
(IP_FIB_HASH => true)
(IP_FIB_TRIE_STATS => true)
(IP_MULTIPLE_TABLES => true)
(IP_ROUTE_MULTIPATH => true)
(IP_ROUTE_VERBOSE => true)
(IP_PNP => true)
(IP_PNP_DHCP => true)
(IP_PNP_BOOTP => true)
(IP_PNP_RARP => true)
(NET_IPIP => true)
(NET_IPGRE => true)
(NET_IPGRE_BROADCAST => true)
(IP_MROUTE => true)
(IP_PIMSM_Vtrue => true)
(IP_PIMSM_V2 => true)
(ARPD => true)
(SYN_COOKIES => true)
(INET_AH => true)
(INET_ESP => true)
(INET_IPCOMP => true)
(INET_XFRM_TUNNEL => true)
(INET_TUNNEL => true)
(INET_XFRM_MODE_TRANSPORT => true)
(INET_XFRM_MODE_TUNNEL => true)
(INET_XFRM_MODE_BEET => true)
(INET_LRO => true)
(INET_DIAG => true)
(INET_TCP_DIAG => true)
(TCP_CONG_ADVANCED => true)
(TCP_CONG_BIC => true)
(TCP_CONG_CUBIC => true)
(TCP_CONG_WESTWOOD => true)
(TCP_CONG_HTCP => true)
(TCP_CONG_HSTCP => true)
(TCP_CONG_HYBLA => true)
(TCP_CONG_VEGAS => true)
(TCP_CONG_SCALABLE => true)
(TCP_CONG_LP => true)
(TCP_CONG_VENO => true)
(TCP_CONG_YEAH => true)
(TCP_CONG_ILLINOIS => true)
(DEFAULT_BIC => true)
(DEFAULT_CUBIC => true)
(DEFAULT_HTCP => true)
(DEFAULT_VEGAS => true)
(DEFAULT_WESTWOOD => true)
(DEFAULT_RENO => true)
(TCP_CONG_CUBIC => true)
(DEFAULT_TCP_CONG => true)
(TCP_MD5SIG => true)
(IPV6 => true)
(IPV6_PRIVACY => true)
(IPV6_ROUTER_PREF => true)
(IPV6_ROUTE_INFO => true)
(IPV6_OPTIMISTIC_DAD => true)
(INET6_AH => true)
(INET6_ESP => true)
(INET6_IPCOMP => true)
(IPV6_MIP6 => true)
(INET6_XFRM_TUNNEL => true)
(INET6_TUNNEL => true)
(INET6_XFRM_MODE_TRANSPORT => true)
(INET6_XFRM_MODE_TUNNEL => true)
(INET6_XFRM_MODE_BEET => true)
(INET6_XFRM_MODE_ROUTEOPTIMIZATION => true)
(IPV6_SIT => true)
(IPV6_NDISC_NODETYPE => true)
(IPV6_TUNNEL => true)
(IPV6_MULTIPLE_TABLES => true)
(IPV6_SUBTREES => true)
(IPV6_MROUTE => true)
(IPV6_PIMSM_V2 => true)
(NETLABEL => true)
(NETWORK_SECMARK => true)
(NETFILTER => true)
(NETFILTER_DEBUG => true)
(NETFILTER_ADVANCED => true)
(BRIDGE_NETFILTER => true)
(NETFILTER_NETLINK => true)
(NETFILTER_NETLINK_QUEUE => true)
(NETFILTER_NETLINK_LOG => true)
(NF_CONNTRACK => true)
(NF_CT_ACCT => true)
(NF_CONNTRACK_MARK => true)
(NF_CONNTRACK_SECMARK => true)
(NF_CONNTRACK_EVENTS => true)
(NF_CT_PROTO_DCCP => true)
(NF_CT_PROTO_GRE => true)
(NF_CT_PROTO_SCTP => true)
(NF_CT_PROTO_UDPLITE => true)
(NF_CONNTRACK_AMANDA => true)
(NF_CONNTRACK_FTP => true)
(NF_CONNTRACK_H323 => true)
(NF_CONNTRACK_IRC => true)
(NF_CONNTRACK_NETBIOS_NS => true)
(NF_CONNTRACK_PPTP => true)
(NF_CONNTRACK_SANE => true)
(NF_CONNTRACK_SIP => true)
(NF_CONNTRACK_TFTP => true)
(NF_CT_NETLINK => true)
(NETFILTER_TPROXY => true)
(NETFILTER_XTABLES => true)
(NETFILTER_XT_TARGET_CLASSIFY => true)
(NETFILTER_XT_TARGET_CONNMARK => true)
(NETFILTER_XT_TARGET_CONNSECMARK => true)
(NETFILTER_XT_TARGET_DSCP => true)
(NETFILTER_XT_TARGET_MARK => true)
(NETFILTER_XT_TARGET_NFLOG => true)
(NETFILTER_XT_TARGET_NFQUEUE => true)
(NETFILTER_XT_TARGET_NOTRACK => true)
(NETFILTER_XT_TARGET_RATEEST => true)
(NETFILTER_XT_TARGET_TPROXY => true)
(NETFILTER_XT_TARGET_TRACE => true)
(NETFILTER_XT_TARGET_SECMARK => true)
(NETFILTER_XT_TARGET_TCPMSS => true)
(NETFILTER_XT_TARGET_TCPOPTSTRIP => true)
(NETFILTER_XT_MATCH_COMMENT => true)
(NETFILTER_XT_MATCH_CONNBYTES => true)
(NETFILTER_XT_MATCH_CONNLIMIT => true)
(NETFILTER_XT_MATCH_CONNMARK => true)
(NETFILTER_XT_MATCH_CONNTRACK => true)
(NETFILTER_XT_MATCH_DCCP => true)
(NETFILTER_XT_MATCH_DSCP => true)
(NETFILTER_XT_MATCH_ESP => true)
(NETFILTER_XT_MATCH_HASHLIMIT => true)
(NETFILTER_XT_MATCH_HELPER => true)
(NETFILTER_XT_MATCH_IPRANGE => true)
(NETFILTER_XT_MATCH_LENGTH => true)
(NETFILTER_XT_MATCH_LIMIT => true)
(NETFILTER_XT_MATCH_MAC => true)
(NETFILTER_XT_MATCH_MARK => true)
(NETFILTER_XT_MATCH_MULTIPORT => true)
(NETFILTER_XT_MATCH_OWNER => true)
(NETFILTER_XT_MATCH_POLICY => true)
(NETFILTER_XT_MATCH_PHYSDEV => true)
(NETFILTER_XT_MATCH_PKTTYPE => true)
(NETFILTER_XT_MATCH_QUOTA => true)
(NETFILTER_XT_MATCH_RATEEST => true)
(NETFILTER_XT_MATCH_REALM => true)
(NETFILTER_XT_MATCH_RECENT => true)
(NETFILTER_XT_MATCH_RECENT_PROC_COMPAT => true)
(NETFILTER_XT_MATCH_SCTP => true)
(NETFILTER_XT_MATCH_SOCKET => true)
(NETFILTER_XT_MATCH_STATE => true)
(NETFILTER_XT_MATCH_STATISTIC => true)
(NETFILTER_XT_MATCH_STRING => true)
(NETFILTER_XT_MATCH_TCPMSS => true)
(NETFILTER_XT_MATCH_TIME => true)
(NETFILTER_XT_MATCH_U32 => true)
(IP_VS => true)
(IP_VS_IPV6 => true)
(IP_VS_DEBUG => true)
(IP_VS_TAB_BITS => true)
(IP_VS_PROTO_TCP => true)
(IP_VS_PROTO_UDP => true)
(IP_VS_PROTO_AH_ESP => true)
(IP_VS_PROTO_ESP => true)
(IP_VS_PROTO_AH => true)
(IP_VS_RR => true)
(IP_VS_WRR => true)
(IP_VS_LC => true)
(IP_VS_WLC => true)
(IP_VS_LBLC => true)
(IP_VS_LBLCR => true)
(IP_VS_DH => true)
(IP_VS_SH => true)
(IP_VS_SED => true)
(IP_VS_NQ => true)
(IP_VS_FTP => true)
(NF_DEFRAG_IPV4 => true)
(NF_CONNTRACK_IPV4 => true)
(NF_CONNTRACK_PROC_COMPAT => true)
(IP_NF_QUEUE => true)
(IP_NF_IPTABLES => true)
(IP_NF_MATCH_ADDRTYPE => true)
(IP_NF_MATCH_AH => true)
(IP_NF_MATCH_ECN => true)
(IP_NF_MATCH_TTL => true)
(IP_NF_FILTER => true)
(IP_NF_TARGET_REJECT => true)
(IP_NF_TARGET_LOG => true)
(IP_NF_TARGET_ULOG => true)
(NF_NAT => true)
(NF_NAT_NEEDED => true)
(IP_NF_TARGET_MASQUERADE => true)
(IP_NF_TARGET_NETMAP => true)
(IP_NF_TARGET_REDIRECT => true)
(NF_NAT_SNMP_BASIC => true)
(NF_NAT_PROTO_DCCP => true)
(NF_NAT_PROTO_GRE => true)
(NF_NAT_PROTO_UDPLITE => true)
(NF_NAT_PROTO_SCTP => true)
(NF_NAT_FTP => true)
(NF_NAT_IRC => true)
(NF_NAT_TFTP => true)
(NF_NAT_AMANDA => true)
(NF_NAT_PPTP => true)
(NF_NAT_H323 => true)
(NF_NAT_SIP => true)
(IP_NF_MANGLE => true)
(IP_NF_TARGET_CLUSTERIP => true)
(IP_NF_TARGET_ECN => true)
(IP_NF_TARGET_TTL => true)
(IP_NF_RAW => true)
(IP_NF_SECURITY => true)
(IP_NF_ARPTABLES => true)
(IP_NF_ARPFILTER => true)
(IP_NF_ARP_MANGLE => true)
(NF_CONNTRACK_IPV6 => true)
(IP6_NF_QUEUE => true)
(IP6_NF_IPTABLES => true)
(IP6_NF_MATCH_AH => true)
(IP6_NF_MATCH_EUI64 => true)
(IP6_NF_MATCH_FRAG => true)
(IP6_NF_MATCH_OPTS => true)
(IP6_NF_MATCH_HL => true)
(IP6_NF_MATCH_IPV6HEADER => true)
(IP6_NF_MATCH_MH => true)
(IP6_NF_MATCH_RT => true)
(IP6_NF_TARGET_LOG => true)
(IP6_NF_FILTER => true)
(IP6_NF_TARGET_REJECT => true)
(IP6_NF_MANGLE => true)
(IP6_NF_TARGET_HL => true)
(IP6_NF_RAW => true)
(IP6_NF_SECURITY => true)
(DECNET_NF_GRABULATOR => true)
(BRIDGE_NF_EBTABLES => true)
(BRIDGE_EBT_BROUTE => true)
(BRIDGE_EBT_T_FILTER => true)
(BRIDGE_EBT_T_NAT => true)
(BRIDGE_EBT_8false2_3 => true)
(BRIDGE_EBT_AMONG => true)
(BRIDGE_EBT_ARP => true)
(BRIDGE_EBT_IP => true)
(BRIDGE_EBT_IP6 => true)
(BRIDGE_EBT_LIMIT => true)
(BRIDGE_EBT_MARK => true)
(BRIDGE_EBT_PKTTYPE => true)
(BRIDGE_EBT_STP => true)
(BRIDGE_EBT_VLAN => true)
(BRIDGE_EBT_ARPREPLY => true)
(BRIDGE_EBT_DNAT => true)
(BRIDGE_EBT_MARK_T => true)
(BRIDGE_EBT_REDIRECT => true)
(BRIDGE_EBT_SNAT => true)
(BRIDGE_EBT_LOG => true)
(BRIDGE_EBT_ULOG => true)
(BRIDGE_EBT_NFLOG => true)
(IP_DCCP => true)
(INET_DCCP_DIAG => true)
(IP_DCCP_ACKVEC => true)
(IP_DCCP_CCID2 => true)
(IP_DCCP_CCID2_DEBUG => true)
(IP_DCCP_CCID3 => true)
(IP_DCCP_CCID3_DEBUG => true)
(IP_DCCP_CCID3_RTO => true)
(IP_DCCP_TFRC_LIB => true)
(IP_DCCP_TFRC_DEBUG => true)
(IP_DCCP_DEBUG => true)
(NET_DCCPPROBE => true)
(IP_SCTP => true)
(SCTP_DBG_MSG => true)
(SCTP_DBG_OBJCNT => true)
(SCTP_HMAC_NONE => true)
(SCTP_HMAC_SHAtrue => true)
(SCTP_HMAC_MD5 => true)
(TIPC => true)
(TIPC_ADVANCED => true)
(TIPC_ZONES => true)
(TIPC_CLUSTERS => true)
(TIPC_NODES => true)
(TIPC_SLAVE_NODES => true)
(TIPC_PORTS => true)
(TIPC_LOG => true)
(TIPC_DEBUG => true)
(ATM => true)
(ATM_CLIP => true)
(ATM_CLIP_NO_ICMP => true)
(ATM_LANE => true)
(ATM_MPOA => true)
(ATM_BR2684 => true)
(ATM_BR2684_IPFILTER => true)
(STP => true)
(GARP => true)
(BRIDGE => true)
(NET_DSA => true)
(NET_DSA_TAG_DSA => true)
(NET_DSA_TAG_EDSA => true)
(NET_DSA_TAG_TRAILER => true)
(NET_DSA_MV88E6XXX => true)
(NET_DSA_MV88E6false6false => true)
(NET_DSA_MV88E6XXX_NEED_PPU => true)
(NET_DSA_MV88E6true3true => true)
(NET_DSA_MV88E6true23_6true_65 => true)
(VLAN_8false2trueQ => true)
(VLAN_8false2trueQ_GVRP => true)
(DECNET => true)
(DECNET_ROUTER => true)
(LLC => true)
(LLC2 => true)
(IPX => true)
(IPX_INTERN => true)
(ATALK => true)
(DEV_APPLETALK => true)
(LTPC => true)
(COPS => true)
(COPS_DAYNA => true)
(COPS_TANGENT => true)
(IPDDP => true)
(IPDDP_ENCAP => true)
(IPDDP_DECAP => true)
(X25 => true)
(LAPB => true)
(ECONET => true)
(ECONET_AUNUDP => true)
(ECONET_NATIVE => true)
(WAN_ROUTER => true)
(NET_SCHED => true)
(NET_SCH_CBQ => true)
(NET_SCH_HTB => true)
(NET_SCH_HFSC => true)
(NET_SCH_ATM => true)
(NET_SCH_PRIO => true)
(NET_SCH_MULTIQ => true)
(NET_SCH_RED => true)
(NET_SCH_SFQ => true)
(NET_SCH_TEQL => true)
(NET_SCH_TBF => true)
(NET_SCH_GRED => true)
(NET_SCH_DSMARK => true)
(NET_SCH_NETEM => true)
(NET_SCH_INGRESS => true)
(NET_CLS => true)
(NET_CLS_BASIC => true)
(NET_CLS_TCINDEX => true)
(NET_CLS_ROUTE4 => true)
(NET_CLS_ROUTE => true)
(NET_CLS_FW => true)
(NET_CLS_U32 => true)
(CLS_U32_PERF => true)
(CLS_U32_MARK => true)
(NET_CLS_RSVP => true)
(NET_CLS_RSVP6 => true)
(NET_CLS_FLOW => true)
(NET_EMATCH => true)
(NET_EMATCH_STACK => true)
(NET_EMATCH_CMP => true)
(NET_EMATCH_NBYTE => true)
(NET_EMATCH_U32 => true)
(NET_EMATCH_META => true)
(NET_EMATCH_TEXT => true)
(NET_CLS_ACT => true)
(NET_ACT_POLICE => true)
(NET_ACT_GACT => true)
(GACT_PROB => true)
(NET_ACT_MIRRED => true)
(NET_ACT_IPT => true)
(NET_ACT_NAT => true)
(NET_ACT_PEDIT => true)
(NET_ACT_SIMP => true)
(NET_ACT_SKBEDIT => true)
(NET_CLS_IND => true)
(NET_SCH_FIFO => true)
(NET_PKTGEN => true)
(NET_TCPPROBE => true)
(HAMRADIO => true)
(AX25 => true)
(AX25_DAMA_SLAVE => true)
(AX25_DAMA_MASTER => true)
(NETROM => true)
(ROSE => true)
(MKISS => true)
(a6PACK => true)
(BPQETHER => true)
(DMASCC => true)
(SCC => true)
(SCC_DELAY => true)
(SCC_TRXECHO => true)
(BAYCOM_SER_FDX => true)
(BAYCOM_SER_HDX => true)
(BAYCOM_PAR => true)
(BAYCOM_EPP => true)
(YAM => true)
(CAN => true)
(CAN_RAW => true)
(CAN_BCM => true)
(CAN_VCAN => true)
(CAN_DEBUG_DEVICES => true)
(IRDA => true)
(IRLAN => true)
(IRNET => true)
(IRCOMM => true)
(IRDA_ULTRA => true)
(IRDA_CACHE_LAST_LSAP => true)
(IRDA_FAST_RR => true)
(IRDA_DEBUG => true)
(IRTTY_SIR => true)
(DONGLE => true)
(ESI_DONGLE => true)
(ACTISYS_DONGLE => true)
(TEKRAM_DONGLE => true)
(TOIM3232_DONGLE => true)
(LITELINK_DONGLE => true)
(MA6falsefalse_DONGLE => true)
(GIRBIL_DONGLE => true)
(MCP2true2false_DONGLE => true)
(OLD_BELKIN_DONGLE => true)
(ACT2falsefalseL_DONGLE => true)
(KINGSUN_DONGLE => true)
(EP72truetrue_DONGLE => true)
(KSDAZZLE_DONGLE => true)
(KS959_DONGLE => true)
(USB_IRDA => true)
(SIGMATEL_FIR => true)
(NSC_FIR => true)
(WINBOND_FIR => true)
(TOSHIBA_FIR => true)
(AUtruefalsefalsefalse_FIR => true)
(SMC_IRCC_FIR => true)
(ALI_FIR => true)
(VLSI_FIR => true)
(SAtruetruefalsefalse_FIR => true)
(VIA_FIR => true)
(PXA_FICP => true)
(MCS_FIR => true)
(BT => true)
(BT_L2CAP => true)
(BT_SCO => true)
(BT_RFCOMM => true)
(BT_RFCOMM_TTY => true)
(BT_BNEP => true)
(BT_BNEP_MC_FILTER => true)
(BT_BNEP_PROTO_FILTER => true)
(BT_CMTP => true)
(BT_HIDP => true)
(BT_HCIUSB => true)
(BT_HCIUSB_SCO => true)
(BT_HCIBTUSB => true)
(BT_HCIBTSDIO => true)
(BT_HCIUART => true)
(BT_HCIUART_H4 => true)
(BT_HCIUART_BCSP => true)
(BT_HCIUART_LL => true)
(BT_HCIBCM2false3X => true)
(BT_HCIBPAtruefalseX => true)
(BT_HCIBFUSB => true)
(BT_HCIDTLtrue => true)
(BT_HCIBT3C => true)
(BT_HCIBLUECARD => true)
(BT_HCIBTUART => true)
(BT_HCIVHCI => true)
(AF_RXRPC => true)
(AF_RXRPC_DEBUG => true)
(RXKAD => true)
(PHONET => true)
(FIB_RULES => true)
(WIRELESS => true)
(CFG8false2truetrue => true)
(NL8false2truetrue => true)
(WIRELESS_OLD_REGULATORY => true)
(WIRELESS_EXT => true)
(WIRELESS_EXT_SYSFS => true)
(MAC8false2truetrue => true)
(MAC8false2truetrue_RC_PID => true)
(MAC8false2truetrue_RC_MINSTREL => true)
(MAC8false2truetrue_RC_DEFAULT_PID => true)
(MAC8false2truetrue_RC_DEFAULT_MINSTREL => true)
(MAC8false2truetrue_RC_DEFAULT => true)
(MAC8false2truetrue_MESH => true)
(MAC8false2truetrue_LEDS => true)
(MAC8false2truetrue_DEBUGFS => true)
(MAC8false2truetrue_DEBUG_MENU => true)
(MAC8false2truetrue_DEBUG_PACKET_ALIGNMENT => true)
(MAC8false2truetrue_NOINLINE => true)
(MAC8false2truetrue_VERBOSE_DEBUG => true)
(MAC8false2truetrue_HT_DEBUG => true)
(MAC8false2truetrue_TKIP_DEBUG => true)
(MAC8false2truetrue_IBSS_DEBUG => true)
(MAC8false2truetrue_VERBOSE_PS_DEBUG => true)
(MAC8false2truetrue_VERBOSE_MPL_DEBUG => true)
(MAC8false2truetrue_DEBUG_COUNTERS => true)
(MAC8false2truetrue_VERBOSE_SPECT_MGMT_DEBUG => true)
(IEEE8false2truetrue => true)
(IEEE8false2truetrue_DEBUG => true)
(IEEE8false2truetrue_CRYPT_WEP => true)
(IEEE8false2truetrue_CRYPT_CCMP => true)
(IEEE8false2truetrue_CRYPT_TKIP => true)
(RFKILL => true)
(RFKILL_INPUT => true)
(RFKILL_LEDS => true)
(NET_9P => true)
(NET_9P_VIRTIO => true)
(NET_9P_RDMA => true)
(NET_9P_DEBUG => true)
(UEVENT_HELPER_PATH => true)
(STANDALONE => true)
(PREVENT_FIRMWARE_BUILD => true)
(FW_LOADER => true)
(FIRMWARE_IN_KERNEL => true)
(EXTRA_FIRMWARE => true)
(EXTRA_FIRMWARE_DIR => true)
(DEBUG_DRIVER => true)
(DEBUG_DEVRES => true)
(SYS_HYPERVISOR => true)
(CONNECTOR => true)
(PROC_EVENTS => true)
(MTD => true)
(MTD_DEBUG => true)
(MTD_DEBUG_VERBOSE => true)
(MTD_CONCAT => true)
(MTD_PARTITIONS => true)
(MTD_REDBOOT_PARTS => true)
(MTD_REDBOOT_DIRECTORY_BLOCK => true)
(MTD_REDBOOT_PARTS_UNALLOCATED => true)
(MTD_REDBOOT_PARTS_READONLY => true)
(MTD_CMDLINE_PARTS => true)
(MTD_AFS_PARTS => true)
(MTD_OF_PARTS => true)
(MTD_AR7_PARTS => true)
(MTD_CHAR => true)
(HAVE_MTD_OTP => true)
(MTD_BLKDEVS => true)
(MTD_BLOCK => true)
(MTD_BLOCK_RO => true)
(FTL => true)
(NFTL => true)
(NFTL_RW => true)
(INFTL => true)
(RFD_FTL => true)
(SSFDC => true)
(MTD_OOPS => true)
(MTD_CFI => true)
(MTD_JEDECPROBE => true)
(MTD_GEN_PROBE => true)
(MTD_CFI_ADV_OPTIONS => true)
(MTD_CFI_NOSWAP => true)
(MTD_CFI_BE_BYTE_SWAP => true)
(MTD_CFI_LE_BYTE_SWAP => true)
(MTD_CFI_GEOMETRY => true)
(MTD_MAP_BANK_WIDTH_true => true)
(MTD_MAP_BANK_WIDTH_2 => true)
(MTD_MAP_BANK_WIDTH_4 => true)
(MTD_MAP_BANK_WIDTH_8 => true)
(MTD_MAP_BANK_WIDTH_true6 => true)
(MTD_MAP_BANK_WIDTH_32 => true)
(MTD_CFI_Itrue => true)
(MTD_CFI_I2 => true)
(MTD_CFI_I4 => true)
(MTD_CFI_I8 => true)
(MTD_OTP => true)
(MTD_CFI_INTELEXT => true)
(MTD_CFI_AMDSTD => true)
(MTD_CFI_STAA => true)
(MTD_CFI_UTIL => true)
(MTD_RAM => true)
(MTD_ROM => true)
(MTD_ABSENT => true)
(MTD_XIP => true)
(MTD_COMPLEX_MAPPINGS => true)
(MTD_PHYSMAP => true)
(MTD_PHYSMAP_START => true)
(MTD_PHYSMAP_LEN => true)
(MTD_PHYSMAP_BANKWIDTH => true)
(MTD_PHYSMAP_OF => true)
(MTD_PMC_MSP_EVM => true)
(MSP_FLASH_MAP_LIMIT_32M => true)
(MSP_FLASH_MAP_LIMIT => true)
(MTD_PMC_MSP_RAMROOT => true)
(MTD_SUN_UFLASH => true)
(MTD_SC52falseCDP => true)
(MTD_NETSC52false => true)
(MTD_TS55falsefalse => true)
(MTD_SBC_GXX => true)
(MTD_PXA2XX => true)
(MTD_OCTAGON => true)
(MTD_VMAX => true)
(MTD_SCx2falsefalse_DOCFLASH => true)
(MTD_AMD76XROM => true)
(MTD_ICHXROM => true)
(MTD_ESB2ROM => true)
(MTD_CK8false4XROM => true)
(MTD_SCB2_FLASH => true)
(MTD_TSUNAMI => true)
(MTD_NETtel => true)
(MTD_ALCHEMY => true)
(MTD_DILNETPC => true)
(MTD_DILNETPC_BOOTSIZE => true)
(MTD_L44falseGX => true)
(MTD_SBC824false => true)
(MTD_TQM8XXL => true)
(MTD_RPXLITE => true)
(MTD_MBX86false => true)
(MTD_DBOX2 => true)
(MTD_CFI_FLAGADM => true)
(MTD_REDWOOD => true)
(MTD_SOLUTIONENGINE => true)
(MTD_ARM_INTEGRATOR => true)
(MTD_CDB897true2 => true)
(MTD_SAtruetruefalsefalse => true)
(MTD_IPAQ => true)
(MTD_DC2true285 => true)
(MTD_IXP4XX => true)
(MTD_IXP2falsefalsefalse => true)
(MTD_FORTUNET => true)
(MTD_AUTCPUtrue2 => true)
(MTD_EDB73true2 => true)
(MTD_IMPA7 => true)
(MTD_CEIVA => true)
(MTD_H72falseX => true)
(MTD_OMAP_NOR => true)
(MTD_PCI => true)
(MTD_PCMCIA => true)
(MTD_PCMCIA_ANONYMOUS => true)
(MTD_BFIN_ASYNC => true)
(MTD_UCLINUX => true)
(MTD_WRSBC826false => true)
(MTD_DMVtrue82 => true)
(MTD_SHARP_SL => true)
(MTD_INTEL_VR_NOR => true)
(MTD_PLATRAM => true)
(MTD_PMC55true => true)
(MTD_PMC55true_BUGFIX => true)
(MTD_PMC55true_DEBUG => true)
(MTD_MSfalse2NV => true)
(MTD_DATAFLASH => true)
(MTD_DATAFLASH_WRITE_VERIFY => true)
(MTD_DATAFLASH_OTP => true)
(MTD_M25P8false => true)
(M25PXX_USE_FAST_READ => true)
(MTD_SLRAM => true)
(MTD_PHRAM => true)
(MTD_LART => true)
(MTD_MTDRAM => true)
(MTDRAM_TOTAL_SIZE => true)
(MTDRAM_ERASE_SIZE => true)
(MTDRAM_ABS_POS => true)
(MTD_BLOCK2MTD => true)
(MTD_DOC2falsefalsefalse => true)
(MTD_DOC2falsefalsetrue => true)
(MTD_DOC2falsefalsetruePLUS => true)
(MTD_DOCPROBE => true)
(MTD_DOCECC => true)
(MTD_DOCPROBE_ADVANCED => true)
(MTD_DOCPROBE_ADDRESS => true)
(MTD_DOCPROBE_HIGH => true)
(MTD_DOCPROBE_55AA => true)
(MTD_NAND => true)
(MTD_NAND_VERIFY_WRITE => true)
(MTD_NAND_ECC_SMC => true)
(MTD_NAND_MUSEUM_IDS => true)
(MTD_NAND_AUTCPUtrue2 => true)
(MTD_NAND_EDB73true2 => true)
(MTD_NAND_Htrue9falsefalse => true)
(MTD_NAND_GPIO => true)
(MTD_NAND_SPIA => true)
(MTD_NAND_AMS_DELTA => true)
(MTD_NAND_TS725false => true)
(MTD_NAND_IDS => true)
(MTD_NAND_AUtrue55false => true)
(MTD_NAND_BF5XX => true)
(MTD_NAND_BF5XX_HWECC => true)
(MTD_NAND_BF5XX_BOOTROM_ECC => true)
(MTD_NAND_RTC_FROM4 => true)
(MTD_NAND_PPCHAMELEONEVB => true)
(MTD_NAND_S3C24truefalse => true)
(MTD_NAND_S3C24truefalse_DEBUG => true)
(MTD_NAND_S3C24truefalse_HWECC => true)
(MTD_NAND_S3C24truefalse_CLKSTOP => true)
(MTD_NAND_DISKONCHIP => true)
(MTD_NAND_DISKONCHIP_PROBE_ADVANCED => true)
(MTD_NAND_DISKONCHIP_PROBE_ADDRESS => true)
(MTD_NAND_DISKONCHIP_PROBE_HIGH => true)
(MTD_NAND_DISKONCHIP_BBTWRITE => true)
(MTD_NAND_SHARPSL => true)
(MTD_NAND_BASLER_EXCITE => true)
(MTD_NAND_CAFE => true)
(MTD_NAND_CS553X => true)
(MTD_NAND_ATMEL => true)
(MTD_NAND_ATMEL_ECC_HW => true)
(MTD_NAND_ATMEL_ECC_SOFT => true)
(MTD_NAND_ATMEL_ECC_NONE => true)
(MTD_NAND_PXA3xx => true)
(MTD_NAND_PXA3xx_BUILTIN => true)
(MTD_NAND_CM_X27false => true)
(MTD_NAND_PASEMI => true)
(MTD_NAND_TMIO => true)
(MTD_NAND_NANDSIM => true)
(MTD_NAND_PLATFORM => true)
(MTD_ALAUDA => true)
(MTD_NAND_ORION => true)
(MTD_NAND_FSL_ELBC => true)
(MTD_NAND_FSL_UPM => true)
(MTD_NAND_MXC => true)
(MTD_NAND_SH_FLCTL => true)
(MTD_ONENAND => true)
(MTD_ONENAND_VERIFY_WRITE => true)
(MTD_ONENAND_GENERIC => true)
(MTD_ONENAND_OMAP2 => true)
(MTD_ONENAND_OTP => true)
(MTD_ONENAND_2X_PROGRAM => true)
(MTD_ONENAND_SIM => true)
(MTD_UBI => true)
(MTD_UBI_WL_THRESHOLD => true)
(MTD_UBI_BEB_RESERVE => true)
(MTD_UBI_GLUEBI => true)
(MTD_UBI_DEBUG => true)
(MTD_UBI_DEBUG_MSG => true)
(MTD_UBI_DEBUG_PARANOID => true)
(MTD_UBI_DEBUG_DISABLE_BGT => true)
(MTD_UBI_DEBUG_USERSPACE_IO => true)
(MTD_UBI_DEBUG_EMULATE_BITFLIPS => true)
(MTD_UBI_DEBUG_EMULATE_WRITE_FAILURES => true)
(MTD_UBI_DEBUG_EMULATE_ERASE_FAILURES => true)
(MTD_UBI_DEBUG_MSG_BLD => true)
(MTD_UBI_DEBUG_MSG_EBA => true)
(MTD_UBI_DEBUG_MSG_WL => true)
(MTD_UBI_DEBUG_MSG_IO => true)
(OF_DEVICE => true)
(OF_GPIO => true)
(OF_I2C => true)
(OF_SPI => true)
(PARPORT => true)
(PARPORT_PC => true)
(PARPORT_SERIAL => true)
(PARPORT_PC_FIFO => true)
(PARPORT_PC_SUPERIO => true)
(PARPORT_PC_PCMCIA => true)
(PARPORT_IP32 => true)
(PARPORT_AMIGA => true)
(PARPORT_MFC3 => true)
(PARPORT_ATARI => true)
(PARPORT_GSC => true)
(PARPORT_SUNBPP => true)
(PARPORT_AX88796 => true)
(PARPORT_true284 => true)
(PARPORT_NOT_PC => true)
(PNP => true)
(PNP_DEBUG_MESSAGES => true)
(ISAPNP => true)
(PNPBIOS => true)
(PNPBIOS_PROC_FS => true)
(PNPACPI => true)
(BLK_DEV => true)
(BLK_DEV_FD => true)
(AMIGA_FLOPPY => true)
(ATARI_FLOPPY => true)
(MAC_FLOPPY => true)
(AMIGA_Z2RAM => true)
(BLK_DEV_XD => true)
(PARIDE => true)
(GDROM => true)
(PARIDE_PD => true)
(PARIDE_PCD => true)
(PARIDE_PF => true)
(PARIDE_PT => true)
(PARIDE_PG => true)
(PARIDE_ATEN => true)
(PARIDE_BPCK => true)
(PARIDE_BPCK6 => true)
(PARIDE_COMM => true)
(PARIDE_DSTR => true)
(PARIDE_FIT2 => true)
(PARIDE_FIT3 => true)
(PARIDE_EPAT => true)
(PARIDE_EPATC8 => true)
(PARIDE_EPIA => true)
(PARIDE_FRIQ => true)
(PARIDE_FRPW => true)
(PARIDE_KBIC => true)
(PARIDE_KTTI => true)
(PARIDE_ON2false => true)
(PARIDE_ON26 => true)
(BLK_CPQ_DA => true)
(BLK_CPQ_CISS_DA => true)
(CISS_SCSI_TAPE => true)
(BLK_DEV_DAC96false => true)
(BLK_DEV_UMEM => true)
(BLK_DEV_UBD => true)
(BLK_DEV_UBD_SYNC => true)
(BLK_DEV_COW_COMMON => true)
(BLK_DEV_LOOP => true)
(BLK_DEV_CRYPTOLOOP => true)
(BLK_DEV_NBD => true)
(BLK_DEV_SX8 => true)
(BLK_DEV_UB => true)
(BLK_DEV_RAM => true)
(BLK_DEV_RAM_COUNT => true)
(BLK_DEV_RAM_SIZE => true)
(BLK_DEV_XIP => true)
(CDROM_PKTCDVD => true)
(CDROM_PKTCDVD_BUFFERS => true)
(CDROM_PKTCDVD_WCACHE => true)
(ATA_OVER_ETH => true)
(SUNVDC => true)
(BLK_DEV_XPRAM => true)
(DCSSBLK => true)
(DASD => true)
(DASD_PROFILE => true)
(DASD_ECKD => true)
(DASD_FBA => true)
(DASD_DIAG => true)
(DASD_EER => true)
(XILINX_SYSACE => true)
(XEN_BLKDEV_FRONTEND => true)
(VIRTIO_BLK => true)
(BLK_DEV_HD => true)
(MISC_DEVICES => true)
(ATMEL_PWM => true)
(ATMEL_TCLIB => true)
(ATMEL_TCB_CLKSRC => true)
(ATMEL_TCB_CLKSRC_BLOCK => true)
(IBM_ASM => true)
(PHANTOM => true)
(EEPROM_93CX6 => true)
(SGI_IOC4 => true)
(TIFM_CORE => true)
(TIFM_7XXtrue => true)
(ACER_WMI => true)
(ASUS_LAPTOP => true)
(FUJITSU_LAPTOP => true)
(FUJITSU_LAPTOP_DEBUG => true)
(TCtruetruefalsefalse_WMI => true)
(HP_WMI => true)
(ICS932S4falsetrue => true)
(MSI_LAPTOP => true)
(PANASONIC_LAPTOP => true)
(COMPAL_LAPTOP => true)
(SONY_LAPTOP => true)
(SONYPI_COMPAT => true)
(THINKPAD_ACPI => true)
(THINKPAD_ACPI_DEBUG => true)
(THINKPAD_ACPI_DOCK => true)
(THINKPAD_ACPI_BAY => true)
(THINKPAD_ACPI_VIDEO => true)
(THINKPAD_ACPI_HOTKEY_POLL => true)
(ATMEL_SSC => true)
(INTEL_MENLOW => true)
(EEEPC_LAPTOP => true)
(ENCLOSURE_SERVICES => true)
(SGI_XP => true)
(HP_ILO => true)
(SGI_GRU => true)
(SGI_GRU_DEBUG => true)
(C2PORT => true)
(C2PORT_DURAMAR_2true5false => true)
(HAVE_IDE => true)
(IDE => true)
(IDE_TIMINGS => true)
(IDE_ATAPI => true)
(BLK_DEV_IDE_SATA => true)
(IDE_GD => true)
(IDE_GD_ATA => true)
(IDE_GD_ATAPI => true)
(BLK_DEV_IDECS => true)
(BLK_DEV_DELKIN => true)
(BLK_DEV_IDECD => true)
(BLK_DEV_IDECD_VERBOSE_ERRORS => true)
(BLK_DEV_IDETAPE => true)
(BLK_DEV_IDESCSI => true)
(BLK_DEV_IDEACPI => true)
(IDE_TASK_IOCTL => true)
(IDE_PROC_FS => true)
(IDE_GENERIC => true)
(BLK_DEV_PLATFORM => true)
(BLK_DEV_CMD64false => true)
(BLK_DEV_CMD64false_ENHANCED => true)
(BLK_DEV_IDEPNP => true)
(BLK_DEV_IDEDMA_SFF => true)
(BLK_DEV_IDEPCI => true)
(IDEPCI_PCIBUS_ORDER => true)
(BLK_DEV_OFFBOARD => true)
(BLK_DEV_GENERIC => true)
(BLK_DEV_OPTI62true => true)
(BLK_DEV_RZtruefalsefalsefalse => true)
(BLK_DEV_IDEDMA_PCI => true)
(BLK_DEV_AEC62XX => true)
(BLK_DEV_ALItrue5X3 => true)
(BLK_DEV_AMD74XX => true)
(BLK_DEV_ATIIXP => true)
(BLK_DEV_CMD64X => true)
(BLK_DEV_TRIFLEX => true)
(BLK_DEV_CY82C693 => true)
(BLK_DEV_CS552false => true)
(BLK_DEV_CS553false => true)
(BLK_DEV_CS5535 => true)
(BLK_DEV_HPT366 => true)
(BLK_DEV_JMICRON => true)
(BLK_DEV_SCtrue2falsefalse => true)
(BLK_DEV_PIIX => true)
(BLK_DEV_IT82true3 => true)
(BLK_DEV_IT82trueX => true)
(BLK_DEV_NS874true5 => true)
(BLK_DEV_PDC2false2XX_OLD => true)
(BLK_DEV_PDC2false2XX_NEW => true)
(BLK_DEV_SVWKS => true)
(BLK_DEV_SGIIOC4 => true)
(BLK_DEV_SIIMAGE => true)
(BLK_DEV_SIS55true3 => true)
(BLK_DEV_SL82Ctruefalse5 => true)
(BLK_DEV_SLC9falseE66 => true)
(BLK_DEV_TRM29false => true)
(BLK_DEV_VIA82CXXX => true)
(BLK_DEV_TC86Cfalsefalsetrue => true)
(BLK_DEV_CELLEB => true)
(BLK_DEV_IDE_PMAC => true)
(BLK_DEV_IDE_PMAC_ATAtruefalsefalseFIRST => true)
(BLK_DEV_IDE_AUtrueXXX => true)
(BLK_DEV_IDE_AUtrueXXX_PIO_DBDMA => true)
(BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA => true)
(BLK_DEV_IDE_AUtrueXXX_SEQTS_PER_RQ => true)
(BLK_DEV_IDE_TX4938 => true)
(BLK_DEV_IDE_TX4939 => true)
(IDE_ARM => true)
(BLK_DEV_IDE_ICSIDE => true)
(BLK_DEV_IDEDMA_ICS => true)
(BLK_DEV_IDE_RAPIDE => true)
(IDE_H83falsefalse => true)
(BLK_DEV_GAYLE => true)
(BLK_DEV_IDEDOUBLER => true)
(BLK_DEV_BUDDHA => true)
(BLK_DEV_FALCON_IDE => true)
(BLK_DEV_MAC_IDE => true)
(BLK_DEV_Q4falseIDE => true)
(BLK_DEV_PALMCHIP_BK37truefalse => true)
(BLK_DEV_4DRIVES => true)
(BLK_DEV_ALItrue4XX => true)
(BLK_DEV_DTC2278 => true)
(BLK_DEV_HT656falseB => true)
(BLK_DEV_QD65XX => true)
(BLK_DEV_UMC8672 => true)
(BLK_DEV_IDEDMA => true)
(RAID_ATTRS => true)
(SCSI => true)
(SCSI_DMA => true)
(SCSI_TGT => true)
(SCSI_NETLINK => true)
(SCSI_PROC_FS => true)
(BLK_DEV_SD => true)
(CHR_DEV_ST => true)
(CHR_DEV_OSST => true)
(BLK_DEV_SR => true)
(BLK_DEV_SR_VENDOR => true)
(CHR_DEV_SG => true)
(CHR_DEV_SCH => true)
(SCSI_ENCLOSURE => true)
(SCSI_MULTI_LUN => true)
(SCSI_CONSTANTS => true)
(SCSI_LOGGING => true)
(SCSI_SCAN_ASYNC => true)
(SCSI_WAIT_SCAN => true)
(SCSI_SPI_ATTRS => true)
(SCSI_FC_ATTRS => true)
(SCSI_FC_TGT_ATTRS => true)
(SCSI_ISCSI_ATTRS => true)
(SCSI_SAS_ATTRS => true)
(SCSI_SAS_LIBSAS => true)
(SCSI_SAS_ATA => true)
(SCSI_SAS_HOST_SMP => true)
(SCSI_SAS_LIBSAS_DEBUG => true)
(SCSI_SRP_ATTRS => true)
(SCSI_SRP_TGT_ATTRS => true)
(SCSI_LOWLEVEL => true)
(ISCSI_TCP => true)
(SGIWD93_SCSI => true)
(BLK_DEV_3W_XXXX_RAID => true)
(SCSI_3W_9XXX => true)
(SCSI_7falsefalsefalseFASST => true)
(SCSI_ACARD => true)
(SCSI_AHAtrue52X => true)
(SCSI_AHAtrue542 => true)
(SCSI_AHAtrue74false => true)
(SCSI_AACRAID => true)
(SCSI_AIC7XXX => true)
(AIC7XXX_CMDS_PER_DEVICE => true)
(AIC7XXX_RESET_DELAY_MS => true)
(AIC7XXX_BUILD_FIRMWARE => true)
(AIC7XXX_DEBUG_ENABLE => true)
(AIC7XXX_DEBUG_MASK => true)
(AIC7XXX_REG_PRETTY_PRINT => true)
(SCSI_AIC7XXX_OLD => true)
(SCSI_AIC79XX => true)
(AIC79XX_CMDS_PER_DEVICE => true)
(AIC79XX_RESET_DELAY_MS => true)
(AIC79XX_BUILD_FIRMWARE => true)
(AIC79XX_DEBUG_ENABLE => true)
(AIC79XX_DEBUG_MASK => true)
(AIC79XX_REG_PRETTY_PRINT => true)
(SCSI_AIC94XX => true)
(AIC94XX_DEBUG => true)
(SCSI_DPT_I2O => true)
(SCSI_ADVANSYS => true)
(SCSI_IN2falsefalsefalse => true)
(SCSI_ARCMSR => true)
(SCSI_ARCMSR_AER => true)
(MEGARAID_NEWGEN => true)
(MEGARAID_MM => true)
(MEGARAID_MAILBOX => true)
(MEGARAID_LEGACY => true)
(MEGARAID_SAS => true)
(SCSI_HPTIOP => true)
(SCSI_BUSLOGIC => true)
(SCSI_FLASHPOINT => true)
(SCSI_DMX3true9trueD => true)
(SCSI_DTC328false => true)
(SCSI_EATA => true)
(SCSI_EATA_TAGGED_QUEUE => true)
(SCSI_EATA_LINKED_COMMANDS => true)
(SCSI_EATA_MAX_TAGS => true)
(SCSI_EATA_PIO => true)
(SCSI_FUTURE_DOMAIN => true)
(SCSI_FD_MCS => true)
(SCSI_GDTH => true)
(SCSI_GENERIC_NCR538false => true)
(SCSI_GENERIC_NCR538false_MMIO => true)
(SCSI_GENERIC_NCR53C4falsefalse => true)
(SCSI_IBMMCA => true)
(IBMMCA_SCSI_ORDER_STANDARD => true)
(IBMMCA_SCSI_DEV_RESET => true)
(SCSI_IPS => true)
(SCSI_IBMVSCSI => true)
(SCSI_IBMVSCSIS => true)
(SCSI_IBMVFC => true)
(SCSI_IBMVFC_TRACE => true)
(SCSI_INITIO => true)
(SCSI_INIAtruefalsefalse => true)
(SCSI_PPA => true)
(SCSI_IMM => true)
(SCSI_IZIP_EPPtrue6 => true)
(SCSI_IZIP_SLOW_CTR => true)
(SCSI_MVSAS => true)
(SCSI_NCR53C4false6A => true)
(SCSI_NCR_D7falsefalse => true)
(SCSI_LASI7falsefalse => true)
(SCSI_SNI_53C7truefalse => true)
(53C7falsefalse_LE_ON_BE => true)
(SCSI_STEX => true)
(53C7falsefalse_BE_BUS => true)
(SCSI_SYM53C8XX_2 => true)
(SCSI_SYM53C8XX_DMA_ADDRESSING_MODE => true)
(SCSI_SYM53C8XX_DEFAULT_TAGS => true)
(SCSI_SYM53C8XX_MAX_TAGS => true)
(SCSI_SYM53C8XX_MMIO => true)
(SCSI_IPR => true)
(SCSI_IPR_TRACE => true)
(SCSI_IPR_DUMP => true)
(SCSI_ZALON => true)
(SCSI_NCR_Q72false => true)
(SCSI_NCR53C8XX_DEFAULT_TAGS => true)
(SCSI_NCR53C8XX_MAX_TAGS => true)
(SCSI_NCR53C8XX_SYNC => true)
(SCSI_NCR53C8XX_NO_DISCONNECT => true)
(SCSI_PAStrue6 => true)
(SCSI_QLOGIC_FAS => true)
(SCSI_QLOGIC_true28false => true)
(SCSI_QLOGICPTI => true)
(SCSI_QLA_FC => true)
(SCSI_QLA_ISCSI => true)
(SCSI_LPFC => true)
(SCSI_SIM7truefalse => true)
(SCSI_SYM53C4true6 => true)
(SCSI_DC395x => true)
(SCSI_DC39falseT => true)
(SCSI_Ttrue28 => true)
(SCSI_Utrue4_34F => true)
(SCSI_Utrue4_34F_TAGGED_QUEUE => true)
(SCSI_Utrue4_34F_LINKED_COMMANDS => true)
(SCSI_Utrue4_34F_MAX_TAGS => true)
(SCSI_ULTRASTOR => true)
(SCSI_NSP32 => true)
(SCSI_DEBUG => true)
(SCSI_MESH => true)
(SCSI_MESH_SYNC_RATE => true)
(SCSI_MESH_RESET_DELAY_MS => true)
(SCSI_MAC53C94 => true)
(SCSI_ACORNSCSI_3 => true)
(SCSI_ACORNSCSI_TAGGED_QUEUE => true)
(SCSI_ACORNSCSI_SYNC => true)
(SCSI_ARXESCSI => true)
(SCSI_CUMANA_2 => true)
(SCSI_EESOXSCSI => true)
(SCSI_POWERTECSCSI => true)
(SCSI_CUMANA_true => true)
(SCSI_OAKtrue => true)
(JAZZ_ESP => true)
(A3falsefalsefalse_SCSI => true)
(A2false9true_SCSI => true)
(GVPtruetrue_SCSI => true)
(SCSI_A4falsefalsefalseT => true)
(SCSI_ZORRO7XX => true)
(ATARI_SCSI => true)
(ATARI_SCSI_TOSHIBA_DELAY => true)
(ATARI_SCSI_RESET_BOOT => true)
(MAC_SCSI => true)
(SCSI_MAC_ESP => true)
(MVMEtrue47_SCSI => true)
(MVMEtrue6x_SCSI => true)
(BVME6falsefalsefalse_SCSI => true)
(SUN3_SCSI => true)
(SUN3X_ESP => true)
(SCSI_SUNESP => true)
(ZFCP => true)
(SCSI_SRP => true)
(SCSI_LOWLEVEL_PCMCIA => true)
(PCMCIA_AHAtrue52X => true)
(PCMCIA_FDOMAIN => true)
(PCMCIA_NINJA_SCSI => true)
(PCMCIA_QLOGIC => true)
(PCMCIA_SYM53C5falsefalse => true)
(SCSI_DH => true)
(SCSI_DH_RDAC => true)
(SCSI_DH_HP_SW => true)
(SCSI_DH_EMC => true)
(SCSI_DH_ALUA => true)
(ATA => true)
(ATA_NONSTANDARD => true)
(ATA_ACPI => true)
(SATA_PMP => true)
(SATA_AHCI => true)
(SATA_SIL24 => true)
(SATA_FSL => true)
(ATA_SFF => true)
(SATA_SVW => true)
(ATA_PIIX => true)
(SATA_MV => true)
(SATA_NV => true)
(PDC_ADMA => true)
(SATA_QSTOR => true)
(SATA_PROMISE => true)
(SATA_SX4 => true)
(SATA_SIL => true)
(SATA_SIS => true)
(SATA_ULI => true)
(SATA_VIA => true)
(SATA_VITESSE => true)
(SATA_INICtrue62X => true)
(PATA_ACPI => true)
(PATA_ALI => true)
(PATA_AMD => true)
(PATA_ARTOP => true)
(PATA_AT32 => true)
(PATA_ATIIXP => true)
(PATA_CMD64false_PCI => true)
(PATA_CMD64X => true)
(PATA_CS552false => true)
(PATA_CS553false => true)
(PATA_CS5535 => true)
(PATA_CS5536 => true)
(PATA_CYPRESS => true)
(PATA_EFAR => true)
(ATA_GENERIC => true)
(PATA_HPT366 => true)
(PATA_HPT37X => true)
(PATA_HPT3X2N => true)
(PATA_HPT3X3 => true)
(PATA_HPT3X3_DMA => true)
(PATA_ISAPNP => true)
(PATA_IT82trueX => true)
(PATA_IT82true3 => true)
(PATA_JMICRON => true)
(PATA_LEGACY => true)
(PATA_TRIFLEX => true)
(PATA_MARVELL => true)
(PATA_MPC52xx => true)
(PATA_MPIIX => true)
(PATA_OLDPIIX => true)
(PATA_NETCELL => true)
(PATA_NINJA32 => true)
(PATA_NS874truefalse => true)
(PATA_NS874true5 => true)
(PATA_OPTI => true)
(PATA_OPTIDMA => true)
(PATA_PCMCIA => true)
(PATA_PDC_OLD => true)
(PATA_QDI => true)
(PATA_RADISYS => true)
(PATA_RB532 => true)
(PATA_RZtruefalsefalsefalse => true)
(PATA_SCtrue2falsefalse => true)
(PATA_SERVERWORKS => true)
(PATA_PDC2false27X => true)
(PATA_SIL68false => true)
(PATA_SIS => true)
(PATA_VIA => true)
(PATA_WINBOND => true)
(PATA_WINBOND_VLB => true)
(HAVE_PATA_PLATFORM => true)
(PATA_PLATFORM => true)
(PATA_OF_PLATFORM => true)
(PATA_ICSIDE => true)
(PATA_IXP4XX_CF => true)
(PATA_SCC => true)
(PATA_SCH => true)
(PATA_BF54X => true)
(MD => true)
(BLK_DEV_MD => true)
(MD_AUTODETECT => true)
(MD_LINEAR => true)
(MD_RAIDfalse => true)
(MD_RAIDtrue => true)
(MD_RAIDtruefalse => true)
(MD_RAID456 => true)
(MD_RAID5_RESHAPE => true)
(MD_MULTIPATH => true)
(MD_FAULTY => true)
(BLK_DEV_DM => true)
(DM_DEBUG => true)
(DM_CRYPT => true)
(DM_SNAPSHOT => true)
(DM_MIRROR => true)
(DM_ZERO => true)
(DM_MULTIPATH => true)
(DM_DELAY => true)
(DM_UEVENT => true)
(FUSION => true)
(FUSION_SPI => true)
(FUSION_FC => true)
(FUSION_SAS => true)
(FUSION_MAX_SGE => true)
(FUSION_CTL => true)
(FUSION_LAN => true)
(FUSION_LOGGING => true)
(FIREWIRE => true)
(FIREWIRE_OHCI => true)
(FIREWIRE_OHCI_DEBUG => true)
(FIREWIRE_SBP2 => true)
(IEEEtrue394 => true)
(IEEEtrue394_OHCItrue394 => true)
(IEEEtrue394_PCILYNX => true)
(IEEEtrue394_SBP2 => true)
(IEEEtrue394_SBP2_PHYS_DMA => true)
(IEEEtrue394_ETHtrue394_ROM_ENTRY => true)
(IEEEtrue394_ETHtrue394 => true)
(IEEEtrue394_RAWIO => true)
(IEEEtrue394_VIDEOtrue394 => true)
(IEEEtrue394_DVtrue394 => true)
(IEEEtrue394_VERBOSEDEBUG => true)
(I2O => true)
(I2O_LCT_NOTIFY_ON_CHANGES => true)
(I2O_EXT_ADAPTEC => true)
(I2O_EXT_ADAPTEC_DMA64 => true)
(I2O_CONFIG => true)
(I2O_CONFIG_OLD_IOCTL => true)
(I2O_BUS => true)
(I2O_BLOCK => true)
(I2O_SCSI => true)
(I2O_PROC => true)
(MACINTOSH_DRIVERS => true)
(ADB => true)
(ADB_MACII => true)
(ADB_MACIISI => true)
(ADB_IOP => true)
(ADB_PMU68K => true)
(ADB_CUDA => true)
(ADB_PMU => true)
(ADB_PMU_LED => true)
(ADB_PMU_LED_IDE => true)
(PMAC_SMU => true)
(PMAC_APM_EMU => true)
(PMAC_MEDIABAY => true)
(PMAC_BACKLIGHT => true)
(PMAC_BACKLIGHT_LEGACY => true)
(ADB_MACIO => true)
(INPUT_ADBHID => true)
(MAC_EMUMOUSEBTN => true)
(THERM_WINDTUNNEL => true)
(THERM_ADT746X => true)
(THERM_PM72 => true)
(WINDFARM => true)
(WINDFARM_PM8true => true)
(WINDFARM_PM9true => true)
(WINDFARM_PMtruetrue2 => true)
(WINDFARM_PMtrue2true => true)
(ANSLCD => true)
(PMAC_RACKMETER => true)
(NETDEVICES => true)
(IFB => true)
(DUMMY => true)
(BONDING => true)
(MACVLAN => true)
(EQUALIZER => true)
(TUN => true)
(VETH => true)
(NET_SBtruefalsefalsefalse => true)
(ARCNET => true)
(ARCNET_true2falsetrue => true)
(ARCNET_truefalse5true => true)
(ARCNET_RAW => true)
(ARCNET_CAP => true)
(ARCNET_COM9falsexx => true)
(ARCNET_COM9falsexxIO => true)
(ARCNET_RIM_I => true)
(ARCNET_COM2falsefalse2false => true)
(ARCNET_COM2falsefalse2false_ISA => true)
(ARCNET_COM2falsefalse2false_PCI => true)
(PHYLIB => true)
(MARVELL_PHY => true)
(DAVICOM_PHY => true)
(QSEMI_PHY => true)
(LXT_PHY => true)
(CICADA_PHY => true)
(VITESSE_PHY => true)
(SMSC_PHY => true)
(BROADCOM_PHY => true)
(ICPLUS_PHY => true)
(REALTEK_PHY => true)
(FIXED_PHY => true)
(MDIO_BITBANG => true)
(MDIO_OF_GPIO => true)
(NET_ETHERNET => true)
(MII => true)
(MACB => true)
(ARM_AM79C96trueA => true)
(ARM_ETHERtrue => true)
(ARM_ETHER3 => true)
(ARM_ETHERH => true)
(ARM_AT9true_ETHER => true)
(EP93XX_ETH => true)
(IXP4XX_ETH => true)
(AX88796 => true)
(AX88796_93CX6 => true)
(MACE => true)
(MACE_AAUI_PORT => true)
(BMAC => true)
(ARIADNE => true)
(A2false65 => true)
(HYDRA => true)
(ZORRO839false => true)
(APNE => true)
(MAC839false => true)
(MAC89xfalse => true)
(MACSONIC => true)
(MACMACE => true)
(MVMEtrue47_NET => true)
(MVMEtrue6x_NET => true)
(BVME6falsefalsefalse_NET => true)
(ATARILANCE => true)
(SUN3LANCE => true)
(SUN3_82586 => true)
(HPLANCE => true)
(LASI_82596 => true)
(SNI_82596 => true)
(KORINA => true)
(MIPS_JAZZ_SONIC => true)
(XTENSA_XT2falsefalsefalse_SONIC => true)
(MIPS_AUtrueXfalsefalse_ENET => true)
(SGI_IOC3_ETH => true)
(MIPS_SIM_NET => true)
(SGI_O2MACE_ETH => true)
(STNIC => true)
(SH_ETH => true)
(SUNLANCE => true)
(HAPPYMEAL => true)
(SUNBMAC => true)
(SUNQE => true)
(SUNGEM => true)
(CASSINI => true)
(SUNVNET => true)
(NET_VENDOR_3COM => true)
(ELtrue => true)
(EL2 => true)
(ELPLUS => true)
(ELtrue6 => true)
(EL3 => true)
(3C5true5 => true)
(ELMC => true)
(ELMC_II => true)
(VORTEX => true)
(TYPHOON => true)
(LANCE => true)
(NET_VENDOR_SMC => true)
(WD8falsex3 => true)
(ULTRAMCA => true)
(ULTRA => true)
(ULTRA32 => true)
(BFIN_MAC => true)
(BFIN_MAC_USE_Ltrue => true)
(BFIN_TX_DESC_NUM => true)
(BFIN_RX_DESC_NUM => true)
(BFIN_MAC_RMII => true)
(SMC9true94 => true)
(SMC9trueX => true)
(NET_NETX => true)
(DM9falsefalsefalse => true)
(DM9falsefalsefalse_DEBUGLEVEL => true)
(DM9falsefalsefalse_FORCE_SIMPLE_PHY_POLL => true)
(ENC28J6false => true)
(ENC28J6false_WRITEVERIFY => true)
(SMC9truetrueX => true)
(NET_VENDOR_RACAL => true)
(NI5falsetruefalse => true)
(NI52 => true)
(NI65 => true)
(NET_TULIP => true)
(DE2truefalse4X => true)
(TULIP => true)
(TULIP_MWI => true)
(TULIP_MMIO => true)
(TULIP_NAPI => true)
(TULIP_NAPI_HW_MITIGATION => true)
(DE4X5 => true)
(WINBOND_84false => true)
(DM9truefalse2 => true)
(ULI526X => true)
(PCMCIA_XIRCOM => true)
(ATtrue7falsefalse => true)
(DEPCA => true)
(HPtruefalsefalse => true)
(NET_ISA => true)
(E2truefalsefalse => true)
(EWRK3 => true)
(EEXPRESS => true)
(EEXPRESS_PRO => true)
(HPLAN_PLUS => true)
(HPLAN => true)
(LP486E => true)
(ETHtrue6I => true)
(NE2falsefalsefalse => true)
(ZNET => true)
(SEEQ8falsefalse5 => true)
(NE2_MCA => true)
(IBMLANA => true)
(IBMVETH => true)
(IBM_NEW_EMAC => true)
(IBM_NEW_EMAC_RXB => true)
(IBM_NEW_EMAC_TXB => true)
(IBM_NEW_EMAC_POLL_WEIGHT => true)
(IBM_NEW_EMAC_RX_COPY_THRESHOLD => true)
(IBM_NEW_EMAC_RX_SKB_HEADROOM => true)
(IBM_NEW_EMAC_DEBUG => true)
(IBM_NEW_EMAC_ZMII => true)
(IBM_NEW_EMAC_RGMII => true)
(IBM_NEW_EMAC_TAH => true)
(IBM_NEW_EMAC_EMAC4 => true)
(IBM_NEW_EMAC_NO_FLOW_CTRL => true)
(IBM_NEW_EMAC_MAL_CLR_ICINTSTAT => true)
(IBM_NEW_EMAC_MAL_COMMON_ERR => true)
(NET_PCI => true)
(PCNET32 => true)
(AMD8truetruetrue_ETH => true)
(ADAPTEC_STARFIRE => true)
(AC32falsefalse => true)
(APRICOT => true)
(B44 => true)
(B44_PCI_AUTOSELECT => true)
(B44_PCICORE_AUTOSELECT => true)
(B44_PCI => true)
(FORCEDETH => true)
(FORCEDETH_NAPI => true)
(CS89xfalse => true)
(CS89xfalse_NONISA_IRQ => true)
(TC358true5 => true)
(EEPROtruefalsefalse => true)
(Etruefalsefalse => true)
(LNE39false => true)
(FEALNX => true)
(NATSEMI => true)
(NE2K_PCI => true)
(NE32truefalse => true)
(ES32truefalse => true)
(8true39CP => true)
(8true39TOO => true)
(8true39TOO_PIO => true)
(8true39TOO_TUNE_TWISTER => true)
(8true39TOO_8true29 => true)
(8true39_OLD_RX_RESET => true)
(R6false4false => true)
(SIS9falsefalse => true)
(EPICtruefalsefalse => true)
(SUNDANCE => true)
(SUNDANCE_MMIO => true)
(TLAN => true)
(VIA_RHINE => true)
(VIA_RHINE_MMIO => true)
(SC92false3true => true)
(CPMAC => true)
(NET_POCKET => true)
(ATP => true)
(DE6falsefalse => true)
(DE62false => true)
(SGISEEQ => true)
(DECLANCE => true)
(a6836false_ENET => true)
(FEC => true)
(FEC2 => true)
(FEC_MPC52xx => true)
(FEC_MPC52xx_MDIO => true)
(NE_H83falsefalse => true)
(ATL2 => true)
(FS_ENET => true)
(FS_ENET_HAS_SCC => true)
(FS_ENET_HAS_FCC => true)
(FS_ENET_HAS_FEC => true)
(FS_ENET_MDIO_FEC => true)
(FS_ENET_MDIO_FCC => true)
(NETDEV_truefalsefalsefalse => true)
(ACENIC => true)
(ACENIC_OMIT_TIGON_I => true)
(DL2K => true)
(Etruefalsefalsefalse => true)
(EtruefalsefalsefalseE => true)
(IPtruefalsefalsefalse => true)
(IGB => true)
(IGB_LRO => true)
(IGB_DCA => true)
(ENP26truetrue_MSF_NET => true)
(MYRI_SBUS => true)
(NS8382false => true)
(HAMACHI => true)
(YELLOWFIN => true)
(R8true69 => true)
(R8true69_VLAN => true)
(SBtrue25false_MAC => true)
(SIStrue9false => true)
(SKGE => true)
(SKGE_DEBUG => true)
(SKY2 => true)
(SKY2_DEBUG => true)
(VIA_VELOCITY => true)
(TIGON3 => true)
(BNX2 => true)
(SPIDER_NET => true)
(TSItruefalse8_ETH => true)
(GELIC_NET => true)
(GELIC_WIRELESS => true)
(GELIC_WIRELESS_OLD_PSK_INTERFACE => true)
(GIANFAR => true)
(UCC_GETH => true)
(UGETH_MAGIC_PACKET => true)
(UGETH_FILTERING => true)
(UGETH_TX_ON_DEMAND => true)
(MV643XX_ETH => true)
(QLA3XXX => true)
(ATLtrue => true)
(ATLtrueE => true)
(JME => true)
(NETDEV_truefalsefalsefalsefalse => true)
(CHELSIO_Ttrue => true)
(CHELSIO_Ttrue_trueG => true)
(CHELSIO_T3 => true)
(EHEA => true)
(ENIC => true)
(IXGBE => true)
(IXGBE_DCA => true)
(IXGB => true)
(S2IO => true)
(MYRItruefalseGE => true)
(MYRItruefalseGE_DCA => true)
(NETXEN_NIC => true)
(NIU => true)
(PASEMI_MAC => true)
(MLX4_EN => true)
(MLX4_CORE => true)
(MLX4_DEBUG => true)
(TEHUTI => true)
(BNX2X => true)
(QLGE => true)
(SFC => true)
(TR => true)
(IBMTR => true)
(IBMOL => true)
(IBMLS => true)
(3C359 => true)
(TMS38falseTR => true)
(TMSPCI => true)
(SKISA => true)
(PROTEON => true)
(ABYSS => true)
(MADGEMC => true)
(SMCTR => true)
(WLAN_PRE8false2truetrue => true)
(STRIP => true)
(ARLAN => true)
(WAVELAN => true)
(PCMCIA_WAVELAN => true)
(PCMCIA_NETWAVE => true)
(WLAN_8false2truetrue => true)
(PCMCIA_RAYCS => true)
(IPW2truefalsefalse => true)
(IPW2truefalsefalse_MONITOR => true)
(IPW2truefalsefalse_DEBUG => true)
(IPW22falsefalse => true)
(IPW22falsefalse_MONITOR => true)
(IPW22falsefalse_RADIOTAP => true)
(IPW22falsefalse_PROMISCUOUS => true)
(IPW22falsefalse_QOS => true)
(IPW22falsefalse_DEBUG => true)
(LIBERTAS => true)
(LIBERTAS_USB => true)
(LIBERTAS_CS => true)
(LIBERTAS_SDIO => true)
(LIBERTAS_DEBUG => true)
(LIBERTAS_THINFIRM => true)
(LIBERTAS_THINFIRM_USB => true)
(AIRO => true)
(HERMES => true)
(APPLE_AIRPORT => true)
(PLX_HERMES => true)
(TMD_HERMES => true)
(NORTEL_HERMES => true)
(PCI_HERMES => true)
(PCMCIA_HERMES => true)
(PCMCIA_SPECTRUM => true)
(ATMEL => true)
(PCI_ATMEL => true)
(PCMCIA_ATMEL => true)
(AIRO_CS => true)
(PCMCIA_WL35falsetrue => true)
(PRISM54 => true)
(USB_ZDtrue2falsetrue => true)
(USB_NET_RNDIS_WLAN => true)
(RTL8true8false => true)
(RTL8true87 => true)
(ADM82truetrue => true)
(MAC8false2truetrue_HWSIM => true)
(P54_COMMON => true)
(P54_USB => true)
(P54_PCI => true)
(ATH5K => true)
(ATH5K_DEBUG => true)
(ATH9K => true)
(IWLWIFI => true)
(IWLCORE => true)
(IWLWIFI_LEDS => true)
(IWLWIFI_RFKILL => true)
(IWLWIFI_DEBUG => true)
(IWLWIFI_DEBUGFS => true)
(IWLAGN => true)
(IWLAGN_SPECTRUM_MEASUREMENT => true)
(IWLAGN_LEDS => true)
(IWL4965 => true)
(IWL5falsefalsefalse => true)
(IWL3945 => true)
(IWL3945_RFKILL => true)
(IWL3945_SPECTRUM_MEASUREMENT => true)
(IWL3945_LEDS => true)
(IWL3945_DEBUG => true)
(HOSTAP => true)
(HOSTAP_FIRMWARE => true)
(HOSTAP_FIRMWARE_NVRAM => true)
(HOSTAP_PLX => true)
(HOSTAP_PCI => true)
(HOSTAP_CS => true)
(B43 => true)
(B43_PCI_AUTOSELECT => true)
(B43_PCICORE_AUTOSELECT => true)
(B43_PCMCIA => true)
(B43_PIO => true)
(B43_NPHY => true)
(B43_PHY_LP => true)
(B43_LEDS => true)
(B43_RFKILL => true)
(B43_DEBUG => true)
(B43_FORCE_PIO => true)
(B43LEGACY => true)
(B43LEGACY_PCI_AUTOSELECT => true)
(B43LEGACY_PCICORE_AUTOSELECT => true)
(B43LEGACY_LEDS => true)
(B43LEGACY_RFKILL => true)
(B43LEGACY_DEBUG => true)
(B43LEGACY_DMA => true)
(B43LEGACY_PIO => true)
(B43LEGACY_DMA_AND_PIO_MODE => true)
(B43LEGACY_DMA_MODE => true)
(B43LEGACY_PIO_MODE => true)
(ZDtrue2truetrueRW => true)
(ZDtrue2truetrueRW_DEBUG => true)
(RT2Xfalsefalse => true)
(RT24falsefalsePCI => true)
(RT25falsefalsePCI => true)
(RT6truePCI => true)
(RT25falsefalseUSB => true)
(RT73USB => true)
(RT2Xfalsefalse_LIB_PCI => true)
(RT2Xfalsefalse_LIB_USB => true)
(RT2Xfalsefalse_LIB => true)
(RT2Xfalsefalse_LIB_FIRMWARE => true)
(RT2Xfalsefalse_LIB_CRYPTO => true)
(RT2Xfalsefalse_LIB_RFKILL => true)
(RT2Xfalsefalse_LIB_LEDS => true)
(RT2Xfalsefalse_LIB_DEBUGFS => true)
(RT2Xfalsefalse_DEBUG => true)
(USB_CATC => true)
(USB_KAWETH => true)
(USB_PEGASUS => true)
(USB_RTL8true5false => true)
(USB_USBNET => true)
(USB_NET_AX88true7X => true)
(USB_NET_CDCETHER => true)
(USB_NET_DM96falsetrue => true)
(USB_NET_SMSC95XX => true)
(USB_NET_GL62falseA => true)
(USB_NET_NETtruefalse8false => true)
(USB_NET_PLUSB => true)
(USB_NET_MCS783false => true)
(USB_NET_RNDIS_HOST => true)
(USB_NET_CDC_SUBSET => true)
(USB_ALI_M5632 => true)
(USB_AN272false => true)
(USB_BELKIN => true)
(USB_ARMLINUX => true)
(USB_EPSON2888 => true)
(USB_KC2true9false => true)
(USB_NET_ZAURUS => true)
(USB_HSO => true)
(NET_PCMCIA => true)
(PCMCIA_3C589 => true)
(PCMCIA_3C574 => true)
(PCMCIA_FMVJtrue8X => true)
(PCMCIA_PCNET => true)
(PCMCIA_NMCLAN => true)
(PCMCIA_SMC9trueC92 => true)
(PCMCIA_XIRC2PS => true)
(PCMCIA_AXNET => true)
(ARCNET_COM2falsefalse2false_CS => true)
(PCMCIA_IBMTR => true)
(WAN => true)
(HOSTESS_SVtruetrue => true)
(COSA => true)
(LANMEDIA => true)
(SEALEVEL_4false2true => true)
(HDLC => true)
(HDLC_RAW => true)
(HDLC_RAW_ETH => true)
(HDLC_CISCO => true)
(HDLC_FR => true)
(HDLC_PPP => true)
(HDLC_X25 => true)
(PCI2falsefalseSYN => true)
(WANXL => true)
(WANXL_BUILD_FIRMWARE => true)
(PC3falsefalse => true)
(PC3falsefalse_MLPPP => true)
(PC3falsefalseTOO => true)
(N2 => true)
(Ctruefalsetrue => true)
(FARSYNC => true)
(DSCC4 => true)
(DSCC4_PCISYNC => true)
(DSCC4_PCI_RST => true)
(DLCI => true)
(DLCI_MAX => true)
(SDLA => true)
(WAN_ROUTER_DRIVERS => true)
(CYCLADES_SYNC => true)
(CYCLOMX_X25 => true)
(LAPBETHER => true)
(X25_ASY => true)
(SBNI => true)
(SBNI_MULTILINE => true)
(ATM_DRIVERS => true)
(ATM_DUMMY => true)
(ATM_TCP => true)
(ATM_LANAI => true)
(ATM_ENI => true)
(ATM_ENI_DEBUG => true)
(ATM_ENI_TUNE_BURST => true)
(ATM_ENI_BURST_TX_true6W => true)
(ATM_ENI_BURST_TX_8W => true)
(ATM_ENI_BURST_TX_4W => true)
(ATM_ENI_BURST_TX_2W => true)
(ATM_ENI_BURST_RX_true6W => true)
(ATM_ENI_BURST_RX_8W => true)
(ATM_ENI_BURST_RX_4W => true)
(ATM_ENI_BURST_RX_2W => true)
(ATM_FIRESTREAM => true)
(ATM_ZATM => true)
(ATM_ZATM_DEBUG => true)
(ATM_NICSTAR => true)
(ATM_NICSTAR_USE_SUNI => true)
(ATM_NICSTAR_USE_IDT77truefalse5 => true)
(ATM_IDT77252 => true)
(ATM_IDT77252_DEBUG => true)
(ATM_IDT77252_RCV_ALL => true)
(ATM_IDT77252_USE_SUNI => true)
(ATM_AMBASSADOR => true)
(ATM_AMBASSADOR_DEBUG => true)
(ATM_HORIZON => true)
(ATM_HORIZON_DEBUG => true)
(ATM_IA => true)
(ATM_IA_DEBUG => true)
(ATM_FORE2falsefalseE => true)
(ATM_FORE2falsefalseE_USE_TASKLET => true)
(ATM_FORE2falsefalseE_TX_RETRY => true)
(ATM_FORE2falsefalseE_DEBUG => true)
(ATM_HE => true)
(ATM_HE_USE_SUNI => true)
(LCS => true)
(CTCM => true)
(NETIUCV => true)
(SMSGIUCV => true)
(CLAW => true)
(QETH => true)
(QETH_L2 => true)
(QETH_L3 => true)
(QETH_IPV6 => true)
(CCWGROUP => true)
(XEN_NETDEV_FRONTEND => true)
(ISERIES_VETH => true)
(RIONET => true)
(RIONET_TX_SIZE => true)
(RIONET_RX_SIZE => true)
(FDDI => true)
(DEFXX => true)
(DEFXX_MMIO => true)
(SKFP => true)
(HIPPI => true)
(ROADRUNNER => true)
(ROADRUNNER_LARGE_RINGS => true)
(PLIP => true)
(PPP => true)
(PPP_MULTILINK => true)
(PPP_FILTER => true)
(PPP_ASYNC => true)
(PPP_SYNC_TTY => true)
(PPP_DEFLATE => true)
(PPP_BSDCOMP => true)
(PPP_MPPE => true)
(PPPOE => true)
(PPPOATM => true)
(PPPOL2TP => true)
(SLIP => true)
(SLIP_COMPRESSED => true)
(SLHC => true)
(SLIP_SMART => true)
(SLIP_MODE_SLIP6 => true)
(NET_FC => true)
(NETCONSOLE => true)
(NETCONSOLE_DYNAMIC => true)
(NETPOLL => true)
(NETPOLL_TRAP => true)
(NET_POLL_CONTROLLER => true)
(VIRTIO_NET => true)
(ISDN => true)
(MISDN => true)
(MISDN_DSP => true)
(MISDN_LtrueOIP => true)
(MISDN_HFCPCI => true)
(MISDN_HFCMULTI => true)
(ISDN_I4L => true)
(ISDN_PPP => true)
(ISDN_PPP_VJ => true)
(ISDN_MPP => true)
(IPPP_FILTER => true)
(ISDN_PPP_BSDCOMP => true)
(ISDN_AUDIO => true)
(ISDN_TTY_FAX => true)
(ISDN_X25 => true)
(ISDN_DRV_LOOP => true)
(ISDN_DIVERSION => true)
(ISDN_DRV_HISAX => true)
(HISAX_EURO => true)
(DE_AOC => true)
(HISAX_NO_SENDCOMPLETE => true)
(HISAX_NO_LLC => true)
(HISAX_NO_KEYPAD => true)
(HISAX_trueTR6 => true)
(HISAX_NItrue => true)
(HISAX_MAX_CARDS => true)
(HISAX_true6_false => true)
(HISAX_true6_3 => true)
(HISAX_TELESPCI => true)
(HISAX_SfalseBOX => true)
(HISAX_AVM_Atrue => true)
(HISAX_FRITZPCI => true)
(HISAX_AVM_Atrue_PCMCIA => true)
(HISAX_ELSA => true)
(HISAX_IXtrueMICROR2 => true)
(HISAX_DIEHLDIVA => true)
(HISAX_ASUSCOM => true)
(HISAX_TELEINT => true)
(HISAX_HFCS => true)
(HISAX_SEDLBAUER => true)
(HISAX_SPORTSTER => true)
(HISAX_MIC => true)
(HISAX_NETJET => true)
(HISAX_NETJET_U => true)
(HISAX_NICCY => true)
(HISAX_ISURF => true)
(HISAX_HSTSAPHIR => true)
(HISAX_BKM_A4T => true)
(HISAX_SCT_QUADRO => true)
(HISAX_GAZEL => true)
(HISAX_HFC_PCI => true)
(HISAX_W6692 => true)
(HISAX_HFC_SX => true)
(HISAX_ENTERNOW_PCI => true)
(HISAX_DEBUG => true)
(HISAX_SEDLBAUER_CS => true)
(HISAX_ELSA_CS => true)
(HISAX_AVM_Atrue_CS => true)
(HISAX_TELES_CS => true)
(HISAX_ST548true => true)
(HISAX_HFCUSB => true)
(HISAX_HFC4S8S => true)
(HISAX_FRITZ_PCIPNP => true)
(HISAX_HDLC => true)
(HISAX_AVM_Atrue_PCMCIA => true)
(ISDN_DRV_ICN => true)
(ISDN_DRV_PCBIT => true)
(ISDN_DRV_SC => true)
(ISDN_DRV_ACT2falsefalsefalse => true)
(HYSDN => true)
(HYSDN_CAPI => true)
(ISDN_DRV_GIGASET => true)
(GIGASET_BASE => true)
(GIGASET_Mtruefalse5 => true)
(GIGASET_Mtruefalsetrue => true)
(GIGASET_DEBUG => true)
(GIGASET_UNDOCREQ => true)
(ISDN_CAPI => true)
(ISDN_DRV_AVMBtrue_VERBOSE_REASON => true)
(CAPI_TRACE => true)
(ISDN_CAPI_MIDDLEWARE => true)
(ISDN_CAPI_CAPI2false => true)
(ISDN_CAPI_CAPIFS_BOOL => true)
(ISDN_CAPI_CAPIFS => true)
(ISDN_CAPI_CAPIDRV => true)
(CAPI_AVM => true)
(ISDN_DRV_AVMBtrue_BtrueISA => true)
(ISDN_DRV_AVMBtrue_BtruePCI => true)
(ISDN_DRV_AVMBtrue_BtruePCIV4 => true)
(ISDN_DRV_AVMBtrue_TtrueISA => true)
(ISDN_DRV_AVMBtrue_BtruePCMCIA => true)
(ISDN_DRV_AVMBtrue_AVM_CS => true)
(ISDN_DRV_AVMBtrue_TtruePCI => true)
(ISDN_DRV_AVMBtrue_C4 => true)
(CAPI_EICON => true)
(ISDN_DIVAS => true)
(ISDN_DIVAS_BRIPCI => true)
(ISDN_DIVAS_PRIPCI => true)
(ISDN_DIVAS_DIVACAPI => true)
(ISDN_DIVAS_USERIDI => true)
(ISDN_DIVAS_MAINT => true)
(PHONE => true)
(PHONE_IXJ => true)
(PHONE_IXJ_PCMCIA => true)
(INPUT => true)
(INPUT_FF_MEMLESS => true)
(INPUT_POLLDEV => true)
(INPUT_MOUSEDEV => true)
(INPUT_MOUSEDEV_PSAUX => true)
(INPUT_MOUSEDEV_SCREEN_X => true)
(INPUT_MOUSEDEV_SCREEN_Y => true)
(INPUT_JOYDEV => true)
(INPUT_EVDEV => true)
(INPUT_EVBUG => true)
(INPUT_APMPOWER => true)
(XEN_KBDDEV_FRONTEND => true)
(INPUT_KEYBOARD => true)
(KEYBOARD_ATKBD => true)
(KEYBOARD_ATKBD_HP_KEYCODES => true)
(KEYBOARD_ATKBD_RDI_KEYCODES => true)
(KEYBOARD_SUNKBD => true)
(KEYBOARD_LKKBD => true)
(KEYBOARD_LOCOMO => true)
(KEYBOARD_XTKBD => true)
(KEYBOARD_NEWTON => true)
(KEYBOARD_STOWAWAY => true)
(KEYBOARD_CORGI => true)
(KEYBOARD_SPITZ => true)
(KEYBOARD_TOSA => true)
(KEYBOARD_TOSA_USE_EXT_KEYCODES => true)
(KEYBOARD_AMIGA => true)
(ATARI_KBD_CORE => true)
(KEYBOARD_ATARI => true)
(KEYBOARD_HIL_OLD => true)
(KEYBOARD_HIL => true)
(KEYBOARD_HP6XX => true)
(KEYBOARD_HP7XX => true)
(KEYBOARD_OMAP => true)
(KEYBOARD_PXA27x => true)
(KEYBOARD_AAED2falsefalsefalse => true)
(KEYBOARD_GPIO => true)
(KEYBOARD_MAPLE => true)
(KEYBOARD_BFIN => true)
(KEYBOARD_SH_KEYSC => true)
(INPUT_MOUSE => true)
(MOUSE_PS2 => true)
(MOUSE_PS2_ALPS => true)
(MOUSE_PS2_LOGIPS2PP => true)
(MOUSE_PS2_SYNAPTICS => true)
(MOUSE_PS2_LIFEBOOK => true)
(MOUSE_PS2_TRACKPOINT => true)
(MOUSE_PS2_ELANTECH => true)
(MOUSE_PS2_TOUCHKIT => true)
(MOUSE_PS2_OLPC => true)
(MOUSE_SERIAL => true)
(MOUSE_APPLETOUCH => true)
(MOUSE_BCM5974 => true)
(MOUSE_INPORT => true)
(MOUSE_ATIXL => true)
(MOUSE_LOGIBM => true)
(MOUSE_PCtruetruefalsePAD => true)
(MOUSE_AMIGA => true)
(MOUSE_ATARI => true)
(MOUSE_RISCPC => true)
(MOUSE_VSXXXAA => true)
(MOUSE_HIL => true)
(MOUSE_GPIO => true)
(INPUT_JOYSTICK => true)
(JOYSTICK_ANALOG => true)
(JOYSTICK_A3D => true)
(JOYSTICK_ADI => true)
(JOYSTICK_COBRA => true)
(JOYSTICK_GF2K => true)
(JOYSTICK_GRIP => true)
(JOYSTICK_GRIP_MP => true)
(JOYSTICK_GUILLEMOT => true)
(JOYSTICK_INTERACT => true)
(JOYSTICK_SIDEWINDER => true)
(JOYSTICK_TMDC => true)
(JOYSTICK_IFORCE => true)
(JOYSTICK_IFORCE_USB => true)
(JOYSTICK_IFORCE_232 => true)
(JOYSTICK_WARRIOR => true)
(JOYSTICK_MAGELLAN => true)
(JOYSTICK_SPACEORB => true)
(JOYSTICK_SPACEBALL => true)
(JOYSTICK_STINGER => true)
(JOYSTICK_TWIDJOY => true)
(JOYSTICK_ZHENHUA => true)
(JOYSTICK_DB9 => true)
(JOYSTICK_GAMECON => true)
(JOYSTICK_TURBOGRAFX => true)
(JOYSTICK_AMIGA => true)
(JOYSTICK_JOYDUMP => true)
(JOYSTICK_XPAD => true)
(JOYSTICK_XPAD_FF => true)
(JOYSTICK_XPAD_LEDS => true)
(INPUT_TABLET => true)
(TABLET_USB_ACECAD => true)
(TABLET_USB_AIPTEK => true)
(TABLET_USB_GTCO => true)
(TABLET_USB_KBTAB => true)
(TABLET_USB_WACOM => true)
(INPUT_TOUCHSCREEN => true)
(TOUCHSCREEN_ADS7846 => true)
(TOUCHSCREEN_BITSY => true)
(TOUCHSCREEN_CORGI => true)
(TOUCHSCREEN_FUJITSU => true)
(TOUCHSCREEN_GUNZE => true)
(TOUCHSCREEN_ELO => true)
(TOUCHSCREEN_MTOUCH => true)
(TOUCHSCREEN_INEXIO => true)
(TOUCHSCREEN_MK7true2 => true)
(TOUCHSCREEN_HP6falsefalse => true)
(TOUCHSCREEN_HP7XX => true)
(TOUCHSCREEN_HTCPEN => true)
(TOUCHSCREEN_PENMOUNT => true)
(TOUCHSCREEN_MIGOR => true)
(TOUCHSCREEN_TOUCHRIGHT => true)
(TOUCHSCREEN_TOUCHWIN => true)
(TOUCHSCREEN_ATMEL_TSADCC => true)
(TOUCHSCREEN_UCBtrue4falsefalse => true)
(TOUCHSCREEN_WM97XX => true)
(TOUCHSCREEN_WM97false5 => true)
(TOUCHSCREEN_WM97true2 => true)
(TOUCHSCREEN_WM97true3 => true)
(TOUCHSCREEN_WM97XX_MAINSTONE => true)
(TOUCHSCREEN_USB_COMPOSITE => true)
(TOUCHSCREEN_USB_EGALAX => true)
(TOUCHSCREEN_USB_PANJIT => true)
(TOUCHSCREEN_USB_3M => true)
(TOUCHSCREEN_USB_ITM => true)
(TOUCHSCREEN_USB_ETURBO => true)
(TOUCHSCREEN_USB_GUNZE => true)
(TOUCHSCREEN_USB_DMC_TSCtruefalse => true)
(TOUCHSCREEN_USB_IRTOUCH => true)
(TOUCHSCREEN_USB_IDEALTEK => true)
(TOUCHSCREEN_USB_GENERAL_TOUCH => true)
(TOUCHSCREEN_USB_GOTOP => true)
(TOUCHSCREEN_TOUCHIT2true3 => true)
(INPUT_MISC => true)
(INPUT_PCSPKR => true)
(INPUT_SPARCSPKR => true)
(INPUT_M68K_BEEP => true)
(INPUT_APANEL => true)
(INPUT_IXP4XX_BEEPER => true)
(INPUT_COBALT_BTNS => true)
(INPUT_WISTRON_BTNS => true)
(INPUT_ATLAS_BTNS => true)
(INPUT_ATI_REMOTE => true)
(INPUT_ATI_REMOTE2 => true)
(INPUT_KEYSPAN_REMOTE => true)
(INPUT_POWERMATE => true)
(INPUT_YEALINK => true)
(INPUT_CMtruefalse9 => true)
(INPUT_UINPUT => true)
(INPUT_SGI_BTNS => true)
(HP_SDC_RTC => true)
(SERIO => true)
(SERIO_I8false42 => true)
(SERIO_SERPORT => true)
(SERIO_CT82C7truefalse => true)
(SERIO_Q4falseKBD => true)
(SERIO_PARKBD => true)
(SERIO_RPCKBD => true)
(SERIO_AT32PSIF => true)
(SERIO_AMBAKMI => true)
(SERIO_SAtruetruetruetrue => true)
(SERIO_GSCPS2 => true)
(HP_SDC => true)
(HIL_MLC => true)
(SERIO_PCIPS2 => true)
(SERIO_MACEPS2 => true)
(SERIO_LIBPS2 => true)
(SERIO_RAW => true)
(SERIO_XILINX_XPS_PS2 => true)
(GAMEPORT => true)
(GAMEPORT_NS558 => true)
(GAMEPORT_L4 => true)
(GAMEPORT_EMUtruefalseKtrue => true)
(GAMEPORT_FM8falsetrue => true)
(VT => true)
(CONSOLE_TRANSLATIONS => true)
(VT_CONSOLE => true)
(HW_CONSOLE => true)
(VT_HW_CONSOLE_BINDING => true)
(DEVKMEM => true)
(SERIAL_NONSTANDARD => true)
(COMPUTONE => true)
(ROCKETPORT => true)
(CYCLADES => true)
(CYZ_INTR => true)
(DIGIEPCA => true)
(ESPSERIAL => true)
(MOXA_INTELLIO => true)
(MOXA_SMARTIO => true)
(ISI => true)
(SYNCLINK => true)
(SYNCLINKMP => true)
(SYNCLINK_GT => true)
(N_HDLC => true)
(RISCOM8 => true)
(SPECIALIX => true)
(SX => true)
(RIO => true)
(RIO_OLDPCI => true)
(STALDRV => true)
(STALLION => true)
(ISTALLION => true)
(NOZOMI => true)
(A2232 => true)
(SGI_SNSC => true)
(SGI_TIOCX => true)
(SGI_MBCS => true)
(SERIAL_825false => true)
(SERIAL_825false_CONSOLE => true)
(FIX_EARLYCON_MEM => true)
(SERIAL_825false_GSC => true)
(SERIAL_825false_PCI => true)
(SERIAL_825false_PNP => true)
(SERIAL_825false_HP3falsefalse => true)
(SERIAL_825false_CS => true)
(SERIAL_825false_NR_UARTS => true)
(SERIAL_825false_RUNTIME_UARTS => true)
(SERIAL_825false_EXTENDED => true)
(SERIAL_825false_MANY_PORTS => true)
(SERIAL_825false_FOURPORT => true)
(SERIAL_825false_ACCENT => true)
(SERIAL_825false_BOCA => true)
(SERIAL_825false_EXAR_STtrue6C554 => true)
(SERIAL_825false_HUB6 => true)
(SERIAL_825false_SHARE_IRQ => true)
(SERIAL_825false_DETECT_IRQ => true)
(SERIAL_825false_RSA => true)
(SERIAL_825false_MCA => true)
(SERIAL_825false_ACORN => true)
(SERIAL_825false_AUtrueXfalsefalse => true)
(SERIAL_825false_RM9K => true)
(SERIAL_AMBA_PLfalsetruefalse => true)
(SERIAL_AMBA_PLfalsetruefalse_CONSOLE => true)
(SERIAL_AMBA_PLfalsetruetrue => true)
(SERIAL_AMBA_PLfalsetruetrue_CONSOLE => true)
(SERIAL_SBtrue25false_DUART => true)
(SERIAL_SBtrue25false_DUART_CONSOLE => true)
(SERIAL_ATMEL => true)
(SERIAL_ATMEL_CONSOLE => true)
(SERIAL_ATMEL_PDC => true)
(SERIAL_ATMEL_TTYAT => true)
(SERIAL_KS8695 => true)
(SERIAL_KS8695_CONSOLE => true)
(SERIAL_CLPS7truetrueX => true)
(SERIAL_CLPS7truetrueX_CONSOLE => true)
(SERIAL_SAMSUNG => true)
(SERIAL_SAMSUNG_DEBUG => true)
(SERIAL_SAMSUNG_CONSOLE => true)
(SERIAL_S3C24falsefalse => true)
(SERIAL_S3C24truefalse => true)
(SERIAL_S3C24true2 => true)
(SERIAL_S3C244false => true)
(SERIAL_DZ => true)
(SERIAL_DZ_CONSOLE => true)
(SERIAL_ZS => true)
(SERIAL_ZS_CONSOLE => true)
(SERIAL_2true285 => true)
(SERIAL_2true285_CONSOLE => true)
(SERIAL_MPSC => true)
(SERIAL_MPSC_CONSOLE => true)
(SERIAL_PXA => true)
(SERIAL_PXA_CONSOLE => true)
(SERIAL_SAtruetruefalsefalse => true)
(SERIAL_SAtruetruefalsefalse_CONSOLE => true)
(SERIAL_BFIN => true)
(SERIAL_BFIN_CONSOLE => true)
(SERIAL_BFIN_DMA => true)
(SERIAL_BFIN_PIO => true)
(SERIAL_BFIN_UARTfalse => true)
(BFIN_UARTfalse_CTSRTS => true)
(UARTfalse_CTS_PIN => true)
(UARTfalse_RTS_PIN => true)
(SERIAL_BFIN_UARTtrue => true)
(BFIN_UARTtrue_CTSRTS => true)
(UARTtrue_CTS_PIN => true)
(UARTtrue_RTS_PIN => true)
(SERIAL_BFIN_UART2 => true)
(BFIN_UART2_CTSRTS => true)
(UART2_CTS_PIN => true)
(UART2_RTS_PIN => true)
(SERIAL_BFIN_UART3 => true)
(BFIN_UART3_CTSRTS => true)
(SERIAL_IMX => true)
(SERIAL_IMX_CONSOLE => true)
(SERIAL_UARTLITE => true)
(SERIAL_UARTLITE_CONSOLE => true)
(SERIAL_SUNCORE => true)
(SERIAL_SUNZILOG => true)
(SERIAL_SUNZILOG_CONSOLE => true)
(SERIAL_SUNSU => true)
(SERIAL_SUNSU_CONSOLE => true)
(SERIAL_MUX => true)
(SERIAL_MUX_CONSOLE => true)
(PDC_CONSOLE => true)
(SERIAL_SUNSAB => true)
(SERIAL_SUNSAB_CONSOLE => true)
(SERIAL_SUNHV => true)
(SERIAL_IP22_ZILOG => true)
(SERIAL_IP22_ZILOG_CONSOLE => true)
(SERIAL_SH_SCI => true)
(SERIAL_SH_SCI_NR_UARTS => true)
(SERIAL_SH_SCI_CONSOLE => true)
(SERIAL_PNX8XXX => true)
(SERIAL_PNX8XXX_CONSOLE => true)
(SERIAL_CORE => true)
(SERIAL_CORE_CONSOLE => true)
(CONSOLE_POLL => true)
(SERIAL_68328 => true)
(SERIAL_68328_RTS_CTS => true)
(SERIAL_MCF => true)
(SERIAL_MCF_BAUDRATE => true)
(SERIAL_MCF_CONSOLE => true)
(SERIAL_6836false_SMC => true)
(SERIAL_6836false_SCC => true)
(SERIAL_6836false => true)
(SERIAL_PMACZILOG => true)
(SERIAL_PMACZILOG_TTYS => true)
(SERIAL_PMACZILOG_CONSOLE => true)
(SERIAL_LH7A4falseX => true)
(SERIAL_LH7A4falseX_CONSOLE => true)
(SERIAL_CPM => true)
(SERIAL_CPM_CONSOLE => true)
(SERIAL_SGI_Ltrue_CONSOLE => true)
(SERIAL_MPC52xx => true)
(SERIAL_MPC52xx_CONSOLE => true)
(SERIAL_MPC52xx_CONSOLE_BAUD => true)
(SERIAL_ICOM => true)
(SERIAL_M32R_SIO => true)
(SERIAL_M32R_SIO_CONSOLE => true)
(SERIAL_M32R_PLDSIO => true)
(SERIAL_TXX9 => true)
(HAS_TXX9_SERIAL => true)
(SERIAL_TXX9_NR_UARTS => true)
(SERIAL_TXX9_CONSOLE => true)
(SERIAL_TXX9_STDSERIAL => true)
(SERIAL_VR4trueXX => true)
(SERIAL_VR4trueXX_CONSOLE => true)
(SERIAL_JSM => true)
(SERIAL_SGI_IOC4 => true)
(SERIAL_SGI_IOC3 => true)
(SERIAL_NETX => true)
(SERIAL_NETX_CONSOLE => true)
(SERIAL_OF_PLATFORM => true)
(SERIAL_QE => true)
(SERIAL_SC26XX => true)
(SERIAL_SC26XX_CONSOLE => true)
(SERIAL_BFIN_SPORT => true)
(SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse => true)
(SERIAL_SPORT_BAUD_RATE_576falsefalse => true)
(SERIAL_SPORT_BAUD_RATE_384falsefalse => true)
(SERIAL_SPORT_BAUD_RATE_true92falsefalse => true)
(SERIAL_SPORT_BAUD_RATE_96falsefalse => true)
(SPORT_BAUD_RATE => true)
(UNIX98_PTYS => true)
(LEGACY_PTYS => true)
(LEGACY_PTY_COUNT => true)
(BRIQ_PANEL => true)
(BFIN_OTP => true)
(BFIN_OTP_WRITE_ENABLE => true)
(PRINTER => true)
(LP_CONSOLE => true)
(PPDEV => true)
(HVC_DRIVER => true)
(HVC_IRQ => true)
(HVC_CONSOLE => true)
(HVC_ISERIES => true)
(HVC_RTAS => true)
(HVC_BEAT => true)
(HVC_XEN => true)
(VIRTIO_CONSOLE => true)
(HVCS => true)
(IBM_BSR => true)
(IPMI_HANDLER => true)
(IPMI_PANIC_EVENT => true)
(IPMI_PANIC_STRING => true)
(IPMI_DEVICE_INTERFACE => true)
(IPMI_SI => true)
(IPMI_WATCHDOG => true)
(IPMI_POWEROFF => true)
(DStrue62false => true)
(NWBUTTON => true)
(NWBUTTON_REBOOT => true)
(NWFLASH => true)
(HW_RANDOM => true)
(HW_RANDOM_INTEL => true)
(HW_RANDOM_AMD => true)
(HW_RANDOM_GEODE => true)
(HW_RANDOM_N2RNG => true)
(HW_RANDOM_VIA => true)
(HW_RANDOM_IXP4XX => true)
(HW_RANDOM_OMAP => true)
(HW_RANDOM_PASEMI => true)
(HW_RANDOM_VIRTIO => true)
(NVRAM => true)
(RTC => true)
(JS_RTC => true)
(GEN_RTC => true)
(GEN_RTC_X => true)
(EFI_RTC => true)
(DStrue3false2 => true)
(DTLK => true)
(XILINX_HWICAP => true)
(R3964 => true)
(APPLICOM => true)
(SONYPI => true)
(GPIO_TBfalse2true9 => true)
(SYNCLINK_CS => true)
(CARDMAN_4falsefalsefalse => true)
(CARDMAN_4false4false => true)
(IPWIRELESS => true)
(MWAVE => true)
(SCx2falsefalse_GPIO => true)
(PC8736x_GPIO => true)
(NSC_GPIO => true)
(CS5535_GPIO => true)
(GPIO_VR4trueXX => true)
(RAW_DRIVER => true)
(MAX_RAW_DEVS => true)
(HPET => true)
(HPET_MMAP => true)
(HANGCHECK_TIMER => true)
(MMTIMER => true)
(TCG_TPM => true)
(TCG_TIS => true)
(TCG_NSC => true)
(TCG_ATMEL => true)
(TCG_INFINEON => true)
(TELCLOCK => true)
(DEVPORT => true)
(TN327false => true)
(TN327false_TTY => true)
(TN327false_FS => true)
(TN327false_CONSOLE => true)
(TN32true5 => true)
(TN32true5_CONSOLE => true)
(CCW_CONSOLE => true)
(SCLP_TTY => true)
(SCLP_CONSOLE => true)
(SCLP_VT22false_TTY => true)
(SCLP_VT22false_CONSOLE => true)
(SCLP_CPI => true)
(S39false_TAPE => true)
(S39false_TAPE_BLOCK => true)
(S39false_TAPE_34XX => true)
(S39false_TAPE_359false => true)
(VMLOGRDR => true)
(VMCP => true)
(MONREADER => true)
(MONWRITER => true)
(S39false_VMUR => true)
(I2C => true)
(I2C_BOARDINFO => true)
(I2C_CHARDEV => true)
(I2C_HELPER_AUTO => true)
(I2C_ALGOBIT => true)
(I2C_ALGOPCF => true)
(I2C_ALGOPCA => true)
(I2C_ALGO_SGI => true)
(I2C_ALItrue535 => true)
(I2C_ALItrue563 => true)
(I2C_ALItrue5X3 => true)
(I2C_AMD756 => true)
(I2C_AMD756_S4882 => true)
(I2C_AMD8truetruetrue => true)
(I2C_I8falsetrue => true)
(I2C_ISCH => true)
(I2C_PIIX4 => true)
(I2C_NFORCE2 => true)
(I2C_NFORCE2_S4985 => true)
(I2C_SIS5595 => true)
(I2C_SIS63false => true)
(I2C_SIS96X => true)
(I2C_VIA => true)
(I2C_VIAPRO => true)
(I2C_HYDRA => true)
(I2C_POWERMAC => true)
(I2C_AT9true => true)
(I2C_AUtrue55false => true)
(I2C_BLACKFIN_TWI => true)
(I2C_BLACKFIN_TWI_CLK_KHZ => true)
(I2C_CPM => true)
(I2C_DAVINCI => true)
(I2C_GPIO => true)
(I2C_HIGHLANDER => true)
(I2C_IBM_IIC => true)
(I2C_IOP3XX => true)
(I2C_IXP2falsefalsefalse => true)
(I2C_MPC => true)
(I2C_MV64XXX => true)
(I2C_OCORES => true)
(I2C_OMAP => true)
(I2C_PASEMI => true)
(I2C_PNX => true)
(I2C_PXA => true)
(I2C_PXA_SLAVE => true)
(I2C_S3C24truefalse => true)
(I2C_SH776false => true)
(I2C_SH_MOBILE => true)
(I2C_SIMTEC => true)
(I2C_VERSATILE => true)
(I2C_PARPORT => true)
(I2C_PARPORT_LIGHT => true)
(I2C_TAOS_EVM => true)
(I2C_TINY_USB => true)
(I2C_VOODOO3 => true)
(I2C_ACORN => true)
(I2C_ELEKTOR => true)
(I2C_PCA_ISA => true)
(I2C_PCA_PLATFORM => true)
(I2C_PMCMSP => true)
(I2C_SIBYTE => true)
(I2C_STUB => true)
(SCx2falsefalse_I2C => true)
(SCx2falsefalse_I2C_SCL => true)
(SCx2falsefalse_I2C_SDA => true)
(SCx2falsefalse_ACB => true)
(DStrue682 => true)
(AT24 => true)
(SENSORS_EEPROM => true)
(SENSORS_PCF8574 => true)
(PCF8575 => true)
(SENSORS_PCA9539 => true)
(SENSORS_PCF859true => true)
(ISPtrue3falsetrue_OMAP => true)
(TPS65falsetruefalse => true)
(SENSORS_MAX6875 => true)
(SENSORS_TSL255false => true)
(MENELAUS => true)
(MCU_MPC8349EMITX => true)
(I2C_DEBUG_CORE => true)
(I2C_DEBUG_ALGO => true)
(I2C_DEBUG_BUS => true)
(I2C_DEBUG_CHIP => true)
(SPI => true)
(SPI_DEBUG => true)
(SPI_MASTER => true)
(SPI_ATMEL => true)
(SPI_BFIN => true)
(SPI_AUtrue55false => true)
(SPI_BITBANG => true)
(SPI_BUTTERFLY => true)
(SPI_IMX => true)
(SPI_LM7false_LLP => true)
(SPI_MPC52xx_PSC => true)
(SPI_MPC83xx => true)
(SPI_OMAP_UWIRE => true)
(SPI_OMAP24XX => true)
(SPI_ORION => true)
(SPI_PXA2XX => true)
(SPI_S3C24XX => true)
(SPI_S3C24XX_GPIO => true)
(SPI_SH_SCI => true)
(SPI_TXX9 => true)
(SPI_XILINX => true)
(SPI_AT25 => true)
(SPI_SPIDEV => true)
(SPI_TLE62Xfalse => true)
(ARCH_WANT_OPTIONAL_GPIOLIB => true)
(ARCH_REQUIRE_GPIOLIB => true)
(GPIOLIB => true)
(DEBUG_GPIO => true)
(GPIO_SYSFS => true)
(GPIO_XILINX => true)
(GPIO_MAX732X => true)
(GPIO_PCA953X => true)
(GPIO_PCF857X => true)
(GPIO_TWL4false3false => true)
(GPIO_BT8XX => true)
(GPIO_MAX73falsetrue => true)
(GPIO_MCP23Sfalse8 => true)
(Wtrue => true)
(Wtrue_CON => true)
(Wtrue_MASTER_MATROX => true)
(Wtrue_MASTER_DS249false => true)
(Wtrue_MASTER_DS2482 => true)
(Wtrue_MASTER_DStrueWM => true)
(Wtrue_MASTER_GPIO => true)
(HDQ_MASTER_OMAP => true)
(Wtrue_SLAVE_THERM => true)
(Wtrue_SLAVE_SMEM => true)
(Wtrue_SLAVE_DS2433 => true)
(Wtrue_SLAVE_DS2433_CRC => true)
(Wtrue_SLAVE_DS276false => true)
(Wtrue_SLAVE_BQ27falsefalsefalse => true)
(POWER_SUPPLY => true)
(POWER_SUPPLY_DEBUG => true)
(PDA_POWER => true)
(APM_POWER => true)
(BATTERY_DS276false => true)
(BATTERY_PMU => true)
(BATTERY_OLPC => true)
(BATTERY_TOSA => true)
(BATTERY_WM97XX => true)
(BATTERY_BQ27xfalsefalse => true)
(HWMON => true)
(HWMON_VID => true)
(SENSORS_ABITUGURU => true)
(SENSORS_ABITUGURU3 => true)
(SENSORS_AD74true4 => true)
(SENSORS_AD74true8 => true)
(SENSORS_ADCXX => true)
(SENSORS_ADMtruefalse2true => true)
(SENSORS_ADMtruefalse25 => true)
(SENSORS_ADMtruefalse26 => true)
(SENSORS_ADMtruefalse29 => true)
(SENSORS_ADMtruefalse3true => true)
(SENSORS_ADM924false => true)
(SENSORS_ADT7462 => true)
(SENSORS_ADT747false => true)
(SENSORS_ADT7473 => true)
(SENSORS_K8TEMP => true)
(SENSORS_AMS => true)
(SENSORS_AMS_PMU => true)
(SENSORS_AMS_I2C => true)
(SENSORS_ASBtruefalsefalse => true)
(SENSORS_ATXPtrue => true)
(SENSORS_DStrue62true => true)
(SENSORS_I5K_AMB => true)
(SENSORS_F7true8false5F => true)
(SENSORS_F7true882FG => true)
(SENSORS_F75375S => true)
(SENSORS_FSCHER => true)
(SENSORS_FSCPOS => true)
(SENSORS_FSCHMD => true)
(SENSORS_GL5true8SM => true)
(SENSORS_GL52falseSM => true)
(SENSORS_CORETEMP => true)
(SENSORS_IBMAEM => true)
(SENSORS_IBMPEX => true)
(SENSORS_IT87 => true)
(SENSORS_LM63 => true)
(SENSORS_LM7false => true)
(SENSORS_LM75 => true)
(SENSORS_LM77 => true)
(SENSORS_LM78 => true)
(SENSORS_LM8false => true)
(SENSORS_LM83 => true)
(SENSORS_LM85 => true)
(SENSORS_LM87 => true)
(SENSORS_LM9false => true)
(SENSORS_LM92 => true)
(SENSORS_LM93 => true)
(SENSORS_MAXtruetruetruetrue => true)
(SENSORS_MAXtrue6true9 => true)
(SENSORS_MAX665false => true)
(SENSORS_PC8736false => true)
(SENSORS_PC87427 => true)
(SENSORS_SIS5595 => true)
(SENSORS_DMEtrue737 => true)
(SENSORS_SMSC47Mtrue => true)
(SENSORS_SMSC47Mtrue92 => true)
(SENSORS_SMSC47B397 => true)
(SENSORS_ADS7828 => true)
(SENSORS_THMC5false => true)
(SENSORS_VIA686A => true)
(SENSORS_VTtrue2truetrue => true)
(SENSORS_VT823true => true)
(SENSORS_W8378trueD => true)
(SENSORS_W8379trueD => true)
(SENSORS_W83792D => true)
(SENSORS_W83793 => true)
(SENSORS_W83L785TS => true)
(SENSORS_W83L786NG => true)
(SENSORS_W83627HF => true)
(SENSORS_W83627EHF => true)
(SENSORS_ULTRA45 => true)
(SENSORS_HDAPS => true)
(SENSORS_LIS3LVfalse2D => true)
(SENSORS_APPLESMC => true)
(HWMON_DEBUG_CHIP => true)
(THERMAL => true)
(THERMAL_HWMON => true)
(WATCHDOG => true)
(WATCHDOG_NOWAYOUT => true)
(SOFT_WATCHDOG => true)
(AT9trueRM92falsefalse_WATCHDOG => true)
(AT9trueSAM9X_WATCHDOG => true)
(2true285_WATCHDOG => true)
(977_WATCHDOG => true)
(IXP2falsefalsefalse_WATCHDOG => true)
(IXP4XX_WATCHDOG => true)
(KS8695_WATCHDOG => true)
(S3C24truefalse_WATCHDOG => true)
(SAtruetruefalsefalse_WATCHDOG => true)
(MPCORE_WATCHDOG => true)
(EP93XX_WATCHDOG => true)
(OMAP_WATCHDOG => true)
(PNX4falsefalse8_WATCHDOG => true)
(IOP_WATCHDOG => true)
(DAVINCI_WATCHDOG => true)
(ORION5X_WATCHDOG => true)
(AT32AP7falsefalseX_WDT => true)
(BFIN_WDT => true)
(ACQUIRE_WDT => true)
(ADVANTECH_WDT => true)
(ALIMtrue535_WDT => true)
(ALIM7truefalsetrue_WDT => true)
(GEODE_WDT => true)
(SC52false_WDT => true)
(EUROTECH_WDT => true)
(IB7falsefalse_WDT => true)
(IBMASR => true)
(WAFER_WDT => true)
(I63falsefalseESB_WDT => true)
(ITCO_WDT => true)
(ITCO_VENDOR_SUPPORT => true)
(IT87true2F_WDT => true)
(IT87_WDT => true)
(HP_WATCHDOG => true)
(SCtrue2falsefalse_WDT => true)
(SCx2falsefalse_WDT => true)
(PC874true3_WDT => true)
(RDC32trueX_WDT => true)
(a6falseXX_WDT => true)
(SBC836false_WDT => true)
(SBC724false_WDT => true)
(CPU5_WDT => true)
(SMSC37B787_WDT => true)
(W83627HF_WDT => true)
(W83697HF_WDT => true)
(W83697UG_WDT => true)
(W83877F_WDT => true)
(W83977F_WDT => true)
(MACHZ_WDT => true)
(SBC_EPX_C3_WATCHDOG => true)
(RC32434_WDT => true)
(INDYDOG => true)
(WDT_MTXtrue => true)
(WDT_RM9K_GPI => true)
(SIBYTE_WDOG => true)
(AR7_WDT => true)
(TXX9_WDT => true)
(MPC52falsefalse_WDT => true)
(8xxx_WDT => true)
(MV64X6false_WDT => true)
(BOOKE_WDT => true)
(WATCHDOG_RTAS => true)
(ZVM_WATCHDOG => true)
(SH_WDT => true)
(SH_WDT_MMAP => true)
(WATCHDOG_CPtrueXXX => true)
(WATCHDOG_RIO => true)
(PCWATCHDOG => true)
(MIXCOMWD => true)
(WDT => true)
(WDT_5falsetrue => true)
(PCIPCWATCHDOG => true)
(WDTPCI => true)
(WDT_5falsetrue_PCI => true)
(USBPCWATCHDOG => true)
(SSB_POSSIBLE => true)
(SSB => true)
(SSB_SPROM => true)
(SSB_BLOCKIO => true)
(SSB_PCIHOST_POSSIBLE => true)
(SSB_PCIHOST => true)
(SSB_B43_PCI_BRIDGE => true)
(SSB_PCMCIAHOST_POSSIBLE => true)
(SSB_PCMCIAHOST => true)
(SSB_SILENT => true)
(SSB_DEBUG => true)
(SSB_SERIAL => true)
(SSB_DRIVER_PCICORE_POSSIBLE => true)
(SSB_DRIVER_PCICORE => true)
(SSB_PCICORE_HOSTMODE => true)
(SSB_DRIVER_MIPS => true)
(SSB_EMBEDDED => true)
(SSB_DRIVER_EXTIF => true)
(SSB_DRIVER_GIGE => true)
(MFD_CORE => true)
(MFD_SM5falsetrue => true)
(MFD_SM5falsetrue_GPIO => true)
(MFD_ASIC3 => true)
(HTC_EGPIO => true)
(HTC_PASIC3 => true)
(UCBtrue4falsefalse_CORE => true)
(TWL4false3false_CORE => true)
(MFD_TMIO => true)
(MFD_T7L66XB => true)
(MFD_TC6387XB => true)
(MFD_TC6393XB => true)
(PMIC_DA9false3X => true)
(MFD_WM84falsefalse => true)
(MFD_WM835false => true)
(MFD_WM835false_CONFIG_MODE_false => true)
(MFD_WM835false_CONFIG_MODE_true => true)
(MFD_WM835false_CONFIG_MODE_2 => true)
(MFD_WM835false_CONFIG_MODE_3 => true)
(MFD_WM835false_I2C => true)
(MCP => true)
(MCP_SAtruetrueXfalse => true)
(MCP_UCBtrue2falsefalse => true)
(MCP_UCBtrue2falsefalse_TS => true)
(REGULATOR => true)
(REGULATOR_DEBUG => true)
(REGULATOR_FIXED_VOLTAGE => true)
(REGULATOR_VIRTUAL_CONSUMER => true)
(REGULATOR_BQ24false22 => true)
(REGULATOR_WM835false => true)
(REGULATOR_WM84falsefalse => true)
(REGULATOR_DA9false3X => true)
(VIDEO_DEV => true)
(VIDEO_V4L2_COMMON => true)
(VIDEO_ALLOW_V4Ltrue => true)
(VIDEO_V4Ltrue_COMPAT => true)
(DVB_CORE => true)
(VIDEO_MEDIA => true)
(VIDEO_SAA7true46 => true)
(VIDEO_SAA7true46_VV => true)
(MEDIA_ATTACH => true)
(MEDIA_TUNER => true)
(MEDIA_TUNER_CUSTOMIZE => true)
(MEDIA_TUNER_SIMPLE => true)
(MEDIA_TUNER_TDA829false => true)
(MEDIA_TUNER_TDA827X => true)
(MEDIA_TUNER_TDAtrue827true => true)
(MEDIA_TUNER_TDA9887 => true)
(MEDIA_TUNER_TEA576true => true)
(MEDIA_TUNER_TEA5767 => true)
(MEDIA_TUNER_MT2falseXX => true)
(MEDIA_TUNER_MT2false6false => true)
(MEDIA_TUNER_MT2266 => true)
(MEDIA_TUNER_MT2true3true => true)
(MEDIA_TUNER_QTtruefalsetruefalse => true)
(MEDIA_TUNER_XC2false28 => true)
(MEDIA_TUNER_XC5falsefalsefalse => true)
(MEDIA_TUNER_MXL5falsefalse5S => true)
(MEDIA_TUNER_MXL5falsefalse7T => true)
(VIDEO_V4L2 => true)
(VIDEO_V4Ltrue => true)
(VIDEOBUF_GEN => true)
(VIDEOBUF_DMA_SG => true)
(VIDEOBUF_VMALLOC => true)
(VIDEOBUF_DMA_CONTIG => true)
(VIDEOBUF_DVB => true)
(VIDEO_BTCX => true)
(VIDEO_IR => true)
(VIDEO_TVEEPROM => true)
(VIDEO_TUNER => true)
(VIDEO_CAPTURE_DRIVERS => true)
(VIDEO_ADV_DEBUG => true)
(VIDEO_FIXED_MINOR_RANGES => true)
(VIDEO_HELPER_CHIPS_AUTO => true)
(VIDEO_IR_I2C => true)
(VIDEO_TVAUDIO => true)
(VIDEO_TDA7432 => true)
(VIDEO_TDA984false => true)
(VIDEO_TDA9875 => true)
(VIDEO_TEA64true5C => true)
(VIDEO_TEA642false => true)
(VIDEO_MSP34falsefalse => true)
(VIDEO_CS5345 => true)
(VIDEO_CS53L32A => true)
(VIDEO_M5279false => true)
(VIDEO_TLV32falseAIC23B => true)
(VIDEO_WM8775 => true)
(VIDEO_WM8739 => true)
(VIDEO_VP27SMPX => true)
(VIDEO_BT8true9 => true)
(VIDEO_BT856 => true)
(VIDEO_BT866 => true)
(VIDEO_KSfalsetrue27 => true)
(VIDEO_OV767false => true)
(VIDEO_TCM825X => true)
(VIDEO_SAA7truetruefalse => true)
(VIDEO_SAA7truetruetrue => true)
(VIDEO_SAA7truetrue4 => true)
(VIDEO_SAA7truetrueX => true)
(VIDEO_SAA7true7X => true)
(VIDEO_SAA7true9true => true)
(VIDEO_TVP5true5false => true)
(VIDEO_VPX322false => true)
(VIDEO_CX2584false => true)
(VIDEO_CX234trueX => true)
(VIDEO_SAA7true27 => true)
(VIDEO_SAA7true85 => true)
(VIDEO_ADV7true7false => true)
(VIDEO_ADV7true75 => true)
(VIDEO_UPD64false3trueA => true)
(VIDEO_UPD64false83 => true)
(VIDEO_VIVI => true)
(VIDEO_BT848 => true)
(VIDEO_BT848_DVB => true)
(VIDEO_SAA6588 => true)
(VIDEO_PMS => true)
(VIDEO_BWQCAM => true)
(VIDEO_CQCAM => true)
(VIDEO_W9966 => true)
(VIDEO_CPIA => true)
(VIDEO_CPIA_PP => true)
(VIDEO_CPIA_USB => true)
(VIDEO_CPIA2 => true)
(VIDEO_SAA5246A => true)
(VIDEO_SAA5249 => true)
(VIDEO_VINO => true)
(VIDEO_STRADIS => true)
(VIDEO_ZORAN => true)
(VIDEO_ZORAN_DC3false => true)
(VIDEO_ZORAN_ZR36false6false => true)
(VIDEO_ZORAN_BUZ => true)
(VIDEO_ZORAN_DCtruefalse => true)
(VIDEO_ZORAN_LML33 => true)
(VIDEO_ZORAN_LML33Rtruefalse => true)
(VIDEO_ZORAN_AVS6EYES => true)
(VIDEO_MEYE => true)
(VIDEO_SAA7true34 => true)
(VIDEO_SAA7true34_ALSA => true)
(VIDEO_SAA7true34_DVB => true)
(VIDEO_MXB => true)
(VIDEO_HEXIUM_ORION => true)
(VIDEO_HEXIUM_GEMINI => true)
(VIDEO_CX88 => true)
(VIDEO_CX88_ALSA => true)
(VIDEO_CX88_BLACKBIRD => true)
(VIDEO_CX88_DVB => true)
(VIDEO_CX88_VP3false54 => true)
(VIDEO_CX23885 => true)
(VIDEO_AUfalse828 => true)
(VIDEO_IVTV => true)
(VIDEO_FB_IVTV => true)
(VIDEO_CXtrue8 => true)
(VIDEO_M32R_AR => true)
(VIDEO_M32R_AR_M64278 => true)
(VIDEO_CAFE_CCIC => true)
(SOC_CAMERA => true)
(SOC_CAMERA_MT9Mfalsefalsetrue => true)
(MT9Mfalsefalsetrue_PCA9536_SWITCH => true)
(SOC_CAMERA_MT9Mtruetruetrue => true)
(SOC_CAMERA_MT9Vfalse22 => true)
(MT9Vfalse22_PCA9536_SWITCH => true)
(SOC_CAMERA_PLATFORM => true)
(VIDEO_PXA27x => true)
(VIDEO_SH_MOBILE_CEU => true)
(V4L_USB_DRIVERS => true)
(USB_VIDEO_CLASS => true)
(USB_VIDEO_CLASS_INPUT_EVDEV => true)
(USB_GSPCA => true)
(USB_M56false2 => true)
(USB_GSPCA_CONEX => true)
(USB_GSPCA_ETOMS => true)
(USB_GSPCA_FINEPIX => true)
(USB_GSPCA_MARS => true)
(USB_GSPCA_OV5true9 => true)
(USB_GSPCA_PAC2false7 => true)
(USB_GSPCA_PAC73truetrue => true)
(USB_GSPCA_SONIXB => true)
(USB_GSPCA_SONIXJ => true)
(USB_GSPCA_SPCA5falsefalse => true)
(USB_GSPCA_SPCA5falsetrue => true)
(USB_GSPCA_SPCA5false5 => true)
(USB_GSPCA_SPCA5false6 => true)
(USB_GSPCA_SPCA5false8 => true)
(USB_GSPCA_SPCA56true => true)
(USB_GSPCA_STKfalsetrue4 => true)
(USB_GSPCA_SUNPLUS => true)
(USB_GSPCA_T6true3 => true)
(USB_GSPCA_TV8532 => true)
(USB_GSPCA_VCfalse32X => true)
(USB_GSPCA_ZC3XX => true)
(VIDEO_PVRUSB2 => true)
(VIDEO_PVRUSB2_SYSFS => true)
(VIDEO_PVRUSB2_DVB => true)
(VIDEO_PVRUSB2_DEBUGIFC => true)
(VIDEO_EM28XX => true)
(VIDEO_EM28XX_ALSA => true)
(VIDEO_EM28XX_DVB => true)
(VIDEO_USBVISION => true)
(VIDEO_USBVIDEO => true)
(USB_VICAM => true)
(USB_IBMCAM => true)
(USB_KONICAWC => true)
(USB_QUICKCAM_MESSENGER => true)
(USB_ET6trueX25true => true)
(VIDEO_OVCAMCHIP => true)
(USB_W9968CF => true)
(USB_OV5truetrue => true)
(USB_SE4falsetrue => true)
(USB_SN9Ctruefalse2 => true)
(USB_STV68false => true)
(USB_ZCfalse3falsetrue => true)
(USB_PWC => true)
(USB_PWC_DEBUG => true)
(USB_ZR364XX => true)
(USB_STKWEBCAM => true)
(USB_S2255 => true)
(RADIO_ADAPTERS => true)
(RADIO_CADET => true)
(RADIO_RTRACK => true)
(RADIO_RTRACK_PORT => true)
(RADIO_RTRACK2 => true)
(RADIO_RTRACK2_PORT => true)
(RADIO_AZTECH => true)
(RADIO_AZTECH_PORT => true)
(RADIO_GEMTEK => true)
(RADIO_GEMTEK_PORT => true)
(RADIO_GEMTEK_PROBE => true)
(RADIO_GEMTEK_PCI => true)
(RADIO_MAXIRADIO => true)
(RADIO_MAESTRO => true)
(RADIO_SFtrue6FMI => true)
(RADIO_SFtrue6FMR2 => true)
(RADIO_TERRATEC => true)
(RADIO_TERRATEC_PORT => true)
(RADIO_TRUST => true)
(RADIO_TRUST_PORT => true)
(RADIO_TYPHOON => true)
(RADIO_TYPHOON_PROC_FS => true)
(RADIO_TYPHOON_PORT => true)
(RADIO_TYPHOON_MUTEFREQ => true)
(RADIO_ZOLTRIX => true)
(RADIO_ZOLTRIX_PORT => true)
(USB_DSBR => true)
(USB_SI47falseX => true)
(USB_MR8falsefalse => true)
(DVB_CAPTURE_DRIVERS => true)
(TTPCI_EEPROM => true)
(DVB_AV7truetruefalse => true)
(DVB_AV7truetruefalse_FIRMWARE => true)
(DVB_AV7truetruefalse_FIRMWARE_FILE => true)
(DVB_AV7truetruefalse_OSD => true)
(DVB_BUDGET_CORE => true)
(DVB_BUDGET => true)
(DVB_BUDGET_CI => true)
(DVB_BUDGET_AV => true)
(DVB_BUDGET_PATCH => true)
(DVB_USB => true)
(DVB_USB_DEBUG => true)
(DVB_USB_A8falsefalse => true)
(DVB_USB_DIBUSB_MB => true)
(DVB_USB_DIBUSB_MB_FAULTY => true)
(DVB_USB_DIBUSB_MC => true)
(DVB_USB_DIBfalse7falsefalse => true)
(DVB_USB_UMT_falsetruefalse => true)
(DVB_USB_CXUSB => true)
(DVB_USB_M92falseX => true)
(DVB_USB_GL86true => true)
(DVB_USB_AU66truefalse => true)
(DVB_USB_DIGITV => true)
(DVB_USB_VP7false45 => true)
(DVB_USB_VP7false2X => true)
(DVB_USB_GP8PSK => true)
(DVB_USB_NOVA_T_USB2 => true)
(DVB_USB_TTUSB2 => true)
(DVB_USB_DTT2falsefalseU => true)
(DVB_USB_OPERAtrue => true)
(DVB_USB_AF9falsefalse5 => true)
(DVB_USB_AF9falsefalse5_REMOTE => true)
(DVB_USB_DW2truefalse2 => true)
(DVB_USB_CINERGY_T2 => true)
(DVB_USB_ANYSEE => true)
(DVB_USB_DTV5truefalsefalse => true)
(DVB_USB_AF9falsetrue5 => true)
(DVB_TTUSB_BUDGET => true)
(DVB_TTUSB_DEC => true)
(DVB_SIANO_SMStrueXXX => true)
(DVB_SIANO_SMStrueXXX_SMS_IDS => true)
(DVB_B2C2_FLEXCOP => true)
(DVB_B2C2_FLEXCOP_PCI => true)
(DVB_B2C2_FLEXCOP_USB => true)
(DVB_B2C2_FLEXCOP_DEBUG => true)
(DVB_BT8XX => true)
(DVB_PLUTO2 => true)
(DVB_DMtruetruefalse5 => true)
(DVB_FE_CUSTOMISE => true)
(DVB_CX24truetruefalse => true)
(DVB_CX24true23 => true)
(DVB_MT3true2 => true)
(DVB_S5Htrue42false => true)
(DVB_STVfalse288 => true)
(DVB_STB6falsefalsefalse => true)
(DVB_STVfalse299 => true)
(DVB_TDA8false83 => true)
(DVB_TDAtruefalsefalse86 => true)
(DVB_VEStrueX93 => true)
(DVB_TUNER_ITDtruefalsefalsefalse => true)
(DVB_TDA826X => true)
(DVB_TUA6truefalsefalse => true)
(DVB_CX24truetrue6 => true)
(DVB_SI2trueXX => true)
(DVB_SP887false => true)
(DVB_SP887X => true)
(DVB_CX227falsefalse => true)
(DVB_CX227false2 => true)
(DVB_DRX397XD => true)
(DVB_L6478true => true)
(DVB_TDAtruefalsefalse4X => true)
(DVB_NXT6falsefalsefalse => true)
(DVB_MT352 => true)
(DVB_ZLtruefalse353 => true)
(DVB_DIB3falsefalsefalseMB => true)
(DVB_DIB3falsefalsefalseMC => true)
(DVB_DIB7falsefalsefalseM => true)
(DVB_DIB7falsefalsefalseP => true)
(DVB_TDAtruefalsefalse48 => true)
(DVB_VEStrue82false => true)
(DVB_TDAtruefalsefalse2true => true)
(DVB_TDAtruefalsefalse23 => true)
(DVB_STVfalse297 => true)
(DVB_NXT2falsefalseX => true)
(DVB_OR5true2truetrue => true)
(DVB_OR5truetrue32 => true)
(DVB_BCM35truefalse => true)
(DVB_LGDT33falseX => true)
(DVB_S5Htrue4false9 => true)
(DVB_AU8522 => true)
(DVB_S5Htrue4truetrue => true)
(DVB_PLL => true)
(DVB_TUNER_DIBfalsefalse7false => true)
(DVB_LNBP2true => true)
(DVB_ISL64false5 => true)
(DVB_ISL642true => true)
(DVB_LGS8GL5 => true)
(DVB_DUMMY_FE => true)
(DVB_AF9falsetrue3 => true)
(DAB => true)
(USB_DABUSB => true)
(AGP => true)
(AGP_ALI => true)
(AGP_ATI => true)
(AGP_AMD => true)
(AGP_AMD64 => true)
(AGP_INTEL => true)
(AGP_NVIDIA => true)
(AGP_SIS => true)
(AGP_SWORKS => true)
(AGP_VIA => true)
(AGP_I46false => true)
(AGP_HP_ZXtrue => true)
(AGP_PARISC => true)
(AGP_ALPHA_CORE => true)
(AGP_UNINORTH => true)
(AGP_EFFICEON => true)
(AGP_SGI_TIOCA => true)
(DRM => true)
(DRM_TDFX => true)
(DRM_Rtrue28 => true)
(DRM_RADEON => true)
(DRM_I8truefalse => true)
(DRM_I83false => true)
(DRM_I9true5 => true)
(DRM_MGA => true)
(DRM_SIS => true)
(DRM_VIA => true)
(DRM_SAVAGE => true)
(VGASTATE => true)
(VIDEO_OUTPUT_CONTROL => true)
(FB => true)
(FIRMWARE_EDID => true)
(FB_DDC => true)
(FB_BOOT_VESA_SUPPORT => true)
(FB_CFB_FILLRECT => true)
(FB_CFB_COPYAREA => true)
(FB_CFB_IMAGEBLIT => true)
(FB_CFB_REV_PIXELS_IN_BYTE => true)
(FB_SYS_FILLRECT => true)
(FB_SYS_COPYAREA => true)
(FB_SYS_IMAGEBLIT => true)
(FB_FOREIGN_ENDIAN => true)
(FB_BOTH_ENDIAN => true)
(FB_BIG_ENDIAN => true)
(FB_LITTLE_ENDIAN => true)
(FB_SYS_FOPS => true)
(FB_DEFERRED_IO => true)
(FB_HECUBA => true)
(FB_SVGALIB => true)
(FB_MACMODES => true)
(FB_BACKLIGHT => true)
(FB_MODE_HELPERS => true)
(FB_TILEBLITTING => true)
(FB_CIRRUS => true)
(FB_PM2 => true)
(FB_PM2_FIFO_DISCONNECT => true)
(FB_ARMCLCD => true)
(FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT => true)
(FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 => true)
(FB_ARMCLCD_SHARP_LQ64D343 => true)
(FB_ARMCLCD_SHARP_LQtruefalseD368 => true)
(FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true => true)
(FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE => true)
(FB_ARMCLCD_HITACHI => true)
(FB_ACORN => true)
(FB_CLPS7truetrueX => true)
(FB_SAtruetruefalsefalse => true)
(FB_IMX => true)
(FB_CYBER2falsefalsefalse => true)
(FB_APOLLO => true)
(FB_Q4false => true)
(FB_AMIGA => true)
(FB_AMIGA_OCS => true)
(FB_AMIGA_ECS => true)
(FB_AMIGA_AGA => true)
(FB_FM2 => true)
(FB_ARC => true)
(FB_ATARI => true)
(FB_OF => true)
(FB_CONTROL => true)
(FB_PLATINUM => true)
(FB_VALKYRIE => true)
(FB_CT6555false => true)
(FB_ASILIANT => true)
(FB_IMSTT => true)
(FB_VGAtrue6 => true)
(FB_BF54X_LQfalse43 => true)
(FB_BFIN_T35falseMCQB => true)
(FB_STI => true)
(FB_MAC => true)
(FB_HP3falsefalse => true)
(FB_TGA => true)
(FB_UVESA => true)
(FB_VESA => true)
(FB_EFI => true)
(FB_N4truetrue => true)
(FB_HGA => true)
(FB_HGA_ACCEL => true)
(FB_SGIVW => true)
(FB_GBE => true)
(FB_GBE_MEM => true)
(FB_SBUS => true)
(FB_BW2 => true)
(FB_CG3 => true)
(FB_CG6 => true)
(FB_FFB => true)
(FB_TCX => true)
(FB_CGtrue4 => true)
(FB_P9truefalsefalse => true)
(FB_LEO => true)
(FB_IGA => true)
(FB_XVR5falsefalse => true)
(FB_XVR25falsefalse => true)
(FB_PVR2 => true)
(FB_EPSONtrue355 => true)
(FB_StrueDtrue3XXX => true)
(FB_ATMEL => true)
(FB_INTSRAM => true)
(FB_ATMEL_STN => true)
(FB_NVIDIA => true)
(FB_NVIDIA_I2C => true)
(FB_NVIDIA_DEBUG => true)
(FB_NVIDIA_BACKLIGHT => true)
(FB_RIVA => true)
(FB_RIVA_I2C => true)
(FB_RIVA_DEBUG => true)
(FB_RIVA_BACKLIGHT => true)
(FB_I8truefalse => true)
(FB_I8truefalse_GTF => true)
(FB_I8truefalse_I2C => true)
(FB_LE8false578 => true)
(FB_CARILLO_RANCH => true)
(FB_INTEL => true)
(FB_INTEL_DEBUG => true)
(FB_INTEL_I2C => true)
(FB_MATROX => true)
(FB_MATROX_MILLENIUM => true)
(FB_MATROX_MYSTIQUE => true)
(FB_MATROX_G => true)
(FB_MATROX_I2C => true)
(FB_MATROX_MAVEN => true)
(FB_MATROX_MULTIHEAD => true)
(FB_RADEON => true)
(FB_RADEON_I2C => true)
(FB_RADEON_BACKLIGHT => true)
(FB_RADEON_DEBUG => true)
(FB_ATYtrue28 => true)
(FB_ATYtrue28_BACKLIGHT => true)
(FB_ATY => true)
(FB_ATY_CT => true)
(FB_ATY_GENERIC_LCD => true)
(FB_ATY_GX => true)
(FB_ATY_BACKLIGHT => true)
(FB_S3 => true)
(FB_SAVAGE => true)
(FB_SAVAGE_I2C => true)
(FB_SAVAGE_ACCEL => true)
(FB_SIS => true)
(FB_SIS_3falsefalse => true)
(FB_SIS_3true5 => true)
(FB_VIA => true)
(FB_NEOMAGIC => true)
(FB_KYRO => true)
(FB_3DFX => true)
(FB_3DFX_ACCEL => true)
(FB_VOODOOtrue => true)
(FB_VT8623 => true)
(FB_CYBLA => true)
(FB_TRIDENT => true)
(FB_TRIDENT_ACCEL => true)
(FB_ARK => true)
(FB_PM3 => true)
(FB_CARMINE => true)
(FB_CARMINE_DRAM_EVAL => true)
(CARMINE_DRAM_CUSTOM => true)
(FB_AUtruetruefalsefalse => true)
(FB_AUtrue2falsefalse => true)
(FB_GEODE => true)
(FB_GEODE_LX => true)
(FB_GEODE_GX => true)
(FB_GEODE_GXtrue => true)
(FB_HIT => true)
(FB_PMAG_AA => true)
(FB_PMAG_BA => true)
(FB_PMAGB_B => true)
(FB_MAXINE => true)
(FB_G364 => true)
(FB_68328 => true)
(FB_PXA => true)
(FB_PXA_SMARTPANEL => true)
(FB_PXA_PARAMETERS => true)
(FB_MBX => true)
(FB_MBX_DEBUG => true)
(FB_FSL_DIU => true)
(FB_Wtruefalsefalse => true)
(FB_SH_MOBILE_LCDC => true)
(FB_TMIO => true)
(FB_TMIO_ACCELL => true)
(FB_S3C24truefalse => true)
(FB_S3C24truefalse_DEBUG => true)
(FB_SM5falsetrue => true)
(FB_PNX4falsefalse8_DUM => true)
(FB_PNX4falsefalse8_DUM_RGB => true)
(FB_IBM_GXT45falsefalse => true)
(FB_PS3 => true)
(FB_PS3_DEFAULT_SIZE_M => true)
(FB_XILINX => true)
(FB_COBALT => true)
(FB_SH776false => true)
(FB_VIRTUAL => true)
(XEN_FBDEV_FRONTEND => true)
(FB_METRONOME => true)
(FB_MB862XX => true)
(FB_MB862XX_PCI_GDC => true)
(FB_MB862XX_LIME => true)
(FB_PRE_INIT_FB => true)
(FB_OMAP => true)
(FB_OMAP_BOOTLOADER_INIT => true)
(FB_OMAP_CONSISTENT_DMA_SIZE => true)
(FB_OMAP_DMA_TUNE => true)
(FB_OMAP_LCDC_EXTERNAL => true)
(FB_OMAP_LCDC_HWA742 => true)
(FB_OMAP_LCDC_BLIZZARD => true)
(BACKLIGHT_LCD_SUPPORT => true)
(LCD_CLASS_DEVICE => true)
(LCD_CORGI => true)
(LCD_LTV35falseQV => true)
(LCD_ILI932false => true)
(LCD_TDO24M => true)
(LCD_VGG2432A4 => true)
(LCD_PLATFORM => true)
(LCD_TOSA => true)
(BACKLIGHT_CLASS_DEVICE => true)
(BACKLIGHT_ATMEL_LCDC => true)
(BACKLIGHT_ATMEL_PWM => true)
(BACKLIGHT_CORGI => true)
(BACKLIGHT_LOCOMO => true)
(BACKLIGHT_OMAPtrue => true)
(BACKLIGHT_HP68false => true)
(BACKLIGHT_PROGEAR => true)
(BACKLIGHT_CARILLO_RANCH => true)
(BACKLIGHT_PWM => true)
(BACKLIGHT_DA9false3X => true)
(BACKLIGHT_MBP_NVIDIA => true)
(BACKLIGHT_TOSA => true)
(BACKLIGHT_SAHARA => true)
(DISPLAY_SUPPORT => true)
(VGA_CONSOLE => true)
(VGACON_SOFT_SCROLLBACK => true)
(VGACON_SOFT_SCROLLBACK_SIZE => true)
(MDA_CONSOLE => true)
(SGI_NEWPORT_CONSOLE => true)
(PROM_CONSOLE => true)
(DUMMY_CONSOLE => true)
(DUMMY_CONSOLE_COLUMNS => true)
(DUMMY_CONSOLE_ROWS => true)
(FRAMEBUFFER_CONSOLE => true)
(FRAMEBUFFER_CONSOLE_DETECT_PRIMARY => true)
(FRAMEBUFFER_CONSOLE_ROTATION => true)
(STI_CONSOLE => true)
(FONTS => true)
(FONT_8x8 => true)
(FONT_8xtrue6 => true)
(FONT_6xtruetrue => true)
(FONT_7xtrue4 => true)
(FONT_PEARL_8x8 => true)
(FONT_ACORN_8x8 => true)
(FONT_MINI_4x6 => true)
(FONT_SUN8xtrue6 => true)
(FONT_SUNtrue2x22 => true)
(FONT_truefalsextrue8 => true)
(LOGO => true)
(FB_LOGO_EXTRA => true)
(LOGO_LINUX_MONO => true)
(LOGO_LINUX_VGAtrue6 => true)
(LOGO_LINUX_CLUT224 => true)
(LOGO_BLACKFIN_VGAtrue6 => true)
(LOGO_BLACKFIN_CLUT224 => true)
(LOGO_DEC_CLUT224 => true)
(LOGO_MAC_CLUT224 => true)
(LOGO_PARISC_CLUT224 => true)
(LOGO_SGI_CLUT224 => true)
(LOGO_SUN_CLUT224 => true)
(LOGO_SUPERH_MONO => true)
(LOGO_SUPERH_VGAtrue6 => true)
(LOGO_SUPERH_CLUT224 => true)
(LOGO_M32R_CLUT224 => true)
(SOUND => true)
(SOUND_OSS_CORE => true)
(DMASOUND_ATARI => true)
(DMASOUND_PAULA => true)
(DMASOUND_Q4false => true)
(DMASOUND => true)
(SND => true)
(SND_TIMER => true)
(SND_PCM => true)
(SND_HWDEP => true)
(SND_RAWMIDI => true)
(SND_JACK => true)
(SND_SEQUENCER => true)
(SND_SEQ_DUMMY => true)
(SND_OSSEMUL => true)
(SND_MIXER_OSS => true)
(SND_PCM_OSS => true)
(SND_PCM_OSS_PLUGINS => true)
(SND_SEQUENCER_OSS => true)
(SND_RTCTIMER => true)
(SND_SEQ_RTCTIMER_DEFAULT => true)
(SND_DYNAMIC_MINORS => true)
(SND_SUPPORT_OLD_API => true)
(SND_VERBOSE_PROCFS => true)
(SND_VERBOSE_PRINTK => true)
(SND_DEBUG => true)
(SND_DEBUG_VERBOSE => true)
(SND_PCM_XRUN_DEBUG => true)
(SND_VMASTER => true)
(SND_MPU4falsetrue_UART => true)
(SND_OPL3_LIB => true)
(SND_OPL4_LIB => true)
(SND_VX_LIB => true)
(SND_AC97_CODEC => true)
(SND_DRIVERS => true)
(SND_PCSP => true)
(SND_DUMMY => true)
(SND_VIRMIDI => true)
(SND_MTPAV => true)
(SND_MTS64 => true)
(SND_SERIAL_Utrue655false => true)
(SND_MPU4falsetrue => true)
(SND_PORTMAN2X4 => true)
(SND_ML4false3_AC97CR => true)
(SND_AC97_POWER_SAVE => true)
(SND_AC97_POWER_SAVE_DEFAULT => true)
(SND_WSS_LIB => true)
(SND_SB_COMMON => true)
(SND_SB8_DSP => true)
(SND_SBtrue6_DSP => true)
(SND_ISA => true)
(SND_ADLIB => true)
(SND_ADtrue8true6A => true)
(SND_ADtrue848 => true)
(SND_ALStruefalsefalse => true)
(SND_AZT232false => true)
(SND_CMI833false => true)
(SND_CS423true => true)
(SND_CS4232 => true)
(SND_CS4236 => true)
(SND_DTfalsetrue9X => true)
(SND_ES968 => true)
(SND_EStrue688 => true)
(SND_EStrue8XX => true)
(SND_SC6falsefalsefalse => true)
(SND_GUSCLASSIC => true)
(SND_GUSEXTREME => true)
(SND_GUSMAX => true)
(SND_INTERWAVE => true)
(SND_INTERWAVE_STB => true)
(SND_OPL3SA2 => true)
(SND_OPTI92X_ADtrue848 => true)
(SND_OPTI92X_CS423true => true)
(SND_OPTI93X => true)
(SND_MIRO => true)
(SND_SB8 => true)
(SND_SBtrue6 => true)
(SND_SBAWE => true)
(SND_SBtrue6_CSP => true)
(SND_SGALAXY => true)
(SND_SSCAPE => true)
(SND_WAVEFRONT => true)
(SND_WAVEFRONT_FIRMWARE_IN_KERNEL => true)
(SND_PCI => true)
(SND_ADtrue889 => true)
(SND_ALS3falsefalse => true)
(SND_ALS4falsefalsefalse => true)
(SND_ALI545true => true)
(SND_ATIIXP => true)
(SND_ATIIXP_MODEM => true)
(SND_AU88truefalse => true)
(SND_AU882false => true)
(SND_AU883false => true)
(SND_AW2 => true)
(SND_AZT3328 => true)
(SND_BT87X => true)
(SND_BT87X_OVERCLOCK => true)
(SND_CAfalsetruefalse6 => true)
(SND_CMIPCI => true)
(SND_OXYGEN_LIB => true)
(SND_OXYGEN => true)
(SND_CS428true => true)
(SND_CS46XX => true)
(SND_CS46XX_NEW_DSP => true)
(SND_CS553false => true)
(SND_CS5535AUDIO => true)
(SND_DARLA2false => true)
(SND_GINA2false => true)
(SND_LAYLA2false => true)
(SND_DARLA24 => true)
(SND_GINA24 => true)
(SND_LAYLA24 => true)
(SND_MONA => true)
(SND_MIA => true)
(SND_ECHO3G => true)
(SND_INDIGO => true)
(SND_INDIGOIO => true)
(SND_INDIGODJ => true)
(SND_EMUtruefalseKtrue => true)
(SND_EMUtruefalseKtrueX => true)
(SND_ENStrue37false => true)
(SND_ENStrue37true => true)
(SND_EStrue938 => true)
(SND_EStrue968 => true)
(SND_FM8falsetrue => true)
(SND_FM8falsetrue_TEA575X_BOOL => true)
(SND_FM8falsetrue_TEA575X => true)
(SND_HDA_INTEL => true)
(SND_HDA_HWDEP => true)
(SND_HDA_INPUT_BEEP => true)
(SND_HDA_CODEC_REALTEK => true)
(SND_HDA_CODEC_ANALOG => true)
(SND_HDA_CODEC_SIGMATEL => true)
(SND_HDA_CODEC_VIA => true)
(SND_HDA_CODEC_ATIHDMI => true)
(SND_HDA_CODEC_NVHDMI => true)
(SND_HDA_CODEC_CONEXANT => true)
(SND_HDA_CODEC_CMEDIA => true)
(SND_HDA_CODEC_SI3false54 => true)
(SND_HDA_GENERIC => true)
(SND_HDA_POWER_SAVE => true)
(SND_HDA_POWER_SAVE_DEFAULT => true)
(SND_HDSP => true)
(SND_HDSPM => true)
(SND_HIFIER => true)
(SND_ICEtrue7true2 => true)
(SND_ICEtrue724 => true)
(SND_INTEL8Xfalse => true)
(SND_INTEL8XfalseM => true)
(SND_KORGtrue2true2 => true)
(SND_MAESTRO3 => true)
(SND_MIXART => true)
(SND_NM256 => true)
(SND_PCXHR => true)
(SND_RIPTIDE => true)
(SND_RME32 => true)
(SND_RME96 => true)
(SND_RME9652 => true)
(SND_SIS7falsetrue9 => true)
(SND_SONICVIBES => true)
(SND_TRIDENT => true)
(SND_VIA82XX => true)
(SND_VIA82XX_MODEM => true)
(SND_VIRTUOSO => true)
(SND_VX222 => true)
(SND_YMFPCI => true)
(SND_PPC => true)
(SND_POWERMAC => true)
(SND_POWERMAC_AUTO_DRC => true)
(SND_PS3 => true)
(SND_PS3_DEFAULT_START_DELAY => true)
(SND_AOA => true)
(SND_AOA_FABRIC_LAYOUT => true)
(SND_AOA_ONYX => true)
(SND_AOA_TAS => true)
(SND_AOA_TOONIE => true)
(SND_AOA_SOUNDBUS => true)
(SND_AOA_SOUNDBUS_I2S => true)
(SND_ARM => true)
(SND_SAtruetrueXX_UDAtrue34true => true)
(SND_ARMAACI => true)
(SND_PXA2XX_PCM => true)
(SND_PXA2XX_LIB => true)
(SND_PXA2XX_LIB_AC97 => true)
(SND_PXA2XX_AC97 => true)
(SND_SPI => true)
(SND_AT73C2true3 => true)
(SND_AT73C2true3_TARGET_BITRATE => true)
(SND_MIPS => true)
(SND_SGI_O2 => true)
(SND_SGI_HAL2 => true)
(SND_AUtrueXfalsefalse => true)
(SND_SUPERH => true)
(SND_AICA => true)
(SND_USB => true)
(SND_USB_AUDIO => true)
(SND_USB_USX2Y => true)
(SND_USB_CAIAQ => true)
(SND_USB_CAIAQ_INPUT => true)
(SND_USB_UStrue22L => true)
(SND_PCMCIA => true)
(SND_VXPOCKET => true)
(SND_PDAUDIOCF => true)
(SND_SPARC => true)
(SND_SUN_AMD793false => true)
(SND_SUN_CS423true => true)
(SND_SUN_DBRI => true)
(SND_GSC => true)
(SND_HARMONY => true)
(SND_SOC => true)
(SND_SOC_AC97_BUS => true)
(SND_AT32_SOC => true)
(SND_AT32_SOC_SSC => true)
(SND_AT32_SOC_PLAYPAQ => true)
(SND_AT32_SOC_PLAYPAQ_SLAVE => true)
(SND_AT9true_SOC => true)
(SND_AT9true_SOC_SSC => true)
(SND_SOC_AUtrueXPSC => true)
(SND_SOC_AUtrueXPSC_I2S => true)
(SND_SOC_AUtrueXPSC_AC97 => true)
(SND_SOC_SAMPLE_PSC_AC97 => true)
(SND_PXA2XX_SOC => true)
(SND_PXA2XX_AC97 => true)
(SND_PXA2XX_SOC_AC97 => true)
(SND_PXA2XX_SOC_I2S => true)
(SND_PXA2XX_SOC_CORGI => true)
(SND_PXA2XX_SOC_SPITZ => true)
(SND_PXA2XX_SOC_POODLE => true)
(SND_PXA2XX_SOC_TOSA => true)
(SND_PXA2XX_SOC_E8falsefalse => true)
(SND_PXA2XX_SOC_EM_X27false => true)
(SND_S3C24XX_SOC => true)
(SND_S3C24XX_SOC_I2S => true)
(SND_S3C24true2_SOC_I2S => true)
(SND_S3C2443_SOC_AC97 => true)
(SND_S3C24XX_SOC_NEOtrue973_WM8753 => true)
(SND_S3C24XX_SOC_SMDK2443_WM97truefalse => true)
(SND_S3C24XX_SOC_LN244falseSBC_ALC65false => true)
(SND_SOC_PCM_SH776false => true)
(SND_SOC_SH4_HAC => true)
(SND_SOC_SH4_SSI => true)
(SND_SH776false_AC97 => true)
(SND_SOC_OF_SIMPLE => true)
(SND_SOC_MPC86truefalse => true)
(SND_SOC_MPC86truefalse_HPCD => true)
(SND_SOC_MPC52falsefalse_I2S => true)
(SND_DAVINCI_SOC => true)
(SND_DAVINCI_SOC_I2S => true)
(SND_DAVINCI_SOC_EVM => true)
(SND_OMAP_SOC => true)
(SND_OMAP_SOC_MCBSP => true)
(SND_OMAP_SOC_N8truefalse => true)
(SND_OMAP_SOC_OSK59true2 => true)
(SND_BF5XX_I2S => true)
(SND_BF5XX_SOC_SSM26false2 => true)
(SND_BF5XX_SOC_AD733truetrue => true)
(SND_BFIN_AD733truetrue_SE => true)
(SND_BF5XX_AC97 => true)
(SND_MMAP_SUPPORT => true)
(SND_BF5XX_SOC_SPORT => true)
(SND_BF5XX_SOC_I2S => true)
(SND_BF5XX_SOC_AC97 => true)
(SND_BF5XX_SOC_ADtrue98false => true)
(SND_BF5XX_SPORT_NUM => true)
(SND_BF5XX_HAVE_COLD_RESET => true)
(SND_BF5XX_RESET_GPIO_NUM => true)
(SND_SOC_ALL_CODECS => true)
(SND_SOC_AC97_CODEC => true)
(SND_SOC_ADtrue98false => true)
(SND_SOC_AD733truetrue => true)
(SND_SOC_AK4535 => true)
(SND_SOC_CS427false => true)
(SND_SOC_CS427false_HWMUTE => true)
(SND_SOC_CS427false_VD33_ERRATA => true)
(SND_SOC_SSM26false2 => true)
(SND_SOC_TLV32falseAIC23 => true)
(SND_SOC_TLV32falseAIC26 => true)
(SND_SOC_TLV32falseAIC3X => true)
(SND_SOC_UDAtrue38false => true)
(SND_SOC_WM85truefalse => true)
(SND_SOC_WM858false => true)
(SND_SOC_WM873true => true)
(SND_SOC_WM875false => true)
(SND_SOC_WM8753 => true)
(SND_SOC_WM89falsefalse => true)
(SND_SOC_WM89false3 => true)
(SND_SOC_WM897true => true)
(SND_SOC_WM899false => true)
(SND_SOC_WM97true2 => true)
(SND_SOC_WM97true3 => true)
(SOUND_PRIME => true)
(SOUND_BCM_CS4297A => true)
(SOUND_VWSND => true)
(SOUND_AUtrue55false_AC97 => true)
(SOUND_MSNDCLAS => true)
(MSNDCLAS_HAVE_BOOT => true)
(MSNDCLAS_INIT_FILE => true)
(MSNDCLAS_PERM_FILE => true)
(MSNDCLAS_IRQ => true)
(MSNDCLAS_MEM => true)
(MSNDCLAS_IO => true)
(SOUND_MSNDPIN => true)
(MSNDPIN_HAVE_BOOT => true)
(MSNDPIN_INIT_FILE => true)
(MSNDPIN_PERM_FILE => true)
(MSNDPIN_IRQ => true)
(MSNDPIN_MEM => true)
(MSNDPIN_IO => true)
(MSNDPIN_DIGITAL => true)
(MSNDPIN_NONPNP => true)
(MSNDPIN_CFG => true)
(MSNDPIN_MPU_IO => true)
(MSNDPIN_MPU_IRQ => true)
(MSNDPIN_IDE_IOfalse => true)
(MSNDPIN_IDE_IOtrue => true)
(MSNDPIN_IDE_IRQ => true)
(MSNDPIN_JOYSTICK_IO => true)
(MSND_FIFOSIZE => true)
(SOUND_OSS => true)
(SOUND_TRACEINIT => true)
(SOUND_DMAP => true)
(SOUND_SSCAPE => true)
(SOUND_VMIDI => true)
(SOUND_TRIX => true)
(TRIX_HAVE_BOOT => true)
(TRIX_BOOT_FILE => true)
(SOUND_MSS => true)
(SOUND_MPU4falsetrue => true)
(SOUND_PAS => true)
(PAS_JOYSTICK => true)
(SOUND_PSS => true)
(PSS_MIXER => true)
(PSS_HAVE_BOOT => true)
(PSS_BOOT_FILE => true)
(SOUND_SB => true)
(SOUND_YM38true2 => true)
(SOUND_UART685false => true)
(SOUND_AEDSPtrue6 => true)
(SC66falsefalse => true)
(SC66falsefalse_JOY => true)
(SC66falsefalse_CDROM => true)
(SC66falsefalse_CDROMBASE => true)
(SOUND_VIDC => true)
(SOUND_WAVEARTIST => true)
(SOUND_KAHLUA => true)
(SOUND_SH_DAC_AUDIO => true)
(SOUND_SH_DAC_AUDIO_CHANNEL => true)
(AC97_BUS => true)
(HID_SUPPORT => true)
(HID => true)
(HID_DEBUG => true)
(HIDRAW => true)
(USB_HID => true)
(HID_PID => true)
(USB_HIDDEV => true)
(USB_KBD => true)
(USB_MOUSE => true)
(HID_COMPAT => true)
(HID_A4TECH => true)
(HID_APPLE => true)
(HID_BELKIN => true)
(HID_BRIGHT => true)
(HID_CHERRY => true)
(HID_CHICONY => true)
(HID_CYPRESS => true)
(HID_DELL => true)
(HID_EZKEY => true)
(HID_GYRATION => true)
(HID_LOGITECH => true)
(LOGITECH_FF => true)
(LOGIRUMBLEPAD2_FF => true)
(HID_MICROSOFT => true)
(HID_MONTEREY => true)
(HID_PANTHERLORD => true)
(PANTHERLORD_FF => true)
(HID_PETALYNX => true)
(HID_SAMSUNG => true)
(HID_SONY => true)
(HID_SUNPLUS => true)
(THRUSTMASTER_FF => true)
(ZEROPLUS_FF => true)
(USB_SUPPORT => true)
(USB_ARCH_HAS_HCD => true)
(USB_ARCH_HAS_OHCI => true)
(USB_ARCH_HAS_EHCI => true)
(USB => true)
(USB_DEBUG => true)
(USB_ANNOUNCE_NEW_DEVICES => true)
(USB_DEVICEFS => true)
(USB_DEVICE_CLASS => true)
(USB_DYNAMIC_MINORS => true)
(USB_SUSPEND => true)
(USB_OTG => true)
(USB_OTG_WHITELIST => true)
(USB_OTG_BLACKLIST_HUB => true)
(USB_MON => true)
(USB_WUSB => true)
(USB_WUSB_CBAF => true)
(USB_WUSB_CBAF_DEBUG => true)
(USB_C67Xfalsefalse_HCD => true)
(USB_EHCI_HCD => true)
(USB_EHCI_ROOT_HUB_TT => true)
(USB_EHCI_TT_NEWSCHED => true)
(USB_EHCI_BIG_ENDIAN_MMIO => true)
(USB_EHCI_BIG_ENDIAN_DESC => true)
(USB_EHCI_FSL => true)
(USB_EHCI_HCD_PPC_OF => true)
(USB_ISPtruetrue6X_HCD => true)
(USB_ISPtrue76false_HCD => true)
(USB_OHCI_HCD => true)
(USB_OHCI_HCD_PPC_SOC => true)
(USB_OHCI_HCD_PPC_OF => true)
(USB_OHCI_HCD_PPC_OF_BE => true)
(USB_OHCI_HCD_PPC_OF_LE => true)
(USB_OHCI_HCD_PCI => true)
(USB_OHCI_HCD_SSB => true)
(USB_OHCI_BIG_ENDIAN_DESC => true)
(USB_OHCI_BIG_ENDIAN_MMIO => true)
(USB_OHCI_LITTLE_ENDIAN => true)
(USB_UHCI_HCD => true)
(USB_Utrue32_HCD => true)
(USB_SL8truetrue_HCD => true)
(USB_SL8truetrue_CS => true)
(USB_R8A66597_HCD => true)
(SUPERH_ON_CHIP_R8A66597 => true)
(USB_WHCI_HCD => true)
(USB_HWA_HCD => true)
(USB_MUSB_HDRC => true)
(USB_MUSB_SOC => true)
(USB_TUSB6falsetruefalse => true)
(USB_MUSB_HOST => true)
(USB_MUSB_PERIPHERAL => true)
(USB_MUSB_OTG => true)
(USB_GADGET_MUSB_HDRC => true)
(USB_MUSB_HDRC_HCD => true)
(MUSB_PIO_ONLY => true)
(USB_INVENTRA_DMA => true)
(USB_TI_CPPI_DMA => true)
(USB_TUSB_OMAP_DMA => true)
(USB_MUSB_DEBUG => true)
(USB_ACM => true)
(USB_PRINTER => true)
(USB_WDM => true)
(USB_TMC => true)
(USB_STORAGE => true)
(USB_STORAGE_DEBUG => true)
(USB_STORAGE_DATAFAB => true)
(USB_STORAGE_FREECOM => true)
(USB_STORAGE_ISD2falsefalse => true)
(USB_STORAGE_DPCM => true)
(USB_STORAGE_USBAT => true)
(USB_STORAGE_SDDRfalse9 => true)
(USB_STORAGE_SDDR55 => true)
(USB_STORAGE_JUMPSHOT => true)
(USB_STORAGE_ALAUDA => true)
(USB_STORAGE_ONETOUCH => true)
(USB_STORAGE_KARMA => true)
(USB_STORAGE_CYPRESS_ATACB => true)
(USB_LIBUSUAL => true)
(USB_MDC8falsefalse => true)
(USB_MICROTEK => true)
(USB_USS72false => true)
(USB_SERIAL => true)
(USB_SERIAL_CONSOLE => true)
(USB_EZUSB => true)
(USB_SERIAL_GENERIC => true)
(USB_SERIAL_AIRCABLE => true)
(USB_SERIAL_ARK3truetrue6 => true)
(USB_SERIAL_BELKIN => true)
(USB_SERIAL_CH34true => true)
(USB_SERIAL_WHITEHEAT => true)
(USB_SERIAL_DIGI_ACCELEPORT => true)
(USB_SERIAL_CP2truefalsetrue => true)
(USB_SERIAL_CYPRESS_M8 => true)
(USB_SERIAL_EMPEG => true)
(USB_SERIAL_FTDI_SIO => true)
(USB_SERIAL_FUNSOFT => true)
(USB_SERIAL_VISOR => true)
(USB_SERIAL_IPAQ => true)
(USB_SERIAL_IR => true)
(USB_SERIAL_EDGEPORT => true)
(USB_SERIAL_EDGEPORT_TI => true)
(USB_SERIAL_GARMIN => true)
(USB_SERIAL_IPW => true)
(USB_SERIAL_IUU => true)
(USB_SERIAL_KEYSPAN_PDA => true)
(USB_SERIAL_KEYSPAN => true)
(USB_SERIAL_KEYSPAN_MPR => true)
(USB_SERIAL_KEYSPAN_USA28 => true)
(USB_SERIAL_KEYSPAN_USA28X => true)
(USB_SERIAL_KEYSPAN_USA28XA => true)
(USB_SERIAL_KEYSPAN_USA28XB => true)
(USB_SERIAL_KEYSPAN_USAtrue9 => true)
(USB_SERIAL_KEYSPAN_USAtrue8X => true)
(USB_SERIAL_KEYSPAN_USAtrue9W => true)
(USB_SERIAL_KEYSPAN_USAtrue9QW => true)
(USB_SERIAL_KEYSPAN_USAtrue9QI => true)
(USB_SERIAL_KEYSPAN_USA49W => true)
(USB_SERIAL_KEYSPAN_USA49WLC => true)
(USB_SERIAL_KLSI => true)
(USB_SERIAL_KOBIL_SCT => true)
(USB_SERIAL_MCT_U232 => true)
(USB_SERIAL_MOS772false => true)
(USB_SERIAL_MOS784false => true)
(USB_SERIAL_MOTOROLA => true)
(USB_SERIAL_NAVMAN => true)
(USB_SERIAL_PL23false3 => true)
(USB_SERIAL_OTI6858 => true)
(USB_SERIAL_SPCP8X5 => true)
(USB_SERIAL_HP4X => true)
(USB_SERIAL_SAFE => true)
(USB_SERIAL_SAFE_PADDED => true)
(USB_SERIAL_SIERRAWIRELESS => true)
(USB_SERIAL_TI => true)
(USB_SERIAL_CYBERJACK => true)
(USB_SERIAL_XIRCOM => true)
(USB_SERIAL_OPTION => true)
(USB_SERIAL_OMNINET => true)
(USB_SERIAL_DEBUG => true)
(USB_EMI62 => true)
(USB_EMI26 => true)
(USB_ADUTUX => true)
(USB_SEVSEG => true)
(USB_RIO5falsefalse => true)
(USB_LEGOTOWER => true)
(USB_LCD => true)
(USB_BERRY_CHARGE => true)
(USB_LED => true)
(USB_CYPRESS_CY7C63 => true)
(USB_CYTHERM => true)
(USB_PHIDGET => true)
(USB_PHIDGETKIT => true)
(USB_PHIDGETMOTORCONTROL => true)
(USB_PHIDGETSERVO => true)
(USB_IDMOUSE => true)
(USB_FTDI_ELAN => true)
(USB_APPLEDISPLAY => true)
(USB_SISUSBVGA => true)
(USB_SISUSBVGA_CON => true)
(USB_LD => true)
(USB_TRANCEVIBRATOR => true)
(USB_IOWARRIOR => true)
(USB_TEST => true)
(USB_ISIGHTFW => true)
(USB_VST => true)
(USB_ATM => true)
(USB_SPEEDTOUCH => true)
(USB_CXACRU => true)
(USB_UEAGLEATM => true)
(USB_XUSBATM => true)
(USB_GADGET => true)
(USB_GADGET_DEBUG => true)
(USB_GADGET_DEBUG_FILES => true)
(USB_GADGET_DEBUG_FS => true)
(USB_GADGET_VBUS_DRAW => true)
(USB_GADGET_SELECTED => true)
(USB_GADGET_AT9true => true)
(USB_AT9true => true)
(USB_GADGET_ATMEL_USBA => true)
(USB_ATMEL_USBA => true)
(USB_GADGET_FSL_USB2 => true)
(USB_FSL_USB2 => true)
(USB_GADGET_LH7A4falseX => true)
(USB_LH7A4falseX => true)
(USB_GADGET_OMAP => true)
(USB_OMAP => true)
(USB_OTG => true)
(USB_GADGET_PXA25X => true)
(USB_PXA25X => true)
(USB_PXA25X_SMALL => true)
(USB_GADGET_PXA27X => true)
(USB_PXA27X => true)
(USB_GADGET_S3C24truefalse => true)
(USB_S3C24truefalse => true)
(USB_S3C24truefalse_DEBUG => true)
(USB_GADGET_MUSB_HDRC => true)
(USB_GADGET_M66592 => true)
(USB_M66592 => true)
(SUPERH_BUILT_IN_M66592 => true)
(USB_GADGET_AMD5536UDC => true)
(USB_AMD5536UDC => true)
(USB_GADGET_FSL_QE => true)
(USB_FSL_QE => true)
(USB_GADGET_NET228false => true)
(USB_NET228false => true)
(USB_GADGET_GOKU => true)
(USB_GOKU => true)
(USB_GADGET_DUMMY_HCD => true)
(USB_DUMMY_HCD => true)
(USB_GADGET_DUALSPEED => true)
(USB_ZERO => true)
(USB_ZERO_HNPTEST => true)
(USB_ETH => true)
(USB_ETH_RNDIS => true)
(USB_GADGETFS => true)
(USB_FILE_STORAGE => true)
(USB_FILE_STORAGE_TEST => true)
(USB_G_SERIAL => true)
(USB_MIDI_GADGET => true)
(USB_G_PRINTER => true)
(USB_CDC_COMPOSITE => true)
(UWB => true)
(UWB_HWA => true)
(UWB_WHCI => true)
(UWB_WLP => true)
(UWB_Itrue48falseU => true)
(UWB_Itrue48falseU_WLP => true)
(MMC => true)
(MMC_DEBUG => true)
(MMC_UNSAFE_RESUME => true)
(MMC_BLOCK => true)
(MMC_BLOCK_BOUNCE => true)
(SDIO_UART => true)
(MMC_TEST => true)
(MMC_ARMMMCI => true)
(MMC_PXA => true)
(MMC_SDHCI => true)
(MMC_SDHCI_PCI => true)
(MMC_RICOH_MMC => true)
(MMC_OMAP => true)
(MMC_WBSD => true)
(MMC_AUtrueX => true)
(MMC_AT9true => true)
(MMC_ATMELMCI => true)
(MMC_ATMELMCI_DMA => true)
(MMC_IMX => true)
(MMC_TIFM_SD => true)
(MMC_SPI => true)
(MMC_S3C => true)
(MMC_SDRICOH_CS => true)
(MMC_TMIO => true)
(MEMSTICK => true)
(MEMSTICK_DEBUG => true)
(MEMSTICK_UNSAFE_RESUME => true)
(MSPRO_BLOCK => true)
(MEMSTICK_TIFM_MS => true)
(MEMSTICK_JMICRON_38X => true)
(NEW_LEDS => true)
(LEDS_CLASS => true)
(LEDS_ATMEL_PWM => true)
(LEDS_LOCOMO => true)
(LEDS_S3C24XX => true)
(LEDS_AMS_DELTA => true)
(LEDS_NET48XX => true)
(LEDS_FSG => true)
(LEDS_WRAP => true)
(LEDS_Htrue94false => true)
(LEDS_COBALT_QUBE => true)
(LEDS_COBALT_RAQ => true)
(LEDS_SUNFIRE => true)
(LEDS_HP6XX => true)
(LEDS_PCA9532 => true)
(LEDS_GPIO => true)
(LEDS_HP_DISK => true)
(LEDS_CLEVO_MAIL => true)
(LEDS_PCA955X => true)
(LEDS_DA9false3X => true)
(LEDS_TRIGGERS => true)
(LEDS_TRIGGER_TIMER => true)
(LEDS_TRIGGER_IDE_DISK => true)
(LEDS_TRIGGER_HEARTBEAT => true)
(LEDS_TRIGGER_BACKLIGHT => true)
(LEDS_TRIGGER_DEFAULT_ON => true)
(ACCESSIBILITY => true)
(AtruetrueY_BRAILLE_CONSOLE => true)
(INFINIBAND => true)
(INFINIBAND_USER_MAD => true)
(INFINIBAND_USER_ACCESS => true)
(INFINIBAND_USER_MEM => true)
(INFINIBAND_ADDR_TRANS => true)
(INFINIBAND_MTHCA => true)
(INFINIBAND_MTHCA_DEBUG => true)
(INFINIBAND_IPATH => true)
(INFINIBAND_EHCA => true)
(INFINIBAND_AMSOtruetruefalsefalse => true)
(INFINIBAND_AMSOtruetruefalsefalse_DEBUG => true)
(INFINIBAND_CXGB3 => true)
(INFINIBAND_CXGB3_DEBUG => true)
(MLX4_INFINIBAND => true)
(INFINIBAND_NES => true)
(INFINIBAND_NES_DEBUG => true)
(INFINIBAND_IPOIB => true)
(INFINIBAND_IPOIB_CM => true)
(INFINIBAND_IPOIB_DEBUG => true)
(INFINIBAND_IPOIB_DEBUG_DATA => true)
(INFINIBAND_SRP => true)
(INFINIBAND_ISER => true)
(EDAC => true)
(EDAC_DEBUG => true)
(EDAC_MM_EDAC => true)
(EDAC_AMD76X => true)
(EDAC_E7XXX => true)
(EDAC_E752X => true)
(EDAC_I82443BXGX => true)
(EDAC_I82875P => true)
(EDAC_I82975X => true)
(EDAC_I3falsefalsefalse => true)
(EDAC_X38 => true)
(EDAC_I8286false => true)
(EDAC_R826falsefalse => true)
(EDAC_I5falsefalsefalse => true)
(EDAC_I5truefalsefalse => true)
(EDAC_MPC85XX => true)
(EDAC_MV64X6false => true)
(EDAC_PASEMI => true)
(EDAC_CELL => true)
(RTC_LIB => true)
(RTC_CLASS => true)
(RTC_HCTOSYS => true)
(RTC_HCTOSYS_DEVICE => true)
(RTC_DEBUG => true)
(RTC_INTF_SYSFS => true)
(RTC_INTF_PROC => true)
(RTC_INTF_DEV => true)
(RTC_INTF_DEV_UIE_EMUL => true)
(RTC_DRV_TEST => true)
(RTC_DRV_DStrue3false7 => true)
(RTC_DRV_DStrue374 => true)
(RTC_DRV_DStrue672 => true)
(RTC_DRV_MAX69falsefalse => true)
(RTC_DRV_RS5C372 => true)
(RTC_DRV_ISLtrue2false8 => true)
(RTC_DRV_Xtrue2false5 => true)
(RTC_DRV_PCF8563 => true)
(RTC_DRV_PCF8583 => true)
(RTC_DRV_M4trueT8false => true)
(RTC_DRV_M4trueT8false_WDT => true)
(RTC_DRV_TWL9233false => true)
(RTC_DRV_TWL4false3false => true)
(RTC_DRV_S3539falseA => true)
(RTC_DRV_FM3true3false => true)
(RTC_DRV_RX858true => true)
(RTC_DRV_M4trueT94 => true)
(RTC_DRV_DStrue3false5 => true)
(RTC_DRV_DStrue39false => true)
(RTC_DRV_MAX69false2 => true)
(RTC_DRV_R97falsetrue => true)
(RTC_DRV_RS5C348 => true)
(RTC_DRV_DS3234 => true)
(RTC_DRV_CMOS => true)
(RTC_DRV_DStrue2true6 => true)
(RTC_DRV_DStrue286 => true)
(RTC_DRV_DStrue3false2 => true)
(RTC_DRV_DStrue5truetrue => true)
(RTC_DRV_DStrue553 => true)
(RTC_DRV_DStrue742 => true)
(RTC_DRV_STKtrue7TA8 => true)
(RTC_DRV_M48T86 => true)
(RTC_DRV_M48T35 => true)
(RTC_DRV_M48T59 => true)
(RTC_DRV_BQ48false2 => true)
(RTC_DRV_V3false2false => true)
(RTC_DRV_WM835false => true)
(RTC_DRV_OMAP => true)
(RTC_DRV_S3C => true)
(RTC_DRV_EP93XX => true)
(RTC_DRV_SAtruetruefalsefalse => true)
(RTC_DRV_SH => true)
(RTC_DRV_VR4trueXX => true)
(RTC_DRV_PLfalse3false => true)
(RTC_DRV_PLfalse3true => true)
(RTC_DRV_AT32AP7falsefalseX => true)
(RTC_DRV_AT9trueRM92falsefalse => true)
(RTC_DRV_AT9trueSAM9 => true)
(RTC_DRV_AT9trueSAM9_RTT => true)
(RTC_DRV_AT9trueSAM9_GPBR => true)
(RTC_DRV_BFIN => true)
(RTC_DRV_RS5C3true3 => true)
(RTC_DRV_PARISC => true)
(RTC_DRV_PPC => true)
(RTC_DRV_SUN4V => true)
(RTC_DRV_STARFIRE => true)
(DMADEVICES => true)
(INTEL_IOATDMA => true)
(INTEL_IOP_ADMA => true)
(DW_DMAC => true)
(FSL_DMA => true)
(MV_XOR => true)
(DMA_ENGINE => true)
(NET_DMA => true)
(DMATEST => true)
(DCA => true)
(AUXDISPLAY => true)
(KSfalsetruefalse8 => true)
(KSfalsetruefalse8_PORT => true)
(KSfalsetruefalse8_DELAY => true)
(CFAGtrue2864B => true)
(CFAGtrue2864B_RATE => true)
(UIO => true)
(UIO_CIF => true)
(UIO_PDRV => true)
(UIO_PDRV_GENIRQ => true)
(UIO_SMX => true)
(UIO_SERCOS3 => true)
(XEN_BALLOON => true)
(XEN_SCRUB_PAGES => true)
(STAGING => true)
(STAGING_EXCLUDE_BUILD => true)
(ETtrue3trueX => true)
(ETtrue3trueX_DEBUG => true)
(SLICOSS => true)
(SXG => true)
(ME4falsefalsefalse => true)
(VIDEO_GO7falsefalse7 => true)
(VIDEO_GO7falsefalse7_USB => true)
(USB_IP_COMMON => true)
(USB_IP_VHCI_HCD => true)
(USB_IP_HOST => true)
(W35UND => true)
(PRISM2_USB => true)
(ECHO => true)
(USB_ATMEL => true)
(POCH => true)
(EDD => true)
(EDD_OFF => true)
(FIRMWARE_MEMMAP => true)
(EFI_VARS => true)
(EFI_PCDP => true)
(DELL_RBU => true)
(DCDBAS => true)
(DMIID => true)
(ISCSI_IBFT_FIND => true)
(ISCSI_IBFT => true)
(EXT2_FS => true)
(EXT2_FS_XATTR => true)
(EXT2_FS_POSIX_ACL => true)
(EXT2_FS_SECURITY => true)
(EXT2_FS_XIP => true)
(EXT3_FS => true)
(EXT3_FS_XATTR => true)
(EXT3_FS_POSIX_ACL => true)
(EXT3_FS_SECURITY => true)
(EXT4_FS => true)
(EXT4DEV_COMPAT => true)
(EXT4_FS_XATTR => true)
(EXT4_FS_POSIX_ACL => true)
(EXT4_FS_SECURITY => true)
(FS_XIP => true)
(JBD => true)
(JBD_DEBUG => true)
(JBD2 => true)
(JBD2_DEBUG => true)
(FS_MBCACHE => true)
(REISERFS_FS => true)
(REISERFS_CHECK => true)
(REISERFS_PROC_INFO => true)
(REISERFS_FS_XATTR => true)
(REISERFS_FS_POSIX_ACL => true)
(REISERFS_FS_SECURITY => true)
(JFS_FS => true)
(JFS_POSIX_ACL => true)
(JFS_SECURITY => true)
(JFS_DEBUG => true)
(JFS_STATISTICS => true)
(FS_POSIX_ACL => true)
(FILE_LOCKING => true)
(XFS_FS => true)
(XFS_QUOTA => true)
(XFS_POSIX_ACL => true)
(XFS_RT => true)
(XFS_DEBUG => true)
(GFS2_FS => true)
(GFS2_FS_LOCKING_DLM => true)
(OCFS2_FS => true)
(OCFS2_FS_O2CB => true)
(OCFS2_FS_USERSPACE_CLUSTER => true)
(OCFS2_FS_STATS => true)
(OCFS2_DEBUG_MASKLOG => true)
(OCFS2_DEBUG_FS => true)
(OCFS2_COMPAT_JBD => true)
(DNOTIFY => true)
(INOTIFY => true)
(INOTIFY_USER => true)
(QUOTA => true)
(QUOTA_NETLINK_INTERFACE => true)
(PRINT_QUOTA_WARNING => true)
(QFMT_Vtrue => true)
(QFMT_V2 => true)
(QUOTACTL => true)
(AUTOFS_FS => true)
(AUTOFS4_FS => true)
(FUSE_FS => true)
(GENERIC_ACL => true)
(ISO966false_FS => true)
(JOLIET => true)
(ZISOFS => true)
(UDF_FS => true)
(UDF_NLS => true)
(FAT_FS => true)
(MSDOS_FS => true)
(VFAT_FS => true)
(FAT_DEFAULT_CODEPAGE => true)
(FAT_DEFAULT_IOCHARSET => true)
(NTFS_FS => true)
(NTFS_DEBUG => true)
(NTFS_RW => true)
(PROC_FS => true)
(PROC_KCORE => true)
(PROC_VMCORE => true)
(PROC_SYSCTL => true)
(PROC_PAGE_MONITOR => true)
(SYSFS => true)
(TMPFS => true)
(TMPFS_POSIX_ACL => true)
(HUGETLBFS => true)
(HUGETLB_PAGE => true)
(CONFIGFS_FS => true)
(ADFS_FS => true)
(ADFS_FS_RW => true)
(AFFS_FS => true)
(ECRYPT_FS => true)
(HFS_FS => true)
(HFSPLUS_FS => true)
(BEFS_FS => true)
(BEFS_DEBUG => true)
(BFS_FS => true)
(EFS_FS => true)
(JFFS2_FS => true)
(JFFS2_FS_DEBUG => true)
(JFFS2_FS_WRITEBUFFER => true)
(JFFS2_FS_WBUF_VERIFY => true)
(JFFS2_SUMMARY => true)
(JFFS2_FS_XATTR => true)
(JFFS2_FS_POSIX_ACL => true)
(JFFS2_FS_SECURITY => true)
(JFFS2_COMPRESSION_OPTIONS => true)
(JFFS2_ZLIB => true)
(JFFS2_LZO => true)
(JFFS2_RTIME => true)
(JFFS2_RUBIN => true)
(JFFS2_CMODE_NONE => true)
(JFFS2_CMODE_PRIORITY => true)
(JFFS2_CMODE_SIZE => true)
(JFFS2_CMODE_FAVOURLZO => true)
(UBIFS_FS => true)
(UBIFS_FS_XATTR => true)
(UBIFS_FS_ADVANCED_COMPR => true)
(UBIFS_FS_LZO => true)
(UBIFS_FS_ZLIB => true)
(UBIFS_FS_DEBUG => true)
(UBIFS_FS_DEBUG_MSG_LVL => true)
(UBIFS_FS_DEBUG_CHKS => true)
(CRAMFS => true)
(VXFS_FS => true)
(MINIX_FS => true)
(OMFS_FS => true)
(HPFS_FS => true)
(QNX4FS_FS => true)
(QNX4FS_RW => true)
(ROMFS_FS => true)
(SYSV_FS => true)
(UFS_FS => true)
(UFS_FS_WRITE => true)
(UFS_DEBUG => true)
(NETWORK_FILESYSTEMS => true)
(NFS_FS => true)
(NFS_V3 => true)
(NFS_V3_ACL => true)
(NFS_V4 => true)
(ROOT_NFS => true)
(NFSD => true)
(NFSD_V2_ACL => true)
(NFSD_V3 => true)
(NFSD_V3_ACL => true)
(NFSD_V4 => true)
(LOCKD => true)
(LOCKD_V4 => true)
(EXPORTFS => true)
(NFS_ACL_SUPPORT => true)
(NFS_COMMON => true)
(SUNRPC => true)
(SUNRPC_GSS => true)
(SUNRPC_XPRT_RDMA => true)
(SUNRPC_REGISTER_V4 => true)
(RPCSEC_GSS_KRB5 => true)
(RPCSEC_GSS_SPKM3 => true)
(SMB_FS => true)
(SMB_NLS_DEFAULT => true)
(SMB_NLS_REMOTE => true)
(CIFS => true)
(CIFS_STATS => true)
(CIFS_STATS2 => true)
(CIFS_WEAK_PW_HASH => true)
(CIFS_UPCALL => true)
(CIFS_XATTR => true)
(CIFS_POSIX => true)
(CIFS_DEBUG2 => true)
(CIFS_EXPERIMENTAL => true)
(CIFS_DFS_UPCALL => true)
(NCP_FS => true)
(NCPFS_PACKET_SIGNING => true)
(NCPFS_IOCTL_LOCKING => true)
(NCPFS_STRONG => true)
(NCPFS_NFS_NS => true)
(NCPFS_OS2_NS => true)
(NCPFS_SMALLDOS => true)
(NCPFS_NLS => true)
(NCPFS_EXTRAS => true)
(CODA_FS => true)
(AFS_FS => true)
(AFS_DEBUG => true)
(9P_FS => true)
(PARTITION_ADVANCED => true)
(ACORN_PARTITION => true)
(ACORN_PARTITION_CUMANA => true)
(ACORN_PARTITION_EESOX => true)
(ACORN_PARTITION_ICS => true)
(ACORN_PARTITION_ADFS => true)
(ACORN_PARTITION_POWERTEC => true)
(ACORN_PARTITION_RISCIX => true)
(OSF_PARTITION => true)
(AMIGA_PARTITION => true)
(ATARI_PARTITION => true)
(IBM_PARTITION => true)
(MAC_PARTITION => true)
(MSDOS_PARTITION => true)
(BSD_DISKLABEL => true)
(MINIX_SUBPARTITION => true)
(SOLARIS_X86_PARTITION => true)
(UNIXWARE_DISKLABEL => true)
(LDM_PARTITION => true)
(LDM_DEBUG => true)
(SGI_PARTITION => true)
(ULTRIX_PARTITION => true)
(SUN_PARTITION => true)
(KARMA_PARTITION => true)
(EFI_PARTITION => true)
(SYSV68_PARTITION => true)
(NLS => true)
(NLS_DEFAULT => true)
(NLS_CODEPAGE_437 => true)
(NLS_CODEPAGE_737 => true)
(NLS_CODEPAGE_775 => true)
(NLS_CODEPAGE_85false => true)
(NLS_CODEPAGE_852 => true)
(NLS_CODEPAGE_855 => true)
(NLS_CODEPAGE_857 => true)
(NLS_CODEPAGE_86false => true)
(NLS_CODEPAGE_86true => true)
(NLS_CODEPAGE_862 => true)
(NLS_CODEPAGE_863 => true)
(NLS_CODEPAGE_864 => true)
(NLS_CODEPAGE_865 => true)
(NLS_CODEPAGE_866 => true)
(NLS_CODEPAGE_869 => true)
(NLS_CODEPAGE_936 => true)
(NLS_CODEPAGE_95false => true)
(NLS_CODEPAGE_932 => true)
(NLS_CODEPAGE_949 => true)
(NLS_CODEPAGE_874 => true)
(NLS_ISO8859_8 => true)
(NLS_CODEPAGE_true25false => true)
(NLS_CODEPAGE_true25true => true)
(NLS_ASCII => true)
(NLS_ISO8859_true => true)
(NLS_ISO8859_2 => true)
(NLS_ISO8859_3 => true)
(NLS_ISO8859_4 => true)
(NLS_ISO8859_5 => true)
(NLS_ISO8859_6 => true)
(NLS_ISO8859_7 => true)
(NLS_ISO8859_9 => true)
(NLS_ISO8859_true3 => true)
(NLS_ISO8859_true4 => true)
(NLS_ISO8859_true5 => true)
(NLS_KOI8_R => true)
(NLS_KOI8_U => true)
(NLS_UTF8 => true)
(DLM => true)
(DLM_DEBUG => true)
(TRACE_IRQFLAGS_SUPPORT => true)
(PRINTK_TIME => true)
(ENABLE_WARN_DEPRECATED => true)
(ENABLE_MUST_CHECK => true)
(FRAME_WARN => true)
(MAGIC_SYSRQ => true)
(UNUSED_SYMBOLS => true)
(DEBUG_FS => true)
(HEADERS_CHECK => true)
(DEBUG_SECTION_MISMATCH => true)
(DEBUG_KERNEL => true)
(DEBUG_SHIRQ => true)
(DETECT_SOFTLOCKUP => true)
(BOOTPARAM_SOFTLOCKUP_PANIC => true)
(BOOTPARAM_SOFTLOCKUP_PANIC_VALUE => true)
(SCHED_DEBUG => true)
(SCHEDSTATS => true)
(TIMER_STATS => true)
(DEBUG_OBJECTS => true)
(DEBUG_OBJECTS_SELFTEST => true)
(DEBUG_OBJECTS_FREE => true)
(DEBUG_OBJECTS_TIMERS => true)
(DEBUG_SLAB => true)
(DEBUG_SLAB_LEAK => true)
(SLUB_DEBUG_ON => true)
(SLUB_STATS => true)
(DEBUG_PREEMPT => true)
(DEBUG_RT_MUTEXES => true)
(DEBUG_PI_LIST => true)
(RT_MUTEX_TESTER => true)
(DEBUG_SPINLOCK => true)
(DEBUG_MUTEXES => true)
(DEBUG_LOCK_ALLOC => true)
(PROVE_LOCKING => true)
(LOCKDEP => true)
(LOCK_STAT => true)
(DEBUG_LOCKDEP => true)
(TRACE_IRQFLAGS => true)
(DEBUG_SPINLOCK_SLEEP => true)
(DEBUG_LOCKING_API_SELFTESTS => true)
(STACKTRACE => true)
(DEBUG_KOBJECT => true)
(DEBUG_HIGHMEM => true)
(DEBUG_BUGVERBOSE => true)
(DEBUG_INFO => true)
(DEBUG_VM => true)
(DEBUG_VIRTUAL => true)
(DEBUG_WRITECOUNT => true)
(DEBUG_MEMORY_INIT => true)
(DEBUG_LIST => true)
(DEBUG_SG => true)
(FRAME_POINTER => true)
(BOOT_PRINTK_DELAY => true)
(RCU_TORTURE_TEST => true)
(RCU_TORTURE_TEST_RUNNABLE => true)
(RCU_CPU_STALL_DETECTOR => true)
(KPROBES_SANITY_TEST => true)
(BACKTRACE_SELF_TEST => true)
(DEBUG_BLOCK_EXT_DEVT => true)
(LKDTM => true)
(FAULT_INJECTION => true)
(FAILSLAB => true)
(FAIL_PAGE_ALLOC => true)
(FAIL_MAKE_REQUEST => true)
(FAIL_IO_TIMEOUT => true)
(FAULT_INJECTION_DEBUG_FS => true)
(FAULT_INJECTION_STACKTRACE_FILTER => true)
(LATENCYTOP => true)
(SYSCTL_SYSCALL_CHECK => true)
(NOP_TRACER => true)
(HAVE_FUNCTION_TRACER => true)
(HAVE_DYNAMIC_FTRACE => true)
(HAVE_FTRACE_MCOUNT_RECORD => true)
(TRACER_MAX_TRACE => true)
(RING_BUFFER => true)
(TRACING => true)
(FUNCTION_TRACER => true)
(IRQSOFF_TRACER => true)
(PREEMPT_TRACER => true)
(SYSPROF_TRACER => true)
(SCHED_TRACER => true)
(CONTEXT_SWITCH_TRACER => true)
(BOOT_TRACER => true)
(STACK_TRACER => true)
(DYNAMIC_FTRACE => true)
(FTRACE_MCOUNT_RECORD => true)
(FTRACE_SELFTEST => true)
(FTRACE_STARTUP_TEST => true)
(PROVIDE_OHCItrue394_DMA_INIT => true)
(FIREWIRE_OHCI_REMOTE_DMA => true)
(BUILD_DOCSRC => true)
(DYNAMIC_PRINTK_DEBUG => true)
(SAMPLES => true)
(SAMPLE_MARKERS => true)
(SAMPLE_TRACEPOINTS => true)
(SAMPLE_KOBJECT => true)
(SAMPLE_KPROBES => true)
(SAMPLE_KRETPROBES => true)
(HAVE_ARCH_KGDB => true)
(KGDB => true)
(KGDB_SERIAL_CONSOLE => true)
(KGDB_TESTS => true)
(KGDB_TESTS_ON_BOOT => true)
(KGDB_TESTS_BOOT_STRING => true)
(STRICT_DEVMEM => true)
(X86_VERBOSE_BOOTUP => true)
(EARLY_PRINTK => true)
(EARLY_PRINTK_DBGP => true)
(DEBUG_STACKOVERFLOW => true)
(DEBUG_STACK_USAGE => true)
(DEBUG_PAGEALLOC => true)
(DEBUG_PER_CPU_MAPS => true)
(X86_PTDUMP => true)
(DEBUG_RODATA => true)
(DIRECT_GBPAGES => true)
(DEBUG_RODATA_TEST => true)
(DEBUG_NX_TEST => true)
(4KSTACKS => true)
(DOUBLEFAULT => true)
(IOMMU_DEBUG => true)
(IOMMU_LEAK => true)
(MMIOTRACE_HOOKS => true)
(MMIOTRACE => true)
(MMIOTRACE_TEST => true)
(IO_DELAY_TYPE_falseX8false => true)
(IO_DELAY_TYPE_falseXED => true)
(IO_DELAY_TYPE_UDELAY => true)
(IO_DELAY_TYPE_NONE => true)
(IO_DELAY_falseX8false => true)
(IO_DELAY_falseXED => true)
(IO_DELAY_UDELAY => true)
(IO_DELAY_NONE => true)
(DEFAULT_IO_DELAY_TYPE => true)
(DEFAULT_IO_DELAY_TYPE => true)
(DEFAULT_IO_DELAY_TYPE => true)
(DEFAULT_IO_DELAY_TYPE => true)
(DEBUG_BOOT_PARAMS => true)
(CPA_DEBUG => true)
(OPTIMIZE_INLINING => true)
(KEYS => true)
(KEYS_DEBUG_PROC_KEYS => true)
(SECURITY => true)
(SECURITYFS => true)
(SECURITY_NETWORK => true)
(SECURITY_NETWORK_XFRM => true)
(SECURITY_FILE_CAPABILITIES => true)
(SECURITY_ROOTPLUG => true)
(SECURITY_DEFAULT_MMAP_MIN_ADDR => true)
(SECURITY_SELINUX => true)
(SECURITY_SELINUX_BOOTPARAM => true)
(SECURITY_SELINUX_BOOTPARAM_VALUE => true)
(SECURITY_SELINUX_DISABLE => true)
(SECURITY_SELINUX_DEVELOP => true)
(SECURITY_SELINUX_AVC_STATS => true)
(SECURITY_SELINUX_CHECKREQPROT_VALUE => true)
(SECURITY_SELINUX_ENABLE_SECMARK_DEFAULT => true)
(SECURITY_SELINUX_POLICYDB_VERSION_MAX => true)
(SECURITY_SELINUX_POLICYDB_VERSION_MAX_VALUE => true)
(SECURITY_SMACK => true)
(XOR_BLOCKS => true)
(ASYNC_CORE => true)
(ASYNC_MEMCPY => true)
(ASYNC_XOR => true)
(ASYNC_MEMSET => true)
(CRYPTO => true)
(CRYPTO_FIPS => true)
(CRYPTO_ALGAPI => true)
(CRYPTO_ALGAPI2 => true)
(CRYPTO_AEAD => true)
(CRYPTO_AEAD2 => true)
(CRYPTO_BLKCIPHER => true)
(CRYPTO_BLKCIPHER2 => true)
(CRYPTO_HASH => true)
(CRYPTO_HASH2 => true)
(CRYPTO_RNG => true)
(CRYPTO_RNG2 => true)
(CRYPTO_MANAGER => true)
(CRYPTO_MANAGER2 => true)
(CRYPTO_GFtrue28MUL => true)
(CRYPTO_NULL => true)
(CRYPTO_CRYPTD => true)
(CRYPTO_AUTHENC => true)
(CRYPTO_TEST => true)
(CRYPTO_CCM => true)
(CRYPTO_GCM => true)
(CRYPTO_SEQIV => true)
(CRYPTO_CBC => true)
(CRYPTO_CTR => true)
(CRYPTO_CTS => true)
(CRYPTO_ECB => true)
(CRYPTO_LRW => true)
(CRYPTO_PCBC => true)
(CRYPTO_XTS => true)
(CRYPTO_HMAC => true)
(CRYPTO_XCBC => true)
(CRYPTO_CRC32C => true)
(CRYPTO_CRC32C_INTEL => true)
(CRYPTO_MD4 => true)
(CRYPTO_MD5 => true)
(CRYPTO_MICHAEL_MIC => true)
(CRYPTO_RMDtrue28 => true)
(CRYPTO_RMDtrue6false => true)
(CRYPTO_RMD256 => true)
(CRYPTO_RMD32false => true)
(CRYPTO_SHAtrue => true)
(CRYPTO_SHA256 => true)
(CRYPTO_SHA5true2 => true)
(CRYPTO_TGRtrue92 => true)
(CRYPTO_WP5true2 => true)
(CRYPTO_AES => true)
(CRYPTO_AES_586 => true)
(CRYPTO_AES_X86_64 => true)
(CRYPTO_ANUBIS => true)
(CRYPTO_ARC4 => true)
(CRYPTO_BLOWFISH => true)
(CRYPTO_CAMELLIA => true)
(CRYPTO_CAST5 => true)
(CRYPTO_CAST6 => true)
(CRYPTO_DES => true)
(CRYPTO_FCRYPT => true)
(CRYPTO_KHAZAD => true)
(CRYPTO_SALSA2false => true)
(CRYPTO_SALSA2false_586 => true)
(CRYPTO_SALSA2false_X86_64 => true)
(CRYPTO_SEED => true)
(CRYPTO_SERPENT => true)
(CRYPTO_TEA => true)
(CRYPTO_TWOFISH => true)
(CRYPTO_TWOFISH_COMMON => true)
(CRYPTO_TWOFISH_586 => true)
(CRYPTO_TWOFISH_X86_64 => true)
(CRYPTO_DEFLATE => true)
(CRYPTO_LZO => true)
(CRYPTO_ANSI_CPRNG => true)
(CRYPTO_HW => true)
(CRYPTO_DEV_PADLOCK => true)
(CRYPTO_DEV_PADLOCK_AES => true)
(CRYPTO_DEV_PADLOCK_SHA => true)
(CRYPTO_DEV_GEODE => true)
(ZCRYPT => true)
(ZCRYPT_MONOLITHIC => true)
(CRYPTO_SHAtrue_S39false => true)
(CRYPTO_SHA256_S39false => true)
(CRYPTO_SHA5true2_S39false => true)
(CRYPTO_DES_S39false => true)
(CRYPTO_AES_S39false => true)
(S39false_PRNG => true)
(CRYPTO_DEV_HIFN_795X => true)
(CRYPTO_DEV_HIFN_795X_RNG => true)
(CRYPTO_DEV_TALITOS => true)
(CRYPTO_DEV_IXP4XX => true)
(HAVE_KVM => true)
(VIRTUALIZATION => true)
(KVM => true)
(KVM_INTEL => true)
(KVM_AMD => true)
(KVM_TRACE => true)
(LGUEST => true)
(VIRTIO => true)
(VIRTIO_RING => true)
(VIRTIO_PCI => true)
(VIRTIO_BALLOON => true)
(BITREVERSE => true)
(GENERIC_FIND_FIRST_BIT => true)
(GENERIC_FIND_NEXT_BIT => true)
(CRC_CCITT => true)
(CRCtrue6 => true)
(CRC_TtruefalseDIF => true)
(CRC_ITU_T => true)
(CRC32 => true)
(CRC7 => true)
(LIBCRC32C => true)
(AUDIT_GENERIC => true)
(ZLIB_INFLATE => true)
(ZLIB_DEFLATE => true)
(LZO_COMPRESS => true)
(LZO_DECOMPRESS => true)
(GENERIC_ALLOCATOR => true)
(REED_SOLOMON => true)
(REED_SOLOMON_ENC8 => true)
(REED_SOLOMON_DEC8 => true)
(REED_SOLOMON_ENCtrue6 => true)
(REED_SOLOMON_DECtrue6 => true)
(TEXTSEARCH => true)
(TEXTSEARCH_KMP => true)
(TEXTSEARCH_BM => true)
(TEXTSEARCH_FSM => true)
(PLIST => true)
(HAS_IOMEM => true)
(HAS_IOPORT => true)
(HAS_DMA => true)
(CHECK_SIGNATURE => true)
(HAVE_LMB => true)
(GROUP_SCHED => (USER_SCHED || CGROUP_SCHED))
(!USER_SCHED || !CGROUP_SCHED)
(true => ((SLAB || SLUB) || SLOB))
(!SLAB || !SLUB)
(!SLAB || !SLOB)
(!SLUB || !SLOB)
(BLOCK => (((DEFAULT_AS || DEFAULT_DEADLINE) || DEFAULT_CFQ) || DEFAULT_NOOP))
(!DEFAULT_AS || !DEFAULT_DEADLINE)
(!DEFAULT_AS || !DEFAULT_CFQ)
(!DEFAULT_AS || !DEFAULT_NOOP)
(!DEFAULT_DEADLINE || !DEFAULT_CFQ)
(!DEFAULT_DEADLINE || !DEFAULT_NOOP)
(!DEFAULT_CFQ || !DEFAULT_NOOP)
(true => ((((X86_PC || X86_ELAN) || X86_VOYAGER) || X86_GENERICARCH) || X86_VSMP))
(!X86_PC || !X86_ELAN)
(!X86_PC || !X86_VOYAGER)
(!X86_PC || !X86_GENERICARCH)
(!X86_PC || !X86_VSMP)
(!X86_ELAN || !X86_VOYAGER)
(!X86_ELAN || !X86_GENERICARCH)
(!X86_ELAN || !X86_VSMP)
(!X86_VOYAGER || !X86_GENERICARCH)
(!X86_VOYAGER || !X86_VSMP)
(!X86_GENERICARCH || !X86_VSMP)
(!X86_ELAN => ((((((((((((((((((((((((M386 || M486) || M586) || M586TSC) || M586MMX) || M686) || MPENTIUMII) || MPENTIUMIII) || MPENTIUMM) || MPENTIUM4) || MK6) || MK7) || MK8) || MCRUSOE) || MEFFICEON) || MWINCHIPC6) || MWINCHIP3D) || MGEODEGXtrue) || MGEODE_LX) || MCYRIXIII) || MVIAC3_2) || MVIAC7) || MPSC) || MCORE2) || GENERIC_CPU))
(!M386 || !M486)
(!M386 || !M586)
(!M386 || !M586TSC)
(!M386 || !M586MMX)
(!M386 || !M686)
(!M386 || !MPENTIUMII)
(!M386 || !MPENTIUMIII)
(!M386 || !MPENTIUMM)
(!M386 || !MPENTIUM4)
(!M386 || !MK6)
(!M386 || !MK7)
(!M386 || !MK8)
(!M386 || !MCRUSOE)
(!M386 || !MEFFICEON)
(!M386 || !MWINCHIPC6)
(!M386 || !MWINCHIP3D)
(!M386 || !MGEODEGXtrue)
(!M386 || !MGEODE_LX)
(!M386 || !MCYRIXIII)
(!M386 || !MVIAC3_2)
(!M386 || !MVIAC7)
(!M386 || !MPSC)
(!M386 || !MCORE2)
(!M386 || !GENERIC_CPU)
(!M486 || !M586)
(!M486 || !M586TSC)
(!M486 || !M586MMX)
(!M486 || !M686)
(!M486 || !MPENTIUMII)
(!M486 || !MPENTIUMIII)
(!M486 || !MPENTIUMM)
(!M486 || !MPENTIUM4)
(!M486 || !MK6)
(!M486 || !MK7)
(!M486 || !MK8)
(!M486 || !MCRUSOE)
(!M486 || !MEFFICEON)
(!M486 || !MWINCHIPC6)
(!M486 || !MWINCHIP3D)
(!M486 || !MGEODEGXtrue)
(!M486 || !MGEODE_LX)
(!M486 || !MCYRIXIII)
(!M486 || !MVIAC3_2)
(!M486 || !MVIAC7)
(!M486 || !MPSC)
(!M486 || !MCORE2)
(!M486 || !GENERIC_CPU)
(!M586 || !M586TSC)
(!M586 || !M586MMX)
(!M586 || !M686)
(!M586 || !MPENTIUMII)
(!M586 || !MPENTIUMIII)
(!M586 || !MPENTIUMM)
(!M586 || !MPENTIUM4)
(!M586 || !MK6)
(!M586 || !MK7)
(!M586 || !MK8)
(!M586 || !MCRUSOE)
(!M586 || !MEFFICEON)
(!M586 || !MWINCHIPC6)
(!M586 || !MWINCHIP3D)
(!M586 || !MGEODEGXtrue)
(!M586 || !MGEODE_LX)
(!M586 || !MCYRIXIII)
(!M586 || !MVIAC3_2)
(!M586 || !MVIAC7)
(!M586 || !MPSC)
(!M586 || !MCORE2)
(!M586 || !GENERIC_CPU)
(!M586TSC || !M586MMX)
(!M586TSC || !M686)
(!M586TSC || !MPENTIUMII)
(!M586TSC || !MPENTIUMIII)
(!M586TSC || !MPENTIUMM)
(!M586TSC || !MPENTIUM4)
(!M586TSC || !MK6)
(!M586TSC || !MK7)
(!M586TSC || !MK8)
(!M586TSC || !MCRUSOE)
(!M586TSC || !MEFFICEON)
(!M586TSC || !MWINCHIPC6)
(!M586TSC || !MWINCHIP3D)
(!M586TSC || !MGEODEGXtrue)
(!M586TSC || !MGEODE_LX)
(!M586TSC || !MCYRIXIII)
(!M586TSC || !MVIAC3_2)
(!M586TSC || !MVIAC7)
(!M586TSC || !MPSC)
(!M586TSC || !MCORE2)
(!M586TSC || !GENERIC_CPU)
(!M586MMX || !M686)
(!M586MMX || !MPENTIUMII)
(!M586MMX || !MPENTIUMIII)
(!M586MMX || !MPENTIUMM)
(!M586MMX || !MPENTIUM4)
(!M586MMX || !MK6)
(!M586MMX || !MK7)
(!M586MMX || !MK8)
(!M586MMX || !MCRUSOE)
(!M586MMX || !MEFFICEON)
(!M586MMX || !MWINCHIPC6)
(!M586MMX || !MWINCHIP3D)
(!M586MMX || !MGEODEGXtrue)
(!M586MMX || !MGEODE_LX)
(!M586MMX || !MCYRIXIII)
(!M586MMX || !MVIAC3_2)
(!M586MMX || !MVIAC7)
(!M586MMX || !MPSC)
(!M586MMX || !MCORE2)
(!M586MMX || !GENERIC_CPU)
(!M686 || !MPENTIUMII)
(!M686 || !MPENTIUMIII)
(!M686 || !MPENTIUMM)
(!M686 || !MPENTIUM4)
(!M686 || !MK6)
(!M686 || !MK7)
(!M686 || !MK8)
(!M686 || !MCRUSOE)
(!M686 || !MEFFICEON)
(!M686 || !MWINCHIPC6)
(!M686 || !MWINCHIP3D)
(!M686 || !MGEODEGXtrue)
(!M686 || !MGEODE_LX)
(!M686 || !MCYRIXIII)
(!M686 || !MVIAC3_2)
(!M686 || !MVIAC7)
(!M686 || !MPSC)
(!M686 || !MCORE2)
(!M686 || !GENERIC_CPU)
(!MPENTIUMII || !MPENTIUMIII)
(!MPENTIUMII || !MPENTIUMM)
(!MPENTIUMII || !MPENTIUM4)
(!MPENTIUMII || !MK6)
(!MPENTIUMII || !MK7)
(!MPENTIUMII || !MK8)
(!MPENTIUMII || !MCRUSOE)
(!MPENTIUMII || !MEFFICEON)
(!MPENTIUMII || !MWINCHIPC6)
(!MPENTIUMII || !MWINCHIP3D)
(!MPENTIUMII || !MGEODEGXtrue)
(!MPENTIUMII || !MGEODE_LX)
(!MPENTIUMII || !MCYRIXIII)
(!MPENTIUMII || !MVIAC3_2)
(!MPENTIUMII || !MVIAC7)
(!MPENTIUMII || !MPSC)
(!MPENTIUMII || !MCORE2)
(!MPENTIUMII || !GENERIC_CPU)
(!MPENTIUMIII || !MPENTIUMM)
(!MPENTIUMIII || !MPENTIUM4)
(!MPENTIUMIII || !MK6)
(!MPENTIUMIII || !MK7)
(!MPENTIUMIII || !MK8)
(!MPENTIUMIII || !MCRUSOE)
(!MPENTIUMIII || !MEFFICEON)
(!MPENTIUMIII || !MWINCHIPC6)
(!MPENTIUMIII || !MWINCHIP3D)
(!MPENTIUMIII || !MGEODEGXtrue)
(!MPENTIUMIII || !MGEODE_LX)
(!MPENTIUMIII || !MCYRIXIII)
(!MPENTIUMIII || !MVIAC3_2)
(!MPENTIUMIII || !MVIAC7)
(!MPENTIUMIII || !MPSC)
(!MPENTIUMIII || !MCORE2)
(!MPENTIUMIII || !GENERIC_CPU)
(!MPENTIUMM || !MPENTIUM4)
(!MPENTIUMM || !MK6)
(!MPENTIUMM || !MK7)
(!MPENTIUMM || !MK8)
(!MPENTIUMM || !MCRUSOE)
(!MPENTIUMM || !MEFFICEON)
(!MPENTIUMM || !MWINCHIPC6)
(!MPENTIUMM || !MWINCHIP3D)
(!MPENTIUMM || !MGEODEGXtrue)
(!MPENTIUMM || !MGEODE_LX)
(!MPENTIUMM || !MCYRIXIII)
(!MPENTIUMM || !MVIAC3_2)
(!MPENTIUMM || !MVIAC7)
(!MPENTIUMM || !MPSC)
(!MPENTIUMM || !MCORE2)
(!MPENTIUMM || !GENERIC_CPU)
(!MPENTIUM4 || !MK6)
(!MPENTIUM4 || !MK7)
(!MPENTIUM4 || !MK8)
(!MPENTIUM4 || !MCRUSOE)
(!MPENTIUM4 || !MEFFICEON)
(!MPENTIUM4 || !MWINCHIPC6)
(!MPENTIUM4 || !MWINCHIP3D)
(!MPENTIUM4 || !MGEODEGXtrue)
(!MPENTIUM4 || !MGEODE_LX)
(!MPENTIUM4 || !MCYRIXIII)
(!MPENTIUM4 || !MVIAC3_2)
(!MPENTIUM4 || !MVIAC7)
(!MPENTIUM4 || !MPSC)
(!MPENTIUM4 || !MCORE2)
(!MPENTIUM4 || !GENERIC_CPU)
(!MK6 || !MK7)
(!MK6 || !MK8)
(!MK6 || !MCRUSOE)
(!MK6 || !MEFFICEON)
(!MK6 || !MWINCHIPC6)
(!MK6 || !MWINCHIP3D)
(!MK6 || !MGEODEGXtrue)
(!MK6 || !MGEODE_LX)
(!MK6 || !MCYRIXIII)
(!MK6 || !MVIAC3_2)
(!MK6 || !MVIAC7)
(!MK6 || !MPSC)
(!MK6 || !MCORE2)
(!MK6 || !GENERIC_CPU)
(!MK7 || !MK8)
(!MK7 || !MCRUSOE)
(!MK7 || !MEFFICEON)
(!MK7 || !MWINCHIPC6)
(!MK7 || !MWINCHIP3D)
(!MK7 || !MGEODEGXtrue)
(!MK7 || !MGEODE_LX)
(!MK7 || !MCYRIXIII)
(!MK7 || !MVIAC3_2)
(!MK7 || !MVIAC7)
(!MK7 || !MPSC)
(!MK7 || !MCORE2)
(!MK7 || !GENERIC_CPU)
(!MK8 || !MCRUSOE)
(!MK8 || !MEFFICEON)
(!MK8 || !MWINCHIPC6)
(!MK8 || !MWINCHIP3D)
(!MK8 || !MGEODEGXtrue)
(!MK8 || !MGEODE_LX)
(!MK8 || !MCYRIXIII)
(!MK8 || !MVIAC3_2)
(!MK8 || !MVIAC7)
(!MK8 || !MPSC)
(!MK8 || !MCORE2)
(!MK8 || !GENERIC_CPU)
(!MCRUSOE || !MEFFICEON)
(!MCRUSOE || !MWINCHIPC6)
(!MCRUSOE || !MWINCHIP3D)
(!MCRUSOE || !MGEODEGXtrue)
(!MCRUSOE || !MGEODE_LX)
(!MCRUSOE || !MCYRIXIII)
(!MCRUSOE || !MVIAC3_2)
(!MCRUSOE || !MVIAC7)
(!MCRUSOE || !MPSC)
(!MCRUSOE || !MCORE2)
(!MCRUSOE || !GENERIC_CPU)
(!MEFFICEON || !MWINCHIPC6)
(!MEFFICEON || !MWINCHIP3D)
(!MEFFICEON || !MGEODEGXtrue)
(!MEFFICEON || !MGEODE_LX)
(!MEFFICEON || !MCYRIXIII)
(!MEFFICEON || !MVIAC3_2)
(!MEFFICEON || !MVIAC7)
(!MEFFICEON || !MPSC)
(!MEFFICEON || !MCORE2)
(!MEFFICEON || !GENERIC_CPU)
(!MWINCHIPC6 || !MWINCHIP3D)
(!MWINCHIPC6 || !MGEODEGXtrue)
(!MWINCHIPC6 || !MGEODE_LX)
(!MWINCHIPC6 || !MCYRIXIII)
(!MWINCHIPC6 || !MVIAC3_2)
(!MWINCHIPC6 || !MVIAC7)
(!MWINCHIPC6 || !MPSC)
(!MWINCHIPC6 || !MCORE2)
(!MWINCHIPC6 || !GENERIC_CPU)
(!MWINCHIP3D || !MGEODEGXtrue)
(!MWINCHIP3D || !MGEODE_LX)
(!MWINCHIP3D || !MCYRIXIII)
(!MWINCHIP3D || !MVIAC3_2)
(!MWINCHIP3D || !MVIAC7)
(!MWINCHIP3D || !MPSC)
(!MWINCHIP3D || !MCORE2)
(!MWINCHIP3D || !GENERIC_CPU)
(!MGEODEGXtrue || !MGEODE_LX)
(!MGEODEGXtrue || !MCYRIXIII)
(!MGEODEGXtrue || !MVIAC3_2)
(!MGEODEGXtrue || !MVIAC7)
(!MGEODEGXtrue || !MPSC)
(!MGEODEGXtrue || !MCORE2)
(!MGEODEGXtrue || !GENERIC_CPU)
(!MGEODE_LX || !MCYRIXIII)
(!MGEODE_LX || !MVIAC3_2)
(!MGEODE_LX || !MVIAC7)
(!MGEODE_LX || !MPSC)
(!MGEODE_LX || !MCORE2)
(!MGEODE_LX || !GENERIC_CPU)
(!MCYRIXIII || !MVIAC3_2)
(!MCYRIXIII || !MVIAC7)
(!MCYRIXIII || !MPSC)
(!MCYRIXIII || !MCORE2)
(!MCYRIXIII || !GENERIC_CPU)
(!MVIAC3_2 || !MVIAC7)
(!MVIAC3_2 || !MPSC)
(!MVIAC3_2 || !MCORE2)
(!MVIAC3_2 || !GENERIC_CPU)
(!MVIAC7 || !MPSC)
(!MVIAC7 || !MCORE2)
(!MVIAC7 || !GENERIC_CPU)
(!MPSC || !MCORE2)
(!MPSC || !GENERIC_CPU)
(!MCORE2 || !GENERIC_CPU)
(true => ((PREEMPT_NONE || PREEMPT_VOLUNTARY) || PREEMPT))
(!PREEMPT_NONE || !PREEMPT_VOLUNTARY)
(!PREEMPT_NONE || !PREEMPT)
(!PREEMPT_VOLUNTARY || !PREEMPT)
(X86_32 => ((NOHIGHMEM || HIGHMEM4G) || HIGHMEM64G))
(!NOHIGHMEM || !HIGHMEM4G)
(!NOHIGHMEM || !HIGHMEM64G)
(!HIGHMEM4G || !HIGHMEM64G)
((EXPERIMENTAL && (X86_32 && EMBEDDED)) => ((((VMSPLIT_3G || VMSPLIT_3G_OPT) || VMSPLIT_2G) || VMSPLIT_2G_OPT) || VMSPLIT_trueG))
(!VMSPLIT_3G || !VMSPLIT_3G_OPT)
(!VMSPLIT_3G || !VMSPLIT_2G)
(!VMSPLIT_3G || !VMSPLIT_2G_OPT)
(!VMSPLIT_3G || !VMSPLIT_trueG)
(!VMSPLIT_3G_OPT || !VMSPLIT_2G)
(!VMSPLIT_3G_OPT || !VMSPLIT_2G_OPT)
(!VMSPLIT_3G_OPT || !VMSPLIT_trueG)
(!VMSPLIT_2G || !VMSPLIT_2G_OPT)
(!VMSPLIT_2G || !VMSPLIT_trueG)
(!VMSPLIT_2G_OPT || !VMSPLIT_trueG)
(SELECT_MEMORY_MODEL => ((FLATMEM_MANUAL || DISCONTIGMEM_MANUAL) || SPARSEMEM_MANUAL))
(!FLATMEM_MANUAL || !DISCONTIGMEM_MANUAL)
(!FLATMEM_MANUAL || !SPARSEMEM_MANUAL)
(!DISCONTIGMEM_MANUAL || !SPARSEMEM_MANUAL)
(true => (((HZ_truefalsefalse || HZ_25false) || HZ_3falsefalse) || HZ_truefalsefalsefalse))
(!HZ_truefalsefalse || !HZ_25false)
(!HZ_truefalsefalse || !HZ_3falsefalse)
(!HZ_truefalsefalse || !HZ_truefalsefalsefalse)
(!HZ_25false || !HZ_3falsefalse)
(!HZ_25false || !HZ_truefalsefalsefalse)
(!HZ_3falsefalse || !HZ_truefalsefalsefalse)
((!X86_VOYAGER && CPU_FREQ) => ((((CPU_FREQ_DEFAULT_GOV_PERFORMANCE || CPU_FREQ_DEFAULT_GOV_POWERSAVE) || CPU_FREQ_DEFAULT_GOV_USERSPACE) || CPU_FREQ_DEFAULT_GOV_ONDEMAND) || CPU_FREQ_DEFAULT_GOV_CONSERVATIVE))
(!CPU_FREQ_DEFAULT_GOV_PERFORMANCE || !CPU_FREQ_DEFAULT_GOV_POWERSAVE)
(!CPU_FREQ_DEFAULT_GOV_PERFORMANCE || !CPU_FREQ_DEFAULT_GOV_USERSPACE)
(!CPU_FREQ_DEFAULT_GOV_PERFORMANCE || !CPU_FREQ_DEFAULT_GOV_ONDEMAND)
(!CPU_FREQ_DEFAULT_GOV_PERFORMANCE || !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE)
(!CPU_FREQ_DEFAULT_GOV_POWERSAVE || !CPU_FREQ_DEFAULT_GOV_USERSPACE)
(!CPU_FREQ_DEFAULT_GOV_POWERSAVE || !CPU_FREQ_DEFAULT_GOV_ONDEMAND)
(!CPU_FREQ_DEFAULT_GOV_POWERSAVE || !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE)
(!CPU_FREQ_DEFAULT_GOV_USERSPACE || !CPU_FREQ_DEFAULT_GOV_ONDEMAND)
(!CPU_FREQ_DEFAULT_GOV_USERSPACE || !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE)
(!CPU_FREQ_DEFAULT_GOV_ONDEMAND || !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE)
((X86_32 && PCI) => ((((PCI_GOBIOS || PCI_GOMMCONFIG) || PCI_GODIRECT) || PCI_GOOLPC) || PCI_GOANY))
(!PCI_GOBIOS || !PCI_GOMMCONFIG)
(!PCI_GOBIOS || !PCI_GODIRECT)
(!PCI_GOBIOS || !PCI_GOOLPC)
(!PCI_GOBIOS || !PCI_GOANY)
(!PCI_GOMMCONFIG || !PCI_GODIRECT)
(!PCI_GOMMCONFIG || !PCI_GOOLPC)
(!PCI_GOMMCONFIG || !PCI_GOANY)
(!PCI_GODIRECT || !PCI_GOOLPC)
(!PCI_GODIRECT || !PCI_GOANY)
(!PCI_GOOLPC || !PCI_GOANY)
((NET && (INET && IP_ADVANCED_ROUTER)) => (ASK_IP_FIB_HASH || IP_FIB_TRIE))
(!ASK_IP_FIB_HASH || !IP_FIB_TRIE)
((NET && (INET && TCP_CONG_ADVANCED)) => (((((DEFAULT_BIC || DEFAULT_CUBIC) || DEFAULT_HTCP) || DEFAULT_VEGAS) || DEFAULT_WESTWOOD) || DEFAULT_RENO))
(!DEFAULT_BIC || !DEFAULT_CUBIC)
(!DEFAULT_BIC || !DEFAULT_HTCP)
(!DEFAULT_BIC || !DEFAULT_VEGAS)
(!DEFAULT_BIC || !DEFAULT_WESTWOOD)
(!DEFAULT_BIC || !DEFAULT_RENO)
(!DEFAULT_CUBIC || !DEFAULT_HTCP)
(!DEFAULT_CUBIC || !DEFAULT_VEGAS)
(!DEFAULT_CUBIC || !DEFAULT_WESTWOOD)
(!DEFAULT_CUBIC || !DEFAULT_RENO)
(!DEFAULT_HTCP || !DEFAULT_VEGAS)
(!DEFAULT_HTCP || !DEFAULT_WESTWOOD)
(!DEFAULT_HTCP || !DEFAULT_RENO)
(!DEFAULT_VEGAS || !DEFAULT_WESTWOOD)
(!DEFAULT_VEGAS || !DEFAULT_RENO)
(!DEFAULT_WESTWOOD || !DEFAULT_RENO)
((NET && IP_SCTP) => ((SCTP_HMAC_NONE || SCTP_HMAC_SHAtrue) || SCTP_HMAC_MD5))
(!SCTP_HMAC_NONE || !SCTP_HMAC_SHAtrue)
(!SCTP_HMAC_NONE || !SCTP_HMAC_MD5)
(!SCTP_HMAC_SHAtrue || !SCTP_HMAC_MD5)
((NET && (WIRELESS && MAC8false2truetrue)) => (MAC8false2truetrue_RC_DEFAULT_PID || MAC8false2truetrue_RC_DEFAULT_MINSTREL))
(!MAC8false2truetrue_RC_DEFAULT_PID || !MAC8false2truetrue_RC_DEFAULT_MINSTREL)
((MTD && MTD_CFI_ADV_OPTIONS) => ((MTD_CFI_NOSWAP || MTD_CFI_BE_BYTE_SWAP) || MTD_CFI_LE_BYTE_SWAP))
(!MTD_CFI_NOSWAP || !MTD_CFI_BE_BYTE_SWAP)
(!MTD_CFI_NOSWAP || !MTD_CFI_LE_BYTE_SWAP)
(!MTD_CFI_BE_BYTE_SWAP || !MTD_CFI_LE_BYTE_SWAP)
((MTD && MTD_PMC_MSP_EVM) => MSP_FLASH_MAP_LIMIT_32M)
((MTD && (MTD_NAND && MTD_NAND_ATMEL)) => ((MTD_NAND_ATMEL_ECC_HW || MTD_NAND_ATMEL_ECC_SOFT) || MTD_NAND_ATMEL_ECC_NONE))
(!MTD_NAND_ATMEL_ECC_HW || !MTD_NAND_ATMEL_ECC_SOFT)
(!MTD_NAND_ATMEL_ECC_HW || !MTD_NAND_ATMEL_ECC_NONE)
(!MTD_NAND_ATMEL_ECC_SOFT || !MTD_NAND_ATMEL_ECC_NONE)
((IDE && (SOC_AUtrue2falsefalse && BLK_DEV_IDE_AUtrueXXX)) => (BLK_DEV_IDE_AUtrueXXX_PIO_DBDMA || BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA))
(!BLK_DEV_IDE_AUtrueXXX_PIO_DBDMA || !BLK_DEV_IDE_AUtrueXXX_MDMA2_DBDMA)
((NETDEVICES && (!S39false && B43LEGACY)) => ((B43LEGACY_DMA_AND_PIO_MODE || B43LEGACY_DMA_MODE) || B43LEGACY_PIO_MODE))
(!B43LEGACY_DMA_AND_PIO_MODE || !B43LEGACY_DMA_MODE)
(!B43LEGACY_DMA_AND_PIO_MODE || !B43LEGACY_PIO_MODE)
(!B43LEGACY_DMA_MODE || !B43LEGACY_PIO_MODE)
((HAS_IOMEM && SERIAL_BFIN) => (SERIAL_BFIN_DMA || SERIAL_BFIN_PIO))
(!SERIAL_BFIN_DMA || !SERIAL_BFIN_PIO)
((HAS_IOMEM && SERIAL_BFIN_SPORT) => ((((SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse || SERIAL_SPORT_BAUD_RATE_576falsefalse) || SERIAL_SPORT_BAUD_RATE_384falsefalse) || SERIAL_SPORT_BAUD_RATE_true92falsefalse) || SERIAL_SPORT_BAUD_RATE_96falsefalse))
(!SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse || !SERIAL_SPORT_BAUD_RATE_576falsefalse)
(!SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse || !SERIAL_SPORT_BAUD_RATE_384falsefalse)
(!SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse || !SERIAL_SPORT_BAUD_RATE_true92falsefalse)
(!SERIAL_SPORT_BAUD_RATE_truetrue52falsefalse || !SERIAL_SPORT_BAUD_RATE_96falsefalse)
(!SERIAL_SPORT_BAUD_RATE_576falsefalse || !SERIAL_SPORT_BAUD_RATE_384falsefalse)
(!SERIAL_SPORT_BAUD_RATE_576falsefalse || !SERIAL_SPORT_BAUD_RATE_true92falsefalse)
(!SERIAL_SPORT_BAUD_RATE_576falsefalse || !SERIAL_SPORT_BAUD_RATE_96falsefalse)
(!SERIAL_SPORT_BAUD_RATE_384falsefalse || !SERIAL_SPORT_BAUD_RATE_true92falsefalse)
(!SERIAL_SPORT_BAUD_RATE_384falsefalse || !SERIAL_SPORT_BAUD_RATE_96falsefalse)
(!SERIAL_SPORT_BAUD_RATE_true92falsefalse || !SERIAL_SPORT_BAUD_RATE_96falsefalse)
(!DRM_I83false || !DRM_I9true5)
((HAS_IOMEM && FB_FOREIGN_ENDIAN) => ((FB_BOTH_ENDIAN || FB_BIG_ENDIAN) || FB_LITTLE_ENDIAN))
(!FB_BOTH_ENDIAN || !FB_BIG_ENDIAN)
(!FB_BOTH_ENDIAN || !FB_LITTLE_ENDIAN)
(!FB_BIG_ENDIAN || !FB_LITTLE_ENDIAN)
((HAS_IOMEM && (FB_ARMCLCD && (ARCH_LH7A4falseX || ARCH_LH7952X))) => ((((((FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2) || FB_ARMCLCD_SHARP_LQ64D343) || FB_ARMCLCD_SHARP_LQtruefalseD368) || FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true) || FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE) || FB_ARMCLCD_HITACHI))
(!FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || !FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2)
(!FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || !FB_ARMCLCD_SHARP_LQ64D343)
(!FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || !FB_ARMCLCD_SHARP_LQtruefalseD368)
(!FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || !FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true)
(!FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || !FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE)
(!FB_ARMCLCD_SHARP_LQfalse35Q7DBfalse2_HRTFT || !FB_ARMCLCD_HITACHI)
(!FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 || !FB_ARMCLCD_SHARP_LQ64D343)
(!FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 || !FB_ARMCLCD_SHARP_LQtruefalseD368)
(!FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 || !FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true)
(!FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 || !FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE)
(!FB_ARMCLCD_SHARP_LQfalse57Q3DCfalse2 || !FB_ARMCLCD_HITACHI)
(!FB_ARMCLCD_SHARP_LQ64D343 || !FB_ARMCLCD_SHARP_LQtruefalseD368)
(!FB_ARMCLCD_SHARP_LQ64D343 || !FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true)
(!FB_ARMCLCD_SHARP_LQ64D343 || !FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE)
(!FB_ARMCLCD_SHARP_LQ64D343 || !FB_ARMCLCD_HITACHI)
(!FB_ARMCLCD_SHARP_LQtruefalseD368 || !FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true)
(!FB_ARMCLCD_SHARP_LQtruefalseD368 || !FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE)
(!FB_ARMCLCD_SHARP_LQtruefalseD368 || !FB_ARMCLCD_HITACHI)
(!FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true || !FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE)
(!FB_ARMCLCD_SHARP_LQtrue2trueStrueDG4true || !FB_ARMCLCD_HITACHI)
(!FB_ARMCLCD_AUO_Afalse7falseVWfalsetrue_WIDE || !FB_ARMCLCD_HITACHI)
((HAS_IOMEM && FB_CARMINE) => (FB_CARMINE_DRAM_EVAL || CARMINE_DRAM_CUSTOM))
(!FB_CARMINE_DRAM_EVAL || !CARMINE_DRAM_CUSTOM)
((USB_SUPPORT && USB_MUSB_HDRC) => ((USB_MUSB_HOST || USB_MUSB_PERIPHERAL) || USB_MUSB_OTG))
(!USB_MUSB_HOST || !USB_MUSB_PERIPHERAL)
(!USB_MUSB_HOST || !USB_MUSB_OTG)
(!USB_MUSB_PERIPHERAL || !USB_MUSB_OTG)
((USB_SUPPORT && USB_GADGET) => ((((((((((((((USB_GADGET_AT9true || USB_GADGET_ATMEL_USBA) || USB_GADGET_FSL_USB2) || USB_GADGET_LH7A4falseX) || USB_GADGET_OMAP) || USB_GADGET_PXA25X) || USB_GADGET_PXA27X) || USB_GADGET_S3C24truefalse) || USB_GADGET_MUSB_HDRC) || USB_GADGET_M66592) || USB_GADGET_AMD5536UDC) || USB_GADGET_FSL_QE) || USB_GADGET_NET228false) || USB_GADGET_GOKU) || USB_GADGET_DUMMY_HCD))
(!USB_GADGET_AT9true || !USB_GADGET_ATMEL_USBA)
(!USB_GADGET_AT9true || !USB_GADGET_FSL_USB2)
(!USB_GADGET_AT9true || !USB_GADGET_LH7A4falseX)
(!USB_GADGET_AT9true || !USB_GADGET_OMAP)
(!USB_GADGET_AT9true || !USB_GADGET_PXA25X)
(!USB_GADGET_AT9true || !USB_GADGET_PXA27X)
(!USB_GADGET_AT9true || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_AT9true || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_AT9true || !USB_GADGET_M66592)
(!USB_GADGET_AT9true || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_AT9true || !USB_GADGET_FSL_QE)
(!USB_GADGET_AT9true || !USB_GADGET_NET228false)
(!USB_GADGET_AT9true || !USB_GADGET_GOKU)
(!USB_GADGET_AT9true || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_FSL_USB2)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_LH7A4falseX)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_OMAP)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_PXA25X)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_PXA27X)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_M66592)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_FSL_QE)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_NET228false)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_GOKU)
(!USB_GADGET_ATMEL_USBA || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_LH7A4falseX)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_OMAP)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_PXA25X)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_PXA27X)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_M66592)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_FSL_QE)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_NET228false)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_GOKU)
(!USB_GADGET_FSL_USB2 || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_OMAP)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_PXA25X)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_PXA27X)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_M66592)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_FSL_QE)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_NET228false)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_GOKU)
(!USB_GADGET_LH7A4falseX || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_OMAP || !USB_GADGET_PXA25X)
(!USB_GADGET_OMAP || !USB_GADGET_PXA27X)
(!USB_GADGET_OMAP || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_OMAP || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_OMAP || !USB_GADGET_M66592)
(!USB_GADGET_OMAP || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_OMAP || !USB_GADGET_FSL_QE)
(!USB_GADGET_OMAP || !USB_GADGET_NET228false)
(!USB_GADGET_OMAP || !USB_GADGET_GOKU)
(!USB_GADGET_OMAP || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_PXA25X || !USB_GADGET_PXA27X)
(!USB_GADGET_PXA25X || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_PXA25X || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_PXA25X || !USB_GADGET_M66592)
(!USB_GADGET_PXA25X || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_PXA25X || !USB_GADGET_FSL_QE)
(!USB_GADGET_PXA25X || !USB_GADGET_NET228false)
(!USB_GADGET_PXA25X || !USB_GADGET_GOKU)
(!USB_GADGET_PXA25X || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_PXA27X || !USB_GADGET_S3C24truefalse)
(!USB_GADGET_PXA27X || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_PXA27X || !USB_GADGET_M66592)
(!USB_GADGET_PXA27X || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_PXA27X || !USB_GADGET_FSL_QE)
(!USB_GADGET_PXA27X || !USB_GADGET_NET228false)
(!USB_GADGET_PXA27X || !USB_GADGET_GOKU)
(!USB_GADGET_PXA27X || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_MUSB_HDRC)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_M66592)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_FSL_QE)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_NET228false)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_GOKU)
(!USB_GADGET_S3C24truefalse || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_MUSB_HDRC || !USB_GADGET_M66592)
(!USB_GADGET_MUSB_HDRC || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_MUSB_HDRC || !USB_GADGET_FSL_QE)
(!USB_GADGET_MUSB_HDRC || !USB_GADGET_NET228false)
(!USB_GADGET_MUSB_HDRC || !USB_GADGET_GOKU)
(!USB_GADGET_MUSB_HDRC || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_M66592 || !USB_GADGET_AMD5536UDC)
(!USB_GADGET_M66592 || !USB_GADGET_FSL_QE)
(!USB_GADGET_M66592 || !USB_GADGET_NET228false)
(!USB_GADGET_M66592 || !USB_GADGET_GOKU)
(!USB_GADGET_M66592 || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_AMD5536UDC || !USB_GADGET_FSL_QE)
(!USB_GADGET_AMD5536UDC || !USB_GADGET_NET228false)
(!USB_GADGET_AMD5536UDC || !USB_GADGET_GOKU)
(!USB_GADGET_AMD5536UDC || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_FSL_QE || !USB_GADGET_NET228false)
(!USB_GADGET_FSL_QE || !USB_GADGET_GOKU)
(!USB_GADGET_FSL_QE || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_NET228false || !USB_GADGET_GOKU)
(!USB_GADGET_NET228false || !USB_GADGET_DUMMY_HCD)
(!USB_GADGET_GOKU || !USB_GADGET_DUMMY_HCD)
((USB_SUPPORT && (USB_GADGET && USB_GADGET_SELECTED)) => (((((((USB_ZERO || USB_ETH) || USB_GADGETFS) || USB_FILE_STORAGE) || USB_G_SERIAL) || USB_MIDI_GADGET) || USB_G_PRINTER) || USB_CDC_COMPOSITE))
(!USB_ZERO || !USB_ETH)
(!USB_ZERO || !USB_GADGETFS)
(!USB_ZERO || !USB_FILE_STORAGE)
(!USB_ZERO || !USB_G_SERIAL)
(!USB_ZERO || !USB_MIDI_GADGET)
(!USB_ZERO || !USB_G_PRINTER)
(!USB_ZERO || !USB_CDC_COMPOSITE)
(!USB_ETH || !USB_GADGETFS)
(!USB_ETH || !USB_FILE_STORAGE)
(!USB_ETH || !USB_G_SERIAL)
(!USB_ETH || !USB_MIDI_GADGET)
(!USB_ETH || !USB_G_PRINTER)
(!USB_ETH || !USB_CDC_COMPOSITE)
(!USB_GADGETFS || !USB_FILE_STORAGE)
(!USB_GADGETFS || !USB_G_SERIAL)
(!USB_GADGETFS || !USB_MIDI_GADGET)
(!USB_GADGETFS || !USB_G_PRINTER)
(!USB_GADGETFS || !USB_CDC_COMPOSITE)
(!USB_FILE_STORAGE || !USB_G_SERIAL)
(!USB_FILE_STORAGE || !USB_MIDI_GADGET)
(!USB_FILE_STORAGE || !USB_G_PRINTER)
(!USB_FILE_STORAGE || !USB_CDC_COMPOSITE)
(!USB_G_SERIAL || !USB_MIDI_GADGET)
(!USB_G_SERIAL || !USB_G_PRINTER)
(!USB_G_SERIAL || !USB_CDC_COMPOSITE)
(!USB_MIDI_GADGET || !USB_G_PRINTER)
(!USB_MIDI_GADGET || !USB_CDC_COMPOSITE)
(!USB_G_PRINTER || !USB_CDC_COMPOSITE)
((JFFS2_FS && JFFS2_COMPRESSION_OPTIONS) => (((JFFS2_CMODE_NONE || JFFS2_CMODE_PRIORITY) || JFFS2_CMODE_SIZE) || JFFS2_CMODE_FAVOURLZO))
(!JFFS2_CMODE_NONE || !JFFS2_CMODE_PRIORITY)
(!JFFS2_CMODE_NONE || !JFFS2_CMODE_SIZE)
(!JFFS2_CMODE_NONE || !JFFS2_CMODE_FAVOURLZO)
(!JFFS2_CMODE_PRIORITY || !JFFS2_CMODE_SIZE)
(!JFFS2_CMODE_PRIORITY || !JFFS2_CMODE_FAVOURLZO)
(!JFFS2_CMODE_SIZE || !JFFS2_CMODE_FAVOURLZO)
(true => (((IO_DELAY_falseX8false || IO_DELAY_falseXED) || IO_DELAY_UDELAY) || IO_DELAY_NONE))
(!IO_DELAY_falseX8false || !IO_DELAY_falseXED)
(!IO_DELAY_falseX8false || !IO_DELAY_UDELAY)
(!IO_DELAY_falseX8false || !IO_DELAY_NONE)
(!IO_DELAY_falseXED || !IO_DELAY_UDELAY)
(!IO_DELAY_falseXED || !IO_DELAY_NONE)
(!IO_DELAY_UDELAY || !IO_DELAY_NONE)